// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostFlowsActionsRevertReader is a Reader for the PostFlowsActionsRevert structure.
type PostFlowsActionsRevertReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostFlowsActionsRevertReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostFlowsActionsRevertOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostFlowsActionsRevertBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostFlowsActionsRevertUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostFlowsActionsRevertForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostFlowsActionsRevertNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPostFlowsActionsRevertMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostFlowsActionsRevertRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostFlowsActionsRevertConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewPostFlowsActionsRevertGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostFlowsActionsRevertRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostFlowsActionsRevertUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostFlowsActionsRevertTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostFlowsActionsRevertInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostFlowsActionsRevertServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostFlowsActionsRevertGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostFlowsActionsRevertOK creates a PostFlowsActionsRevertOK with default headers values
func NewPostFlowsActionsRevertOK() *PostFlowsActionsRevertOK {
	return &PostFlowsActionsRevertOK{}
}

/*
PostFlowsActionsRevertOK describes a response with status code 200, with default header values.

successful operation
*/
type PostFlowsActionsRevertOK struct {
	Payload *models.Flow
}

// IsSuccess returns true when this post flows actions revert o k response has a 2xx status code
func (o *PostFlowsActionsRevertOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post flows actions revert o k response has a 3xx status code
func (o *PostFlowsActionsRevertOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post flows actions revert o k response has a 4xx status code
func (o *PostFlowsActionsRevertOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post flows actions revert o k response has a 5xx status code
func (o *PostFlowsActionsRevertOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post flows actions revert o k response a status code equal to that given
func (o *PostFlowsActionsRevertOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostFlowsActionsRevertOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertOK  %+v", 200, o.Payload)
}

func (o *PostFlowsActionsRevertOK) String() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertOK  %+v", 200, o.Payload)
}

func (o *PostFlowsActionsRevertOK) GetPayload() *models.Flow {
	return o.Payload
}

func (o *PostFlowsActionsRevertOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Flow)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsRevertBadRequest creates a PostFlowsActionsRevertBadRequest with default headers values
func NewPostFlowsActionsRevertBadRequest() *PostFlowsActionsRevertBadRequest {
	return &PostFlowsActionsRevertBadRequest{}
}

/*
PostFlowsActionsRevertBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostFlowsActionsRevertBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post flows actions revert bad request response has a 2xx status code
func (o *PostFlowsActionsRevertBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post flows actions revert bad request response has a 3xx status code
func (o *PostFlowsActionsRevertBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post flows actions revert bad request response has a 4xx status code
func (o *PostFlowsActionsRevertBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post flows actions revert bad request response has a 5xx status code
func (o *PostFlowsActionsRevertBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post flows actions revert bad request response a status code equal to that given
func (o *PostFlowsActionsRevertBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostFlowsActionsRevertBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertBadRequest  %+v", 400, o.Payload)
}

func (o *PostFlowsActionsRevertBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertBadRequest  %+v", 400, o.Payload)
}

func (o *PostFlowsActionsRevertBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsRevertBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsRevertUnauthorized creates a PostFlowsActionsRevertUnauthorized with default headers values
func NewPostFlowsActionsRevertUnauthorized() *PostFlowsActionsRevertUnauthorized {
	return &PostFlowsActionsRevertUnauthorized{}
}

/*
PostFlowsActionsRevertUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostFlowsActionsRevertUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post flows actions revert unauthorized response has a 2xx status code
func (o *PostFlowsActionsRevertUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post flows actions revert unauthorized response has a 3xx status code
func (o *PostFlowsActionsRevertUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post flows actions revert unauthorized response has a 4xx status code
func (o *PostFlowsActionsRevertUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post flows actions revert unauthorized response has a 5xx status code
func (o *PostFlowsActionsRevertUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post flows actions revert unauthorized response a status code equal to that given
func (o *PostFlowsActionsRevertUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostFlowsActionsRevertUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertUnauthorized  %+v", 401, o.Payload)
}

func (o *PostFlowsActionsRevertUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertUnauthorized  %+v", 401, o.Payload)
}

func (o *PostFlowsActionsRevertUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsRevertUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsRevertForbidden creates a PostFlowsActionsRevertForbidden with default headers values
func NewPostFlowsActionsRevertForbidden() *PostFlowsActionsRevertForbidden {
	return &PostFlowsActionsRevertForbidden{}
}

/*
PostFlowsActionsRevertForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostFlowsActionsRevertForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post flows actions revert forbidden response has a 2xx status code
func (o *PostFlowsActionsRevertForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post flows actions revert forbidden response has a 3xx status code
func (o *PostFlowsActionsRevertForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post flows actions revert forbidden response has a 4xx status code
func (o *PostFlowsActionsRevertForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post flows actions revert forbidden response has a 5xx status code
func (o *PostFlowsActionsRevertForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post flows actions revert forbidden response a status code equal to that given
func (o *PostFlowsActionsRevertForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostFlowsActionsRevertForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertForbidden  %+v", 403, o.Payload)
}

func (o *PostFlowsActionsRevertForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertForbidden  %+v", 403, o.Payload)
}

func (o *PostFlowsActionsRevertForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsRevertForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsRevertNotFound creates a PostFlowsActionsRevertNotFound with default headers values
func NewPostFlowsActionsRevertNotFound() *PostFlowsActionsRevertNotFound {
	return &PostFlowsActionsRevertNotFound{}
}

/*
PostFlowsActionsRevertNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostFlowsActionsRevertNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post flows actions revert not found response has a 2xx status code
func (o *PostFlowsActionsRevertNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post flows actions revert not found response has a 3xx status code
func (o *PostFlowsActionsRevertNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post flows actions revert not found response has a 4xx status code
func (o *PostFlowsActionsRevertNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post flows actions revert not found response has a 5xx status code
func (o *PostFlowsActionsRevertNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post flows actions revert not found response a status code equal to that given
func (o *PostFlowsActionsRevertNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostFlowsActionsRevertNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertNotFound  %+v", 404, o.Payload)
}

func (o *PostFlowsActionsRevertNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertNotFound  %+v", 404, o.Payload)
}

func (o *PostFlowsActionsRevertNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsRevertNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsRevertMethodNotAllowed creates a PostFlowsActionsRevertMethodNotAllowed with default headers values
func NewPostFlowsActionsRevertMethodNotAllowed() *PostFlowsActionsRevertMethodNotAllowed {
	return &PostFlowsActionsRevertMethodNotAllowed{}
}

/*
PostFlowsActionsRevertMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type PostFlowsActionsRevertMethodNotAllowed struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post flows actions revert method not allowed response has a 2xx status code
func (o *PostFlowsActionsRevertMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post flows actions revert method not allowed response has a 3xx status code
func (o *PostFlowsActionsRevertMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post flows actions revert method not allowed response has a 4xx status code
func (o *PostFlowsActionsRevertMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this post flows actions revert method not allowed response has a 5xx status code
func (o *PostFlowsActionsRevertMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this post flows actions revert method not allowed response a status code equal to that given
func (o *PostFlowsActionsRevertMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

func (o *PostFlowsActionsRevertMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *PostFlowsActionsRevertMethodNotAllowed) String() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *PostFlowsActionsRevertMethodNotAllowed) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsRevertMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsRevertRequestTimeout creates a PostFlowsActionsRevertRequestTimeout with default headers values
func NewPostFlowsActionsRevertRequestTimeout() *PostFlowsActionsRevertRequestTimeout {
	return &PostFlowsActionsRevertRequestTimeout{}
}

/*
PostFlowsActionsRevertRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostFlowsActionsRevertRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post flows actions revert request timeout response has a 2xx status code
func (o *PostFlowsActionsRevertRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post flows actions revert request timeout response has a 3xx status code
func (o *PostFlowsActionsRevertRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post flows actions revert request timeout response has a 4xx status code
func (o *PostFlowsActionsRevertRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post flows actions revert request timeout response has a 5xx status code
func (o *PostFlowsActionsRevertRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post flows actions revert request timeout response a status code equal to that given
func (o *PostFlowsActionsRevertRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostFlowsActionsRevertRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostFlowsActionsRevertRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostFlowsActionsRevertRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsRevertRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsRevertConflict creates a PostFlowsActionsRevertConflict with default headers values
func NewPostFlowsActionsRevertConflict() *PostFlowsActionsRevertConflict {
	return &PostFlowsActionsRevertConflict{}
}

/*
PostFlowsActionsRevertConflict describes a response with status code 409, with default header values.

Conflict
*/
type PostFlowsActionsRevertConflict struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post flows actions revert conflict response has a 2xx status code
func (o *PostFlowsActionsRevertConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post flows actions revert conflict response has a 3xx status code
func (o *PostFlowsActionsRevertConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post flows actions revert conflict response has a 4xx status code
func (o *PostFlowsActionsRevertConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this post flows actions revert conflict response has a 5xx status code
func (o *PostFlowsActionsRevertConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this post flows actions revert conflict response a status code equal to that given
func (o *PostFlowsActionsRevertConflict) IsCode(code int) bool {
	return code == 409
}

func (o *PostFlowsActionsRevertConflict) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertConflict  %+v", 409, o.Payload)
}

func (o *PostFlowsActionsRevertConflict) String() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertConflict  %+v", 409, o.Payload)
}

func (o *PostFlowsActionsRevertConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsRevertConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsRevertGone creates a PostFlowsActionsRevertGone with default headers values
func NewPostFlowsActionsRevertGone() *PostFlowsActionsRevertGone {
	return &PostFlowsActionsRevertGone{}
}

/*
PostFlowsActionsRevertGone describes a response with status code 410, with default header values.

Gone
*/
type PostFlowsActionsRevertGone struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post flows actions revert gone response has a 2xx status code
func (o *PostFlowsActionsRevertGone) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post flows actions revert gone response has a 3xx status code
func (o *PostFlowsActionsRevertGone) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post flows actions revert gone response has a 4xx status code
func (o *PostFlowsActionsRevertGone) IsClientError() bool {
	return true
}

// IsServerError returns true when this post flows actions revert gone response has a 5xx status code
func (o *PostFlowsActionsRevertGone) IsServerError() bool {
	return false
}

// IsCode returns true when this post flows actions revert gone response a status code equal to that given
func (o *PostFlowsActionsRevertGone) IsCode(code int) bool {
	return code == 410
}

func (o *PostFlowsActionsRevertGone) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertGone  %+v", 410, o.Payload)
}

func (o *PostFlowsActionsRevertGone) String() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertGone  %+v", 410, o.Payload)
}

func (o *PostFlowsActionsRevertGone) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsRevertGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsRevertRequestEntityTooLarge creates a PostFlowsActionsRevertRequestEntityTooLarge with default headers values
func NewPostFlowsActionsRevertRequestEntityTooLarge() *PostFlowsActionsRevertRequestEntityTooLarge {
	return &PostFlowsActionsRevertRequestEntityTooLarge{}
}

/*
PostFlowsActionsRevertRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostFlowsActionsRevertRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post flows actions revert request entity too large response has a 2xx status code
func (o *PostFlowsActionsRevertRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post flows actions revert request entity too large response has a 3xx status code
func (o *PostFlowsActionsRevertRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post flows actions revert request entity too large response has a 4xx status code
func (o *PostFlowsActionsRevertRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post flows actions revert request entity too large response has a 5xx status code
func (o *PostFlowsActionsRevertRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post flows actions revert request entity too large response a status code equal to that given
func (o *PostFlowsActionsRevertRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostFlowsActionsRevertRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostFlowsActionsRevertRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostFlowsActionsRevertRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsRevertRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsRevertUnsupportedMediaType creates a PostFlowsActionsRevertUnsupportedMediaType with default headers values
func NewPostFlowsActionsRevertUnsupportedMediaType() *PostFlowsActionsRevertUnsupportedMediaType {
	return &PostFlowsActionsRevertUnsupportedMediaType{}
}

/*
PostFlowsActionsRevertUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostFlowsActionsRevertUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post flows actions revert unsupported media type response has a 2xx status code
func (o *PostFlowsActionsRevertUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post flows actions revert unsupported media type response has a 3xx status code
func (o *PostFlowsActionsRevertUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post flows actions revert unsupported media type response has a 4xx status code
func (o *PostFlowsActionsRevertUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post flows actions revert unsupported media type response has a 5xx status code
func (o *PostFlowsActionsRevertUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post flows actions revert unsupported media type response a status code equal to that given
func (o *PostFlowsActionsRevertUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostFlowsActionsRevertUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostFlowsActionsRevertUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostFlowsActionsRevertUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsRevertUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsRevertTooManyRequests creates a PostFlowsActionsRevertTooManyRequests with default headers values
func NewPostFlowsActionsRevertTooManyRequests() *PostFlowsActionsRevertTooManyRequests {
	return &PostFlowsActionsRevertTooManyRequests{}
}

/*
PostFlowsActionsRevertTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostFlowsActionsRevertTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post flows actions revert too many requests response has a 2xx status code
func (o *PostFlowsActionsRevertTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post flows actions revert too many requests response has a 3xx status code
func (o *PostFlowsActionsRevertTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post flows actions revert too many requests response has a 4xx status code
func (o *PostFlowsActionsRevertTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post flows actions revert too many requests response has a 5xx status code
func (o *PostFlowsActionsRevertTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post flows actions revert too many requests response a status code equal to that given
func (o *PostFlowsActionsRevertTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostFlowsActionsRevertTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostFlowsActionsRevertTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostFlowsActionsRevertTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsRevertTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsRevertInternalServerError creates a PostFlowsActionsRevertInternalServerError with default headers values
func NewPostFlowsActionsRevertInternalServerError() *PostFlowsActionsRevertInternalServerError {
	return &PostFlowsActionsRevertInternalServerError{}
}

/*
PostFlowsActionsRevertInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostFlowsActionsRevertInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post flows actions revert internal server error response has a 2xx status code
func (o *PostFlowsActionsRevertInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post flows actions revert internal server error response has a 3xx status code
func (o *PostFlowsActionsRevertInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post flows actions revert internal server error response has a 4xx status code
func (o *PostFlowsActionsRevertInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post flows actions revert internal server error response has a 5xx status code
func (o *PostFlowsActionsRevertInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post flows actions revert internal server error response a status code equal to that given
func (o *PostFlowsActionsRevertInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostFlowsActionsRevertInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertInternalServerError  %+v", 500, o.Payload)
}

func (o *PostFlowsActionsRevertInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertInternalServerError  %+v", 500, o.Payload)
}

func (o *PostFlowsActionsRevertInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsRevertInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsRevertServiceUnavailable creates a PostFlowsActionsRevertServiceUnavailable with default headers values
func NewPostFlowsActionsRevertServiceUnavailable() *PostFlowsActionsRevertServiceUnavailable {
	return &PostFlowsActionsRevertServiceUnavailable{}
}

/*
PostFlowsActionsRevertServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostFlowsActionsRevertServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post flows actions revert service unavailable response has a 2xx status code
func (o *PostFlowsActionsRevertServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post flows actions revert service unavailable response has a 3xx status code
func (o *PostFlowsActionsRevertServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post flows actions revert service unavailable response has a 4xx status code
func (o *PostFlowsActionsRevertServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post flows actions revert service unavailable response has a 5xx status code
func (o *PostFlowsActionsRevertServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post flows actions revert service unavailable response a status code equal to that given
func (o *PostFlowsActionsRevertServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostFlowsActionsRevertServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostFlowsActionsRevertServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostFlowsActionsRevertServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsRevertServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostFlowsActionsRevertGatewayTimeout creates a PostFlowsActionsRevertGatewayTimeout with default headers values
func NewPostFlowsActionsRevertGatewayTimeout() *PostFlowsActionsRevertGatewayTimeout {
	return &PostFlowsActionsRevertGatewayTimeout{}
}

/*
PostFlowsActionsRevertGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostFlowsActionsRevertGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post flows actions revert gateway timeout response has a 2xx status code
func (o *PostFlowsActionsRevertGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post flows actions revert gateway timeout response has a 3xx status code
func (o *PostFlowsActionsRevertGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post flows actions revert gateway timeout response has a 4xx status code
func (o *PostFlowsActionsRevertGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post flows actions revert gateway timeout response has a 5xx status code
func (o *PostFlowsActionsRevertGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post flows actions revert gateway timeout response a status code equal to that given
func (o *PostFlowsActionsRevertGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostFlowsActionsRevertGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostFlowsActionsRevertGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/flows/actions/revert][%d] postFlowsActionsRevertGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostFlowsActionsRevertGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostFlowsActionsRevertGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
