// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetFlowsOutcomeReader is a Reader for the GetFlowsOutcome structure.
type GetFlowsOutcomeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFlowsOutcomeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFlowsOutcomeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFlowsOutcomeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetFlowsOutcomeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetFlowsOutcomeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFlowsOutcomeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetFlowsOutcomeMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetFlowsOutcomeRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetFlowsOutcomeRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetFlowsOutcomeUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetFlowsOutcomeTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFlowsOutcomeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetFlowsOutcomeServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetFlowsOutcomeGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetFlowsOutcomeOK creates a GetFlowsOutcomeOK with default headers values
func NewGetFlowsOutcomeOK() *GetFlowsOutcomeOK {
	return &GetFlowsOutcomeOK{}
}

/*GetFlowsOutcomeOK handles this case with default header values.

successful operation
*/
type GetFlowsOutcomeOK struct {
	Payload *models.FlowOutcome
}

func (o *GetFlowsOutcomeOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/outcomes/{flowOutcomeId}][%d] getFlowsOutcomeOK  %+v", 200, o.Payload)
}

func (o *GetFlowsOutcomeOK) GetPayload() *models.FlowOutcome {
	return o.Payload
}

func (o *GetFlowsOutcomeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FlowOutcome)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsOutcomeBadRequest creates a GetFlowsOutcomeBadRequest with default headers values
func NewGetFlowsOutcomeBadRequest() *GetFlowsOutcomeBadRequest {
	return &GetFlowsOutcomeBadRequest{}
}

/*GetFlowsOutcomeBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetFlowsOutcomeBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsOutcomeBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/outcomes/{flowOutcomeId}][%d] getFlowsOutcomeBadRequest  %+v", 400, o.Payload)
}

func (o *GetFlowsOutcomeBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsOutcomeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsOutcomeUnauthorized creates a GetFlowsOutcomeUnauthorized with default headers values
func NewGetFlowsOutcomeUnauthorized() *GetFlowsOutcomeUnauthorized {
	return &GetFlowsOutcomeUnauthorized{}
}

/*GetFlowsOutcomeUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetFlowsOutcomeUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsOutcomeUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/outcomes/{flowOutcomeId}][%d] getFlowsOutcomeUnauthorized  %+v", 401, o.Payload)
}

func (o *GetFlowsOutcomeUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsOutcomeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsOutcomeForbidden creates a GetFlowsOutcomeForbidden with default headers values
func NewGetFlowsOutcomeForbidden() *GetFlowsOutcomeForbidden {
	return &GetFlowsOutcomeForbidden{}
}

/*GetFlowsOutcomeForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetFlowsOutcomeForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsOutcomeForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/outcomes/{flowOutcomeId}][%d] getFlowsOutcomeForbidden  %+v", 403, o.Payload)
}

func (o *GetFlowsOutcomeForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsOutcomeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsOutcomeNotFound creates a GetFlowsOutcomeNotFound with default headers values
func NewGetFlowsOutcomeNotFound() *GetFlowsOutcomeNotFound {
	return &GetFlowsOutcomeNotFound{}
}

/*GetFlowsOutcomeNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetFlowsOutcomeNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsOutcomeNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/outcomes/{flowOutcomeId}][%d] getFlowsOutcomeNotFound  %+v", 404, o.Payload)
}

func (o *GetFlowsOutcomeNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsOutcomeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsOutcomeMethodNotAllowed creates a GetFlowsOutcomeMethodNotAllowed with default headers values
func NewGetFlowsOutcomeMethodNotAllowed() *GetFlowsOutcomeMethodNotAllowed {
	return &GetFlowsOutcomeMethodNotAllowed{}
}

/*GetFlowsOutcomeMethodNotAllowed handles this case with default header values.

Method Not Allowed
*/
type GetFlowsOutcomeMethodNotAllowed struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsOutcomeMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/outcomes/{flowOutcomeId}][%d] getFlowsOutcomeMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *GetFlowsOutcomeMethodNotAllowed) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsOutcomeMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsOutcomeRequestTimeout creates a GetFlowsOutcomeRequestTimeout with default headers values
func NewGetFlowsOutcomeRequestTimeout() *GetFlowsOutcomeRequestTimeout {
	return &GetFlowsOutcomeRequestTimeout{}
}

/*GetFlowsOutcomeRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetFlowsOutcomeRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsOutcomeRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/outcomes/{flowOutcomeId}][%d] getFlowsOutcomeRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetFlowsOutcomeRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsOutcomeRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsOutcomeRequestEntityTooLarge creates a GetFlowsOutcomeRequestEntityTooLarge with default headers values
func NewGetFlowsOutcomeRequestEntityTooLarge() *GetFlowsOutcomeRequestEntityTooLarge {
	return &GetFlowsOutcomeRequestEntityTooLarge{}
}

/*GetFlowsOutcomeRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetFlowsOutcomeRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsOutcomeRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/outcomes/{flowOutcomeId}][%d] getFlowsOutcomeRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetFlowsOutcomeRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsOutcomeRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsOutcomeUnsupportedMediaType creates a GetFlowsOutcomeUnsupportedMediaType with default headers values
func NewGetFlowsOutcomeUnsupportedMediaType() *GetFlowsOutcomeUnsupportedMediaType {
	return &GetFlowsOutcomeUnsupportedMediaType{}
}

/*GetFlowsOutcomeUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetFlowsOutcomeUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsOutcomeUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/outcomes/{flowOutcomeId}][%d] getFlowsOutcomeUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetFlowsOutcomeUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsOutcomeUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsOutcomeTooManyRequests creates a GetFlowsOutcomeTooManyRequests with default headers values
func NewGetFlowsOutcomeTooManyRequests() *GetFlowsOutcomeTooManyRequests {
	return &GetFlowsOutcomeTooManyRequests{}
}

/*GetFlowsOutcomeTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetFlowsOutcomeTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsOutcomeTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/outcomes/{flowOutcomeId}][%d] getFlowsOutcomeTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetFlowsOutcomeTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsOutcomeTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsOutcomeInternalServerError creates a GetFlowsOutcomeInternalServerError with default headers values
func NewGetFlowsOutcomeInternalServerError() *GetFlowsOutcomeInternalServerError {
	return &GetFlowsOutcomeInternalServerError{}
}

/*GetFlowsOutcomeInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetFlowsOutcomeInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsOutcomeInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/outcomes/{flowOutcomeId}][%d] getFlowsOutcomeInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFlowsOutcomeInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsOutcomeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsOutcomeServiceUnavailable creates a GetFlowsOutcomeServiceUnavailable with default headers values
func NewGetFlowsOutcomeServiceUnavailable() *GetFlowsOutcomeServiceUnavailable {
	return &GetFlowsOutcomeServiceUnavailable{}
}

/*GetFlowsOutcomeServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetFlowsOutcomeServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsOutcomeServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/outcomes/{flowOutcomeId}][%d] getFlowsOutcomeServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetFlowsOutcomeServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsOutcomeServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsOutcomeGatewayTimeout creates a GetFlowsOutcomeGatewayTimeout with default headers values
func NewGetFlowsOutcomeGatewayTimeout() *GetFlowsOutcomeGatewayTimeout {
	return &GetFlowsOutcomeGatewayTimeout{}
}

/*GetFlowsOutcomeGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetFlowsOutcomeGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsOutcomeGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/outcomes/{flowOutcomeId}][%d] getFlowsOutcomeGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetFlowsOutcomeGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsOutcomeGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
