// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostArchitectPromptHistoryReader is a Reader for the PostArchitectPromptHistory structure.
type PostArchitectPromptHistoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostArchitectPromptHistoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostArchitectPromptHistoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostArchitectPromptHistoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostArchitectPromptHistoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostArchitectPromptHistoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostArchitectPromptHistoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostArchitectPromptHistoryRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostArchitectPromptHistoryRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostArchitectPromptHistoryUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostArchitectPromptHistoryTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostArchitectPromptHistoryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostArchitectPromptHistoryServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostArchitectPromptHistoryGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostArchitectPromptHistoryOK creates a PostArchitectPromptHistoryOK with default headers values
func NewPostArchitectPromptHistoryOK() *PostArchitectPromptHistoryOK {
	return &PostArchitectPromptHistoryOK{}
}

/*
PostArchitectPromptHistoryOK describes a response with status code 200, with default header values.

successful operation
*/
type PostArchitectPromptHistoryOK struct {
	Payload *models.Operation
}

// IsSuccess returns true when this post architect prompt history o k response has a 2xx status code
func (o *PostArchitectPromptHistoryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post architect prompt history o k response has a 3xx status code
func (o *PostArchitectPromptHistoryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post architect prompt history o k response has a 4xx status code
func (o *PostArchitectPromptHistoryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post architect prompt history o k response has a 5xx status code
func (o *PostArchitectPromptHistoryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post architect prompt history o k response a status code equal to that given
func (o *PostArchitectPromptHistoryOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostArchitectPromptHistoryOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/architect/prompts/{promptId}/history][%d] postArchitectPromptHistoryOK  %+v", 200, o.Payload)
}

func (o *PostArchitectPromptHistoryOK) String() string {
	return fmt.Sprintf("[POST /api/v2/architect/prompts/{promptId}/history][%d] postArchitectPromptHistoryOK  %+v", 200, o.Payload)
}

func (o *PostArchitectPromptHistoryOK) GetPayload() *models.Operation {
	return o.Payload
}

func (o *PostArchitectPromptHistoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Operation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostArchitectPromptHistoryBadRequest creates a PostArchitectPromptHistoryBadRequest with default headers values
func NewPostArchitectPromptHistoryBadRequest() *PostArchitectPromptHistoryBadRequest {
	return &PostArchitectPromptHistoryBadRequest{}
}

/*
PostArchitectPromptHistoryBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostArchitectPromptHistoryBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post architect prompt history bad request response has a 2xx status code
func (o *PostArchitectPromptHistoryBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post architect prompt history bad request response has a 3xx status code
func (o *PostArchitectPromptHistoryBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post architect prompt history bad request response has a 4xx status code
func (o *PostArchitectPromptHistoryBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post architect prompt history bad request response has a 5xx status code
func (o *PostArchitectPromptHistoryBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post architect prompt history bad request response a status code equal to that given
func (o *PostArchitectPromptHistoryBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostArchitectPromptHistoryBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/architect/prompts/{promptId}/history][%d] postArchitectPromptHistoryBadRequest  %+v", 400, o.Payload)
}

func (o *PostArchitectPromptHistoryBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/architect/prompts/{promptId}/history][%d] postArchitectPromptHistoryBadRequest  %+v", 400, o.Payload)
}

func (o *PostArchitectPromptHistoryBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostArchitectPromptHistoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostArchitectPromptHistoryUnauthorized creates a PostArchitectPromptHistoryUnauthorized with default headers values
func NewPostArchitectPromptHistoryUnauthorized() *PostArchitectPromptHistoryUnauthorized {
	return &PostArchitectPromptHistoryUnauthorized{}
}

/*
PostArchitectPromptHistoryUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostArchitectPromptHistoryUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post architect prompt history unauthorized response has a 2xx status code
func (o *PostArchitectPromptHistoryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post architect prompt history unauthorized response has a 3xx status code
func (o *PostArchitectPromptHistoryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post architect prompt history unauthorized response has a 4xx status code
func (o *PostArchitectPromptHistoryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post architect prompt history unauthorized response has a 5xx status code
func (o *PostArchitectPromptHistoryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post architect prompt history unauthorized response a status code equal to that given
func (o *PostArchitectPromptHistoryUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostArchitectPromptHistoryUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/architect/prompts/{promptId}/history][%d] postArchitectPromptHistoryUnauthorized  %+v", 401, o.Payload)
}

func (o *PostArchitectPromptHistoryUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/architect/prompts/{promptId}/history][%d] postArchitectPromptHistoryUnauthorized  %+v", 401, o.Payload)
}

func (o *PostArchitectPromptHistoryUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostArchitectPromptHistoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostArchitectPromptHistoryForbidden creates a PostArchitectPromptHistoryForbidden with default headers values
func NewPostArchitectPromptHistoryForbidden() *PostArchitectPromptHistoryForbidden {
	return &PostArchitectPromptHistoryForbidden{}
}

/*
PostArchitectPromptHistoryForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostArchitectPromptHistoryForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post architect prompt history forbidden response has a 2xx status code
func (o *PostArchitectPromptHistoryForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post architect prompt history forbidden response has a 3xx status code
func (o *PostArchitectPromptHistoryForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post architect prompt history forbidden response has a 4xx status code
func (o *PostArchitectPromptHistoryForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post architect prompt history forbidden response has a 5xx status code
func (o *PostArchitectPromptHistoryForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post architect prompt history forbidden response a status code equal to that given
func (o *PostArchitectPromptHistoryForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostArchitectPromptHistoryForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/architect/prompts/{promptId}/history][%d] postArchitectPromptHistoryForbidden  %+v", 403, o.Payload)
}

func (o *PostArchitectPromptHistoryForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/architect/prompts/{promptId}/history][%d] postArchitectPromptHistoryForbidden  %+v", 403, o.Payload)
}

func (o *PostArchitectPromptHistoryForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostArchitectPromptHistoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostArchitectPromptHistoryNotFound creates a PostArchitectPromptHistoryNotFound with default headers values
func NewPostArchitectPromptHistoryNotFound() *PostArchitectPromptHistoryNotFound {
	return &PostArchitectPromptHistoryNotFound{}
}

/*
PostArchitectPromptHistoryNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostArchitectPromptHistoryNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post architect prompt history not found response has a 2xx status code
func (o *PostArchitectPromptHistoryNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post architect prompt history not found response has a 3xx status code
func (o *PostArchitectPromptHistoryNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post architect prompt history not found response has a 4xx status code
func (o *PostArchitectPromptHistoryNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post architect prompt history not found response has a 5xx status code
func (o *PostArchitectPromptHistoryNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post architect prompt history not found response a status code equal to that given
func (o *PostArchitectPromptHistoryNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostArchitectPromptHistoryNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/architect/prompts/{promptId}/history][%d] postArchitectPromptHistoryNotFound  %+v", 404, o.Payload)
}

func (o *PostArchitectPromptHistoryNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/architect/prompts/{promptId}/history][%d] postArchitectPromptHistoryNotFound  %+v", 404, o.Payload)
}

func (o *PostArchitectPromptHistoryNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostArchitectPromptHistoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostArchitectPromptHistoryRequestTimeout creates a PostArchitectPromptHistoryRequestTimeout with default headers values
func NewPostArchitectPromptHistoryRequestTimeout() *PostArchitectPromptHistoryRequestTimeout {
	return &PostArchitectPromptHistoryRequestTimeout{}
}

/*
PostArchitectPromptHistoryRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostArchitectPromptHistoryRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post architect prompt history request timeout response has a 2xx status code
func (o *PostArchitectPromptHistoryRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post architect prompt history request timeout response has a 3xx status code
func (o *PostArchitectPromptHistoryRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post architect prompt history request timeout response has a 4xx status code
func (o *PostArchitectPromptHistoryRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post architect prompt history request timeout response has a 5xx status code
func (o *PostArchitectPromptHistoryRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post architect prompt history request timeout response a status code equal to that given
func (o *PostArchitectPromptHistoryRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostArchitectPromptHistoryRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/architect/prompts/{promptId}/history][%d] postArchitectPromptHistoryRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostArchitectPromptHistoryRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/architect/prompts/{promptId}/history][%d] postArchitectPromptHistoryRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostArchitectPromptHistoryRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostArchitectPromptHistoryRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostArchitectPromptHistoryRequestEntityTooLarge creates a PostArchitectPromptHistoryRequestEntityTooLarge with default headers values
func NewPostArchitectPromptHistoryRequestEntityTooLarge() *PostArchitectPromptHistoryRequestEntityTooLarge {
	return &PostArchitectPromptHistoryRequestEntityTooLarge{}
}

/*
PostArchitectPromptHistoryRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostArchitectPromptHistoryRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post architect prompt history request entity too large response has a 2xx status code
func (o *PostArchitectPromptHistoryRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post architect prompt history request entity too large response has a 3xx status code
func (o *PostArchitectPromptHistoryRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post architect prompt history request entity too large response has a 4xx status code
func (o *PostArchitectPromptHistoryRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post architect prompt history request entity too large response has a 5xx status code
func (o *PostArchitectPromptHistoryRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post architect prompt history request entity too large response a status code equal to that given
func (o *PostArchitectPromptHistoryRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostArchitectPromptHistoryRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/architect/prompts/{promptId}/history][%d] postArchitectPromptHistoryRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostArchitectPromptHistoryRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/architect/prompts/{promptId}/history][%d] postArchitectPromptHistoryRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostArchitectPromptHistoryRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostArchitectPromptHistoryRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostArchitectPromptHistoryUnsupportedMediaType creates a PostArchitectPromptHistoryUnsupportedMediaType with default headers values
func NewPostArchitectPromptHistoryUnsupportedMediaType() *PostArchitectPromptHistoryUnsupportedMediaType {
	return &PostArchitectPromptHistoryUnsupportedMediaType{}
}

/*
PostArchitectPromptHistoryUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostArchitectPromptHistoryUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post architect prompt history unsupported media type response has a 2xx status code
func (o *PostArchitectPromptHistoryUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post architect prompt history unsupported media type response has a 3xx status code
func (o *PostArchitectPromptHistoryUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post architect prompt history unsupported media type response has a 4xx status code
func (o *PostArchitectPromptHistoryUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post architect prompt history unsupported media type response has a 5xx status code
func (o *PostArchitectPromptHistoryUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post architect prompt history unsupported media type response a status code equal to that given
func (o *PostArchitectPromptHistoryUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostArchitectPromptHistoryUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/architect/prompts/{promptId}/history][%d] postArchitectPromptHistoryUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostArchitectPromptHistoryUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/architect/prompts/{promptId}/history][%d] postArchitectPromptHistoryUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostArchitectPromptHistoryUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostArchitectPromptHistoryUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostArchitectPromptHistoryTooManyRequests creates a PostArchitectPromptHistoryTooManyRequests with default headers values
func NewPostArchitectPromptHistoryTooManyRequests() *PostArchitectPromptHistoryTooManyRequests {
	return &PostArchitectPromptHistoryTooManyRequests{}
}

/*
PostArchitectPromptHistoryTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostArchitectPromptHistoryTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post architect prompt history too many requests response has a 2xx status code
func (o *PostArchitectPromptHistoryTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post architect prompt history too many requests response has a 3xx status code
func (o *PostArchitectPromptHistoryTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post architect prompt history too many requests response has a 4xx status code
func (o *PostArchitectPromptHistoryTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post architect prompt history too many requests response has a 5xx status code
func (o *PostArchitectPromptHistoryTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post architect prompt history too many requests response a status code equal to that given
func (o *PostArchitectPromptHistoryTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostArchitectPromptHistoryTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/architect/prompts/{promptId}/history][%d] postArchitectPromptHistoryTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostArchitectPromptHistoryTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/architect/prompts/{promptId}/history][%d] postArchitectPromptHistoryTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostArchitectPromptHistoryTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostArchitectPromptHistoryTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostArchitectPromptHistoryInternalServerError creates a PostArchitectPromptHistoryInternalServerError with default headers values
func NewPostArchitectPromptHistoryInternalServerError() *PostArchitectPromptHistoryInternalServerError {
	return &PostArchitectPromptHistoryInternalServerError{}
}

/*
PostArchitectPromptHistoryInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostArchitectPromptHistoryInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post architect prompt history internal server error response has a 2xx status code
func (o *PostArchitectPromptHistoryInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post architect prompt history internal server error response has a 3xx status code
func (o *PostArchitectPromptHistoryInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post architect prompt history internal server error response has a 4xx status code
func (o *PostArchitectPromptHistoryInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post architect prompt history internal server error response has a 5xx status code
func (o *PostArchitectPromptHistoryInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post architect prompt history internal server error response a status code equal to that given
func (o *PostArchitectPromptHistoryInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostArchitectPromptHistoryInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/architect/prompts/{promptId}/history][%d] postArchitectPromptHistoryInternalServerError  %+v", 500, o.Payload)
}

func (o *PostArchitectPromptHistoryInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/architect/prompts/{promptId}/history][%d] postArchitectPromptHistoryInternalServerError  %+v", 500, o.Payload)
}

func (o *PostArchitectPromptHistoryInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostArchitectPromptHistoryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostArchitectPromptHistoryServiceUnavailable creates a PostArchitectPromptHistoryServiceUnavailable with default headers values
func NewPostArchitectPromptHistoryServiceUnavailable() *PostArchitectPromptHistoryServiceUnavailable {
	return &PostArchitectPromptHistoryServiceUnavailable{}
}

/*
PostArchitectPromptHistoryServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostArchitectPromptHistoryServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post architect prompt history service unavailable response has a 2xx status code
func (o *PostArchitectPromptHistoryServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post architect prompt history service unavailable response has a 3xx status code
func (o *PostArchitectPromptHistoryServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post architect prompt history service unavailable response has a 4xx status code
func (o *PostArchitectPromptHistoryServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post architect prompt history service unavailable response has a 5xx status code
func (o *PostArchitectPromptHistoryServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post architect prompt history service unavailable response a status code equal to that given
func (o *PostArchitectPromptHistoryServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostArchitectPromptHistoryServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/architect/prompts/{promptId}/history][%d] postArchitectPromptHistoryServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostArchitectPromptHistoryServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/architect/prompts/{promptId}/history][%d] postArchitectPromptHistoryServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostArchitectPromptHistoryServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostArchitectPromptHistoryServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostArchitectPromptHistoryGatewayTimeout creates a PostArchitectPromptHistoryGatewayTimeout with default headers values
func NewPostArchitectPromptHistoryGatewayTimeout() *PostArchitectPromptHistoryGatewayTimeout {
	return &PostArchitectPromptHistoryGatewayTimeout{}
}

/*
PostArchitectPromptHistoryGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostArchitectPromptHistoryGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post architect prompt history gateway timeout response has a 2xx status code
func (o *PostArchitectPromptHistoryGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post architect prompt history gateway timeout response has a 3xx status code
func (o *PostArchitectPromptHistoryGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post architect prompt history gateway timeout response has a 4xx status code
func (o *PostArchitectPromptHistoryGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post architect prompt history gateway timeout response has a 5xx status code
func (o *PostArchitectPromptHistoryGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post architect prompt history gateway timeout response a status code equal to that given
func (o *PostArchitectPromptHistoryGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostArchitectPromptHistoryGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/architect/prompts/{promptId}/history][%d] postArchitectPromptHistoryGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostArchitectPromptHistoryGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/architect/prompts/{promptId}/history][%d] postArchitectPromptHistoryGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostArchitectPromptHistoryGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostArchitectPromptHistoryGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
