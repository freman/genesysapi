// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetFlowsDatatableExportJobReader is a Reader for the GetFlowsDatatableExportJob structure.
type GetFlowsDatatableExportJobReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFlowsDatatableExportJobReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFlowsDatatableExportJobOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewGetFlowsDatatableExportJobAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFlowsDatatableExportJobBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetFlowsDatatableExportJobUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetFlowsDatatableExportJobForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFlowsDatatableExportJobNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetFlowsDatatableExportJobRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetFlowsDatatableExportJobUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetFlowsDatatableExportJobTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFlowsDatatableExportJobInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetFlowsDatatableExportJobServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetFlowsDatatableExportJobGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetFlowsDatatableExportJobOK creates a GetFlowsDatatableExportJobOK with default headers values
func NewGetFlowsDatatableExportJobOK() *GetFlowsDatatableExportJobOK {
	return &GetFlowsDatatableExportJobOK{}
}

/*GetFlowsDatatableExportJobOK handles this case with default header values.

successful operation
*/
type GetFlowsDatatableExportJobOK struct {
	Payload *models.DataTableExportJob
}

func (o *GetFlowsDatatableExportJobOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/export/jobs/{exportJobId}][%d] getFlowsDatatableExportJobOK  %+v", 200, o.Payload)
}

func (o *GetFlowsDatatableExportJobOK) GetPayload() *models.DataTableExportJob {
	return o.Payload
}

func (o *GetFlowsDatatableExportJobOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DataTableExportJob)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableExportJobAccepted creates a GetFlowsDatatableExportJobAccepted with default headers values
func NewGetFlowsDatatableExportJobAccepted() *GetFlowsDatatableExportJobAccepted {
	return &GetFlowsDatatableExportJobAccepted{}
}

/*GetFlowsDatatableExportJobAccepted handles this case with default header values.

Request Accepted
*/
type GetFlowsDatatableExportJobAccepted struct {
	Payload *models.DataTableExportJob
}

func (o *GetFlowsDatatableExportJobAccepted) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/export/jobs/{exportJobId}][%d] getFlowsDatatableExportJobAccepted  %+v", 202, o.Payload)
}

func (o *GetFlowsDatatableExportJobAccepted) GetPayload() *models.DataTableExportJob {
	return o.Payload
}

func (o *GetFlowsDatatableExportJobAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DataTableExportJob)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableExportJobBadRequest creates a GetFlowsDatatableExportJobBadRequest with default headers values
func NewGetFlowsDatatableExportJobBadRequest() *GetFlowsDatatableExportJobBadRequest {
	return &GetFlowsDatatableExportJobBadRequest{}
}

/*GetFlowsDatatableExportJobBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetFlowsDatatableExportJobBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsDatatableExportJobBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/export/jobs/{exportJobId}][%d] getFlowsDatatableExportJobBadRequest  %+v", 400, o.Payload)
}

func (o *GetFlowsDatatableExportJobBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableExportJobBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableExportJobUnauthorized creates a GetFlowsDatatableExportJobUnauthorized with default headers values
func NewGetFlowsDatatableExportJobUnauthorized() *GetFlowsDatatableExportJobUnauthorized {
	return &GetFlowsDatatableExportJobUnauthorized{}
}

/*GetFlowsDatatableExportJobUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetFlowsDatatableExportJobUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsDatatableExportJobUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/export/jobs/{exportJobId}][%d] getFlowsDatatableExportJobUnauthorized  %+v", 401, o.Payload)
}

func (o *GetFlowsDatatableExportJobUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableExportJobUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableExportJobForbidden creates a GetFlowsDatatableExportJobForbidden with default headers values
func NewGetFlowsDatatableExportJobForbidden() *GetFlowsDatatableExportJobForbidden {
	return &GetFlowsDatatableExportJobForbidden{}
}

/*GetFlowsDatatableExportJobForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetFlowsDatatableExportJobForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsDatatableExportJobForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/export/jobs/{exportJobId}][%d] getFlowsDatatableExportJobForbidden  %+v", 403, o.Payload)
}

func (o *GetFlowsDatatableExportJobForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableExportJobForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableExportJobNotFound creates a GetFlowsDatatableExportJobNotFound with default headers values
func NewGetFlowsDatatableExportJobNotFound() *GetFlowsDatatableExportJobNotFound {
	return &GetFlowsDatatableExportJobNotFound{}
}

/*GetFlowsDatatableExportJobNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetFlowsDatatableExportJobNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsDatatableExportJobNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/export/jobs/{exportJobId}][%d] getFlowsDatatableExportJobNotFound  %+v", 404, o.Payload)
}

func (o *GetFlowsDatatableExportJobNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableExportJobNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableExportJobRequestEntityTooLarge creates a GetFlowsDatatableExportJobRequestEntityTooLarge with default headers values
func NewGetFlowsDatatableExportJobRequestEntityTooLarge() *GetFlowsDatatableExportJobRequestEntityTooLarge {
	return &GetFlowsDatatableExportJobRequestEntityTooLarge{}
}

/*GetFlowsDatatableExportJobRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetFlowsDatatableExportJobRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsDatatableExportJobRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/export/jobs/{exportJobId}][%d] getFlowsDatatableExportJobRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetFlowsDatatableExportJobRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableExportJobRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableExportJobUnsupportedMediaType creates a GetFlowsDatatableExportJobUnsupportedMediaType with default headers values
func NewGetFlowsDatatableExportJobUnsupportedMediaType() *GetFlowsDatatableExportJobUnsupportedMediaType {
	return &GetFlowsDatatableExportJobUnsupportedMediaType{}
}

/*GetFlowsDatatableExportJobUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetFlowsDatatableExportJobUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsDatatableExportJobUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/export/jobs/{exportJobId}][%d] getFlowsDatatableExportJobUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetFlowsDatatableExportJobUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableExportJobUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableExportJobTooManyRequests creates a GetFlowsDatatableExportJobTooManyRequests with default headers values
func NewGetFlowsDatatableExportJobTooManyRequests() *GetFlowsDatatableExportJobTooManyRequests {
	return &GetFlowsDatatableExportJobTooManyRequests{}
}

/*GetFlowsDatatableExportJobTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type GetFlowsDatatableExportJobTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsDatatableExportJobTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/export/jobs/{exportJobId}][%d] getFlowsDatatableExportJobTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetFlowsDatatableExportJobTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableExportJobTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableExportJobInternalServerError creates a GetFlowsDatatableExportJobInternalServerError with default headers values
func NewGetFlowsDatatableExportJobInternalServerError() *GetFlowsDatatableExportJobInternalServerError {
	return &GetFlowsDatatableExportJobInternalServerError{}
}

/*GetFlowsDatatableExportJobInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetFlowsDatatableExportJobInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsDatatableExportJobInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/export/jobs/{exportJobId}][%d] getFlowsDatatableExportJobInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFlowsDatatableExportJobInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableExportJobInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableExportJobServiceUnavailable creates a GetFlowsDatatableExportJobServiceUnavailable with default headers values
func NewGetFlowsDatatableExportJobServiceUnavailable() *GetFlowsDatatableExportJobServiceUnavailable {
	return &GetFlowsDatatableExportJobServiceUnavailable{}
}

/*GetFlowsDatatableExportJobServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetFlowsDatatableExportJobServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsDatatableExportJobServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/export/jobs/{exportJobId}][%d] getFlowsDatatableExportJobServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetFlowsDatatableExportJobServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableExportJobServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowsDatatableExportJobGatewayTimeout creates a GetFlowsDatatableExportJobGatewayTimeout with default headers values
func NewGetFlowsDatatableExportJobGatewayTimeout() *GetFlowsDatatableExportJobGatewayTimeout {
	return &GetFlowsDatatableExportJobGatewayTimeout{}
}

/*GetFlowsDatatableExportJobGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetFlowsDatatableExportJobGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetFlowsDatatableExportJobGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/flows/datatables/{datatableId}/export/jobs/{exportJobId}][%d] getFlowsDatatableExportJobGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetFlowsDatatableExportJobGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFlowsDatatableExportJobGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
