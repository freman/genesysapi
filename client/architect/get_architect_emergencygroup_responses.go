// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetArchitectEmergencygroupReader is a Reader for the GetArchitectEmergencygroup structure.
type GetArchitectEmergencygroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetArchitectEmergencygroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetArchitectEmergencygroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetArchitectEmergencygroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetArchitectEmergencygroupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetArchitectEmergencygroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetArchitectEmergencygroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetArchitectEmergencygroupRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetArchitectEmergencygroupRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetArchitectEmergencygroupUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetArchitectEmergencygroupTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetArchitectEmergencygroupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetArchitectEmergencygroupServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetArchitectEmergencygroupGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetArchitectEmergencygroupOK creates a GetArchitectEmergencygroupOK with default headers values
func NewGetArchitectEmergencygroupOK() *GetArchitectEmergencygroupOK {
	return &GetArchitectEmergencygroupOK{}
}

/*GetArchitectEmergencygroupOK handles this case with default header values.

successful operation
*/
type GetArchitectEmergencygroupOK struct {
	Payload *models.EmergencyGroup
}

func (o *GetArchitectEmergencygroupOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupOK  %+v", 200, o.Payload)
}

func (o *GetArchitectEmergencygroupOK) GetPayload() *models.EmergencyGroup {
	return o.Payload
}

func (o *GetArchitectEmergencygroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EmergencyGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectEmergencygroupBadRequest creates a GetArchitectEmergencygroupBadRequest with default headers values
func NewGetArchitectEmergencygroupBadRequest() *GetArchitectEmergencygroupBadRequest {
	return &GetArchitectEmergencygroupBadRequest{}
}

/*GetArchitectEmergencygroupBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetArchitectEmergencygroupBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetArchitectEmergencygroupBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupBadRequest  %+v", 400, o.Payload)
}

func (o *GetArchitectEmergencygroupBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectEmergencygroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectEmergencygroupUnauthorized creates a GetArchitectEmergencygroupUnauthorized with default headers values
func NewGetArchitectEmergencygroupUnauthorized() *GetArchitectEmergencygroupUnauthorized {
	return &GetArchitectEmergencygroupUnauthorized{}
}

/*GetArchitectEmergencygroupUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetArchitectEmergencygroupUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetArchitectEmergencygroupUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupUnauthorized  %+v", 401, o.Payload)
}

func (o *GetArchitectEmergencygroupUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectEmergencygroupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectEmergencygroupForbidden creates a GetArchitectEmergencygroupForbidden with default headers values
func NewGetArchitectEmergencygroupForbidden() *GetArchitectEmergencygroupForbidden {
	return &GetArchitectEmergencygroupForbidden{}
}

/*GetArchitectEmergencygroupForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetArchitectEmergencygroupForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetArchitectEmergencygroupForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupForbidden  %+v", 403, o.Payload)
}

func (o *GetArchitectEmergencygroupForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectEmergencygroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectEmergencygroupNotFound creates a GetArchitectEmergencygroupNotFound with default headers values
func NewGetArchitectEmergencygroupNotFound() *GetArchitectEmergencygroupNotFound {
	return &GetArchitectEmergencygroupNotFound{}
}

/*GetArchitectEmergencygroupNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetArchitectEmergencygroupNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetArchitectEmergencygroupNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupNotFound  %+v", 404, o.Payload)
}

func (o *GetArchitectEmergencygroupNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectEmergencygroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectEmergencygroupRequestTimeout creates a GetArchitectEmergencygroupRequestTimeout with default headers values
func NewGetArchitectEmergencygroupRequestTimeout() *GetArchitectEmergencygroupRequestTimeout {
	return &GetArchitectEmergencygroupRequestTimeout{}
}

/*GetArchitectEmergencygroupRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetArchitectEmergencygroupRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetArchitectEmergencygroupRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetArchitectEmergencygroupRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectEmergencygroupRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectEmergencygroupRequestEntityTooLarge creates a GetArchitectEmergencygroupRequestEntityTooLarge with default headers values
func NewGetArchitectEmergencygroupRequestEntityTooLarge() *GetArchitectEmergencygroupRequestEntityTooLarge {
	return &GetArchitectEmergencygroupRequestEntityTooLarge{}
}

/*GetArchitectEmergencygroupRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetArchitectEmergencygroupRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetArchitectEmergencygroupRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetArchitectEmergencygroupRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectEmergencygroupRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectEmergencygroupUnsupportedMediaType creates a GetArchitectEmergencygroupUnsupportedMediaType with default headers values
func NewGetArchitectEmergencygroupUnsupportedMediaType() *GetArchitectEmergencygroupUnsupportedMediaType {
	return &GetArchitectEmergencygroupUnsupportedMediaType{}
}

/*GetArchitectEmergencygroupUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetArchitectEmergencygroupUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetArchitectEmergencygroupUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetArchitectEmergencygroupUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectEmergencygroupUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectEmergencygroupTooManyRequests creates a GetArchitectEmergencygroupTooManyRequests with default headers values
func NewGetArchitectEmergencygroupTooManyRequests() *GetArchitectEmergencygroupTooManyRequests {
	return &GetArchitectEmergencygroupTooManyRequests{}
}

/*GetArchitectEmergencygroupTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetArchitectEmergencygroupTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetArchitectEmergencygroupTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetArchitectEmergencygroupTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectEmergencygroupTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectEmergencygroupInternalServerError creates a GetArchitectEmergencygroupInternalServerError with default headers values
func NewGetArchitectEmergencygroupInternalServerError() *GetArchitectEmergencygroupInternalServerError {
	return &GetArchitectEmergencygroupInternalServerError{}
}

/*GetArchitectEmergencygroupInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetArchitectEmergencygroupInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetArchitectEmergencygroupInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetArchitectEmergencygroupInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectEmergencygroupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectEmergencygroupServiceUnavailable creates a GetArchitectEmergencygroupServiceUnavailable with default headers values
func NewGetArchitectEmergencygroupServiceUnavailable() *GetArchitectEmergencygroupServiceUnavailable {
	return &GetArchitectEmergencygroupServiceUnavailable{}
}

/*GetArchitectEmergencygroupServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetArchitectEmergencygroupServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetArchitectEmergencygroupServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetArchitectEmergencygroupServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectEmergencygroupServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectEmergencygroupGatewayTimeout creates a GetArchitectEmergencygroupGatewayTimeout with default headers values
func NewGetArchitectEmergencygroupGatewayTimeout() *GetArchitectEmergencygroupGatewayTimeout {
	return &GetArchitectEmergencygroupGatewayTimeout{}
}

/*GetArchitectEmergencygroupGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetArchitectEmergencygroupGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetArchitectEmergencygroupGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetArchitectEmergencygroupGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectEmergencygroupGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
