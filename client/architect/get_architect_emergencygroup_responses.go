// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetArchitectEmergencygroupReader is a Reader for the GetArchitectEmergencygroup structure.
type GetArchitectEmergencygroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetArchitectEmergencygroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetArchitectEmergencygroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetArchitectEmergencygroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetArchitectEmergencygroupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetArchitectEmergencygroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetArchitectEmergencygroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetArchitectEmergencygroupRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetArchitectEmergencygroupRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetArchitectEmergencygroupUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetArchitectEmergencygroupTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetArchitectEmergencygroupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetArchitectEmergencygroupServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetArchitectEmergencygroupGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetArchitectEmergencygroupOK creates a GetArchitectEmergencygroupOK with default headers values
func NewGetArchitectEmergencygroupOK() *GetArchitectEmergencygroupOK {
	return &GetArchitectEmergencygroupOK{}
}

/*
GetArchitectEmergencygroupOK describes a response with status code 200, with default header values.

successful operation
*/
type GetArchitectEmergencygroupOK struct {
	Payload *models.EmergencyGroup
}

// IsSuccess returns true when this get architect emergencygroup o k response has a 2xx status code
func (o *GetArchitectEmergencygroupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get architect emergencygroup o k response has a 3xx status code
func (o *GetArchitectEmergencygroupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect emergencygroup o k response has a 4xx status code
func (o *GetArchitectEmergencygroupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get architect emergencygroup o k response has a 5xx status code
func (o *GetArchitectEmergencygroupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect emergencygroup o k response a status code equal to that given
func (o *GetArchitectEmergencygroupOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetArchitectEmergencygroupOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupOK  %+v", 200, o.Payload)
}

func (o *GetArchitectEmergencygroupOK) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupOK  %+v", 200, o.Payload)
}

func (o *GetArchitectEmergencygroupOK) GetPayload() *models.EmergencyGroup {
	return o.Payload
}

func (o *GetArchitectEmergencygroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EmergencyGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectEmergencygroupBadRequest creates a GetArchitectEmergencygroupBadRequest with default headers values
func NewGetArchitectEmergencygroupBadRequest() *GetArchitectEmergencygroupBadRequest {
	return &GetArchitectEmergencygroupBadRequest{}
}

/*
GetArchitectEmergencygroupBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetArchitectEmergencygroupBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect emergencygroup bad request response has a 2xx status code
func (o *GetArchitectEmergencygroupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect emergencygroup bad request response has a 3xx status code
func (o *GetArchitectEmergencygroupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect emergencygroup bad request response has a 4xx status code
func (o *GetArchitectEmergencygroupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect emergencygroup bad request response has a 5xx status code
func (o *GetArchitectEmergencygroupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect emergencygroup bad request response a status code equal to that given
func (o *GetArchitectEmergencygroupBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetArchitectEmergencygroupBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupBadRequest  %+v", 400, o.Payload)
}

func (o *GetArchitectEmergencygroupBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupBadRequest  %+v", 400, o.Payload)
}

func (o *GetArchitectEmergencygroupBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectEmergencygroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectEmergencygroupUnauthorized creates a GetArchitectEmergencygroupUnauthorized with default headers values
func NewGetArchitectEmergencygroupUnauthorized() *GetArchitectEmergencygroupUnauthorized {
	return &GetArchitectEmergencygroupUnauthorized{}
}

/*
GetArchitectEmergencygroupUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetArchitectEmergencygroupUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect emergencygroup unauthorized response has a 2xx status code
func (o *GetArchitectEmergencygroupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect emergencygroup unauthorized response has a 3xx status code
func (o *GetArchitectEmergencygroupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect emergencygroup unauthorized response has a 4xx status code
func (o *GetArchitectEmergencygroupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect emergencygroup unauthorized response has a 5xx status code
func (o *GetArchitectEmergencygroupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect emergencygroup unauthorized response a status code equal to that given
func (o *GetArchitectEmergencygroupUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetArchitectEmergencygroupUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupUnauthorized  %+v", 401, o.Payload)
}

func (o *GetArchitectEmergencygroupUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupUnauthorized  %+v", 401, o.Payload)
}

func (o *GetArchitectEmergencygroupUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectEmergencygroupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectEmergencygroupForbidden creates a GetArchitectEmergencygroupForbidden with default headers values
func NewGetArchitectEmergencygroupForbidden() *GetArchitectEmergencygroupForbidden {
	return &GetArchitectEmergencygroupForbidden{}
}

/*
GetArchitectEmergencygroupForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetArchitectEmergencygroupForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect emergencygroup forbidden response has a 2xx status code
func (o *GetArchitectEmergencygroupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect emergencygroup forbidden response has a 3xx status code
func (o *GetArchitectEmergencygroupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect emergencygroup forbidden response has a 4xx status code
func (o *GetArchitectEmergencygroupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect emergencygroup forbidden response has a 5xx status code
func (o *GetArchitectEmergencygroupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect emergencygroup forbidden response a status code equal to that given
func (o *GetArchitectEmergencygroupForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetArchitectEmergencygroupForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupForbidden  %+v", 403, o.Payload)
}

func (o *GetArchitectEmergencygroupForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupForbidden  %+v", 403, o.Payload)
}

func (o *GetArchitectEmergencygroupForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectEmergencygroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectEmergencygroupNotFound creates a GetArchitectEmergencygroupNotFound with default headers values
func NewGetArchitectEmergencygroupNotFound() *GetArchitectEmergencygroupNotFound {
	return &GetArchitectEmergencygroupNotFound{}
}

/*
GetArchitectEmergencygroupNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetArchitectEmergencygroupNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect emergencygroup not found response has a 2xx status code
func (o *GetArchitectEmergencygroupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect emergencygroup not found response has a 3xx status code
func (o *GetArchitectEmergencygroupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect emergencygroup not found response has a 4xx status code
func (o *GetArchitectEmergencygroupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect emergencygroup not found response has a 5xx status code
func (o *GetArchitectEmergencygroupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect emergencygroup not found response a status code equal to that given
func (o *GetArchitectEmergencygroupNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetArchitectEmergencygroupNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupNotFound  %+v", 404, o.Payload)
}

func (o *GetArchitectEmergencygroupNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupNotFound  %+v", 404, o.Payload)
}

func (o *GetArchitectEmergencygroupNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectEmergencygroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectEmergencygroupRequestTimeout creates a GetArchitectEmergencygroupRequestTimeout with default headers values
func NewGetArchitectEmergencygroupRequestTimeout() *GetArchitectEmergencygroupRequestTimeout {
	return &GetArchitectEmergencygroupRequestTimeout{}
}

/*
GetArchitectEmergencygroupRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetArchitectEmergencygroupRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect emergencygroup request timeout response has a 2xx status code
func (o *GetArchitectEmergencygroupRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect emergencygroup request timeout response has a 3xx status code
func (o *GetArchitectEmergencygroupRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect emergencygroup request timeout response has a 4xx status code
func (o *GetArchitectEmergencygroupRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect emergencygroup request timeout response has a 5xx status code
func (o *GetArchitectEmergencygroupRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect emergencygroup request timeout response a status code equal to that given
func (o *GetArchitectEmergencygroupRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetArchitectEmergencygroupRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetArchitectEmergencygroupRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetArchitectEmergencygroupRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectEmergencygroupRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectEmergencygroupRequestEntityTooLarge creates a GetArchitectEmergencygroupRequestEntityTooLarge with default headers values
func NewGetArchitectEmergencygroupRequestEntityTooLarge() *GetArchitectEmergencygroupRequestEntityTooLarge {
	return &GetArchitectEmergencygroupRequestEntityTooLarge{}
}

/*
GetArchitectEmergencygroupRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetArchitectEmergencygroupRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect emergencygroup request entity too large response has a 2xx status code
func (o *GetArchitectEmergencygroupRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect emergencygroup request entity too large response has a 3xx status code
func (o *GetArchitectEmergencygroupRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect emergencygroup request entity too large response has a 4xx status code
func (o *GetArchitectEmergencygroupRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect emergencygroup request entity too large response has a 5xx status code
func (o *GetArchitectEmergencygroupRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect emergencygroup request entity too large response a status code equal to that given
func (o *GetArchitectEmergencygroupRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetArchitectEmergencygroupRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetArchitectEmergencygroupRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetArchitectEmergencygroupRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectEmergencygroupRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectEmergencygroupUnsupportedMediaType creates a GetArchitectEmergencygroupUnsupportedMediaType with default headers values
func NewGetArchitectEmergencygroupUnsupportedMediaType() *GetArchitectEmergencygroupUnsupportedMediaType {
	return &GetArchitectEmergencygroupUnsupportedMediaType{}
}

/*
GetArchitectEmergencygroupUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetArchitectEmergencygroupUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect emergencygroup unsupported media type response has a 2xx status code
func (o *GetArchitectEmergencygroupUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect emergencygroup unsupported media type response has a 3xx status code
func (o *GetArchitectEmergencygroupUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect emergencygroup unsupported media type response has a 4xx status code
func (o *GetArchitectEmergencygroupUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect emergencygroup unsupported media type response has a 5xx status code
func (o *GetArchitectEmergencygroupUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect emergencygroup unsupported media type response a status code equal to that given
func (o *GetArchitectEmergencygroupUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetArchitectEmergencygroupUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetArchitectEmergencygroupUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetArchitectEmergencygroupUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectEmergencygroupUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectEmergencygroupTooManyRequests creates a GetArchitectEmergencygroupTooManyRequests with default headers values
func NewGetArchitectEmergencygroupTooManyRequests() *GetArchitectEmergencygroupTooManyRequests {
	return &GetArchitectEmergencygroupTooManyRequests{}
}

/*
GetArchitectEmergencygroupTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetArchitectEmergencygroupTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect emergencygroup too many requests response has a 2xx status code
func (o *GetArchitectEmergencygroupTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect emergencygroup too many requests response has a 3xx status code
func (o *GetArchitectEmergencygroupTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect emergencygroup too many requests response has a 4xx status code
func (o *GetArchitectEmergencygroupTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get architect emergencygroup too many requests response has a 5xx status code
func (o *GetArchitectEmergencygroupTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get architect emergencygroup too many requests response a status code equal to that given
func (o *GetArchitectEmergencygroupTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetArchitectEmergencygroupTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetArchitectEmergencygroupTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetArchitectEmergencygroupTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectEmergencygroupTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectEmergencygroupInternalServerError creates a GetArchitectEmergencygroupInternalServerError with default headers values
func NewGetArchitectEmergencygroupInternalServerError() *GetArchitectEmergencygroupInternalServerError {
	return &GetArchitectEmergencygroupInternalServerError{}
}

/*
GetArchitectEmergencygroupInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetArchitectEmergencygroupInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect emergencygroup internal server error response has a 2xx status code
func (o *GetArchitectEmergencygroupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect emergencygroup internal server error response has a 3xx status code
func (o *GetArchitectEmergencygroupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect emergencygroup internal server error response has a 4xx status code
func (o *GetArchitectEmergencygroupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get architect emergencygroup internal server error response has a 5xx status code
func (o *GetArchitectEmergencygroupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get architect emergencygroup internal server error response a status code equal to that given
func (o *GetArchitectEmergencygroupInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetArchitectEmergencygroupInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetArchitectEmergencygroupInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetArchitectEmergencygroupInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectEmergencygroupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectEmergencygroupServiceUnavailable creates a GetArchitectEmergencygroupServiceUnavailable with default headers values
func NewGetArchitectEmergencygroupServiceUnavailable() *GetArchitectEmergencygroupServiceUnavailable {
	return &GetArchitectEmergencygroupServiceUnavailable{}
}

/*
GetArchitectEmergencygroupServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetArchitectEmergencygroupServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect emergencygroup service unavailable response has a 2xx status code
func (o *GetArchitectEmergencygroupServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect emergencygroup service unavailable response has a 3xx status code
func (o *GetArchitectEmergencygroupServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect emergencygroup service unavailable response has a 4xx status code
func (o *GetArchitectEmergencygroupServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get architect emergencygroup service unavailable response has a 5xx status code
func (o *GetArchitectEmergencygroupServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get architect emergencygroup service unavailable response a status code equal to that given
func (o *GetArchitectEmergencygroupServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetArchitectEmergencygroupServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetArchitectEmergencygroupServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetArchitectEmergencygroupServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectEmergencygroupServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArchitectEmergencygroupGatewayTimeout creates a GetArchitectEmergencygroupGatewayTimeout with default headers values
func NewGetArchitectEmergencygroupGatewayTimeout() *GetArchitectEmergencygroupGatewayTimeout {
	return &GetArchitectEmergencygroupGatewayTimeout{}
}

/*
GetArchitectEmergencygroupGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetArchitectEmergencygroupGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get architect emergencygroup gateway timeout response has a 2xx status code
func (o *GetArchitectEmergencygroupGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get architect emergencygroup gateway timeout response has a 3xx status code
func (o *GetArchitectEmergencygroupGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get architect emergencygroup gateway timeout response has a 4xx status code
func (o *GetArchitectEmergencygroupGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get architect emergencygroup gateway timeout response has a 5xx status code
func (o *GetArchitectEmergencygroupGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get architect emergencygroup gateway timeout response a status code equal to that given
func (o *GetArchitectEmergencygroupGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetArchitectEmergencygroupGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetArchitectEmergencygroupGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/architect/emergencygroups/{emergencyGroupId}][%d] getArchitectEmergencygroupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetArchitectEmergencygroupGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetArchitectEmergencygroupGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
