// Code generated by go-swagger; DO NOT EDIT.

package architect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteFlowsDatatableReader is a Reader for the DeleteFlowsDatatable structure.
type DeleteFlowsDatatableReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteFlowsDatatableReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteFlowsDatatableNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteFlowsDatatableBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteFlowsDatatableUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteFlowsDatatableForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteFlowsDatatableNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteFlowsDatatableRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteFlowsDatatableConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteFlowsDatatableRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteFlowsDatatableUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteFlowsDatatableTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteFlowsDatatableInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteFlowsDatatableServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteFlowsDatatableGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteFlowsDatatableNoContent creates a DeleteFlowsDatatableNoContent with default headers values
func NewDeleteFlowsDatatableNoContent() *DeleteFlowsDatatableNoContent {
	return &DeleteFlowsDatatableNoContent{}
}

/*
DeleteFlowsDatatableNoContent describes a response with status code 204, with default header values.

The datatable was deleted successfully
*/
type DeleteFlowsDatatableNoContent struct {
}

// IsSuccess returns true when this delete flows datatable no content response has a 2xx status code
func (o *DeleteFlowsDatatableNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete flows datatable no content response has a 3xx status code
func (o *DeleteFlowsDatatableNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete flows datatable no content response has a 4xx status code
func (o *DeleteFlowsDatatableNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete flows datatable no content response has a 5xx status code
func (o *DeleteFlowsDatatableNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete flows datatable no content response a status code equal to that given
func (o *DeleteFlowsDatatableNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeleteFlowsDatatableNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/flows/datatables/{datatableId}][%d] deleteFlowsDatatableNoContent ", 204)
}

func (o *DeleteFlowsDatatableNoContent) String() string {
	return fmt.Sprintf("[DELETE /api/v2/flows/datatables/{datatableId}][%d] deleteFlowsDatatableNoContent ", 204)
}

func (o *DeleteFlowsDatatableNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteFlowsDatatableBadRequest creates a DeleteFlowsDatatableBadRequest with default headers values
func NewDeleteFlowsDatatableBadRequest() *DeleteFlowsDatatableBadRequest {
	return &DeleteFlowsDatatableBadRequest{}
}

/*
DeleteFlowsDatatableBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteFlowsDatatableBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete flows datatable bad request response has a 2xx status code
func (o *DeleteFlowsDatatableBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete flows datatable bad request response has a 3xx status code
func (o *DeleteFlowsDatatableBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete flows datatable bad request response has a 4xx status code
func (o *DeleteFlowsDatatableBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete flows datatable bad request response has a 5xx status code
func (o *DeleteFlowsDatatableBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete flows datatable bad request response a status code equal to that given
func (o *DeleteFlowsDatatableBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteFlowsDatatableBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/flows/datatables/{datatableId}][%d] deleteFlowsDatatableBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteFlowsDatatableBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v2/flows/datatables/{datatableId}][%d] deleteFlowsDatatableBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteFlowsDatatableBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteFlowsDatatableBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteFlowsDatatableUnauthorized creates a DeleteFlowsDatatableUnauthorized with default headers values
func NewDeleteFlowsDatatableUnauthorized() *DeleteFlowsDatatableUnauthorized {
	return &DeleteFlowsDatatableUnauthorized{}
}

/*
DeleteFlowsDatatableUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteFlowsDatatableUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete flows datatable unauthorized response has a 2xx status code
func (o *DeleteFlowsDatatableUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete flows datatable unauthorized response has a 3xx status code
func (o *DeleteFlowsDatatableUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete flows datatable unauthorized response has a 4xx status code
func (o *DeleteFlowsDatatableUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete flows datatable unauthorized response has a 5xx status code
func (o *DeleteFlowsDatatableUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete flows datatable unauthorized response a status code equal to that given
func (o *DeleteFlowsDatatableUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteFlowsDatatableUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/flows/datatables/{datatableId}][%d] deleteFlowsDatatableUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteFlowsDatatableUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/flows/datatables/{datatableId}][%d] deleteFlowsDatatableUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteFlowsDatatableUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteFlowsDatatableUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteFlowsDatatableForbidden creates a DeleteFlowsDatatableForbidden with default headers values
func NewDeleteFlowsDatatableForbidden() *DeleteFlowsDatatableForbidden {
	return &DeleteFlowsDatatableForbidden{}
}

/*
DeleteFlowsDatatableForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type DeleteFlowsDatatableForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete flows datatable forbidden response has a 2xx status code
func (o *DeleteFlowsDatatableForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete flows datatable forbidden response has a 3xx status code
func (o *DeleteFlowsDatatableForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete flows datatable forbidden response has a 4xx status code
func (o *DeleteFlowsDatatableForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete flows datatable forbidden response has a 5xx status code
func (o *DeleteFlowsDatatableForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete flows datatable forbidden response a status code equal to that given
func (o *DeleteFlowsDatatableForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteFlowsDatatableForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/flows/datatables/{datatableId}][%d] deleteFlowsDatatableForbidden  %+v", 403, o.Payload)
}

func (o *DeleteFlowsDatatableForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/flows/datatables/{datatableId}][%d] deleteFlowsDatatableForbidden  %+v", 403, o.Payload)
}

func (o *DeleteFlowsDatatableForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteFlowsDatatableForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteFlowsDatatableNotFound creates a DeleteFlowsDatatableNotFound with default headers values
func NewDeleteFlowsDatatableNotFound() *DeleteFlowsDatatableNotFound {
	return &DeleteFlowsDatatableNotFound{}
}

/*
DeleteFlowsDatatableNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type DeleteFlowsDatatableNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete flows datatable not found response has a 2xx status code
func (o *DeleteFlowsDatatableNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete flows datatable not found response has a 3xx status code
func (o *DeleteFlowsDatatableNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete flows datatable not found response has a 4xx status code
func (o *DeleteFlowsDatatableNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete flows datatable not found response has a 5xx status code
func (o *DeleteFlowsDatatableNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete flows datatable not found response a status code equal to that given
func (o *DeleteFlowsDatatableNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteFlowsDatatableNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/flows/datatables/{datatableId}][%d] deleteFlowsDatatableNotFound  %+v", 404, o.Payload)
}

func (o *DeleteFlowsDatatableNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v2/flows/datatables/{datatableId}][%d] deleteFlowsDatatableNotFound  %+v", 404, o.Payload)
}

func (o *DeleteFlowsDatatableNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteFlowsDatatableNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteFlowsDatatableRequestTimeout creates a DeleteFlowsDatatableRequestTimeout with default headers values
func NewDeleteFlowsDatatableRequestTimeout() *DeleteFlowsDatatableRequestTimeout {
	return &DeleteFlowsDatatableRequestTimeout{}
}

/*
DeleteFlowsDatatableRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteFlowsDatatableRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete flows datatable request timeout response has a 2xx status code
func (o *DeleteFlowsDatatableRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete flows datatable request timeout response has a 3xx status code
func (o *DeleteFlowsDatatableRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete flows datatable request timeout response has a 4xx status code
func (o *DeleteFlowsDatatableRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete flows datatable request timeout response has a 5xx status code
func (o *DeleteFlowsDatatableRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete flows datatable request timeout response a status code equal to that given
func (o *DeleteFlowsDatatableRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *DeleteFlowsDatatableRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/flows/datatables/{datatableId}][%d] deleteFlowsDatatableRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteFlowsDatatableRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/flows/datatables/{datatableId}][%d] deleteFlowsDatatableRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteFlowsDatatableRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteFlowsDatatableRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteFlowsDatatableConflict creates a DeleteFlowsDatatableConflict with default headers values
func NewDeleteFlowsDatatableConflict() *DeleteFlowsDatatableConflict {
	return &DeleteFlowsDatatableConflict{}
}

/*
DeleteFlowsDatatableConflict describes a response with status code 409, with default header values.

Conflict
*/
type DeleteFlowsDatatableConflict struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete flows datatable conflict response has a 2xx status code
func (o *DeleteFlowsDatatableConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete flows datatable conflict response has a 3xx status code
func (o *DeleteFlowsDatatableConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete flows datatable conflict response has a 4xx status code
func (o *DeleteFlowsDatatableConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete flows datatable conflict response has a 5xx status code
func (o *DeleteFlowsDatatableConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this delete flows datatable conflict response a status code equal to that given
func (o *DeleteFlowsDatatableConflict) IsCode(code int) bool {
	return code == 409
}

func (o *DeleteFlowsDatatableConflict) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/flows/datatables/{datatableId}][%d] deleteFlowsDatatableConflict  %+v", 409, o.Payload)
}

func (o *DeleteFlowsDatatableConflict) String() string {
	return fmt.Sprintf("[DELETE /api/v2/flows/datatables/{datatableId}][%d] deleteFlowsDatatableConflict  %+v", 409, o.Payload)
}

func (o *DeleteFlowsDatatableConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteFlowsDatatableConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteFlowsDatatableRequestEntityTooLarge creates a DeleteFlowsDatatableRequestEntityTooLarge with default headers values
func NewDeleteFlowsDatatableRequestEntityTooLarge() *DeleteFlowsDatatableRequestEntityTooLarge {
	return &DeleteFlowsDatatableRequestEntityTooLarge{}
}

/*
DeleteFlowsDatatableRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type DeleteFlowsDatatableRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete flows datatable request entity too large response has a 2xx status code
func (o *DeleteFlowsDatatableRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete flows datatable request entity too large response has a 3xx status code
func (o *DeleteFlowsDatatableRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete flows datatable request entity too large response has a 4xx status code
func (o *DeleteFlowsDatatableRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete flows datatable request entity too large response has a 5xx status code
func (o *DeleteFlowsDatatableRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this delete flows datatable request entity too large response a status code equal to that given
func (o *DeleteFlowsDatatableRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *DeleteFlowsDatatableRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/flows/datatables/{datatableId}][%d] deleteFlowsDatatableRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteFlowsDatatableRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[DELETE /api/v2/flows/datatables/{datatableId}][%d] deleteFlowsDatatableRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteFlowsDatatableRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteFlowsDatatableRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteFlowsDatatableUnsupportedMediaType creates a DeleteFlowsDatatableUnsupportedMediaType with default headers values
func NewDeleteFlowsDatatableUnsupportedMediaType() *DeleteFlowsDatatableUnsupportedMediaType {
	return &DeleteFlowsDatatableUnsupportedMediaType{}
}

/*
DeleteFlowsDatatableUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteFlowsDatatableUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete flows datatable unsupported media type response has a 2xx status code
func (o *DeleteFlowsDatatableUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete flows datatable unsupported media type response has a 3xx status code
func (o *DeleteFlowsDatatableUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete flows datatable unsupported media type response has a 4xx status code
func (o *DeleteFlowsDatatableUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete flows datatable unsupported media type response has a 5xx status code
func (o *DeleteFlowsDatatableUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this delete flows datatable unsupported media type response a status code equal to that given
func (o *DeleteFlowsDatatableUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *DeleteFlowsDatatableUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/flows/datatables/{datatableId}][%d] deleteFlowsDatatableUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteFlowsDatatableUnsupportedMediaType) String() string {
	return fmt.Sprintf("[DELETE /api/v2/flows/datatables/{datatableId}][%d] deleteFlowsDatatableUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteFlowsDatatableUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteFlowsDatatableUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteFlowsDatatableTooManyRequests creates a DeleteFlowsDatatableTooManyRequests with default headers values
func NewDeleteFlowsDatatableTooManyRequests() *DeleteFlowsDatatableTooManyRequests {
	return &DeleteFlowsDatatableTooManyRequests{}
}

/*
DeleteFlowsDatatableTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteFlowsDatatableTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete flows datatable too many requests response has a 2xx status code
func (o *DeleteFlowsDatatableTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete flows datatable too many requests response has a 3xx status code
func (o *DeleteFlowsDatatableTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete flows datatable too many requests response has a 4xx status code
func (o *DeleteFlowsDatatableTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete flows datatable too many requests response has a 5xx status code
func (o *DeleteFlowsDatatableTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete flows datatable too many requests response a status code equal to that given
func (o *DeleteFlowsDatatableTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteFlowsDatatableTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/flows/datatables/{datatableId}][%d] deleteFlowsDatatableTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteFlowsDatatableTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /api/v2/flows/datatables/{datatableId}][%d] deleteFlowsDatatableTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteFlowsDatatableTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteFlowsDatatableTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteFlowsDatatableInternalServerError creates a DeleteFlowsDatatableInternalServerError with default headers values
func NewDeleteFlowsDatatableInternalServerError() *DeleteFlowsDatatableInternalServerError {
	return &DeleteFlowsDatatableInternalServerError{}
}

/*
DeleteFlowsDatatableInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteFlowsDatatableInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete flows datatable internal server error response has a 2xx status code
func (o *DeleteFlowsDatatableInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete flows datatable internal server error response has a 3xx status code
func (o *DeleteFlowsDatatableInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete flows datatable internal server error response has a 4xx status code
func (o *DeleteFlowsDatatableInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete flows datatable internal server error response has a 5xx status code
func (o *DeleteFlowsDatatableInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete flows datatable internal server error response a status code equal to that given
func (o *DeleteFlowsDatatableInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteFlowsDatatableInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/flows/datatables/{datatableId}][%d] deleteFlowsDatatableInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteFlowsDatatableInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v2/flows/datatables/{datatableId}][%d] deleteFlowsDatatableInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteFlowsDatatableInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteFlowsDatatableInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteFlowsDatatableServiceUnavailable creates a DeleteFlowsDatatableServiceUnavailable with default headers values
func NewDeleteFlowsDatatableServiceUnavailable() *DeleteFlowsDatatableServiceUnavailable {
	return &DeleteFlowsDatatableServiceUnavailable{}
}

/*
DeleteFlowsDatatableServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteFlowsDatatableServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete flows datatable service unavailable response has a 2xx status code
func (o *DeleteFlowsDatatableServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete flows datatable service unavailable response has a 3xx status code
func (o *DeleteFlowsDatatableServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete flows datatable service unavailable response has a 4xx status code
func (o *DeleteFlowsDatatableServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete flows datatable service unavailable response has a 5xx status code
func (o *DeleteFlowsDatatableServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete flows datatable service unavailable response a status code equal to that given
func (o *DeleteFlowsDatatableServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *DeleteFlowsDatatableServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/flows/datatables/{datatableId}][%d] deleteFlowsDatatableServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteFlowsDatatableServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /api/v2/flows/datatables/{datatableId}][%d] deleteFlowsDatatableServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteFlowsDatatableServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteFlowsDatatableServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteFlowsDatatableGatewayTimeout creates a DeleteFlowsDatatableGatewayTimeout with default headers values
func NewDeleteFlowsDatatableGatewayTimeout() *DeleteFlowsDatatableGatewayTimeout {
	return &DeleteFlowsDatatableGatewayTimeout{}
}

/*
DeleteFlowsDatatableGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type DeleteFlowsDatatableGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete flows datatable gateway timeout response has a 2xx status code
func (o *DeleteFlowsDatatableGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete flows datatable gateway timeout response has a 3xx status code
func (o *DeleteFlowsDatatableGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete flows datatable gateway timeout response has a 4xx status code
func (o *DeleteFlowsDatatableGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete flows datatable gateway timeout response has a 5xx status code
func (o *DeleteFlowsDatatableGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this delete flows datatable gateway timeout response a status code equal to that given
func (o *DeleteFlowsDatatableGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *DeleteFlowsDatatableGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/flows/datatables/{datatableId}][%d] deleteFlowsDatatableGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteFlowsDatatableGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/flows/datatables/{datatableId}][%d] deleteFlowsDatatableGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteFlowsDatatableGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteFlowsDatatableGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
