// Code generated by go-swagger; DO NOT EDIT.

package voicemail

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutVoicemailMessageReader is a Reader for the PutVoicemailMessage structure.
type PutVoicemailMessageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutVoicemailMessageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutVoicemailMessageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutVoicemailMessageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutVoicemailMessageUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutVoicemailMessageForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutVoicemailMessageNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutVoicemailMessageRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPutVoicemailMessageConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutVoicemailMessageRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutVoicemailMessageUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutVoicemailMessageTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutVoicemailMessageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutVoicemailMessageServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutVoicemailMessageGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutVoicemailMessageOK creates a PutVoicemailMessageOK with default headers values
func NewPutVoicemailMessageOK() *PutVoicemailMessageOK {
	return &PutVoicemailMessageOK{}
}

/*
PutVoicemailMessageOK describes a response with status code 200, with default header values.

successful operation
*/
type PutVoicemailMessageOK struct {
	Payload *models.VoicemailMessage
}

// IsSuccess returns true when this put voicemail message o k response has a 2xx status code
func (o *PutVoicemailMessageOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put voicemail message o k response has a 3xx status code
func (o *PutVoicemailMessageOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put voicemail message o k response has a 4xx status code
func (o *PutVoicemailMessageOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put voicemail message o k response has a 5xx status code
func (o *PutVoicemailMessageOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put voicemail message o k response a status code equal to that given
func (o *PutVoicemailMessageOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutVoicemailMessageOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/voicemail/messages/{messageId}][%d] putVoicemailMessageOK  %+v", 200, o.Payload)
}

func (o *PutVoicemailMessageOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/voicemail/messages/{messageId}][%d] putVoicemailMessageOK  %+v", 200, o.Payload)
}

func (o *PutVoicemailMessageOK) GetPayload() *models.VoicemailMessage {
	return o.Payload
}

func (o *PutVoicemailMessageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VoicemailMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutVoicemailMessageBadRequest creates a PutVoicemailMessageBadRequest with default headers values
func NewPutVoicemailMessageBadRequest() *PutVoicemailMessageBadRequest {
	return &PutVoicemailMessageBadRequest{}
}

/*
PutVoicemailMessageBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutVoicemailMessageBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put voicemail message bad request response has a 2xx status code
func (o *PutVoicemailMessageBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put voicemail message bad request response has a 3xx status code
func (o *PutVoicemailMessageBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put voicemail message bad request response has a 4xx status code
func (o *PutVoicemailMessageBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put voicemail message bad request response has a 5xx status code
func (o *PutVoicemailMessageBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put voicemail message bad request response a status code equal to that given
func (o *PutVoicemailMessageBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutVoicemailMessageBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/voicemail/messages/{messageId}][%d] putVoicemailMessageBadRequest  %+v", 400, o.Payload)
}

func (o *PutVoicemailMessageBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/voicemail/messages/{messageId}][%d] putVoicemailMessageBadRequest  %+v", 400, o.Payload)
}

func (o *PutVoicemailMessageBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutVoicemailMessageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutVoicemailMessageUnauthorized creates a PutVoicemailMessageUnauthorized with default headers values
func NewPutVoicemailMessageUnauthorized() *PutVoicemailMessageUnauthorized {
	return &PutVoicemailMessageUnauthorized{}
}

/*
PutVoicemailMessageUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutVoicemailMessageUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put voicemail message unauthorized response has a 2xx status code
func (o *PutVoicemailMessageUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put voicemail message unauthorized response has a 3xx status code
func (o *PutVoicemailMessageUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put voicemail message unauthorized response has a 4xx status code
func (o *PutVoicemailMessageUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put voicemail message unauthorized response has a 5xx status code
func (o *PutVoicemailMessageUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put voicemail message unauthorized response a status code equal to that given
func (o *PutVoicemailMessageUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutVoicemailMessageUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/voicemail/messages/{messageId}][%d] putVoicemailMessageUnauthorized  %+v", 401, o.Payload)
}

func (o *PutVoicemailMessageUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/voicemail/messages/{messageId}][%d] putVoicemailMessageUnauthorized  %+v", 401, o.Payload)
}

func (o *PutVoicemailMessageUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutVoicemailMessageUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutVoicemailMessageForbidden creates a PutVoicemailMessageForbidden with default headers values
func NewPutVoicemailMessageForbidden() *PutVoicemailMessageForbidden {
	return &PutVoicemailMessageForbidden{}
}

/*
PutVoicemailMessageForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutVoicemailMessageForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put voicemail message forbidden response has a 2xx status code
func (o *PutVoicemailMessageForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put voicemail message forbidden response has a 3xx status code
func (o *PutVoicemailMessageForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put voicemail message forbidden response has a 4xx status code
func (o *PutVoicemailMessageForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put voicemail message forbidden response has a 5xx status code
func (o *PutVoicemailMessageForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put voicemail message forbidden response a status code equal to that given
func (o *PutVoicemailMessageForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutVoicemailMessageForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/voicemail/messages/{messageId}][%d] putVoicemailMessageForbidden  %+v", 403, o.Payload)
}

func (o *PutVoicemailMessageForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/voicemail/messages/{messageId}][%d] putVoicemailMessageForbidden  %+v", 403, o.Payload)
}

func (o *PutVoicemailMessageForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutVoicemailMessageForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutVoicemailMessageNotFound creates a PutVoicemailMessageNotFound with default headers values
func NewPutVoicemailMessageNotFound() *PutVoicemailMessageNotFound {
	return &PutVoicemailMessageNotFound{}
}

/*
PutVoicemailMessageNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutVoicemailMessageNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put voicemail message not found response has a 2xx status code
func (o *PutVoicemailMessageNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put voicemail message not found response has a 3xx status code
func (o *PutVoicemailMessageNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put voicemail message not found response has a 4xx status code
func (o *PutVoicemailMessageNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put voicemail message not found response has a 5xx status code
func (o *PutVoicemailMessageNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put voicemail message not found response a status code equal to that given
func (o *PutVoicemailMessageNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutVoicemailMessageNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/voicemail/messages/{messageId}][%d] putVoicemailMessageNotFound  %+v", 404, o.Payload)
}

func (o *PutVoicemailMessageNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/voicemail/messages/{messageId}][%d] putVoicemailMessageNotFound  %+v", 404, o.Payload)
}

func (o *PutVoicemailMessageNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutVoicemailMessageNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutVoicemailMessageRequestTimeout creates a PutVoicemailMessageRequestTimeout with default headers values
func NewPutVoicemailMessageRequestTimeout() *PutVoicemailMessageRequestTimeout {
	return &PutVoicemailMessageRequestTimeout{}
}

/*
PutVoicemailMessageRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutVoicemailMessageRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put voicemail message request timeout response has a 2xx status code
func (o *PutVoicemailMessageRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put voicemail message request timeout response has a 3xx status code
func (o *PutVoicemailMessageRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put voicemail message request timeout response has a 4xx status code
func (o *PutVoicemailMessageRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put voicemail message request timeout response has a 5xx status code
func (o *PutVoicemailMessageRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put voicemail message request timeout response a status code equal to that given
func (o *PutVoicemailMessageRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutVoicemailMessageRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/voicemail/messages/{messageId}][%d] putVoicemailMessageRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutVoicemailMessageRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/voicemail/messages/{messageId}][%d] putVoicemailMessageRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutVoicemailMessageRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutVoicemailMessageRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutVoicemailMessageConflict creates a PutVoicemailMessageConflict with default headers values
func NewPutVoicemailMessageConflict() *PutVoicemailMessageConflict {
	return &PutVoicemailMessageConflict{}
}

/*
PutVoicemailMessageConflict describes a response with status code 409, with default header values.

Conflict
*/
type PutVoicemailMessageConflict struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put voicemail message conflict response has a 2xx status code
func (o *PutVoicemailMessageConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put voicemail message conflict response has a 3xx status code
func (o *PutVoicemailMessageConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put voicemail message conflict response has a 4xx status code
func (o *PutVoicemailMessageConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this put voicemail message conflict response has a 5xx status code
func (o *PutVoicemailMessageConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this put voicemail message conflict response a status code equal to that given
func (o *PutVoicemailMessageConflict) IsCode(code int) bool {
	return code == 409
}

func (o *PutVoicemailMessageConflict) Error() string {
	return fmt.Sprintf("[PUT /api/v2/voicemail/messages/{messageId}][%d] putVoicemailMessageConflict  %+v", 409, o.Payload)
}

func (o *PutVoicemailMessageConflict) String() string {
	return fmt.Sprintf("[PUT /api/v2/voicemail/messages/{messageId}][%d] putVoicemailMessageConflict  %+v", 409, o.Payload)
}

func (o *PutVoicemailMessageConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutVoicemailMessageConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutVoicemailMessageRequestEntityTooLarge creates a PutVoicemailMessageRequestEntityTooLarge with default headers values
func NewPutVoicemailMessageRequestEntityTooLarge() *PutVoicemailMessageRequestEntityTooLarge {
	return &PutVoicemailMessageRequestEntityTooLarge{}
}

/*
PutVoicemailMessageRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PutVoicemailMessageRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put voicemail message request entity too large response has a 2xx status code
func (o *PutVoicemailMessageRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put voicemail message request entity too large response has a 3xx status code
func (o *PutVoicemailMessageRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put voicemail message request entity too large response has a 4xx status code
func (o *PutVoicemailMessageRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put voicemail message request entity too large response has a 5xx status code
func (o *PutVoicemailMessageRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put voicemail message request entity too large response a status code equal to that given
func (o *PutVoicemailMessageRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutVoicemailMessageRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/voicemail/messages/{messageId}][%d] putVoicemailMessageRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutVoicemailMessageRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/voicemail/messages/{messageId}][%d] putVoicemailMessageRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutVoicemailMessageRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutVoicemailMessageRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutVoicemailMessageUnsupportedMediaType creates a PutVoicemailMessageUnsupportedMediaType with default headers values
func NewPutVoicemailMessageUnsupportedMediaType() *PutVoicemailMessageUnsupportedMediaType {
	return &PutVoicemailMessageUnsupportedMediaType{}
}

/*
PutVoicemailMessageUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutVoicemailMessageUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put voicemail message unsupported media type response has a 2xx status code
func (o *PutVoicemailMessageUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put voicemail message unsupported media type response has a 3xx status code
func (o *PutVoicemailMessageUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put voicemail message unsupported media type response has a 4xx status code
func (o *PutVoicemailMessageUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put voicemail message unsupported media type response has a 5xx status code
func (o *PutVoicemailMessageUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put voicemail message unsupported media type response a status code equal to that given
func (o *PutVoicemailMessageUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutVoicemailMessageUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/voicemail/messages/{messageId}][%d] putVoicemailMessageUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutVoicemailMessageUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/voicemail/messages/{messageId}][%d] putVoicemailMessageUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutVoicemailMessageUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutVoicemailMessageUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutVoicemailMessageTooManyRequests creates a PutVoicemailMessageTooManyRequests with default headers values
func NewPutVoicemailMessageTooManyRequests() *PutVoicemailMessageTooManyRequests {
	return &PutVoicemailMessageTooManyRequests{}
}

/*
PutVoicemailMessageTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutVoicemailMessageTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put voicemail message too many requests response has a 2xx status code
func (o *PutVoicemailMessageTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put voicemail message too many requests response has a 3xx status code
func (o *PutVoicemailMessageTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put voicemail message too many requests response has a 4xx status code
func (o *PutVoicemailMessageTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put voicemail message too many requests response has a 5xx status code
func (o *PutVoicemailMessageTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put voicemail message too many requests response a status code equal to that given
func (o *PutVoicemailMessageTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutVoicemailMessageTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/voicemail/messages/{messageId}][%d] putVoicemailMessageTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutVoicemailMessageTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/voicemail/messages/{messageId}][%d] putVoicemailMessageTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutVoicemailMessageTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutVoicemailMessageTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutVoicemailMessageInternalServerError creates a PutVoicemailMessageInternalServerError with default headers values
func NewPutVoicemailMessageInternalServerError() *PutVoicemailMessageInternalServerError {
	return &PutVoicemailMessageInternalServerError{}
}

/*
PutVoicemailMessageInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutVoicemailMessageInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put voicemail message internal server error response has a 2xx status code
func (o *PutVoicemailMessageInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put voicemail message internal server error response has a 3xx status code
func (o *PutVoicemailMessageInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put voicemail message internal server error response has a 4xx status code
func (o *PutVoicemailMessageInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put voicemail message internal server error response has a 5xx status code
func (o *PutVoicemailMessageInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put voicemail message internal server error response a status code equal to that given
func (o *PutVoicemailMessageInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutVoicemailMessageInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/voicemail/messages/{messageId}][%d] putVoicemailMessageInternalServerError  %+v", 500, o.Payload)
}

func (o *PutVoicemailMessageInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/voicemail/messages/{messageId}][%d] putVoicemailMessageInternalServerError  %+v", 500, o.Payload)
}

func (o *PutVoicemailMessageInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutVoicemailMessageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutVoicemailMessageServiceUnavailable creates a PutVoicemailMessageServiceUnavailable with default headers values
func NewPutVoicemailMessageServiceUnavailable() *PutVoicemailMessageServiceUnavailable {
	return &PutVoicemailMessageServiceUnavailable{}
}

/*
PutVoicemailMessageServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutVoicemailMessageServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put voicemail message service unavailable response has a 2xx status code
func (o *PutVoicemailMessageServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put voicemail message service unavailable response has a 3xx status code
func (o *PutVoicemailMessageServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put voicemail message service unavailable response has a 4xx status code
func (o *PutVoicemailMessageServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put voicemail message service unavailable response has a 5xx status code
func (o *PutVoicemailMessageServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put voicemail message service unavailable response a status code equal to that given
func (o *PutVoicemailMessageServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutVoicemailMessageServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/voicemail/messages/{messageId}][%d] putVoicemailMessageServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutVoicemailMessageServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/voicemail/messages/{messageId}][%d] putVoicemailMessageServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutVoicemailMessageServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutVoicemailMessageServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutVoicemailMessageGatewayTimeout creates a PutVoicemailMessageGatewayTimeout with default headers values
func NewPutVoicemailMessageGatewayTimeout() *PutVoicemailMessageGatewayTimeout {
	return &PutVoicemailMessageGatewayTimeout{}
}

/*
PutVoicemailMessageGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutVoicemailMessageGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put voicemail message gateway timeout response has a 2xx status code
func (o *PutVoicemailMessageGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put voicemail message gateway timeout response has a 3xx status code
func (o *PutVoicemailMessageGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put voicemail message gateway timeout response has a 4xx status code
func (o *PutVoicemailMessageGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put voicemail message gateway timeout response has a 5xx status code
func (o *PutVoicemailMessageGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put voicemail message gateway timeout response a status code equal to that given
func (o *PutVoicemailMessageGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutVoicemailMessageGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/voicemail/messages/{messageId}][%d] putVoicemailMessageGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutVoicemailMessageGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/voicemail/messages/{messageId}][%d] putVoicemailMessageGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutVoicemailMessageGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutVoicemailMessageGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
