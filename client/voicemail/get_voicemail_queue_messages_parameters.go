// Code generated by go-swagger; DO NOT EDIT.

package voicemail

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetVoicemailQueueMessagesParams creates a new GetVoicemailQueueMessagesParams object
// with the default values initialized.
func NewGetVoicemailQueueMessagesParams() *GetVoicemailQueueMessagesParams {
	var (
		pageNumberDefault = int32(1)
		pageSizeDefault   = int32(25)
	)
	return &GetVoicemailQueueMessagesParams{
		PageNumber: &pageNumberDefault,
		PageSize:   &pageSizeDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetVoicemailQueueMessagesParamsWithTimeout creates a new GetVoicemailQueueMessagesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetVoicemailQueueMessagesParamsWithTimeout(timeout time.Duration) *GetVoicemailQueueMessagesParams {
	var (
		pageNumberDefault = int32(1)
		pageSizeDefault   = int32(25)
	)
	return &GetVoicemailQueueMessagesParams{
		PageNumber: &pageNumberDefault,
		PageSize:   &pageSizeDefault,

		timeout: timeout,
	}
}

// NewGetVoicemailQueueMessagesParamsWithContext creates a new GetVoicemailQueueMessagesParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetVoicemailQueueMessagesParamsWithContext(ctx context.Context) *GetVoicemailQueueMessagesParams {
	var (
		pageNumberDefault = int32(1)
		pageSizeDefault   = int32(25)
	)
	return &GetVoicemailQueueMessagesParams{
		PageNumber: &pageNumberDefault,
		PageSize:   &pageSizeDefault,

		Context: ctx,
	}
}

// NewGetVoicemailQueueMessagesParamsWithHTTPClient creates a new GetVoicemailQueueMessagesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetVoicemailQueueMessagesParamsWithHTTPClient(client *http.Client) *GetVoicemailQueueMessagesParams {
	var (
		pageNumberDefault = int32(1)
		pageSizeDefault   = int32(25)
	)
	return &GetVoicemailQueueMessagesParams{
		PageNumber: &pageNumberDefault,
		PageSize:   &pageSizeDefault,
		HTTPClient: client,
	}
}

/*GetVoicemailQueueMessagesParams contains all the parameters to send to the API endpoint
for the get voicemail queue messages operation typically these are written to a http.Request
*/
type GetVoicemailQueueMessagesParams struct {

	/*PageNumber
	  Page number

	*/
	PageNumber *int32
	/*PageSize
	  Page size

	*/
	PageSize *int32
	/*QueueID
	  Queue ID

	*/
	QueueID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get voicemail queue messages params
func (o *GetVoicemailQueueMessagesParams) WithTimeout(timeout time.Duration) *GetVoicemailQueueMessagesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get voicemail queue messages params
func (o *GetVoicemailQueueMessagesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get voicemail queue messages params
func (o *GetVoicemailQueueMessagesParams) WithContext(ctx context.Context) *GetVoicemailQueueMessagesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get voicemail queue messages params
func (o *GetVoicemailQueueMessagesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get voicemail queue messages params
func (o *GetVoicemailQueueMessagesParams) WithHTTPClient(client *http.Client) *GetVoicemailQueueMessagesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get voicemail queue messages params
func (o *GetVoicemailQueueMessagesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPageNumber adds the pageNumber to the get voicemail queue messages params
func (o *GetVoicemailQueueMessagesParams) WithPageNumber(pageNumber *int32) *GetVoicemailQueueMessagesParams {
	o.SetPageNumber(pageNumber)
	return o
}

// SetPageNumber adds the pageNumber to the get voicemail queue messages params
func (o *GetVoicemailQueueMessagesParams) SetPageNumber(pageNumber *int32) {
	o.PageNumber = pageNumber
}

// WithPageSize adds the pageSize to the get voicemail queue messages params
func (o *GetVoicemailQueueMessagesParams) WithPageSize(pageSize *int32) *GetVoicemailQueueMessagesParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the get voicemail queue messages params
func (o *GetVoicemailQueueMessagesParams) SetPageSize(pageSize *int32) {
	o.PageSize = pageSize
}

// WithQueueID adds the queueID to the get voicemail queue messages params
func (o *GetVoicemailQueueMessagesParams) WithQueueID(queueID string) *GetVoicemailQueueMessagesParams {
	o.SetQueueID(queueID)
	return o
}

// SetQueueID adds the queueId to the get voicemail queue messages params
func (o *GetVoicemailQueueMessagesParams) SetQueueID(queueID string) {
	o.QueueID = queueID
}

// WriteToRequest writes these params to a swagger request
func (o *GetVoicemailQueueMessagesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.PageNumber != nil {

		// query param pageNumber
		var qrPageNumber int32
		if o.PageNumber != nil {
			qrPageNumber = *o.PageNumber
		}
		qPageNumber := swag.FormatInt32(qrPageNumber)
		if qPageNumber != "" {
			if err := r.SetQueryParam("pageNumber", qPageNumber); err != nil {
				return err
			}
		}

	}

	if o.PageSize != nil {

		// query param pageSize
		var qrPageSize int32
		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := swag.FormatInt32(qrPageSize)
		if qPageSize != "" {
			if err := r.SetQueryParam("pageSize", qPageSize); err != nil {
				return err
			}
		}

	}

	// path param queueId
	if err := r.SetPathParam("queueId", o.QueueID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
