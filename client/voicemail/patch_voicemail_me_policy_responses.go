// Code generated by go-swagger; DO NOT EDIT.

package voicemail

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PatchVoicemailMePolicyReader is a Reader for the PatchVoicemailMePolicy structure.
type PatchVoicemailMePolicyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchVoicemailMePolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchVoicemailMePolicyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchVoicemailMePolicyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchVoicemailMePolicyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchVoicemailMePolicyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchVoicemailMePolicyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPatchVoicemailMePolicyRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchVoicemailMePolicyUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPatchVoicemailMePolicyTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchVoicemailMePolicyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPatchVoicemailMePolicyServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPatchVoicemailMePolicyGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchVoicemailMePolicyOK creates a PatchVoicemailMePolicyOK with default headers values
func NewPatchVoicemailMePolicyOK() *PatchVoicemailMePolicyOK {
	return &PatchVoicemailMePolicyOK{}
}

/*PatchVoicemailMePolicyOK handles this case with default header values.

successful operation
*/
type PatchVoicemailMePolicyOK struct {
	Payload *models.VoicemailUserPolicy
}

func (o *PatchVoicemailMePolicyOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/voicemail/me/policy][%d] patchVoicemailMePolicyOK  %+v", 200, o.Payload)
}

func (o *PatchVoicemailMePolicyOK) GetPayload() *models.VoicemailUserPolicy {
	return o.Payload
}

func (o *PatchVoicemailMePolicyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VoicemailUserPolicy)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchVoicemailMePolicyBadRequest creates a PatchVoicemailMePolicyBadRequest with default headers values
func NewPatchVoicemailMePolicyBadRequest() *PatchVoicemailMePolicyBadRequest {
	return &PatchVoicemailMePolicyBadRequest{}
}

/*PatchVoicemailMePolicyBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PatchVoicemailMePolicyBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PatchVoicemailMePolicyBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/voicemail/me/policy][%d] patchVoicemailMePolicyBadRequest  %+v", 400, o.Payload)
}

func (o *PatchVoicemailMePolicyBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchVoicemailMePolicyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchVoicemailMePolicyUnauthorized creates a PatchVoicemailMePolicyUnauthorized with default headers values
func NewPatchVoicemailMePolicyUnauthorized() *PatchVoicemailMePolicyUnauthorized {
	return &PatchVoicemailMePolicyUnauthorized{}
}

/*PatchVoicemailMePolicyUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PatchVoicemailMePolicyUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PatchVoicemailMePolicyUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/voicemail/me/policy][%d] patchVoicemailMePolicyUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchVoicemailMePolicyUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchVoicemailMePolicyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchVoicemailMePolicyForbidden creates a PatchVoicemailMePolicyForbidden with default headers values
func NewPatchVoicemailMePolicyForbidden() *PatchVoicemailMePolicyForbidden {
	return &PatchVoicemailMePolicyForbidden{}
}

/*PatchVoicemailMePolicyForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PatchVoicemailMePolicyForbidden struct {
	Payload *models.ErrorBody
}

func (o *PatchVoicemailMePolicyForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/voicemail/me/policy][%d] patchVoicemailMePolicyForbidden  %+v", 403, o.Payload)
}

func (o *PatchVoicemailMePolicyForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchVoicemailMePolicyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchVoicemailMePolicyNotFound creates a PatchVoicemailMePolicyNotFound with default headers values
func NewPatchVoicemailMePolicyNotFound() *PatchVoicemailMePolicyNotFound {
	return &PatchVoicemailMePolicyNotFound{}
}

/*PatchVoicemailMePolicyNotFound handles this case with default header values.

The requested resource was not found.
*/
type PatchVoicemailMePolicyNotFound struct {
	Payload *models.ErrorBody
}

func (o *PatchVoicemailMePolicyNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/voicemail/me/policy][%d] patchVoicemailMePolicyNotFound  %+v", 404, o.Payload)
}

func (o *PatchVoicemailMePolicyNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchVoicemailMePolicyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchVoicemailMePolicyRequestEntityTooLarge creates a PatchVoicemailMePolicyRequestEntityTooLarge with default headers values
func NewPatchVoicemailMePolicyRequestEntityTooLarge() *PatchVoicemailMePolicyRequestEntityTooLarge {
	return &PatchVoicemailMePolicyRequestEntityTooLarge{}
}

/*PatchVoicemailMePolicyRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type PatchVoicemailMePolicyRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PatchVoicemailMePolicyRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/voicemail/me/policy][%d] patchVoicemailMePolicyRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchVoicemailMePolicyRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchVoicemailMePolicyRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchVoicemailMePolicyUnsupportedMediaType creates a PatchVoicemailMePolicyUnsupportedMediaType with default headers values
func NewPatchVoicemailMePolicyUnsupportedMediaType() *PatchVoicemailMePolicyUnsupportedMediaType {
	return &PatchVoicemailMePolicyUnsupportedMediaType{}
}

/*PatchVoicemailMePolicyUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PatchVoicemailMePolicyUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PatchVoicemailMePolicyUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/voicemail/me/policy][%d] patchVoicemailMePolicyUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchVoicemailMePolicyUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchVoicemailMePolicyUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchVoicemailMePolicyTooManyRequests creates a PatchVoicemailMePolicyTooManyRequests with default headers values
func NewPatchVoicemailMePolicyTooManyRequests() *PatchVoicemailMePolicyTooManyRequests {
	return &PatchVoicemailMePolicyTooManyRequests{}
}

/*PatchVoicemailMePolicyTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type PatchVoicemailMePolicyTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PatchVoicemailMePolicyTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/voicemail/me/policy][%d] patchVoicemailMePolicyTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchVoicemailMePolicyTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchVoicemailMePolicyTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchVoicemailMePolicyInternalServerError creates a PatchVoicemailMePolicyInternalServerError with default headers values
func NewPatchVoicemailMePolicyInternalServerError() *PatchVoicemailMePolicyInternalServerError {
	return &PatchVoicemailMePolicyInternalServerError{}
}

/*PatchVoicemailMePolicyInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PatchVoicemailMePolicyInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PatchVoicemailMePolicyInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/voicemail/me/policy][%d] patchVoicemailMePolicyInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchVoicemailMePolicyInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchVoicemailMePolicyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchVoicemailMePolicyServiceUnavailable creates a PatchVoicemailMePolicyServiceUnavailable with default headers values
func NewPatchVoicemailMePolicyServiceUnavailable() *PatchVoicemailMePolicyServiceUnavailable {
	return &PatchVoicemailMePolicyServiceUnavailable{}
}

/*PatchVoicemailMePolicyServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PatchVoicemailMePolicyServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PatchVoicemailMePolicyServiceUnavailable) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/voicemail/me/policy][%d] patchVoicemailMePolicyServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchVoicemailMePolicyServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchVoicemailMePolicyServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchVoicemailMePolicyGatewayTimeout creates a PatchVoicemailMePolicyGatewayTimeout with default headers values
func NewPatchVoicemailMePolicyGatewayTimeout() *PatchVoicemailMePolicyGatewayTimeout {
	return &PatchVoicemailMePolicyGatewayTimeout{}
}

/*PatchVoicemailMePolicyGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PatchVoicemailMePolicyGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PatchVoicemailMePolicyGatewayTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/voicemail/me/policy][%d] patchVoicemailMePolicyGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchVoicemailMePolicyGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchVoicemailMePolicyGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
