// Code generated by go-swagger; DO NOT EDIT.

package voicemail

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteVoicemailMessagesReader is a Reader for the DeleteVoicemailMessages structure.
type DeleteVoicemailMessagesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteVoicemailMessagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteVoicemailMessagesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteVoicemailMessagesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteVoicemailMessagesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteVoicemailMessagesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteVoicemailMessagesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteVoicemailMessagesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteVoicemailMessagesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteVoicemailMessagesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteVoicemailMessagesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteVoicemailMessagesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteVoicemailMessagesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteVoicemailMessagesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteVoicemailMessagesOK creates a DeleteVoicemailMessagesOK with default headers values
func NewDeleteVoicemailMessagesOK() *DeleteVoicemailMessagesOK {
	return &DeleteVoicemailMessagesOK{}
}

/*
DeleteVoicemailMessagesOK describes a response with status code 200, with default header values.

Operation was successful.
*/
type DeleteVoicemailMessagesOK struct {
}

// IsSuccess returns true when this delete voicemail messages o k response has a 2xx status code
func (o *DeleteVoicemailMessagesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete voicemail messages o k response has a 3xx status code
func (o *DeleteVoicemailMessagesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete voicemail messages o k response has a 4xx status code
func (o *DeleteVoicemailMessagesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete voicemail messages o k response has a 5xx status code
func (o *DeleteVoicemailMessagesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete voicemail messages o k response a status code equal to that given
func (o *DeleteVoicemailMessagesOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeleteVoicemailMessagesOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/voicemail/messages][%d] deleteVoicemailMessagesOK ", 200)
}

func (o *DeleteVoicemailMessagesOK) String() string {
	return fmt.Sprintf("[DELETE /api/v2/voicemail/messages][%d] deleteVoicemailMessagesOK ", 200)
}

func (o *DeleteVoicemailMessagesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteVoicemailMessagesBadRequest creates a DeleteVoicemailMessagesBadRequest with default headers values
func NewDeleteVoicemailMessagesBadRequest() *DeleteVoicemailMessagesBadRequest {
	return &DeleteVoicemailMessagesBadRequest{}
}

/*
DeleteVoicemailMessagesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteVoicemailMessagesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete voicemail messages bad request response has a 2xx status code
func (o *DeleteVoicemailMessagesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete voicemail messages bad request response has a 3xx status code
func (o *DeleteVoicemailMessagesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete voicemail messages bad request response has a 4xx status code
func (o *DeleteVoicemailMessagesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete voicemail messages bad request response has a 5xx status code
func (o *DeleteVoicemailMessagesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete voicemail messages bad request response a status code equal to that given
func (o *DeleteVoicemailMessagesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteVoicemailMessagesBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/voicemail/messages][%d] deleteVoicemailMessagesBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteVoicemailMessagesBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v2/voicemail/messages][%d] deleteVoicemailMessagesBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteVoicemailMessagesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteVoicemailMessagesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVoicemailMessagesUnauthorized creates a DeleteVoicemailMessagesUnauthorized with default headers values
func NewDeleteVoicemailMessagesUnauthorized() *DeleteVoicemailMessagesUnauthorized {
	return &DeleteVoicemailMessagesUnauthorized{}
}

/*
DeleteVoicemailMessagesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteVoicemailMessagesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete voicemail messages unauthorized response has a 2xx status code
func (o *DeleteVoicemailMessagesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete voicemail messages unauthorized response has a 3xx status code
func (o *DeleteVoicemailMessagesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete voicemail messages unauthorized response has a 4xx status code
func (o *DeleteVoicemailMessagesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete voicemail messages unauthorized response has a 5xx status code
func (o *DeleteVoicemailMessagesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete voicemail messages unauthorized response a status code equal to that given
func (o *DeleteVoicemailMessagesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteVoicemailMessagesUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/voicemail/messages][%d] deleteVoicemailMessagesUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteVoicemailMessagesUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/voicemail/messages][%d] deleteVoicemailMessagesUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteVoicemailMessagesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteVoicemailMessagesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVoicemailMessagesForbidden creates a DeleteVoicemailMessagesForbidden with default headers values
func NewDeleteVoicemailMessagesForbidden() *DeleteVoicemailMessagesForbidden {
	return &DeleteVoicemailMessagesForbidden{}
}

/*
DeleteVoicemailMessagesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type DeleteVoicemailMessagesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete voicemail messages forbidden response has a 2xx status code
func (o *DeleteVoicemailMessagesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete voicemail messages forbidden response has a 3xx status code
func (o *DeleteVoicemailMessagesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete voicemail messages forbidden response has a 4xx status code
func (o *DeleteVoicemailMessagesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete voicemail messages forbidden response has a 5xx status code
func (o *DeleteVoicemailMessagesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete voicemail messages forbidden response a status code equal to that given
func (o *DeleteVoicemailMessagesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteVoicemailMessagesForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/voicemail/messages][%d] deleteVoicemailMessagesForbidden  %+v", 403, o.Payload)
}

func (o *DeleteVoicemailMessagesForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/voicemail/messages][%d] deleteVoicemailMessagesForbidden  %+v", 403, o.Payload)
}

func (o *DeleteVoicemailMessagesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteVoicemailMessagesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVoicemailMessagesNotFound creates a DeleteVoicemailMessagesNotFound with default headers values
func NewDeleteVoicemailMessagesNotFound() *DeleteVoicemailMessagesNotFound {
	return &DeleteVoicemailMessagesNotFound{}
}

/*
DeleteVoicemailMessagesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type DeleteVoicemailMessagesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete voicemail messages not found response has a 2xx status code
func (o *DeleteVoicemailMessagesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete voicemail messages not found response has a 3xx status code
func (o *DeleteVoicemailMessagesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete voicemail messages not found response has a 4xx status code
func (o *DeleteVoicemailMessagesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete voicemail messages not found response has a 5xx status code
func (o *DeleteVoicemailMessagesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete voicemail messages not found response a status code equal to that given
func (o *DeleteVoicemailMessagesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteVoicemailMessagesNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/voicemail/messages][%d] deleteVoicemailMessagesNotFound  %+v", 404, o.Payload)
}

func (o *DeleteVoicemailMessagesNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v2/voicemail/messages][%d] deleteVoicemailMessagesNotFound  %+v", 404, o.Payload)
}

func (o *DeleteVoicemailMessagesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteVoicemailMessagesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVoicemailMessagesRequestTimeout creates a DeleteVoicemailMessagesRequestTimeout with default headers values
func NewDeleteVoicemailMessagesRequestTimeout() *DeleteVoicemailMessagesRequestTimeout {
	return &DeleteVoicemailMessagesRequestTimeout{}
}

/*
DeleteVoicemailMessagesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteVoicemailMessagesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete voicemail messages request timeout response has a 2xx status code
func (o *DeleteVoicemailMessagesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete voicemail messages request timeout response has a 3xx status code
func (o *DeleteVoicemailMessagesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete voicemail messages request timeout response has a 4xx status code
func (o *DeleteVoicemailMessagesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete voicemail messages request timeout response has a 5xx status code
func (o *DeleteVoicemailMessagesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete voicemail messages request timeout response a status code equal to that given
func (o *DeleteVoicemailMessagesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *DeleteVoicemailMessagesRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/voicemail/messages][%d] deleteVoicemailMessagesRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteVoicemailMessagesRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/voicemail/messages][%d] deleteVoicemailMessagesRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteVoicemailMessagesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteVoicemailMessagesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVoicemailMessagesRequestEntityTooLarge creates a DeleteVoicemailMessagesRequestEntityTooLarge with default headers values
func NewDeleteVoicemailMessagesRequestEntityTooLarge() *DeleteVoicemailMessagesRequestEntityTooLarge {
	return &DeleteVoicemailMessagesRequestEntityTooLarge{}
}

/*
DeleteVoicemailMessagesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type DeleteVoicemailMessagesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete voicemail messages request entity too large response has a 2xx status code
func (o *DeleteVoicemailMessagesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete voicemail messages request entity too large response has a 3xx status code
func (o *DeleteVoicemailMessagesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete voicemail messages request entity too large response has a 4xx status code
func (o *DeleteVoicemailMessagesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete voicemail messages request entity too large response has a 5xx status code
func (o *DeleteVoicemailMessagesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this delete voicemail messages request entity too large response a status code equal to that given
func (o *DeleteVoicemailMessagesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *DeleteVoicemailMessagesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/voicemail/messages][%d] deleteVoicemailMessagesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteVoicemailMessagesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[DELETE /api/v2/voicemail/messages][%d] deleteVoicemailMessagesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteVoicemailMessagesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteVoicemailMessagesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVoicemailMessagesUnsupportedMediaType creates a DeleteVoicemailMessagesUnsupportedMediaType with default headers values
func NewDeleteVoicemailMessagesUnsupportedMediaType() *DeleteVoicemailMessagesUnsupportedMediaType {
	return &DeleteVoicemailMessagesUnsupportedMediaType{}
}

/*
DeleteVoicemailMessagesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteVoicemailMessagesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete voicemail messages unsupported media type response has a 2xx status code
func (o *DeleteVoicemailMessagesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete voicemail messages unsupported media type response has a 3xx status code
func (o *DeleteVoicemailMessagesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete voicemail messages unsupported media type response has a 4xx status code
func (o *DeleteVoicemailMessagesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete voicemail messages unsupported media type response has a 5xx status code
func (o *DeleteVoicemailMessagesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this delete voicemail messages unsupported media type response a status code equal to that given
func (o *DeleteVoicemailMessagesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *DeleteVoicemailMessagesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/voicemail/messages][%d] deleteVoicemailMessagesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteVoicemailMessagesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[DELETE /api/v2/voicemail/messages][%d] deleteVoicemailMessagesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteVoicemailMessagesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteVoicemailMessagesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVoicemailMessagesTooManyRequests creates a DeleteVoicemailMessagesTooManyRequests with default headers values
func NewDeleteVoicemailMessagesTooManyRequests() *DeleteVoicemailMessagesTooManyRequests {
	return &DeleteVoicemailMessagesTooManyRequests{}
}

/*
DeleteVoicemailMessagesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteVoicemailMessagesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete voicemail messages too many requests response has a 2xx status code
func (o *DeleteVoicemailMessagesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete voicemail messages too many requests response has a 3xx status code
func (o *DeleteVoicemailMessagesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete voicemail messages too many requests response has a 4xx status code
func (o *DeleteVoicemailMessagesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete voicemail messages too many requests response has a 5xx status code
func (o *DeleteVoicemailMessagesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete voicemail messages too many requests response a status code equal to that given
func (o *DeleteVoicemailMessagesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteVoicemailMessagesTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/voicemail/messages][%d] deleteVoicemailMessagesTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteVoicemailMessagesTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /api/v2/voicemail/messages][%d] deleteVoicemailMessagesTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteVoicemailMessagesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteVoicemailMessagesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVoicemailMessagesInternalServerError creates a DeleteVoicemailMessagesInternalServerError with default headers values
func NewDeleteVoicemailMessagesInternalServerError() *DeleteVoicemailMessagesInternalServerError {
	return &DeleteVoicemailMessagesInternalServerError{}
}

/*
DeleteVoicemailMessagesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteVoicemailMessagesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete voicemail messages internal server error response has a 2xx status code
func (o *DeleteVoicemailMessagesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete voicemail messages internal server error response has a 3xx status code
func (o *DeleteVoicemailMessagesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete voicemail messages internal server error response has a 4xx status code
func (o *DeleteVoicemailMessagesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete voicemail messages internal server error response has a 5xx status code
func (o *DeleteVoicemailMessagesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete voicemail messages internal server error response a status code equal to that given
func (o *DeleteVoicemailMessagesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteVoicemailMessagesInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/voicemail/messages][%d] deleteVoicemailMessagesInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteVoicemailMessagesInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v2/voicemail/messages][%d] deleteVoicemailMessagesInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteVoicemailMessagesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteVoicemailMessagesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVoicemailMessagesServiceUnavailable creates a DeleteVoicemailMessagesServiceUnavailable with default headers values
func NewDeleteVoicemailMessagesServiceUnavailable() *DeleteVoicemailMessagesServiceUnavailable {
	return &DeleteVoicemailMessagesServiceUnavailable{}
}

/*
DeleteVoicemailMessagesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteVoicemailMessagesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete voicemail messages service unavailable response has a 2xx status code
func (o *DeleteVoicemailMessagesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete voicemail messages service unavailable response has a 3xx status code
func (o *DeleteVoicemailMessagesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete voicemail messages service unavailable response has a 4xx status code
func (o *DeleteVoicemailMessagesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete voicemail messages service unavailable response has a 5xx status code
func (o *DeleteVoicemailMessagesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete voicemail messages service unavailable response a status code equal to that given
func (o *DeleteVoicemailMessagesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *DeleteVoicemailMessagesServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/voicemail/messages][%d] deleteVoicemailMessagesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteVoicemailMessagesServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /api/v2/voicemail/messages][%d] deleteVoicemailMessagesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteVoicemailMessagesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteVoicemailMessagesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVoicemailMessagesGatewayTimeout creates a DeleteVoicemailMessagesGatewayTimeout with default headers values
func NewDeleteVoicemailMessagesGatewayTimeout() *DeleteVoicemailMessagesGatewayTimeout {
	return &DeleteVoicemailMessagesGatewayTimeout{}
}

/*
DeleteVoicemailMessagesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type DeleteVoicemailMessagesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete voicemail messages gateway timeout response has a 2xx status code
func (o *DeleteVoicemailMessagesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete voicemail messages gateway timeout response has a 3xx status code
func (o *DeleteVoicemailMessagesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete voicemail messages gateway timeout response has a 4xx status code
func (o *DeleteVoicemailMessagesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete voicemail messages gateway timeout response has a 5xx status code
func (o *DeleteVoicemailMessagesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this delete voicemail messages gateway timeout response a status code equal to that given
func (o *DeleteVoicemailMessagesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *DeleteVoicemailMessagesGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/voicemail/messages][%d] deleteVoicemailMessagesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteVoicemailMessagesGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/voicemail/messages][%d] deleteVoicemailMessagesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteVoicemailMessagesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteVoicemailMessagesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
