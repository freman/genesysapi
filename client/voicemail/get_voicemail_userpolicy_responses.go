// Code generated by go-swagger; DO NOT EDIT.

package voicemail

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetVoicemailUserpolicyReader is a Reader for the GetVoicemailUserpolicy structure.
type GetVoicemailUserpolicyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVoicemailUserpolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVoicemailUserpolicyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetVoicemailUserpolicyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetVoicemailUserpolicyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetVoicemailUserpolicyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetVoicemailUserpolicyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetVoicemailUserpolicyRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetVoicemailUserpolicyRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetVoicemailUserpolicyUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetVoicemailUserpolicyTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetVoicemailUserpolicyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetVoicemailUserpolicyServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetVoicemailUserpolicyGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetVoicemailUserpolicyOK creates a GetVoicemailUserpolicyOK with default headers values
func NewGetVoicemailUserpolicyOK() *GetVoicemailUserpolicyOK {
	return &GetVoicemailUserpolicyOK{}
}

/*
GetVoicemailUserpolicyOK describes a response with status code 200, with default header values.

successful operation
*/
type GetVoicemailUserpolicyOK struct {
	Payload *models.VoicemailUserPolicy
}

// IsSuccess returns true when this get voicemail userpolicy o k response has a 2xx status code
func (o *GetVoicemailUserpolicyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get voicemail userpolicy o k response has a 3xx status code
func (o *GetVoicemailUserpolicyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get voicemail userpolicy o k response has a 4xx status code
func (o *GetVoicemailUserpolicyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get voicemail userpolicy o k response has a 5xx status code
func (o *GetVoicemailUserpolicyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get voicemail userpolicy o k response a status code equal to that given
func (o *GetVoicemailUserpolicyOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetVoicemailUserpolicyOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/voicemail/userpolicies/{userId}][%d] getVoicemailUserpolicyOK  %+v", 200, o.Payload)
}

func (o *GetVoicemailUserpolicyOK) String() string {
	return fmt.Sprintf("[GET /api/v2/voicemail/userpolicies/{userId}][%d] getVoicemailUserpolicyOK  %+v", 200, o.Payload)
}

func (o *GetVoicemailUserpolicyOK) GetPayload() *models.VoicemailUserPolicy {
	return o.Payload
}

func (o *GetVoicemailUserpolicyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VoicemailUserPolicy)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVoicemailUserpolicyBadRequest creates a GetVoicemailUserpolicyBadRequest with default headers values
func NewGetVoicemailUserpolicyBadRequest() *GetVoicemailUserpolicyBadRequest {
	return &GetVoicemailUserpolicyBadRequest{}
}

/*
GetVoicemailUserpolicyBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetVoicemailUserpolicyBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get voicemail userpolicy bad request response has a 2xx status code
func (o *GetVoicemailUserpolicyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get voicemail userpolicy bad request response has a 3xx status code
func (o *GetVoicemailUserpolicyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get voicemail userpolicy bad request response has a 4xx status code
func (o *GetVoicemailUserpolicyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get voicemail userpolicy bad request response has a 5xx status code
func (o *GetVoicemailUserpolicyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get voicemail userpolicy bad request response a status code equal to that given
func (o *GetVoicemailUserpolicyBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetVoicemailUserpolicyBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/voicemail/userpolicies/{userId}][%d] getVoicemailUserpolicyBadRequest  %+v", 400, o.Payload)
}

func (o *GetVoicemailUserpolicyBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/voicemail/userpolicies/{userId}][%d] getVoicemailUserpolicyBadRequest  %+v", 400, o.Payload)
}

func (o *GetVoicemailUserpolicyBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVoicemailUserpolicyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVoicemailUserpolicyUnauthorized creates a GetVoicemailUserpolicyUnauthorized with default headers values
func NewGetVoicemailUserpolicyUnauthorized() *GetVoicemailUserpolicyUnauthorized {
	return &GetVoicemailUserpolicyUnauthorized{}
}

/*
GetVoicemailUserpolicyUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetVoicemailUserpolicyUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get voicemail userpolicy unauthorized response has a 2xx status code
func (o *GetVoicemailUserpolicyUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get voicemail userpolicy unauthorized response has a 3xx status code
func (o *GetVoicemailUserpolicyUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get voicemail userpolicy unauthorized response has a 4xx status code
func (o *GetVoicemailUserpolicyUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get voicemail userpolicy unauthorized response has a 5xx status code
func (o *GetVoicemailUserpolicyUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get voicemail userpolicy unauthorized response a status code equal to that given
func (o *GetVoicemailUserpolicyUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetVoicemailUserpolicyUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/voicemail/userpolicies/{userId}][%d] getVoicemailUserpolicyUnauthorized  %+v", 401, o.Payload)
}

func (o *GetVoicemailUserpolicyUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/voicemail/userpolicies/{userId}][%d] getVoicemailUserpolicyUnauthorized  %+v", 401, o.Payload)
}

func (o *GetVoicemailUserpolicyUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVoicemailUserpolicyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVoicemailUserpolicyForbidden creates a GetVoicemailUserpolicyForbidden with default headers values
func NewGetVoicemailUserpolicyForbidden() *GetVoicemailUserpolicyForbidden {
	return &GetVoicemailUserpolicyForbidden{}
}

/*
GetVoicemailUserpolicyForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetVoicemailUserpolicyForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get voicemail userpolicy forbidden response has a 2xx status code
func (o *GetVoicemailUserpolicyForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get voicemail userpolicy forbidden response has a 3xx status code
func (o *GetVoicemailUserpolicyForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get voicemail userpolicy forbidden response has a 4xx status code
func (o *GetVoicemailUserpolicyForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get voicemail userpolicy forbidden response has a 5xx status code
func (o *GetVoicemailUserpolicyForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get voicemail userpolicy forbidden response a status code equal to that given
func (o *GetVoicemailUserpolicyForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetVoicemailUserpolicyForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/voicemail/userpolicies/{userId}][%d] getVoicemailUserpolicyForbidden  %+v", 403, o.Payload)
}

func (o *GetVoicemailUserpolicyForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/voicemail/userpolicies/{userId}][%d] getVoicemailUserpolicyForbidden  %+v", 403, o.Payload)
}

func (o *GetVoicemailUserpolicyForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVoicemailUserpolicyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVoicemailUserpolicyNotFound creates a GetVoicemailUserpolicyNotFound with default headers values
func NewGetVoicemailUserpolicyNotFound() *GetVoicemailUserpolicyNotFound {
	return &GetVoicemailUserpolicyNotFound{}
}

/*
GetVoicemailUserpolicyNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetVoicemailUserpolicyNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get voicemail userpolicy not found response has a 2xx status code
func (o *GetVoicemailUserpolicyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get voicemail userpolicy not found response has a 3xx status code
func (o *GetVoicemailUserpolicyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get voicemail userpolicy not found response has a 4xx status code
func (o *GetVoicemailUserpolicyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get voicemail userpolicy not found response has a 5xx status code
func (o *GetVoicemailUserpolicyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get voicemail userpolicy not found response a status code equal to that given
func (o *GetVoicemailUserpolicyNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetVoicemailUserpolicyNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/voicemail/userpolicies/{userId}][%d] getVoicemailUserpolicyNotFound  %+v", 404, o.Payload)
}

func (o *GetVoicemailUserpolicyNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/voicemail/userpolicies/{userId}][%d] getVoicemailUserpolicyNotFound  %+v", 404, o.Payload)
}

func (o *GetVoicemailUserpolicyNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVoicemailUserpolicyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVoicemailUserpolicyRequestTimeout creates a GetVoicemailUserpolicyRequestTimeout with default headers values
func NewGetVoicemailUserpolicyRequestTimeout() *GetVoicemailUserpolicyRequestTimeout {
	return &GetVoicemailUserpolicyRequestTimeout{}
}

/*
GetVoicemailUserpolicyRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetVoicemailUserpolicyRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get voicemail userpolicy request timeout response has a 2xx status code
func (o *GetVoicemailUserpolicyRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get voicemail userpolicy request timeout response has a 3xx status code
func (o *GetVoicemailUserpolicyRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get voicemail userpolicy request timeout response has a 4xx status code
func (o *GetVoicemailUserpolicyRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get voicemail userpolicy request timeout response has a 5xx status code
func (o *GetVoicemailUserpolicyRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get voicemail userpolicy request timeout response a status code equal to that given
func (o *GetVoicemailUserpolicyRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetVoicemailUserpolicyRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/voicemail/userpolicies/{userId}][%d] getVoicemailUserpolicyRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetVoicemailUserpolicyRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/voicemail/userpolicies/{userId}][%d] getVoicemailUserpolicyRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetVoicemailUserpolicyRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVoicemailUserpolicyRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVoicemailUserpolicyRequestEntityTooLarge creates a GetVoicemailUserpolicyRequestEntityTooLarge with default headers values
func NewGetVoicemailUserpolicyRequestEntityTooLarge() *GetVoicemailUserpolicyRequestEntityTooLarge {
	return &GetVoicemailUserpolicyRequestEntityTooLarge{}
}

/*
GetVoicemailUserpolicyRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetVoicemailUserpolicyRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get voicemail userpolicy request entity too large response has a 2xx status code
func (o *GetVoicemailUserpolicyRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get voicemail userpolicy request entity too large response has a 3xx status code
func (o *GetVoicemailUserpolicyRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get voicemail userpolicy request entity too large response has a 4xx status code
func (o *GetVoicemailUserpolicyRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get voicemail userpolicy request entity too large response has a 5xx status code
func (o *GetVoicemailUserpolicyRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get voicemail userpolicy request entity too large response a status code equal to that given
func (o *GetVoicemailUserpolicyRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetVoicemailUserpolicyRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/voicemail/userpolicies/{userId}][%d] getVoicemailUserpolicyRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetVoicemailUserpolicyRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/voicemail/userpolicies/{userId}][%d] getVoicemailUserpolicyRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetVoicemailUserpolicyRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVoicemailUserpolicyRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVoicemailUserpolicyUnsupportedMediaType creates a GetVoicemailUserpolicyUnsupportedMediaType with default headers values
func NewGetVoicemailUserpolicyUnsupportedMediaType() *GetVoicemailUserpolicyUnsupportedMediaType {
	return &GetVoicemailUserpolicyUnsupportedMediaType{}
}

/*
GetVoicemailUserpolicyUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetVoicemailUserpolicyUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get voicemail userpolicy unsupported media type response has a 2xx status code
func (o *GetVoicemailUserpolicyUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get voicemail userpolicy unsupported media type response has a 3xx status code
func (o *GetVoicemailUserpolicyUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get voicemail userpolicy unsupported media type response has a 4xx status code
func (o *GetVoicemailUserpolicyUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get voicemail userpolicy unsupported media type response has a 5xx status code
func (o *GetVoicemailUserpolicyUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get voicemail userpolicy unsupported media type response a status code equal to that given
func (o *GetVoicemailUserpolicyUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetVoicemailUserpolicyUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/voicemail/userpolicies/{userId}][%d] getVoicemailUserpolicyUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetVoicemailUserpolicyUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/voicemail/userpolicies/{userId}][%d] getVoicemailUserpolicyUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetVoicemailUserpolicyUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVoicemailUserpolicyUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVoicemailUserpolicyTooManyRequests creates a GetVoicemailUserpolicyTooManyRequests with default headers values
func NewGetVoicemailUserpolicyTooManyRequests() *GetVoicemailUserpolicyTooManyRequests {
	return &GetVoicemailUserpolicyTooManyRequests{}
}

/*
GetVoicemailUserpolicyTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetVoicemailUserpolicyTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get voicemail userpolicy too many requests response has a 2xx status code
func (o *GetVoicemailUserpolicyTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get voicemail userpolicy too many requests response has a 3xx status code
func (o *GetVoicemailUserpolicyTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get voicemail userpolicy too many requests response has a 4xx status code
func (o *GetVoicemailUserpolicyTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get voicemail userpolicy too many requests response has a 5xx status code
func (o *GetVoicemailUserpolicyTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get voicemail userpolicy too many requests response a status code equal to that given
func (o *GetVoicemailUserpolicyTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetVoicemailUserpolicyTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/voicemail/userpolicies/{userId}][%d] getVoicemailUserpolicyTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetVoicemailUserpolicyTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/voicemail/userpolicies/{userId}][%d] getVoicemailUserpolicyTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetVoicemailUserpolicyTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVoicemailUserpolicyTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVoicemailUserpolicyInternalServerError creates a GetVoicemailUserpolicyInternalServerError with default headers values
func NewGetVoicemailUserpolicyInternalServerError() *GetVoicemailUserpolicyInternalServerError {
	return &GetVoicemailUserpolicyInternalServerError{}
}

/*
GetVoicemailUserpolicyInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetVoicemailUserpolicyInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get voicemail userpolicy internal server error response has a 2xx status code
func (o *GetVoicemailUserpolicyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get voicemail userpolicy internal server error response has a 3xx status code
func (o *GetVoicemailUserpolicyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get voicemail userpolicy internal server error response has a 4xx status code
func (o *GetVoicemailUserpolicyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get voicemail userpolicy internal server error response has a 5xx status code
func (o *GetVoicemailUserpolicyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get voicemail userpolicy internal server error response a status code equal to that given
func (o *GetVoicemailUserpolicyInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetVoicemailUserpolicyInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/voicemail/userpolicies/{userId}][%d] getVoicemailUserpolicyInternalServerError  %+v", 500, o.Payload)
}

func (o *GetVoicemailUserpolicyInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/voicemail/userpolicies/{userId}][%d] getVoicemailUserpolicyInternalServerError  %+v", 500, o.Payload)
}

func (o *GetVoicemailUserpolicyInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVoicemailUserpolicyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVoicemailUserpolicyServiceUnavailable creates a GetVoicemailUserpolicyServiceUnavailable with default headers values
func NewGetVoicemailUserpolicyServiceUnavailable() *GetVoicemailUserpolicyServiceUnavailable {
	return &GetVoicemailUserpolicyServiceUnavailable{}
}

/*
GetVoicemailUserpolicyServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetVoicemailUserpolicyServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get voicemail userpolicy service unavailable response has a 2xx status code
func (o *GetVoicemailUserpolicyServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get voicemail userpolicy service unavailable response has a 3xx status code
func (o *GetVoicemailUserpolicyServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get voicemail userpolicy service unavailable response has a 4xx status code
func (o *GetVoicemailUserpolicyServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get voicemail userpolicy service unavailable response has a 5xx status code
func (o *GetVoicemailUserpolicyServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get voicemail userpolicy service unavailable response a status code equal to that given
func (o *GetVoicemailUserpolicyServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetVoicemailUserpolicyServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/voicemail/userpolicies/{userId}][%d] getVoicemailUserpolicyServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetVoicemailUserpolicyServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/voicemail/userpolicies/{userId}][%d] getVoicemailUserpolicyServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetVoicemailUserpolicyServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVoicemailUserpolicyServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVoicemailUserpolicyGatewayTimeout creates a GetVoicemailUserpolicyGatewayTimeout with default headers values
func NewGetVoicemailUserpolicyGatewayTimeout() *GetVoicemailUserpolicyGatewayTimeout {
	return &GetVoicemailUserpolicyGatewayTimeout{}
}

/*
GetVoicemailUserpolicyGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetVoicemailUserpolicyGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get voicemail userpolicy gateway timeout response has a 2xx status code
func (o *GetVoicemailUserpolicyGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get voicemail userpolicy gateway timeout response has a 3xx status code
func (o *GetVoicemailUserpolicyGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get voicemail userpolicy gateway timeout response has a 4xx status code
func (o *GetVoicemailUserpolicyGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get voicemail userpolicy gateway timeout response has a 5xx status code
func (o *GetVoicemailUserpolicyGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get voicemail userpolicy gateway timeout response a status code equal to that given
func (o *GetVoicemailUserpolicyGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetVoicemailUserpolicyGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/voicemail/userpolicies/{userId}][%d] getVoicemailUserpolicyGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetVoicemailUserpolicyGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/voicemail/userpolicies/{userId}][%d] getVoicemailUserpolicyGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetVoicemailUserpolicyGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVoicemailUserpolicyGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
