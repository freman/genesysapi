// Code generated by go-swagger; DO NOT EDIT.

package voicemail

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostVoicemailMessagesReader is a Reader for the PostVoicemailMessages structure.
type PostVoicemailMessagesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostVoicemailMessagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostVoicemailMessagesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostVoicemailMessagesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostVoicemailMessagesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostVoicemailMessagesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostVoicemailMessagesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostVoicemailMessagesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostVoicemailMessagesConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostVoicemailMessagesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostVoicemailMessagesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostVoicemailMessagesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostVoicemailMessagesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostVoicemailMessagesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostVoicemailMessagesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostVoicemailMessagesOK creates a PostVoicemailMessagesOK with default headers values
func NewPostVoicemailMessagesOK() *PostVoicemailMessagesOK {
	return &PostVoicemailMessagesOK{}
}

/*
PostVoicemailMessagesOK describes a response with status code 200, with default header values.

successful operation
*/
type PostVoicemailMessagesOK struct {
	Payload *models.VoicemailMessage
}

// IsSuccess returns true when this post voicemail messages o k response has a 2xx status code
func (o *PostVoicemailMessagesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post voicemail messages o k response has a 3xx status code
func (o *PostVoicemailMessagesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post voicemail messages o k response has a 4xx status code
func (o *PostVoicemailMessagesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post voicemail messages o k response has a 5xx status code
func (o *PostVoicemailMessagesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post voicemail messages o k response a status code equal to that given
func (o *PostVoicemailMessagesOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostVoicemailMessagesOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/voicemail/messages][%d] postVoicemailMessagesOK  %+v", 200, o.Payload)
}

func (o *PostVoicemailMessagesOK) String() string {
	return fmt.Sprintf("[POST /api/v2/voicemail/messages][%d] postVoicemailMessagesOK  %+v", 200, o.Payload)
}

func (o *PostVoicemailMessagesOK) GetPayload() *models.VoicemailMessage {
	return o.Payload
}

func (o *PostVoicemailMessagesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VoicemailMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostVoicemailMessagesBadRequest creates a PostVoicemailMessagesBadRequest with default headers values
func NewPostVoicemailMessagesBadRequest() *PostVoicemailMessagesBadRequest {
	return &PostVoicemailMessagesBadRequest{}
}

/*
PostVoicemailMessagesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostVoicemailMessagesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post voicemail messages bad request response has a 2xx status code
func (o *PostVoicemailMessagesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post voicemail messages bad request response has a 3xx status code
func (o *PostVoicemailMessagesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post voicemail messages bad request response has a 4xx status code
func (o *PostVoicemailMessagesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post voicemail messages bad request response has a 5xx status code
func (o *PostVoicemailMessagesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post voicemail messages bad request response a status code equal to that given
func (o *PostVoicemailMessagesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostVoicemailMessagesBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/voicemail/messages][%d] postVoicemailMessagesBadRequest  %+v", 400, o.Payload)
}

func (o *PostVoicemailMessagesBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/voicemail/messages][%d] postVoicemailMessagesBadRequest  %+v", 400, o.Payload)
}

func (o *PostVoicemailMessagesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostVoicemailMessagesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostVoicemailMessagesUnauthorized creates a PostVoicemailMessagesUnauthorized with default headers values
func NewPostVoicemailMessagesUnauthorized() *PostVoicemailMessagesUnauthorized {
	return &PostVoicemailMessagesUnauthorized{}
}

/*
PostVoicemailMessagesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostVoicemailMessagesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post voicemail messages unauthorized response has a 2xx status code
func (o *PostVoicemailMessagesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post voicemail messages unauthorized response has a 3xx status code
func (o *PostVoicemailMessagesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post voicemail messages unauthorized response has a 4xx status code
func (o *PostVoicemailMessagesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post voicemail messages unauthorized response has a 5xx status code
func (o *PostVoicemailMessagesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post voicemail messages unauthorized response a status code equal to that given
func (o *PostVoicemailMessagesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostVoicemailMessagesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/voicemail/messages][%d] postVoicemailMessagesUnauthorized  %+v", 401, o.Payload)
}

func (o *PostVoicemailMessagesUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/voicemail/messages][%d] postVoicemailMessagesUnauthorized  %+v", 401, o.Payload)
}

func (o *PostVoicemailMessagesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostVoicemailMessagesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostVoicemailMessagesForbidden creates a PostVoicemailMessagesForbidden with default headers values
func NewPostVoicemailMessagesForbidden() *PostVoicemailMessagesForbidden {
	return &PostVoicemailMessagesForbidden{}
}

/*
PostVoicemailMessagesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostVoicemailMessagesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post voicemail messages forbidden response has a 2xx status code
func (o *PostVoicemailMessagesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post voicemail messages forbidden response has a 3xx status code
func (o *PostVoicemailMessagesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post voicemail messages forbidden response has a 4xx status code
func (o *PostVoicemailMessagesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post voicemail messages forbidden response has a 5xx status code
func (o *PostVoicemailMessagesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post voicemail messages forbidden response a status code equal to that given
func (o *PostVoicemailMessagesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostVoicemailMessagesForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/voicemail/messages][%d] postVoicemailMessagesForbidden  %+v", 403, o.Payload)
}

func (o *PostVoicemailMessagesForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/voicemail/messages][%d] postVoicemailMessagesForbidden  %+v", 403, o.Payload)
}

func (o *PostVoicemailMessagesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostVoicemailMessagesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostVoicemailMessagesNotFound creates a PostVoicemailMessagesNotFound with default headers values
func NewPostVoicemailMessagesNotFound() *PostVoicemailMessagesNotFound {
	return &PostVoicemailMessagesNotFound{}
}

/*
PostVoicemailMessagesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostVoicemailMessagesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post voicemail messages not found response has a 2xx status code
func (o *PostVoicemailMessagesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post voicemail messages not found response has a 3xx status code
func (o *PostVoicemailMessagesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post voicemail messages not found response has a 4xx status code
func (o *PostVoicemailMessagesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post voicemail messages not found response has a 5xx status code
func (o *PostVoicemailMessagesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post voicemail messages not found response a status code equal to that given
func (o *PostVoicemailMessagesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostVoicemailMessagesNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/voicemail/messages][%d] postVoicemailMessagesNotFound  %+v", 404, o.Payload)
}

func (o *PostVoicemailMessagesNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/voicemail/messages][%d] postVoicemailMessagesNotFound  %+v", 404, o.Payload)
}

func (o *PostVoicemailMessagesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostVoicemailMessagesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostVoicemailMessagesRequestTimeout creates a PostVoicemailMessagesRequestTimeout with default headers values
func NewPostVoicemailMessagesRequestTimeout() *PostVoicemailMessagesRequestTimeout {
	return &PostVoicemailMessagesRequestTimeout{}
}

/*
PostVoicemailMessagesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostVoicemailMessagesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post voicemail messages request timeout response has a 2xx status code
func (o *PostVoicemailMessagesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post voicemail messages request timeout response has a 3xx status code
func (o *PostVoicemailMessagesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post voicemail messages request timeout response has a 4xx status code
func (o *PostVoicemailMessagesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post voicemail messages request timeout response has a 5xx status code
func (o *PostVoicemailMessagesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post voicemail messages request timeout response a status code equal to that given
func (o *PostVoicemailMessagesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostVoicemailMessagesRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/voicemail/messages][%d] postVoicemailMessagesRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostVoicemailMessagesRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/voicemail/messages][%d] postVoicemailMessagesRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostVoicemailMessagesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostVoicemailMessagesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostVoicemailMessagesConflict creates a PostVoicemailMessagesConflict with default headers values
func NewPostVoicemailMessagesConflict() *PostVoicemailMessagesConflict {
	return &PostVoicemailMessagesConflict{}
}

/*
PostVoicemailMessagesConflict describes a response with status code 409, with default header values.

Conflict
*/
type PostVoicemailMessagesConflict struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post voicemail messages conflict response has a 2xx status code
func (o *PostVoicemailMessagesConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post voicemail messages conflict response has a 3xx status code
func (o *PostVoicemailMessagesConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post voicemail messages conflict response has a 4xx status code
func (o *PostVoicemailMessagesConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this post voicemail messages conflict response has a 5xx status code
func (o *PostVoicemailMessagesConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this post voicemail messages conflict response a status code equal to that given
func (o *PostVoicemailMessagesConflict) IsCode(code int) bool {
	return code == 409
}

func (o *PostVoicemailMessagesConflict) Error() string {
	return fmt.Sprintf("[POST /api/v2/voicemail/messages][%d] postVoicemailMessagesConflict  %+v", 409, o.Payload)
}

func (o *PostVoicemailMessagesConflict) String() string {
	return fmt.Sprintf("[POST /api/v2/voicemail/messages][%d] postVoicemailMessagesConflict  %+v", 409, o.Payload)
}

func (o *PostVoicemailMessagesConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostVoicemailMessagesConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostVoicemailMessagesRequestEntityTooLarge creates a PostVoicemailMessagesRequestEntityTooLarge with default headers values
func NewPostVoicemailMessagesRequestEntityTooLarge() *PostVoicemailMessagesRequestEntityTooLarge {
	return &PostVoicemailMessagesRequestEntityTooLarge{}
}

/*
PostVoicemailMessagesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostVoicemailMessagesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post voicemail messages request entity too large response has a 2xx status code
func (o *PostVoicemailMessagesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post voicemail messages request entity too large response has a 3xx status code
func (o *PostVoicemailMessagesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post voicemail messages request entity too large response has a 4xx status code
func (o *PostVoicemailMessagesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post voicemail messages request entity too large response has a 5xx status code
func (o *PostVoicemailMessagesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post voicemail messages request entity too large response a status code equal to that given
func (o *PostVoicemailMessagesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostVoicemailMessagesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/voicemail/messages][%d] postVoicemailMessagesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostVoicemailMessagesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/voicemail/messages][%d] postVoicemailMessagesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostVoicemailMessagesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostVoicemailMessagesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostVoicemailMessagesUnsupportedMediaType creates a PostVoicemailMessagesUnsupportedMediaType with default headers values
func NewPostVoicemailMessagesUnsupportedMediaType() *PostVoicemailMessagesUnsupportedMediaType {
	return &PostVoicemailMessagesUnsupportedMediaType{}
}

/*
PostVoicemailMessagesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostVoicemailMessagesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post voicemail messages unsupported media type response has a 2xx status code
func (o *PostVoicemailMessagesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post voicemail messages unsupported media type response has a 3xx status code
func (o *PostVoicemailMessagesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post voicemail messages unsupported media type response has a 4xx status code
func (o *PostVoicemailMessagesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post voicemail messages unsupported media type response has a 5xx status code
func (o *PostVoicemailMessagesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post voicemail messages unsupported media type response a status code equal to that given
func (o *PostVoicemailMessagesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostVoicemailMessagesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/voicemail/messages][%d] postVoicemailMessagesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostVoicemailMessagesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/voicemail/messages][%d] postVoicemailMessagesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostVoicemailMessagesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostVoicemailMessagesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostVoicemailMessagesTooManyRequests creates a PostVoicemailMessagesTooManyRequests with default headers values
func NewPostVoicemailMessagesTooManyRequests() *PostVoicemailMessagesTooManyRequests {
	return &PostVoicemailMessagesTooManyRequests{}
}

/*
PostVoicemailMessagesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostVoicemailMessagesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post voicemail messages too many requests response has a 2xx status code
func (o *PostVoicemailMessagesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post voicemail messages too many requests response has a 3xx status code
func (o *PostVoicemailMessagesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post voicemail messages too many requests response has a 4xx status code
func (o *PostVoicemailMessagesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post voicemail messages too many requests response has a 5xx status code
func (o *PostVoicemailMessagesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post voicemail messages too many requests response a status code equal to that given
func (o *PostVoicemailMessagesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostVoicemailMessagesTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/voicemail/messages][%d] postVoicemailMessagesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostVoicemailMessagesTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/voicemail/messages][%d] postVoicemailMessagesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostVoicemailMessagesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostVoicemailMessagesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostVoicemailMessagesInternalServerError creates a PostVoicemailMessagesInternalServerError with default headers values
func NewPostVoicemailMessagesInternalServerError() *PostVoicemailMessagesInternalServerError {
	return &PostVoicemailMessagesInternalServerError{}
}

/*
PostVoicemailMessagesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostVoicemailMessagesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post voicemail messages internal server error response has a 2xx status code
func (o *PostVoicemailMessagesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post voicemail messages internal server error response has a 3xx status code
func (o *PostVoicemailMessagesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post voicemail messages internal server error response has a 4xx status code
func (o *PostVoicemailMessagesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post voicemail messages internal server error response has a 5xx status code
func (o *PostVoicemailMessagesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post voicemail messages internal server error response a status code equal to that given
func (o *PostVoicemailMessagesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostVoicemailMessagesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/voicemail/messages][%d] postVoicemailMessagesInternalServerError  %+v", 500, o.Payload)
}

func (o *PostVoicemailMessagesInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/voicemail/messages][%d] postVoicemailMessagesInternalServerError  %+v", 500, o.Payload)
}

func (o *PostVoicemailMessagesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostVoicemailMessagesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostVoicemailMessagesServiceUnavailable creates a PostVoicemailMessagesServiceUnavailable with default headers values
func NewPostVoicemailMessagesServiceUnavailable() *PostVoicemailMessagesServiceUnavailable {
	return &PostVoicemailMessagesServiceUnavailable{}
}

/*
PostVoicemailMessagesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostVoicemailMessagesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post voicemail messages service unavailable response has a 2xx status code
func (o *PostVoicemailMessagesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post voicemail messages service unavailable response has a 3xx status code
func (o *PostVoicemailMessagesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post voicemail messages service unavailable response has a 4xx status code
func (o *PostVoicemailMessagesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post voicemail messages service unavailable response has a 5xx status code
func (o *PostVoicemailMessagesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post voicemail messages service unavailable response a status code equal to that given
func (o *PostVoicemailMessagesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostVoicemailMessagesServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/voicemail/messages][%d] postVoicemailMessagesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostVoicemailMessagesServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/voicemail/messages][%d] postVoicemailMessagesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostVoicemailMessagesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostVoicemailMessagesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostVoicemailMessagesGatewayTimeout creates a PostVoicemailMessagesGatewayTimeout with default headers values
func NewPostVoicemailMessagesGatewayTimeout() *PostVoicemailMessagesGatewayTimeout {
	return &PostVoicemailMessagesGatewayTimeout{}
}

/*
PostVoicemailMessagesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostVoicemailMessagesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post voicemail messages gateway timeout response has a 2xx status code
func (o *PostVoicemailMessagesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post voicemail messages gateway timeout response has a 3xx status code
func (o *PostVoicemailMessagesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post voicemail messages gateway timeout response has a 4xx status code
func (o *PostVoicemailMessagesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post voicemail messages gateway timeout response has a 5xx status code
func (o *PostVoicemailMessagesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post voicemail messages gateway timeout response a status code equal to that given
func (o *PostVoicemailMessagesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostVoicemailMessagesGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/voicemail/messages][%d] postVoicemailMessagesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostVoicemailMessagesGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/voicemail/messages][%d] postVoicemailMessagesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostVoicemailMessagesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostVoicemailMessagesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
