// Code generated by go-swagger; DO NOT EDIT.

package web_messaging

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetWebmessagingMessagesReader is a Reader for the GetWebmessagingMessages structure.
type GetWebmessagingMessagesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWebmessagingMessagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWebmessagingMessagesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetWebmessagingMessagesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetWebmessagingMessagesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetWebmessagingMessagesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetWebmessagingMessagesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetWebmessagingMessagesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetWebmessagingMessagesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetWebmessagingMessagesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetWebmessagingMessagesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetWebmessagingMessagesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetWebmessagingMessagesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetWebmessagingMessagesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetWebmessagingMessagesOK creates a GetWebmessagingMessagesOK with default headers values
func NewGetWebmessagingMessagesOK() *GetWebmessagingMessagesOK {
	return &GetWebmessagingMessagesOK{}
}

/*GetWebmessagingMessagesOK handles this case with default header values.

successful operation
*/
type GetWebmessagingMessagesOK struct {
	Payload *models.WebMessagingMessageEntityList
}

func (o *GetWebmessagingMessagesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/webmessaging/messages][%d] getWebmessagingMessagesOK  %+v", 200, o.Payload)
}

func (o *GetWebmessagingMessagesOK) GetPayload() *models.WebMessagingMessageEntityList {
	return o.Payload
}

func (o *GetWebmessagingMessagesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WebMessagingMessageEntityList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebmessagingMessagesBadRequest creates a GetWebmessagingMessagesBadRequest with default headers values
func NewGetWebmessagingMessagesBadRequest() *GetWebmessagingMessagesBadRequest {
	return &GetWebmessagingMessagesBadRequest{}
}

/*GetWebmessagingMessagesBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetWebmessagingMessagesBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetWebmessagingMessagesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/webmessaging/messages][%d] getWebmessagingMessagesBadRequest  %+v", 400, o.Payload)
}

func (o *GetWebmessagingMessagesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebmessagingMessagesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebmessagingMessagesUnauthorized creates a GetWebmessagingMessagesUnauthorized with default headers values
func NewGetWebmessagingMessagesUnauthorized() *GetWebmessagingMessagesUnauthorized {
	return &GetWebmessagingMessagesUnauthorized{}
}

/*GetWebmessagingMessagesUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetWebmessagingMessagesUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetWebmessagingMessagesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/webmessaging/messages][%d] getWebmessagingMessagesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetWebmessagingMessagesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebmessagingMessagesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebmessagingMessagesForbidden creates a GetWebmessagingMessagesForbidden with default headers values
func NewGetWebmessagingMessagesForbidden() *GetWebmessagingMessagesForbidden {
	return &GetWebmessagingMessagesForbidden{}
}

/*GetWebmessagingMessagesForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetWebmessagingMessagesForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetWebmessagingMessagesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/webmessaging/messages][%d] getWebmessagingMessagesForbidden  %+v", 403, o.Payload)
}

func (o *GetWebmessagingMessagesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebmessagingMessagesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebmessagingMessagesNotFound creates a GetWebmessagingMessagesNotFound with default headers values
func NewGetWebmessagingMessagesNotFound() *GetWebmessagingMessagesNotFound {
	return &GetWebmessagingMessagesNotFound{}
}

/*GetWebmessagingMessagesNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetWebmessagingMessagesNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetWebmessagingMessagesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/webmessaging/messages][%d] getWebmessagingMessagesNotFound  %+v", 404, o.Payload)
}

func (o *GetWebmessagingMessagesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebmessagingMessagesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebmessagingMessagesRequestTimeout creates a GetWebmessagingMessagesRequestTimeout with default headers values
func NewGetWebmessagingMessagesRequestTimeout() *GetWebmessagingMessagesRequestTimeout {
	return &GetWebmessagingMessagesRequestTimeout{}
}

/*GetWebmessagingMessagesRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetWebmessagingMessagesRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetWebmessagingMessagesRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/webmessaging/messages][%d] getWebmessagingMessagesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetWebmessagingMessagesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebmessagingMessagesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebmessagingMessagesRequestEntityTooLarge creates a GetWebmessagingMessagesRequestEntityTooLarge with default headers values
func NewGetWebmessagingMessagesRequestEntityTooLarge() *GetWebmessagingMessagesRequestEntityTooLarge {
	return &GetWebmessagingMessagesRequestEntityTooLarge{}
}

/*GetWebmessagingMessagesRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetWebmessagingMessagesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetWebmessagingMessagesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/webmessaging/messages][%d] getWebmessagingMessagesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetWebmessagingMessagesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebmessagingMessagesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebmessagingMessagesUnsupportedMediaType creates a GetWebmessagingMessagesUnsupportedMediaType with default headers values
func NewGetWebmessagingMessagesUnsupportedMediaType() *GetWebmessagingMessagesUnsupportedMediaType {
	return &GetWebmessagingMessagesUnsupportedMediaType{}
}

/*GetWebmessagingMessagesUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetWebmessagingMessagesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetWebmessagingMessagesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/webmessaging/messages][%d] getWebmessagingMessagesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetWebmessagingMessagesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebmessagingMessagesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebmessagingMessagesTooManyRequests creates a GetWebmessagingMessagesTooManyRequests with default headers values
func NewGetWebmessagingMessagesTooManyRequests() *GetWebmessagingMessagesTooManyRequests {
	return &GetWebmessagingMessagesTooManyRequests{}
}

/*GetWebmessagingMessagesTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetWebmessagingMessagesTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetWebmessagingMessagesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/webmessaging/messages][%d] getWebmessagingMessagesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetWebmessagingMessagesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebmessagingMessagesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebmessagingMessagesInternalServerError creates a GetWebmessagingMessagesInternalServerError with default headers values
func NewGetWebmessagingMessagesInternalServerError() *GetWebmessagingMessagesInternalServerError {
	return &GetWebmessagingMessagesInternalServerError{}
}

/*GetWebmessagingMessagesInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetWebmessagingMessagesInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetWebmessagingMessagesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/webmessaging/messages][%d] getWebmessagingMessagesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetWebmessagingMessagesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebmessagingMessagesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebmessagingMessagesServiceUnavailable creates a GetWebmessagingMessagesServiceUnavailable with default headers values
func NewGetWebmessagingMessagesServiceUnavailable() *GetWebmessagingMessagesServiceUnavailable {
	return &GetWebmessagingMessagesServiceUnavailable{}
}

/*GetWebmessagingMessagesServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetWebmessagingMessagesServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetWebmessagingMessagesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/webmessaging/messages][%d] getWebmessagingMessagesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetWebmessagingMessagesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebmessagingMessagesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebmessagingMessagesGatewayTimeout creates a GetWebmessagingMessagesGatewayTimeout with default headers values
func NewGetWebmessagingMessagesGatewayTimeout() *GetWebmessagingMessagesGatewayTimeout {
	return &GetWebmessagingMessagesGatewayTimeout{}
}

/*GetWebmessagingMessagesGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetWebmessagingMessagesGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetWebmessagingMessagesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/webmessaging/messages][%d] getWebmessagingMessagesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetWebmessagingMessagesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetWebmessagingMessagesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
