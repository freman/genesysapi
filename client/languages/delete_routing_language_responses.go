// Code generated by go-swagger; DO NOT EDIT.

package languages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteRoutingLanguageReader is a Reader for the DeleteRoutingLanguage structure.
type DeleteRoutingLanguageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteRoutingLanguageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewDeleteRoutingLanguageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteRoutingLanguageUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteRoutingLanguageForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteRoutingLanguageNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteRoutingLanguageRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteRoutingLanguageUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteRoutingLanguageTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteRoutingLanguageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteRoutingLanguageServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteRoutingLanguageGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteRoutingLanguageDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteRoutingLanguageBadRequest creates a DeleteRoutingLanguageBadRequest with default headers values
func NewDeleteRoutingLanguageBadRequest() *DeleteRoutingLanguageBadRequest {
	return &DeleteRoutingLanguageBadRequest{}
}

/*DeleteRoutingLanguageBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteRoutingLanguageBadRequest struct {
	Payload *models.ErrorBody
}

func (o *DeleteRoutingLanguageBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/languages/{languageId}][%d] deleteRoutingLanguageBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteRoutingLanguageBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingLanguageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingLanguageUnauthorized creates a DeleteRoutingLanguageUnauthorized with default headers values
func NewDeleteRoutingLanguageUnauthorized() *DeleteRoutingLanguageUnauthorized {
	return &DeleteRoutingLanguageUnauthorized{}
}

/*DeleteRoutingLanguageUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteRoutingLanguageUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *DeleteRoutingLanguageUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/languages/{languageId}][%d] deleteRoutingLanguageUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteRoutingLanguageUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingLanguageUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingLanguageForbidden creates a DeleteRoutingLanguageForbidden with default headers values
func NewDeleteRoutingLanguageForbidden() *DeleteRoutingLanguageForbidden {
	return &DeleteRoutingLanguageForbidden{}
}

/*DeleteRoutingLanguageForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type DeleteRoutingLanguageForbidden struct {
	Payload *models.ErrorBody
}

func (o *DeleteRoutingLanguageForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/languages/{languageId}][%d] deleteRoutingLanguageForbidden  %+v", 403, o.Payload)
}

func (o *DeleteRoutingLanguageForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingLanguageForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingLanguageNotFound creates a DeleteRoutingLanguageNotFound with default headers values
func NewDeleteRoutingLanguageNotFound() *DeleteRoutingLanguageNotFound {
	return &DeleteRoutingLanguageNotFound{}
}

/*DeleteRoutingLanguageNotFound handles this case with default header values.

The requested resource was not found.
*/
type DeleteRoutingLanguageNotFound struct {
	Payload *models.ErrorBody
}

func (o *DeleteRoutingLanguageNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/languages/{languageId}][%d] deleteRoutingLanguageNotFound  %+v", 404, o.Payload)
}

func (o *DeleteRoutingLanguageNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingLanguageNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingLanguageRequestEntityTooLarge creates a DeleteRoutingLanguageRequestEntityTooLarge with default headers values
func NewDeleteRoutingLanguageRequestEntityTooLarge() *DeleteRoutingLanguageRequestEntityTooLarge {
	return &DeleteRoutingLanguageRequestEntityTooLarge{}
}

/*DeleteRoutingLanguageRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type DeleteRoutingLanguageRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *DeleteRoutingLanguageRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/languages/{languageId}][%d] deleteRoutingLanguageRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteRoutingLanguageRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingLanguageRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingLanguageUnsupportedMediaType creates a DeleteRoutingLanguageUnsupportedMediaType with default headers values
func NewDeleteRoutingLanguageUnsupportedMediaType() *DeleteRoutingLanguageUnsupportedMediaType {
	return &DeleteRoutingLanguageUnsupportedMediaType{}
}

/*DeleteRoutingLanguageUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteRoutingLanguageUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *DeleteRoutingLanguageUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/languages/{languageId}][%d] deleteRoutingLanguageUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteRoutingLanguageUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingLanguageUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingLanguageTooManyRequests creates a DeleteRoutingLanguageTooManyRequests with default headers values
func NewDeleteRoutingLanguageTooManyRequests() *DeleteRoutingLanguageTooManyRequests {
	return &DeleteRoutingLanguageTooManyRequests{}
}

/*DeleteRoutingLanguageTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type DeleteRoutingLanguageTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *DeleteRoutingLanguageTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/languages/{languageId}][%d] deleteRoutingLanguageTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteRoutingLanguageTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingLanguageTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingLanguageInternalServerError creates a DeleteRoutingLanguageInternalServerError with default headers values
func NewDeleteRoutingLanguageInternalServerError() *DeleteRoutingLanguageInternalServerError {
	return &DeleteRoutingLanguageInternalServerError{}
}

/*DeleteRoutingLanguageInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteRoutingLanguageInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *DeleteRoutingLanguageInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/languages/{languageId}][%d] deleteRoutingLanguageInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteRoutingLanguageInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingLanguageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingLanguageServiceUnavailable creates a DeleteRoutingLanguageServiceUnavailable with default headers values
func NewDeleteRoutingLanguageServiceUnavailable() *DeleteRoutingLanguageServiceUnavailable {
	return &DeleteRoutingLanguageServiceUnavailable{}
}

/*DeleteRoutingLanguageServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteRoutingLanguageServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *DeleteRoutingLanguageServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/languages/{languageId}][%d] deleteRoutingLanguageServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteRoutingLanguageServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingLanguageServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingLanguageGatewayTimeout creates a DeleteRoutingLanguageGatewayTimeout with default headers values
func NewDeleteRoutingLanguageGatewayTimeout() *DeleteRoutingLanguageGatewayTimeout {
	return &DeleteRoutingLanguageGatewayTimeout{}
}

/*DeleteRoutingLanguageGatewayTimeout handles this case with default header values.

The request timed out.
*/
type DeleteRoutingLanguageGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *DeleteRoutingLanguageGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/languages/{languageId}][%d] deleteRoutingLanguageGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteRoutingLanguageGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingLanguageGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingLanguageDefault creates a DeleteRoutingLanguageDefault with default headers values
func NewDeleteRoutingLanguageDefault(code int) *DeleteRoutingLanguageDefault {
	return &DeleteRoutingLanguageDefault{
		_statusCode: code,
	}
}

/*DeleteRoutingLanguageDefault handles this case with default header values.

successful operation
*/
type DeleteRoutingLanguageDefault struct {
	_statusCode int
}

// Code gets the status code for the delete routing language default response
func (o *DeleteRoutingLanguageDefault) Code() int {
	return o._statusCode
}

func (o *DeleteRoutingLanguageDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/languages/{languageId}][%d] deleteRoutingLanguage default ", o._statusCode)
}

func (o *DeleteRoutingLanguageDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
