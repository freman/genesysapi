// Code generated by go-swagger; DO NOT EDIT.

package languages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetLanguagesTranslationsOrganizationReader is a Reader for the GetLanguagesTranslationsOrganization structure.
type GetLanguagesTranslationsOrganizationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLanguagesTranslationsOrganizationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLanguagesTranslationsOrganizationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLanguagesTranslationsOrganizationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetLanguagesTranslationsOrganizationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetLanguagesTranslationsOrganizationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLanguagesTranslationsOrganizationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetLanguagesTranslationsOrganizationRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetLanguagesTranslationsOrganizationUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetLanguagesTranslationsOrganizationTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetLanguagesTranslationsOrganizationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetLanguagesTranslationsOrganizationServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetLanguagesTranslationsOrganizationGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLanguagesTranslationsOrganizationOK creates a GetLanguagesTranslationsOrganizationOK with default headers values
func NewGetLanguagesTranslationsOrganizationOK() *GetLanguagesTranslationsOrganizationOK {
	return &GetLanguagesTranslationsOrganizationOK{}
}

/*GetLanguagesTranslationsOrganizationOK handles this case with default header values.

successful operation
*/
type GetLanguagesTranslationsOrganizationOK struct {
	Payload map[string]interface{}
}

func (o *GetLanguagesTranslationsOrganizationOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/languages/translations/organization][%d] getLanguagesTranslationsOrganizationOK  %+v", 200, o.Payload)
}

func (o *GetLanguagesTranslationsOrganizationOK) GetPayload() map[string]interface{} {
	return o.Payload
}

func (o *GetLanguagesTranslationsOrganizationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguagesTranslationsOrganizationBadRequest creates a GetLanguagesTranslationsOrganizationBadRequest with default headers values
func NewGetLanguagesTranslationsOrganizationBadRequest() *GetLanguagesTranslationsOrganizationBadRequest {
	return &GetLanguagesTranslationsOrganizationBadRequest{}
}

/*GetLanguagesTranslationsOrganizationBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetLanguagesTranslationsOrganizationBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetLanguagesTranslationsOrganizationBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/languages/translations/organization][%d] getLanguagesTranslationsOrganizationBadRequest  %+v", 400, o.Payload)
}

func (o *GetLanguagesTranslationsOrganizationBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguagesTranslationsOrganizationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguagesTranslationsOrganizationUnauthorized creates a GetLanguagesTranslationsOrganizationUnauthorized with default headers values
func NewGetLanguagesTranslationsOrganizationUnauthorized() *GetLanguagesTranslationsOrganizationUnauthorized {
	return &GetLanguagesTranslationsOrganizationUnauthorized{}
}

/*GetLanguagesTranslationsOrganizationUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetLanguagesTranslationsOrganizationUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetLanguagesTranslationsOrganizationUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/languages/translations/organization][%d] getLanguagesTranslationsOrganizationUnauthorized  %+v", 401, o.Payload)
}

func (o *GetLanguagesTranslationsOrganizationUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguagesTranslationsOrganizationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguagesTranslationsOrganizationForbidden creates a GetLanguagesTranslationsOrganizationForbidden with default headers values
func NewGetLanguagesTranslationsOrganizationForbidden() *GetLanguagesTranslationsOrganizationForbidden {
	return &GetLanguagesTranslationsOrganizationForbidden{}
}

/*GetLanguagesTranslationsOrganizationForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetLanguagesTranslationsOrganizationForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetLanguagesTranslationsOrganizationForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/languages/translations/organization][%d] getLanguagesTranslationsOrganizationForbidden  %+v", 403, o.Payload)
}

func (o *GetLanguagesTranslationsOrganizationForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguagesTranslationsOrganizationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguagesTranslationsOrganizationNotFound creates a GetLanguagesTranslationsOrganizationNotFound with default headers values
func NewGetLanguagesTranslationsOrganizationNotFound() *GetLanguagesTranslationsOrganizationNotFound {
	return &GetLanguagesTranslationsOrganizationNotFound{}
}

/*GetLanguagesTranslationsOrganizationNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetLanguagesTranslationsOrganizationNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetLanguagesTranslationsOrganizationNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/languages/translations/organization][%d] getLanguagesTranslationsOrganizationNotFound  %+v", 404, o.Payload)
}

func (o *GetLanguagesTranslationsOrganizationNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguagesTranslationsOrganizationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguagesTranslationsOrganizationRequestEntityTooLarge creates a GetLanguagesTranslationsOrganizationRequestEntityTooLarge with default headers values
func NewGetLanguagesTranslationsOrganizationRequestEntityTooLarge() *GetLanguagesTranslationsOrganizationRequestEntityTooLarge {
	return &GetLanguagesTranslationsOrganizationRequestEntityTooLarge{}
}

/*GetLanguagesTranslationsOrganizationRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetLanguagesTranslationsOrganizationRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetLanguagesTranslationsOrganizationRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/languages/translations/organization][%d] getLanguagesTranslationsOrganizationRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetLanguagesTranslationsOrganizationRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguagesTranslationsOrganizationRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguagesTranslationsOrganizationUnsupportedMediaType creates a GetLanguagesTranslationsOrganizationUnsupportedMediaType with default headers values
func NewGetLanguagesTranslationsOrganizationUnsupportedMediaType() *GetLanguagesTranslationsOrganizationUnsupportedMediaType {
	return &GetLanguagesTranslationsOrganizationUnsupportedMediaType{}
}

/*GetLanguagesTranslationsOrganizationUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetLanguagesTranslationsOrganizationUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetLanguagesTranslationsOrganizationUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/languages/translations/organization][%d] getLanguagesTranslationsOrganizationUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetLanguagesTranslationsOrganizationUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguagesTranslationsOrganizationUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguagesTranslationsOrganizationTooManyRequests creates a GetLanguagesTranslationsOrganizationTooManyRequests with default headers values
func NewGetLanguagesTranslationsOrganizationTooManyRequests() *GetLanguagesTranslationsOrganizationTooManyRequests {
	return &GetLanguagesTranslationsOrganizationTooManyRequests{}
}

/*GetLanguagesTranslationsOrganizationTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type GetLanguagesTranslationsOrganizationTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetLanguagesTranslationsOrganizationTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/languages/translations/organization][%d] getLanguagesTranslationsOrganizationTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetLanguagesTranslationsOrganizationTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguagesTranslationsOrganizationTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguagesTranslationsOrganizationInternalServerError creates a GetLanguagesTranslationsOrganizationInternalServerError with default headers values
func NewGetLanguagesTranslationsOrganizationInternalServerError() *GetLanguagesTranslationsOrganizationInternalServerError {
	return &GetLanguagesTranslationsOrganizationInternalServerError{}
}

/*GetLanguagesTranslationsOrganizationInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetLanguagesTranslationsOrganizationInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetLanguagesTranslationsOrganizationInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/languages/translations/organization][%d] getLanguagesTranslationsOrganizationInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLanguagesTranslationsOrganizationInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguagesTranslationsOrganizationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguagesTranslationsOrganizationServiceUnavailable creates a GetLanguagesTranslationsOrganizationServiceUnavailable with default headers values
func NewGetLanguagesTranslationsOrganizationServiceUnavailable() *GetLanguagesTranslationsOrganizationServiceUnavailable {
	return &GetLanguagesTranslationsOrganizationServiceUnavailable{}
}

/*GetLanguagesTranslationsOrganizationServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetLanguagesTranslationsOrganizationServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetLanguagesTranslationsOrganizationServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/languages/translations/organization][%d] getLanguagesTranslationsOrganizationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetLanguagesTranslationsOrganizationServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguagesTranslationsOrganizationServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguagesTranslationsOrganizationGatewayTimeout creates a GetLanguagesTranslationsOrganizationGatewayTimeout with default headers values
func NewGetLanguagesTranslationsOrganizationGatewayTimeout() *GetLanguagesTranslationsOrganizationGatewayTimeout {
	return &GetLanguagesTranslationsOrganizationGatewayTimeout{}
}

/*GetLanguagesTranslationsOrganizationGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetLanguagesTranslationsOrganizationGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetLanguagesTranslationsOrganizationGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/languages/translations/organization][%d] getLanguagesTranslationsOrganizationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetLanguagesTranslationsOrganizationGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLanguagesTranslationsOrganizationGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
