// Code generated by go-swagger; DO NOT EDIT.

package user_recordings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetUserrecordingsSummaryReader is a Reader for the GetUserrecordingsSummary structure.
type GetUserrecordingsSummaryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserrecordingsSummaryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserrecordingsSummaryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUserrecordingsSummaryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetUserrecordingsSummaryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUserrecordingsSummaryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUserrecordingsSummaryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetUserrecordingsSummaryRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetUserrecordingsSummaryRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetUserrecordingsSummaryUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetUserrecordingsSummaryTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUserrecordingsSummaryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetUserrecordingsSummaryServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetUserrecordingsSummaryGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUserrecordingsSummaryOK creates a GetUserrecordingsSummaryOK with default headers values
func NewGetUserrecordingsSummaryOK() *GetUserrecordingsSummaryOK {
	return &GetUserrecordingsSummaryOK{}
}

/*
GetUserrecordingsSummaryOK describes a response with status code 200, with default header values.

successful operation
*/
type GetUserrecordingsSummaryOK struct {
	Payload *models.FaxSummary
}

// IsSuccess returns true when this get userrecordings summary o k response has a 2xx status code
func (o *GetUserrecordingsSummaryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get userrecordings summary o k response has a 3xx status code
func (o *GetUserrecordingsSummaryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get userrecordings summary o k response has a 4xx status code
func (o *GetUserrecordingsSummaryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get userrecordings summary o k response has a 5xx status code
func (o *GetUserrecordingsSummaryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get userrecordings summary o k response a status code equal to that given
func (o *GetUserrecordingsSummaryOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetUserrecordingsSummaryOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/userrecordings/summary][%d] getUserrecordingsSummaryOK  %+v", 200, o.Payload)
}

func (o *GetUserrecordingsSummaryOK) String() string {
	return fmt.Sprintf("[GET /api/v2/userrecordings/summary][%d] getUserrecordingsSummaryOK  %+v", 200, o.Payload)
}

func (o *GetUserrecordingsSummaryOK) GetPayload() *models.FaxSummary {
	return o.Payload
}

func (o *GetUserrecordingsSummaryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FaxSummary)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserrecordingsSummaryBadRequest creates a GetUserrecordingsSummaryBadRequest with default headers values
func NewGetUserrecordingsSummaryBadRequest() *GetUserrecordingsSummaryBadRequest {
	return &GetUserrecordingsSummaryBadRequest{}
}

/*
GetUserrecordingsSummaryBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetUserrecordingsSummaryBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get userrecordings summary bad request response has a 2xx status code
func (o *GetUserrecordingsSummaryBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get userrecordings summary bad request response has a 3xx status code
func (o *GetUserrecordingsSummaryBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get userrecordings summary bad request response has a 4xx status code
func (o *GetUserrecordingsSummaryBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get userrecordings summary bad request response has a 5xx status code
func (o *GetUserrecordingsSummaryBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get userrecordings summary bad request response a status code equal to that given
func (o *GetUserrecordingsSummaryBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetUserrecordingsSummaryBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/userrecordings/summary][%d] getUserrecordingsSummaryBadRequest  %+v", 400, o.Payload)
}

func (o *GetUserrecordingsSummaryBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/userrecordings/summary][%d] getUserrecordingsSummaryBadRequest  %+v", 400, o.Payload)
}

func (o *GetUserrecordingsSummaryBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserrecordingsSummaryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserrecordingsSummaryUnauthorized creates a GetUserrecordingsSummaryUnauthorized with default headers values
func NewGetUserrecordingsSummaryUnauthorized() *GetUserrecordingsSummaryUnauthorized {
	return &GetUserrecordingsSummaryUnauthorized{}
}

/*
GetUserrecordingsSummaryUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetUserrecordingsSummaryUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get userrecordings summary unauthorized response has a 2xx status code
func (o *GetUserrecordingsSummaryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get userrecordings summary unauthorized response has a 3xx status code
func (o *GetUserrecordingsSummaryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get userrecordings summary unauthorized response has a 4xx status code
func (o *GetUserrecordingsSummaryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get userrecordings summary unauthorized response has a 5xx status code
func (o *GetUserrecordingsSummaryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get userrecordings summary unauthorized response a status code equal to that given
func (o *GetUserrecordingsSummaryUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetUserrecordingsSummaryUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/userrecordings/summary][%d] getUserrecordingsSummaryUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUserrecordingsSummaryUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/userrecordings/summary][%d] getUserrecordingsSummaryUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUserrecordingsSummaryUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserrecordingsSummaryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserrecordingsSummaryForbidden creates a GetUserrecordingsSummaryForbidden with default headers values
func NewGetUserrecordingsSummaryForbidden() *GetUserrecordingsSummaryForbidden {
	return &GetUserrecordingsSummaryForbidden{}
}

/*
GetUserrecordingsSummaryForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetUserrecordingsSummaryForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get userrecordings summary forbidden response has a 2xx status code
func (o *GetUserrecordingsSummaryForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get userrecordings summary forbidden response has a 3xx status code
func (o *GetUserrecordingsSummaryForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get userrecordings summary forbidden response has a 4xx status code
func (o *GetUserrecordingsSummaryForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get userrecordings summary forbidden response has a 5xx status code
func (o *GetUserrecordingsSummaryForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get userrecordings summary forbidden response a status code equal to that given
func (o *GetUserrecordingsSummaryForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetUserrecordingsSummaryForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/userrecordings/summary][%d] getUserrecordingsSummaryForbidden  %+v", 403, o.Payload)
}

func (o *GetUserrecordingsSummaryForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/userrecordings/summary][%d] getUserrecordingsSummaryForbidden  %+v", 403, o.Payload)
}

func (o *GetUserrecordingsSummaryForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserrecordingsSummaryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserrecordingsSummaryNotFound creates a GetUserrecordingsSummaryNotFound with default headers values
func NewGetUserrecordingsSummaryNotFound() *GetUserrecordingsSummaryNotFound {
	return &GetUserrecordingsSummaryNotFound{}
}

/*
GetUserrecordingsSummaryNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetUserrecordingsSummaryNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get userrecordings summary not found response has a 2xx status code
func (o *GetUserrecordingsSummaryNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get userrecordings summary not found response has a 3xx status code
func (o *GetUserrecordingsSummaryNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get userrecordings summary not found response has a 4xx status code
func (o *GetUserrecordingsSummaryNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get userrecordings summary not found response has a 5xx status code
func (o *GetUserrecordingsSummaryNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get userrecordings summary not found response a status code equal to that given
func (o *GetUserrecordingsSummaryNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetUserrecordingsSummaryNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/userrecordings/summary][%d] getUserrecordingsSummaryNotFound  %+v", 404, o.Payload)
}

func (o *GetUserrecordingsSummaryNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/userrecordings/summary][%d] getUserrecordingsSummaryNotFound  %+v", 404, o.Payload)
}

func (o *GetUserrecordingsSummaryNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserrecordingsSummaryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserrecordingsSummaryRequestTimeout creates a GetUserrecordingsSummaryRequestTimeout with default headers values
func NewGetUserrecordingsSummaryRequestTimeout() *GetUserrecordingsSummaryRequestTimeout {
	return &GetUserrecordingsSummaryRequestTimeout{}
}

/*
GetUserrecordingsSummaryRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetUserrecordingsSummaryRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get userrecordings summary request timeout response has a 2xx status code
func (o *GetUserrecordingsSummaryRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get userrecordings summary request timeout response has a 3xx status code
func (o *GetUserrecordingsSummaryRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get userrecordings summary request timeout response has a 4xx status code
func (o *GetUserrecordingsSummaryRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get userrecordings summary request timeout response has a 5xx status code
func (o *GetUserrecordingsSummaryRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get userrecordings summary request timeout response a status code equal to that given
func (o *GetUserrecordingsSummaryRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetUserrecordingsSummaryRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/userrecordings/summary][%d] getUserrecordingsSummaryRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetUserrecordingsSummaryRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/userrecordings/summary][%d] getUserrecordingsSummaryRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetUserrecordingsSummaryRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserrecordingsSummaryRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserrecordingsSummaryRequestEntityTooLarge creates a GetUserrecordingsSummaryRequestEntityTooLarge with default headers values
func NewGetUserrecordingsSummaryRequestEntityTooLarge() *GetUserrecordingsSummaryRequestEntityTooLarge {
	return &GetUserrecordingsSummaryRequestEntityTooLarge{}
}

/*
GetUserrecordingsSummaryRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetUserrecordingsSummaryRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get userrecordings summary request entity too large response has a 2xx status code
func (o *GetUserrecordingsSummaryRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get userrecordings summary request entity too large response has a 3xx status code
func (o *GetUserrecordingsSummaryRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get userrecordings summary request entity too large response has a 4xx status code
func (o *GetUserrecordingsSummaryRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get userrecordings summary request entity too large response has a 5xx status code
func (o *GetUserrecordingsSummaryRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get userrecordings summary request entity too large response a status code equal to that given
func (o *GetUserrecordingsSummaryRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetUserrecordingsSummaryRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/userrecordings/summary][%d] getUserrecordingsSummaryRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetUserrecordingsSummaryRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/userrecordings/summary][%d] getUserrecordingsSummaryRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetUserrecordingsSummaryRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserrecordingsSummaryRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserrecordingsSummaryUnsupportedMediaType creates a GetUserrecordingsSummaryUnsupportedMediaType with default headers values
func NewGetUserrecordingsSummaryUnsupportedMediaType() *GetUserrecordingsSummaryUnsupportedMediaType {
	return &GetUserrecordingsSummaryUnsupportedMediaType{}
}

/*
GetUserrecordingsSummaryUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetUserrecordingsSummaryUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get userrecordings summary unsupported media type response has a 2xx status code
func (o *GetUserrecordingsSummaryUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get userrecordings summary unsupported media type response has a 3xx status code
func (o *GetUserrecordingsSummaryUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get userrecordings summary unsupported media type response has a 4xx status code
func (o *GetUserrecordingsSummaryUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get userrecordings summary unsupported media type response has a 5xx status code
func (o *GetUserrecordingsSummaryUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get userrecordings summary unsupported media type response a status code equal to that given
func (o *GetUserrecordingsSummaryUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetUserrecordingsSummaryUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/userrecordings/summary][%d] getUserrecordingsSummaryUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetUserrecordingsSummaryUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/userrecordings/summary][%d] getUserrecordingsSummaryUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetUserrecordingsSummaryUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserrecordingsSummaryUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserrecordingsSummaryTooManyRequests creates a GetUserrecordingsSummaryTooManyRequests with default headers values
func NewGetUserrecordingsSummaryTooManyRequests() *GetUserrecordingsSummaryTooManyRequests {
	return &GetUserrecordingsSummaryTooManyRequests{}
}

/*
GetUserrecordingsSummaryTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetUserrecordingsSummaryTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get userrecordings summary too many requests response has a 2xx status code
func (o *GetUserrecordingsSummaryTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get userrecordings summary too many requests response has a 3xx status code
func (o *GetUserrecordingsSummaryTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get userrecordings summary too many requests response has a 4xx status code
func (o *GetUserrecordingsSummaryTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get userrecordings summary too many requests response has a 5xx status code
func (o *GetUserrecordingsSummaryTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get userrecordings summary too many requests response a status code equal to that given
func (o *GetUserrecordingsSummaryTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetUserrecordingsSummaryTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/userrecordings/summary][%d] getUserrecordingsSummaryTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetUserrecordingsSummaryTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/userrecordings/summary][%d] getUserrecordingsSummaryTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetUserrecordingsSummaryTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserrecordingsSummaryTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserrecordingsSummaryInternalServerError creates a GetUserrecordingsSummaryInternalServerError with default headers values
func NewGetUserrecordingsSummaryInternalServerError() *GetUserrecordingsSummaryInternalServerError {
	return &GetUserrecordingsSummaryInternalServerError{}
}

/*
GetUserrecordingsSummaryInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetUserrecordingsSummaryInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get userrecordings summary internal server error response has a 2xx status code
func (o *GetUserrecordingsSummaryInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get userrecordings summary internal server error response has a 3xx status code
func (o *GetUserrecordingsSummaryInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get userrecordings summary internal server error response has a 4xx status code
func (o *GetUserrecordingsSummaryInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get userrecordings summary internal server error response has a 5xx status code
func (o *GetUserrecordingsSummaryInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get userrecordings summary internal server error response a status code equal to that given
func (o *GetUserrecordingsSummaryInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetUserrecordingsSummaryInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/userrecordings/summary][%d] getUserrecordingsSummaryInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUserrecordingsSummaryInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/userrecordings/summary][%d] getUserrecordingsSummaryInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUserrecordingsSummaryInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserrecordingsSummaryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserrecordingsSummaryServiceUnavailable creates a GetUserrecordingsSummaryServiceUnavailable with default headers values
func NewGetUserrecordingsSummaryServiceUnavailable() *GetUserrecordingsSummaryServiceUnavailable {
	return &GetUserrecordingsSummaryServiceUnavailable{}
}

/*
GetUserrecordingsSummaryServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetUserrecordingsSummaryServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get userrecordings summary service unavailable response has a 2xx status code
func (o *GetUserrecordingsSummaryServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get userrecordings summary service unavailable response has a 3xx status code
func (o *GetUserrecordingsSummaryServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get userrecordings summary service unavailable response has a 4xx status code
func (o *GetUserrecordingsSummaryServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get userrecordings summary service unavailable response has a 5xx status code
func (o *GetUserrecordingsSummaryServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get userrecordings summary service unavailable response a status code equal to that given
func (o *GetUserrecordingsSummaryServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetUserrecordingsSummaryServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/userrecordings/summary][%d] getUserrecordingsSummaryServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUserrecordingsSummaryServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/userrecordings/summary][%d] getUserrecordingsSummaryServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUserrecordingsSummaryServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserrecordingsSummaryServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserrecordingsSummaryGatewayTimeout creates a GetUserrecordingsSummaryGatewayTimeout with default headers values
func NewGetUserrecordingsSummaryGatewayTimeout() *GetUserrecordingsSummaryGatewayTimeout {
	return &GetUserrecordingsSummaryGatewayTimeout{}
}

/*
GetUserrecordingsSummaryGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetUserrecordingsSummaryGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get userrecordings summary gateway timeout response has a 2xx status code
func (o *GetUserrecordingsSummaryGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get userrecordings summary gateway timeout response has a 3xx status code
func (o *GetUserrecordingsSummaryGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get userrecordings summary gateway timeout response has a 4xx status code
func (o *GetUserrecordingsSummaryGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get userrecordings summary gateway timeout response has a 5xx status code
func (o *GetUserrecordingsSummaryGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get userrecordings summary gateway timeout response a status code equal to that given
func (o *GetUserrecordingsSummaryGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetUserrecordingsSummaryGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/userrecordings/summary][%d] getUserrecordingsSummaryGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUserrecordingsSummaryGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/userrecordings/summary][%d] getUserrecordingsSummaryGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUserrecordingsSummaryGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserrecordingsSummaryGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
