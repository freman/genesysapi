// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetRoutingSmsAvailablephonenumbersReader is a Reader for the GetRoutingSmsAvailablephonenumbers structure.
type GetRoutingSmsAvailablephonenumbersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRoutingSmsAvailablephonenumbersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRoutingSmsAvailablephonenumbersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRoutingSmsAvailablephonenumbersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRoutingSmsAvailablephonenumbersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRoutingSmsAvailablephonenumbersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRoutingSmsAvailablephonenumbersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetRoutingSmsAvailablephonenumbersRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetRoutingSmsAvailablephonenumbersRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetRoutingSmsAvailablephonenumbersUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetRoutingSmsAvailablephonenumbersTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRoutingSmsAvailablephonenumbersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetRoutingSmsAvailablephonenumbersServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetRoutingSmsAvailablephonenumbersGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRoutingSmsAvailablephonenumbersOK creates a GetRoutingSmsAvailablephonenumbersOK with default headers values
func NewGetRoutingSmsAvailablephonenumbersOK() *GetRoutingSmsAvailablephonenumbersOK {
	return &GetRoutingSmsAvailablephonenumbersOK{}
}

/*
GetRoutingSmsAvailablephonenumbersOK describes a response with status code 200, with default header values.

successful operation
*/
type GetRoutingSmsAvailablephonenumbersOK struct {
	Payload *models.SMSAvailablePhoneNumberEntityListing
}

// IsSuccess returns true when this get routing sms availablephonenumbers o k response has a 2xx status code
func (o *GetRoutingSmsAvailablephonenumbersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get routing sms availablephonenumbers o k response has a 3xx status code
func (o *GetRoutingSmsAvailablephonenumbersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing sms availablephonenumbers o k response has a 4xx status code
func (o *GetRoutingSmsAvailablephonenumbersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing sms availablephonenumbers o k response has a 5xx status code
func (o *GetRoutingSmsAvailablephonenumbersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing sms availablephonenumbers o k response a status code equal to that given
func (o *GetRoutingSmsAvailablephonenumbersOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetRoutingSmsAvailablephonenumbersOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/sms/availablephonenumbers][%d] getRoutingSmsAvailablephonenumbersOK  %+v", 200, o.Payload)
}

func (o *GetRoutingSmsAvailablephonenumbersOK) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/sms/availablephonenumbers][%d] getRoutingSmsAvailablephonenumbersOK  %+v", 200, o.Payload)
}

func (o *GetRoutingSmsAvailablephonenumbersOK) GetPayload() *models.SMSAvailablePhoneNumberEntityListing {
	return o.Payload
}

func (o *GetRoutingSmsAvailablephonenumbersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SMSAvailablePhoneNumberEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingSmsAvailablephonenumbersBadRequest creates a GetRoutingSmsAvailablephonenumbersBadRequest with default headers values
func NewGetRoutingSmsAvailablephonenumbersBadRequest() *GetRoutingSmsAvailablephonenumbersBadRequest {
	return &GetRoutingSmsAvailablephonenumbersBadRequest{}
}

/*
GetRoutingSmsAvailablephonenumbersBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetRoutingSmsAvailablephonenumbersBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing sms availablephonenumbers bad request response has a 2xx status code
func (o *GetRoutingSmsAvailablephonenumbersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing sms availablephonenumbers bad request response has a 3xx status code
func (o *GetRoutingSmsAvailablephonenumbersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing sms availablephonenumbers bad request response has a 4xx status code
func (o *GetRoutingSmsAvailablephonenumbersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing sms availablephonenumbers bad request response has a 5xx status code
func (o *GetRoutingSmsAvailablephonenumbersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing sms availablephonenumbers bad request response a status code equal to that given
func (o *GetRoutingSmsAvailablephonenumbersBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetRoutingSmsAvailablephonenumbersBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/sms/availablephonenumbers][%d] getRoutingSmsAvailablephonenumbersBadRequest  %+v", 400, o.Payload)
}

func (o *GetRoutingSmsAvailablephonenumbersBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/sms/availablephonenumbers][%d] getRoutingSmsAvailablephonenumbersBadRequest  %+v", 400, o.Payload)
}

func (o *GetRoutingSmsAvailablephonenumbersBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingSmsAvailablephonenumbersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingSmsAvailablephonenumbersUnauthorized creates a GetRoutingSmsAvailablephonenumbersUnauthorized with default headers values
func NewGetRoutingSmsAvailablephonenumbersUnauthorized() *GetRoutingSmsAvailablephonenumbersUnauthorized {
	return &GetRoutingSmsAvailablephonenumbersUnauthorized{}
}

/*
GetRoutingSmsAvailablephonenumbersUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetRoutingSmsAvailablephonenumbersUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing sms availablephonenumbers unauthorized response has a 2xx status code
func (o *GetRoutingSmsAvailablephonenumbersUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing sms availablephonenumbers unauthorized response has a 3xx status code
func (o *GetRoutingSmsAvailablephonenumbersUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing sms availablephonenumbers unauthorized response has a 4xx status code
func (o *GetRoutingSmsAvailablephonenumbersUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing sms availablephonenumbers unauthorized response has a 5xx status code
func (o *GetRoutingSmsAvailablephonenumbersUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing sms availablephonenumbers unauthorized response a status code equal to that given
func (o *GetRoutingSmsAvailablephonenumbersUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetRoutingSmsAvailablephonenumbersUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/sms/availablephonenumbers][%d] getRoutingSmsAvailablephonenumbersUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRoutingSmsAvailablephonenumbersUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/sms/availablephonenumbers][%d] getRoutingSmsAvailablephonenumbersUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRoutingSmsAvailablephonenumbersUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingSmsAvailablephonenumbersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingSmsAvailablephonenumbersForbidden creates a GetRoutingSmsAvailablephonenumbersForbidden with default headers values
func NewGetRoutingSmsAvailablephonenumbersForbidden() *GetRoutingSmsAvailablephonenumbersForbidden {
	return &GetRoutingSmsAvailablephonenumbersForbidden{}
}

/*
GetRoutingSmsAvailablephonenumbersForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetRoutingSmsAvailablephonenumbersForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing sms availablephonenumbers forbidden response has a 2xx status code
func (o *GetRoutingSmsAvailablephonenumbersForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing sms availablephonenumbers forbidden response has a 3xx status code
func (o *GetRoutingSmsAvailablephonenumbersForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing sms availablephonenumbers forbidden response has a 4xx status code
func (o *GetRoutingSmsAvailablephonenumbersForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing sms availablephonenumbers forbidden response has a 5xx status code
func (o *GetRoutingSmsAvailablephonenumbersForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing sms availablephonenumbers forbidden response a status code equal to that given
func (o *GetRoutingSmsAvailablephonenumbersForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetRoutingSmsAvailablephonenumbersForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/sms/availablephonenumbers][%d] getRoutingSmsAvailablephonenumbersForbidden  %+v", 403, o.Payload)
}

func (o *GetRoutingSmsAvailablephonenumbersForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/sms/availablephonenumbers][%d] getRoutingSmsAvailablephonenumbersForbidden  %+v", 403, o.Payload)
}

func (o *GetRoutingSmsAvailablephonenumbersForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingSmsAvailablephonenumbersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingSmsAvailablephonenumbersNotFound creates a GetRoutingSmsAvailablephonenumbersNotFound with default headers values
func NewGetRoutingSmsAvailablephonenumbersNotFound() *GetRoutingSmsAvailablephonenumbersNotFound {
	return &GetRoutingSmsAvailablephonenumbersNotFound{}
}

/*
GetRoutingSmsAvailablephonenumbersNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetRoutingSmsAvailablephonenumbersNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing sms availablephonenumbers not found response has a 2xx status code
func (o *GetRoutingSmsAvailablephonenumbersNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing sms availablephonenumbers not found response has a 3xx status code
func (o *GetRoutingSmsAvailablephonenumbersNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing sms availablephonenumbers not found response has a 4xx status code
func (o *GetRoutingSmsAvailablephonenumbersNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing sms availablephonenumbers not found response has a 5xx status code
func (o *GetRoutingSmsAvailablephonenumbersNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing sms availablephonenumbers not found response a status code equal to that given
func (o *GetRoutingSmsAvailablephonenumbersNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetRoutingSmsAvailablephonenumbersNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/sms/availablephonenumbers][%d] getRoutingSmsAvailablephonenumbersNotFound  %+v", 404, o.Payload)
}

func (o *GetRoutingSmsAvailablephonenumbersNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/sms/availablephonenumbers][%d] getRoutingSmsAvailablephonenumbersNotFound  %+v", 404, o.Payload)
}

func (o *GetRoutingSmsAvailablephonenumbersNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingSmsAvailablephonenumbersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingSmsAvailablephonenumbersRequestTimeout creates a GetRoutingSmsAvailablephonenumbersRequestTimeout with default headers values
func NewGetRoutingSmsAvailablephonenumbersRequestTimeout() *GetRoutingSmsAvailablephonenumbersRequestTimeout {
	return &GetRoutingSmsAvailablephonenumbersRequestTimeout{}
}

/*
GetRoutingSmsAvailablephonenumbersRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetRoutingSmsAvailablephonenumbersRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing sms availablephonenumbers request timeout response has a 2xx status code
func (o *GetRoutingSmsAvailablephonenumbersRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing sms availablephonenumbers request timeout response has a 3xx status code
func (o *GetRoutingSmsAvailablephonenumbersRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing sms availablephonenumbers request timeout response has a 4xx status code
func (o *GetRoutingSmsAvailablephonenumbersRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing sms availablephonenumbers request timeout response has a 5xx status code
func (o *GetRoutingSmsAvailablephonenumbersRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing sms availablephonenumbers request timeout response a status code equal to that given
func (o *GetRoutingSmsAvailablephonenumbersRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetRoutingSmsAvailablephonenumbersRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/sms/availablephonenumbers][%d] getRoutingSmsAvailablephonenumbersRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetRoutingSmsAvailablephonenumbersRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/sms/availablephonenumbers][%d] getRoutingSmsAvailablephonenumbersRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetRoutingSmsAvailablephonenumbersRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingSmsAvailablephonenumbersRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingSmsAvailablephonenumbersRequestEntityTooLarge creates a GetRoutingSmsAvailablephonenumbersRequestEntityTooLarge with default headers values
func NewGetRoutingSmsAvailablephonenumbersRequestEntityTooLarge() *GetRoutingSmsAvailablephonenumbersRequestEntityTooLarge {
	return &GetRoutingSmsAvailablephonenumbersRequestEntityTooLarge{}
}

/*
GetRoutingSmsAvailablephonenumbersRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetRoutingSmsAvailablephonenumbersRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing sms availablephonenumbers request entity too large response has a 2xx status code
func (o *GetRoutingSmsAvailablephonenumbersRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing sms availablephonenumbers request entity too large response has a 3xx status code
func (o *GetRoutingSmsAvailablephonenumbersRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing sms availablephonenumbers request entity too large response has a 4xx status code
func (o *GetRoutingSmsAvailablephonenumbersRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing sms availablephonenumbers request entity too large response has a 5xx status code
func (o *GetRoutingSmsAvailablephonenumbersRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing sms availablephonenumbers request entity too large response a status code equal to that given
func (o *GetRoutingSmsAvailablephonenumbersRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetRoutingSmsAvailablephonenumbersRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/sms/availablephonenumbers][%d] getRoutingSmsAvailablephonenumbersRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetRoutingSmsAvailablephonenumbersRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/sms/availablephonenumbers][%d] getRoutingSmsAvailablephonenumbersRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetRoutingSmsAvailablephonenumbersRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingSmsAvailablephonenumbersRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingSmsAvailablephonenumbersUnsupportedMediaType creates a GetRoutingSmsAvailablephonenumbersUnsupportedMediaType with default headers values
func NewGetRoutingSmsAvailablephonenumbersUnsupportedMediaType() *GetRoutingSmsAvailablephonenumbersUnsupportedMediaType {
	return &GetRoutingSmsAvailablephonenumbersUnsupportedMediaType{}
}

/*
GetRoutingSmsAvailablephonenumbersUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetRoutingSmsAvailablephonenumbersUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing sms availablephonenumbers unsupported media type response has a 2xx status code
func (o *GetRoutingSmsAvailablephonenumbersUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing sms availablephonenumbers unsupported media type response has a 3xx status code
func (o *GetRoutingSmsAvailablephonenumbersUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing sms availablephonenumbers unsupported media type response has a 4xx status code
func (o *GetRoutingSmsAvailablephonenumbersUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing sms availablephonenumbers unsupported media type response has a 5xx status code
func (o *GetRoutingSmsAvailablephonenumbersUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing sms availablephonenumbers unsupported media type response a status code equal to that given
func (o *GetRoutingSmsAvailablephonenumbersUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetRoutingSmsAvailablephonenumbersUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/sms/availablephonenumbers][%d] getRoutingSmsAvailablephonenumbersUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetRoutingSmsAvailablephonenumbersUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/sms/availablephonenumbers][%d] getRoutingSmsAvailablephonenumbersUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetRoutingSmsAvailablephonenumbersUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingSmsAvailablephonenumbersUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingSmsAvailablephonenumbersTooManyRequests creates a GetRoutingSmsAvailablephonenumbersTooManyRequests with default headers values
func NewGetRoutingSmsAvailablephonenumbersTooManyRequests() *GetRoutingSmsAvailablephonenumbersTooManyRequests {
	return &GetRoutingSmsAvailablephonenumbersTooManyRequests{}
}

/*
GetRoutingSmsAvailablephonenumbersTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetRoutingSmsAvailablephonenumbersTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing sms availablephonenumbers too many requests response has a 2xx status code
func (o *GetRoutingSmsAvailablephonenumbersTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing sms availablephonenumbers too many requests response has a 3xx status code
func (o *GetRoutingSmsAvailablephonenumbersTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing sms availablephonenumbers too many requests response has a 4xx status code
func (o *GetRoutingSmsAvailablephonenumbersTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing sms availablephonenumbers too many requests response has a 5xx status code
func (o *GetRoutingSmsAvailablephonenumbersTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing sms availablephonenumbers too many requests response a status code equal to that given
func (o *GetRoutingSmsAvailablephonenumbersTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetRoutingSmsAvailablephonenumbersTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/sms/availablephonenumbers][%d] getRoutingSmsAvailablephonenumbersTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRoutingSmsAvailablephonenumbersTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/sms/availablephonenumbers][%d] getRoutingSmsAvailablephonenumbersTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRoutingSmsAvailablephonenumbersTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingSmsAvailablephonenumbersTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingSmsAvailablephonenumbersInternalServerError creates a GetRoutingSmsAvailablephonenumbersInternalServerError with default headers values
func NewGetRoutingSmsAvailablephonenumbersInternalServerError() *GetRoutingSmsAvailablephonenumbersInternalServerError {
	return &GetRoutingSmsAvailablephonenumbersInternalServerError{}
}

/*
GetRoutingSmsAvailablephonenumbersInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetRoutingSmsAvailablephonenumbersInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing sms availablephonenumbers internal server error response has a 2xx status code
func (o *GetRoutingSmsAvailablephonenumbersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing sms availablephonenumbers internal server error response has a 3xx status code
func (o *GetRoutingSmsAvailablephonenumbersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing sms availablephonenumbers internal server error response has a 4xx status code
func (o *GetRoutingSmsAvailablephonenumbersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing sms availablephonenumbers internal server error response has a 5xx status code
func (o *GetRoutingSmsAvailablephonenumbersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get routing sms availablephonenumbers internal server error response a status code equal to that given
func (o *GetRoutingSmsAvailablephonenumbersInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetRoutingSmsAvailablephonenumbersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/sms/availablephonenumbers][%d] getRoutingSmsAvailablephonenumbersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRoutingSmsAvailablephonenumbersInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/sms/availablephonenumbers][%d] getRoutingSmsAvailablephonenumbersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRoutingSmsAvailablephonenumbersInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingSmsAvailablephonenumbersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingSmsAvailablephonenumbersServiceUnavailable creates a GetRoutingSmsAvailablephonenumbersServiceUnavailable with default headers values
func NewGetRoutingSmsAvailablephonenumbersServiceUnavailable() *GetRoutingSmsAvailablephonenumbersServiceUnavailable {
	return &GetRoutingSmsAvailablephonenumbersServiceUnavailable{}
}

/*
GetRoutingSmsAvailablephonenumbersServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetRoutingSmsAvailablephonenumbersServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing sms availablephonenumbers service unavailable response has a 2xx status code
func (o *GetRoutingSmsAvailablephonenumbersServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing sms availablephonenumbers service unavailable response has a 3xx status code
func (o *GetRoutingSmsAvailablephonenumbersServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing sms availablephonenumbers service unavailable response has a 4xx status code
func (o *GetRoutingSmsAvailablephonenumbersServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing sms availablephonenumbers service unavailable response has a 5xx status code
func (o *GetRoutingSmsAvailablephonenumbersServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get routing sms availablephonenumbers service unavailable response a status code equal to that given
func (o *GetRoutingSmsAvailablephonenumbersServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetRoutingSmsAvailablephonenumbersServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/sms/availablephonenumbers][%d] getRoutingSmsAvailablephonenumbersServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetRoutingSmsAvailablephonenumbersServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/sms/availablephonenumbers][%d] getRoutingSmsAvailablephonenumbersServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetRoutingSmsAvailablephonenumbersServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingSmsAvailablephonenumbersServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingSmsAvailablephonenumbersGatewayTimeout creates a GetRoutingSmsAvailablephonenumbersGatewayTimeout with default headers values
func NewGetRoutingSmsAvailablephonenumbersGatewayTimeout() *GetRoutingSmsAvailablephonenumbersGatewayTimeout {
	return &GetRoutingSmsAvailablephonenumbersGatewayTimeout{}
}

/*
GetRoutingSmsAvailablephonenumbersGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetRoutingSmsAvailablephonenumbersGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing sms availablephonenumbers gateway timeout response has a 2xx status code
func (o *GetRoutingSmsAvailablephonenumbersGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing sms availablephonenumbers gateway timeout response has a 3xx status code
func (o *GetRoutingSmsAvailablephonenumbersGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing sms availablephonenumbers gateway timeout response has a 4xx status code
func (o *GetRoutingSmsAvailablephonenumbersGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing sms availablephonenumbers gateway timeout response has a 5xx status code
func (o *GetRoutingSmsAvailablephonenumbersGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get routing sms availablephonenumbers gateway timeout response a status code equal to that given
func (o *GetRoutingSmsAvailablephonenumbersGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetRoutingSmsAvailablephonenumbersGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/sms/availablephonenumbers][%d] getRoutingSmsAvailablephonenumbersGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetRoutingSmsAvailablephonenumbersGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/sms/availablephonenumbers][%d] getRoutingSmsAvailablephonenumbersGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetRoutingSmsAvailablephonenumbersGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingSmsAvailablephonenumbersGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
