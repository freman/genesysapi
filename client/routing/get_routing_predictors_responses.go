// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetRoutingPredictorsReader is a Reader for the GetRoutingPredictors structure.
type GetRoutingPredictorsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRoutingPredictorsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRoutingPredictorsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRoutingPredictorsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRoutingPredictorsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRoutingPredictorsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRoutingPredictorsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetRoutingPredictorsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetRoutingPredictorsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetRoutingPredictorsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetRoutingPredictorsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRoutingPredictorsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetRoutingPredictorsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetRoutingPredictorsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRoutingPredictorsOK creates a GetRoutingPredictorsOK with default headers values
func NewGetRoutingPredictorsOK() *GetRoutingPredictorsOK {
	return &GetRoutingPredictorsOK{}
}

/*
GetRoutingPredictorsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetRoutingPredictorsOK struct {
	Payload *models.PredictorListing
}

// IsSuccess returns true when this get routing predictors o k response has a 2xx status code
func (o *GetRoutingPredictorsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get routing predictors o k response has a 3xx status code
func (o *GetRoutingPredictorsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing predictors o k response has a 4xx status code
func (o *GetRoutingPredictorsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing predictors o k response has a 5xx status code
func (o *GetRoutingPredictorsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing predictors o k response a status code equal to that given
func (o *GetRoutingPredictorsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetRoutingPredictorsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors][%d] getRoutingPredictorsOK  %+v", 200, o.Payload)
}

func (o *GetRoutingPredictorsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors][%d] getRoutingPredictorsOK  %+v", 200, o.Payload)
}

func (o *GetRoutingPredictorsOK) GetPayload() *models.PredictorListing {
	return o.Payload
}

func (o *GetRoutingPredictorsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PredictorListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingPredictorsBadRequest creates a GetRoutingPredictorsBadRequest with default headers values
func NewGetRoutingPredictorsBadRequest() *GetRoutingPredictorsBadRequest {
	return &GetRoutingPredictorsBadRequest{}
}

/*
GetRoutingPredictorsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetRoutingPredictorsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing predictors bad request response has a 2xx status code
func (o *GetRoutingPredictorsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing predictors bad request response has a 3xx status code
func (o *GetRoutingPredictorsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing predictors bad request response has a 4xx status code
func (o *GetRoutingPredictorsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing predictors bad request response has a 5xx status code
func (o *GetRoutingPredictorsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing predictors bad request response a status code equal to that given
func (o *GetRoutingPredictorsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetRoutingPredictorsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors][%d] getRoutingPredictorsBadRequest  %+v", 400, o.Payload)
}

func (o *GetRoutingPredictorsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors][%d] getRoutingPredictorsBadRequest  %+v", 400, o.Payload)
}

func (o *GetRoutingPredictorsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingPredictorsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingPredictorsUnauthorized creates a GetRoutingPredictorsUnauthorized with default headers values
func NewGetRoutingPredictorsUnauthorized() *GetRoutingPredictorsUnauthorized {
	return &GetRoutingPredictorsUnauthorized{}
}

/*
GetRoutingPredictorsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetRoutingPredictorsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing predictors unauthorized response has a 2xx status code
func (o *GetRoutingPredictorsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing predictors unauthorized response has a 3xx status code
func (o *GetRoutingPredictorsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing predictors unauthorized response has a 4xx status code
func (o *GetRoutingPredictorsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing predictors unauthorized response has a 5xx status code
func (o *GetRoutingPredictorsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing predictors unauthorized response a status code equal to that given
func (o *GetRoutingPredictorsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetRoutingPredictorsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors][%d] getRoutingPredictorsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRoutingPredictorsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors][%d] getRoutingPredictorsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRoutingPredictorsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingPredictorsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingPredictorsForbidden creates a GetRoutingPredictorsForbidden with default headers values
func NewGetRoutingPredictorsForbidden() *GetRoutingPredictorsForbidden {
	return &GetRoutingPredictorsForbidden{}
}

/*
GetRoutingPredictorsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetRoutingPredictorsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing predictors forbidden response has a 2xx status code
func (o *GetRoutingPredictorsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing predictors forbidden response has a 3xx status code
func (o *GetRoutingPredictorsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing predictors forbidden response has a 4xx status code
func (o *GetRoutingPredictorsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing predictors forbidden response has a 5xx status code
func (o *GetRoutingPredictorsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing predictors forbidden response a status code equal to that given
func (o *GetRoutingPredictorsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetRoutingPredictorsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors][%d] getRoutingPredictorsForbidden  %+v", 403, o.Payload)
}

func (o *GetRoutingPredictorsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors][%d] getRoutingPredictorsForbidden  %+v", 403, o.Payload)
}

func (o *GetRoutingPredictorsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingPredictorsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingPredictorsNotFound creates a GetRoutingPredictorsNotFound with default headers values
func NewGetRoutingPredictorsNotFound() *GetRoutingPredictorsNotFound {
	return &GetRoutingPredictorsNotFound{}
}

/*
GetRoutingPredictorsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetRoutingPredictorsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing predictors not found response has a 2xx status code
func (o *GetRoutingPredictorsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing predictors not found response has a 3xx status code
func (o *GetRoutingPredictorsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing predictors not found response has a 4xx status code
func (o *GetRoutingPredictorsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing predictors not found response has a 5xx status code
func (o *GetRoutingPredictorsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing predictors not found response a status code equal to that given
func (o *GetRoutingPredictorsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetRoutingPredictorsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors][%d] getRoutingPredictorsNotFound  %+v", 404, o.Payload)
}

func (o *GetRoutingPredictorsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors][%d] getRoutingPredictorsNotFound  %+v", 404, o.Payload)
}

func (o *GetRoutingPredictorsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingPredictorsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingPredictorsRequestTimeout creates a GetRoutingPredictorsRequestTimeout with default headers values
func NewGetRoutingPredictorsRequestTimeout() *GetRoutingPredictorsRequestTimeout {
	return &GetRoutingPredictorsRequestTimeout{}
}

/*
GetRoutingPredictorsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetRoutingPredictorsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing predictors request timeout response has a 2xx status code
func (o *GetRoutingPredictorsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing predictors request timeout response has a 3xx status code
func (o *GetRoutingPredictorsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing predictors request timeout response has a 4xx status code
func (o *GetRoutingPredictorsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing predictors request timeout response has a 5xx status code
func (o *GetRoutingPredictorsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing predictors request timeout response a status code equal to that given
func (o *GetRoutingPredictorsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetRoutingPredictorsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors][%d] getRoutingPredictorsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetRoutingPredictorsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors][%d] getRoutingPredictorsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetRoutingPredictorsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingPredictorsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingPredictorsRequestEntityTooLarge creates a GetRoutingPredictorsRequestEntityTooLarge with default headers values
func NewGetRoutingPredictorsRequestEntityTooLarge() *GetRoutingPredictorsRequestEntityTooLarge {
	return &GetRoutingPredictorsRequestEntityTooLarge{}
}

/*
GetRoutingPredictorsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetRoutingPredictorsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing predictors request entity too large response has a 2xx status code
func (o *GetRoutingPredictorsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing predictors request entity too large response has a 3xx status code
func (o *GetRoutingPredictorsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing predictors request entity too large response has a 4xx status code
func (o *GetRoutingPredictorsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing predictors request entity too large response has a 5xx status code
func (o *GetRoutingPredictorsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing predictors request entity too large response a status code equal to that given
func (o *GetRoutingPredictorsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetRoutingPredictorsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors][%d] getRoutingPredictorsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetRoutingPredictorsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors][%d] getRoutingPredictorsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetRoutingPredictorsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingPredictorsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingPredictorsUnsupportedMediaType creates a GetRoutingPredictorsUnsupportedMediaType with default headers values
func NewGetRoutingPredictorsUnsupportedMediaType() *GetRoutingPredictorsUnsupportedMediaType {
	return &GetRoutingPredictorsUnsupportedMediaType{}
}

/*
GetRoutingPredictorsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetRoutingPredictorsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing predictors unsupported media type response has a 2xx status code
func (o *GetRoutingPredictorsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing predictors unsupported media type response has a 3xx status code
func (o *GetRoutingPredictorsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing predictors unsupported media type response has a 4xx status code
func (o *GetRoutingPredictorsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing predictors unsupported media type response has a 5xx status code
func (o *GetRoutingPredictorsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing predictors unsupported media type response a status code equal to that given
func (o *GetRoutingPredictorsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetRoutingPredictorsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors][%d] getRoutingPredictorsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetRoutingPredictorsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors][%d] getRoutingPredictorsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetRoutingPredictorsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingPredictorsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingPredictorsTooManyRequests creates a GetRoutingPredictorsTooManyRequests with default headers values
func NewGetRoutingPredictorsTooManyRequests() *GetRoutingPredictorsTooManyRequests {
	return &GetRoutingPredictorsTooManyRequests{}
}

/*
GetRoutingPredictorsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetRoutingPredictorsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing predictors too many requests response has a 2xx status code
func (o *GetRoutingPredictorsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing predictors too many requests response has a 3xx status code
func (o *GetRoutingPredictorsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing predictors too many requests response has a 4xx status code
func (o *GetRoutingPredictorsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing predictors too many requests response has a 5xx status code
func (o *GetRoutingPredictorsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing predictors too many requests response a status code equal to that given
func (o *GetRoutingPredictorsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetRoutingPredictorsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors][%d] getRoutingPredictorsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRoutingPredictorsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors][%d] getRoutingPredictorsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRoutingPredictorsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingPredictorsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingPredictorsInternalServerError creates a GetRoutingPredictorsInternalServerError with default headers values
func NewGetRoutingPredictorsInternalServerError() *GetRoutingPredictorsInternalServerError {
	return &GetRoutingPredictorsInternalServerError{}
}

/*
GetRoutingPredictorsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetRoutingPredictorsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing predictors internal server error response has a 2xx status code
func (o *GetRoutingPredictorsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing predictors internal server error response has a 3xx status code
func (o *GetRoutingPredictorsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing predictors internal server error response has a 4xx status code
func (o *GetRoutingPredictorsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing predictors internal server error response has a 5xx status code
func (o *GetRoutingPredictorsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get routing predictors internal server error response a status code equal to that given
func (o *GetRoutingPredictorsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetRoutingPredictorsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors][%d] getRoutingPredictorsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRoutingPredictorsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors][%d] getRoutingPredictorsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRoutingPredictorsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingPredictorsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingPredictorsServiceUnavailable creates a GetRoutingPredictorsServiceUnavailable with default headers values
func NewGetRoutingPredictorsServiceUnavailable() *GetRoutingPredictorsServiceUnavailable {
	return &GetRoutingPredictorsServiceUnavailable{}
}

/*
GetRoutingPredictorsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetRoutingPredictorsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing predictors service unavailable response has a 2xx status code
func (o *GetRoutingPredictorsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing predictors service unavailable response has a 3xx status code
func (o *GetRoutingPredictorsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing predictors service unavailable response has a 4xx status code
func (o *GetRoutingPredictorsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing predictors service unavailable response has a 5xx status code
func (o *GetRoutingPredictorsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get routing predictors service unavailable response a status code equal to that given
func (o *GetRoutingPredictorsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetRoutingPredictorsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors][%d] getRoutingPredictorsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetRoutingPredictorsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors][%d] getRoutingPredictorsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetRoutingPredictorsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingPredictorsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingPredictorsGatewayTimeout creates a GetRoutingPredictorsGatewayTimeout with default headers values
func NewGetRoutingPredictorsGatewayTimeout() *GetRoutingPredictorsGatewayTimeout {
	return &GetRoutingPredictorsGatewayTimeout{}
}

/*
GetRoutingPredictorsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetRoutingPredictorsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing predictors gateway timeout response has a 2xx status code
func (o *GetRoutingPredictorsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing predictors gateway timeout response has a 3xx status code
func (o *GetRoutingPredictorsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing predictors gateway timeout response has a 4xx status code
func (o *GetRoutingPredictorsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing predictors gateway timeout response has a 5xx status code
func (o *GetRoutingPredictorsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get routing predictors gateway timeout response a status code equal to that given
func (o *GetRoutingPredictorsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetRoutingPredictorsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors][%d] getRoutingPredictorsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetRoutingPredictorsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors][%d] getRoutingPredictorsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetRoutingPredictorsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingPredictorsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
