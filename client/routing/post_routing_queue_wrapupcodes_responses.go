// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostRoutingQueueWrapupcodesReader is a Reader for the PostRoutingQueueWrapupcodes structure.
type PostRoutingQueueWrapupcodesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRoutingQueueWrapupcodesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostRoutingQueueWrapupcodesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostRoutingQueueWrapupcodesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostRoutingQueueWrapupcodesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostRoutingQueueWrapupcodesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostRoutingQueueWrapupcodesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostRoutingQueueWrapupcodesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostRoutingQueueWrapupcodesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostRoutingQueueWrapupcodesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostRoutingQueueWrapupcodesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostRoutingQueueWrapupcodesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostRoutingQueueWrapupcodesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostRoutingQueueWrapupcodesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostRoutingQueueWrapupcodesOK creates a PostRoutingQueueWrapupcodesOK with default headers values
func NewPostRoutingQueueWrapupcodesOK() *PostRoutingQueueWrapupcodesOK {
	return &PostRoutingQueueWrapupcodesOK{}
}

/*PostRoutingQueueWrapupcodesOK handles this case with default header values.

successful operation
*/
type PostRoutingQueueWrapupcodesOK struct {
	Payload []*models.WrapupCode
}

func (o *PostRoutingQueueWrapupcodesOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/wrapupcodes][%d] postRoutingQueueWrapupcodesOK  %+v", 200, o.Payload)
}

func (o *PostRoutingQueueWrapupcodesOK) GetPayload() []*models.WrapupCode {
	return o.Payload
}

func (o *PostRoutingQueueWrapupcodesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingQueueWrapupcodesBadRequest creates a PostRoutingQueueWrapupcodesBadRequest with default headers values
func NewPostRoutingQueueWrapupcodesBadRequest() *PostRoutingQueueWrapupcodesBadRequest {
	return &PostRoutingQueueWrapupcodesBadRequest{}
}

/*PostRoutingQueueWrapupcodesBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostRoutingQueueWrapupcodesBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PostRoutingQueueWrapupcodesBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/wrapupcodes][%d] postRoutingQueueWrapupcodesBadRequest  %+v", 400, o.Payload)
}

func (o *PostRoutingQueueWrapupcodesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingQueueWrapupcodesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingQueueWrapupcodesUnauthorized creates a PostRoutingQueueWrapupcodesUnauthorized with default headers values
func NewPostRoutingQueueWrapupcodesUnauthorized() *PostRoutingQueueWrapupcodesUnauthorized {
	return &PostRoutingQueueWrapupcodesUnauthorized{}
}

/*PostRoutingQueueWrapupcodesUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PostRoutingQueueWrapupcodesUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PostRoutingQueueWrapupcodesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/wrapupcodes][%d] postRoutingQueueWrapupcodesUnauthorized  %+v", 401, o.Payload)
}

func (o *PostRoutingQueueWrapupcodesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingQueueWrapupcodesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingQueueWrapupcodesForbidden creates a PostRoutingQueueWrapupcodesForbidden with default headers values
func NewPostRoutingQueueWrapupcodesForbidden() *PostRoutingQueueWrapupcodesForbidden {
	return &PostRoutingQueueWrapupcodesForbidden{}
}

/*PostRoutingQueueWrapupcodesForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PostRoutingQueueWrapupcodesForbidden struct {
	Payload *models.ErrorBody
}

func (o *PostRoutingQueueWrapupcodesForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/wrapupcodes][%d] postRoutingQueueWrapupcodesForbidden  %+v", 403, o.Payload)
}

func (o *PostRoutingQueueWrapupcodesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingQueueWrapupcodesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingQueueWrapupcodesNotFound creates a PostRoutingQueueWrapupcodesNotFound with default headers values
func NewPostRoutingQueueWrapupcodesNotFound() *PostRoutingQueueWrapupcodesNotFound {
	return &PostRoutingQueueWrapupcodesNotFound{}
}

/*PostRoutingQueueWrapupcodesNotFound handles this case with default header values.

The requested resource was not found.
*/
type PostRoutingQueueWrapupcodesNotFound struct {
	Payload *models.ErrorBody
}

func (o *PostRoutingQueueWrapupcodesNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/wrapupcodes][%d] postRoutingQueueWrapupcodesNotFound  %+v", 404, o.Payload)
}

func (o *PostRoutingQueueWrapupcodesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingQueueWrapupcodesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingQueueWrapupcodesRequestTimeout creates a PostRoutingQueueWrapupcodesRequestTimeout with default headers values
func NewPostRoutingQueueWrapupcodesRequestTimeout() *PostRoutingQueueWrapupcodesRequestTimeout {
	return &PostRoutingQueueWrapupcodesRequestTimeout{}
}

/*PostRoutingQueueWrapupcodesRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostRoutingQueueWrapupcodesRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostRoutingQueueWrapupcodesRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/wrapupcodes][%d] postRoutingQueueWrapupcodesRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostRoutingQueueWrapupcodesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingQueueWrapupcodesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingQueueWrapupcodesRequestEntityTooLarge creates a PostRoutingQueueWrapupcodesRequestEntityTooLarge with default headers values
func NewPostRoutingQueueWrapupcodesRequestEntityTooLarge() *PostRoutingQueueWrapupcodesRequestEntityTooLarge {
	return &PostRoutingQueueWrapupcodesRequestEntityTooLarge{}
}

/*PostRoutingQueueWrapupcodesRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type PostRoutingQueueWrapupcodesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PostRoutingQueueWrapupcodesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/wrapupcodes][%d] postRoutingQueueWrapupcodesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostRoutingQueueWrapupcodesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingQueueWrapupcodesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingQueueWrapupcodesUnsupportedMediaType creates a PostRoutingQueueWrapupcodesUnsupportedMediaType with default headers values
func NewPostRoutingQueueWrapupcodesUnsupportedMediaType() *PostRoutingQueueWrapupcodesUnsupportedMediaType {
	return &PostRoutingQueueWrapupcodesUnsupportedMediaType{}
}

/*PostRoutingQueueWrapupcodesUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostRoutingQueueWrapupcodesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PostRoutingQueueWrapupcodesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/wrapupcodes][%d] postRoutingQueueWrapupcodesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostRoutingQueueWrapupcodesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingQueueWrapupcodesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingQueueWrapupcodesTooManyRequests creates a PostRoutingQueueWrapupcodesTooManyRequests with default headers values
func NewPostRoutingQueueWrapupcodesTooManyRequests() *PostRoutingQueueWrapupcodesTooManyRequests {
	return &PostRoutingQueueWrapupcodesTooManyRequests{}
}

/*PostRoutingQueueWrapupcodesTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostRoutingQueueWrapupcodesTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PostRoutingQueueWrapupcodesTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/wrapupcodes][%d] postRoutingQueueWrapupcodesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostRoutingQueueWrapupcodesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingQueueWrapupcodesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingQueueWrapupcodesInternalServerError creates a PostRoutingQueueWrapupcodesInternalServerError with default headers values
func NewPostRoutingQueueWrapupcodesInternalServerError() *PostRoutingQueueWrapupcodesInternalServerError {
	return &PostRoutingQueueWrapupcodesInternalServerError{}
}

/*PostRoutingQueueWrapupcodesInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostRoutingQueueWrapupcodesInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PostRoutingQueueWrapupcodesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/wrapupcodes][%d] postRoutingQueueWrapupcodesInternalServerError  %+v", 500, o.Payload)
}

func (o *PostRoutingQueueWrapupcodesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingQueueWrapupcodesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingQueueWrapupcodesServiceUnavailable creates a PostRoutingQueueWrapupcodesServiceUnavailable with default headers values
func NewPostRoutingQueueWrapupcodesServiceUnavailable() *PostRoutingQueueWrapupcodesServiceUnavailable {
	return &PostRoutingQueueWrapupcodesServiceUnavailable{}
}

/*PostRoutingQueueWrapupcodesServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostRoutingQueueWrapupcodesServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PostRoutingQueueWrapupcodesServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/wrapupcodes][%d] postRoutingQueueWrapupcodesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostRoutingQueueWrapupcodesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingQueueWrapupcodesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingQueueWrapupcodesGatewayTimeout creates a PostRoutingQueueWrapupcodesGatewayTimeout with default headers values
func NewPostRoutingQueueWrapupcodesGatewayTimeout() *PostRoutingQueueWrapupcodesGatewayTimeout {
	return &PostRoutingQueueWrapupcodesGatewayTimeout{}
}

/*PostRoutingQueueWrapupcodesGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PostRoutingQueueWrapupcodesGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostRoutingQueueWrapupcodesGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/wrapupcodes][%d] postRoutingQueueWrapupcodesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostRoutingQueueWrapupcodesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingQueueWrapupcodesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
