// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostRoutingEmailDomainTestconnectionReader is a Reader for the PostRoutingEmailDomainTestconnection structure.
type PostRoutingEmailDomainTestconnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRoutingEmailDomainTestconnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostRoutingEmailDomainTestconnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostRoutingEmailDomainTestconnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostRoutingEmailDomainTestconnectionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostRoutingEmailDomainTestconnectionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostRoutingEmailDomainTestconnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostRoutingEmailDomainTestconnectionRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostRoutingEmailDomainTestconnectionRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostRoutingEmailDomainTestconnectionUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostRoutingEmailDomainTestconnectionTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostRoutingEmailDomainTestconnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostRoutingEmailDomainTestconnectionServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostRoutingEmailDomainTestconnectionGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostRoutingEmailDomainTestconnectionOK creates a PostRoutingEmailDomainTestconnectionOK with default headers values
func NewPostRoutingEmailDomainTestconnectionOK() *PostRoutingEmailDomainTestconnectionOK {
	return &PostRoutingEmailDomainTestconnectionOK{}
}

/*
PostRoutingEmailDomainTestconnectionOK describes a response with status code 200, with default header values.

successful operation
*/
type PostRoutingEmailDomainTestconnectionOK struct {
	Payload *models.TestMessage
}

// IsSuccess returns true when this post routing email domain testconnection o k response has a 2xx status code
func (o *PostRoutingEmailDomainTestconnectionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post routing email domain testconnection o k response has a 3xx status code
func (o *PostRoutingEmailDomainTestconnectionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email domain testconnection o k response has a 4xx status code
func (o *PostRoutingEmailDomainTestconnectionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing email domain testconnection o k response has a 5xx status code
func (o *PostRoutingEmailDomainTestconnectionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing email domain testconnection o k response a status code equal to that given
func (o *PostRoutingEmailDomainTestconnectionOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostRoutingEmailDomainTestconnectionOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains/{domainId}/testconnection][%d] postRoutingEmailDomainTestconnectionOK  %+v", 200, o.Payload)
}

func (o *PostRoutingEmailDomainTestconnectionOK) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains/{domainId}/testconnection][%d] postRoutingEmailDomainTestconnectionOK  %+v", 200, o.Payload)
}

func (o *PostRoutingEmailDomainTestconnectionOK) GetPayload() *models.TestMessage {
	return o.Payload
}

func (o *PostRoutingEmailDomainTestconnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TestMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailDomainTestconnectionBadRequest creates a PostRoutingEmailDomainTestconnectionBadRequest with default headers values
func NewPostRoutingEmailDomainTestconnectionBadRequest() *PostRoutingEmailDomainTestconnectionBadRequest {
	return &PostRoutingEmailDomainTestconnectionBadRequest{}
}

/*
PostRoutingEmailDomainTestconnectionBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostRoutingEmailDomainTestconnectionBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email domain testconnection bad request response has a 2xx status code
func (o *PostRoutingEmailDomainTestconnectionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email domain testconnection bad request response has a 3xx status code
func (o *PostRoutingEmailDomainTestconnectionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email domain testconnection bad request response has a 4xx status code
func (o *PostRoutingEmailDomainTestconnectionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing email domain testconnection bad request response has a 5xx status code
func (o *PostRoutingEmailDomainTestconnectionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing email domain testconnection bad request response a status code equal to that given
func (o *PostRoutingEmailDomainTestconnectionBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostRoutingEmailDomainTestconnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains/{domainId}/testconnection][%d] postRoutingEmailDomainTestconnectionBadRequest  %+v", 400, o.Payload)
}

func (o *PostRoutingEmailDomainTestconnectionBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains/{domainId}/testconnection][%d] postRoutingEmailDomainTestconnectionBadRequest  %+v", 400, o.Payload)
}

func (o *PostRoutingEmailDomainTestconnectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailDomainTestconnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailDomainTestconnectionUnauthorized creates a PostRoutingEmailDomainTestconnectionUnauthorized with default headers values
func NewPostRoutingEmailDomainTestconnectionUnauthorized() *PostRoutingEmailDomainTestconnectionUnauthorized {
	return &PostRoutingEmailDomainTestconnectionUnauthorized{}
}

/*
PostRoutingEmailDomainTestconnectionUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostRoutingEmailDomainTestconnectionUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email domain testconnection unauthorized response has a 2xx status code
func (o *PostRoutingEmailDomainTestconnectionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email domain testconnection unauthorized response has a 3xx status code
func (o *PostRoutingEmailDomainTestconnectionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email domain testconnection unauthorized response has a 4xx status code
func (o *PostRoutingEmailDomainTestconnectionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing email domain testconnection unauthorized response has a 5xx status code
func (o *PostRoutingEmailDomainTestconnectionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing email domain testconnection unauthorized response a status code equal to that given
func (o *PostRoutingEmailDomainTestconnectionUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostRoutingEmailDomainTestconnectionUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains/{domainId}/testconnection][%d] postRoutingEmailDomainTestconnectionUnauthorized  %+v", 401, o.Payload)
}

func (o *PostRoutingEmailDomainTestconnectionUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains/{domainId}/testconnection][%d] postRoutingEmailDomainTestconnectionUnauthorized  %+v", 401, o.Payload)
}

func (o *PostRoutingEmailDomainTestconnectionUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailDomainTestconnectionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailDomainTestconnectionForbidden creates a PostRoutingEmailDomainTestconnectionForbidden with default headers values
func NewPostRoutingEmailDomainTestconnectionForbidden() *PostRoutingEmailDomainTestconnectionForbidden {
	return &PostRoutingEmailDomainTestconnectionForbidden{}
}

/*
PostRoutingEmailDomainTestconnectionForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostRoutingEmailDomainTestconnectionForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email domain testconnection forbidden response has a 2xx status code
func (o *PostRoutingEmailDomainTestconnectionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email domain testconnection forbidden response has a 3xx status code
func (o *PostRoutingEmailDomainTestconnectionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email domain testconnection forbidden response has a 4xx status code
func (o *PostRoutingEmailDomainTestconnectionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing email domain testconnection forbidden response has a 5xx status code
func (o *PostRoutingEmailDomainTestconnectionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing email domain testconnection forbidden response a status code equal to that given
func (o *PostRoutingEmailDomainTestconnectionForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostRoutingEmailDomainTestconnectionForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains/{domainId}/testconnection][%d] postRoutingEmailDomainTestconnectionForbidden  %+v", 403, o.Payload)
}

func (o *PostRoutingEmailDomainTestconnectionForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains/{domainId}/testconnection][%d] postRoutingEmailDomainTestconnectionForbidden  %+v", 403, o.Payload)
}

func (o *PostRoutingEmailDomainTestconnectionForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailDomainTestconnectionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailDomainTestconnectionNotFound creates a PostRoutingEmailDomainTestconnectionNotFound with default headers values
func NewPostRoutingEmailDomainTestconnectionNotFound() *PostRoutingEmailDomainTestconnectionNotFound {
	return &PostRoutingEmailDomainTestconnectionNotFound{}
}

/*
PostRoutingEmailDomainTestconnectionNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostRoutingEmailDomainTestconnectionNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email domain testconnection not found response has a 2xx status code
func (o *PostRoutingEmailDomainTestconnectionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email domain testconnection not found response has a 3xx status code
func (o *PostRoutingEmailDomainTestconnectionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email domain testconnection not found response has a 4xx status code
func (o *PostRoutingEmailDomainTestconnectionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing email domain testconnection not found response has a 5xx status code
func (o *PostRoutingEmailDomainTestconnectionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing email domain testconnection not found response a status code equal to that given
func (o *PostRoutingEmailDomainTestconnectionNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostRoutingEmailDomainTestconnectionNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains/{domainId}/testconnection][%d] postRoutingEmailDomainTestconnectionNotFound  %+v", 404, o.Payload)
}

func (o *PostRoutingEmailDomainTestconnectionNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains/{domainId}/testconnection][%d] postRoutingEmailDomainTestconnectionNotFound  %+v", 404, o.Payload)
}

func (o *PostRoutingEmailDomainTestconnectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailDomainTestconnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailDomainTestconnectionRequestTimeout creates a PostRoutingEmailDomainTestconnectionRequestTimeout with default headers values
func NewPostRoutingEmailDomainTestconnectionRequestTimeout() *PostRoutingEmailDomainTestconnectionRequestTimeout {
	return &PostRoutingEmailDomainTestconnectionRequestTimeout{}
}

/*
PostRoutingEmailDomainTestconnectionRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostRoutingEmailDomainTestconnectionRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email domain testconnection request timeout response has a 2xx status code
func (o *PostRoutingEmailDomainTestconnectionRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email domain testconnection request timeout response has a 3xx status code
func (o *PostRoutingEmailDomainTestconnectionRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email domain testconnection request timeout response has a 4xx status code
func (o *PostRoutingEmailDomainTestconnectionRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing email domain testconnection request timeout response has a 5xx status code
func (o *PostRoutingEmailDomainTestconnectionRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing email domain testconnection request timeout response a status code equal to that given
func (o *PostRoutingEmailDomainTestconnectionRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostRoutingEmailDomainTestconnectionRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains/{domainId}/testconnection][%d] postRoutingEmailDomainTestconnectionRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostRoutingEmailDomainTestconnectionRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains/{domainId}/testconnection][%d] postRoutingEmailDomainTestconnectionRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostRoutingEmailDomainTestconnectionRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailDomainTestconnectionRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailDomainTestconnectionRequestEntityTooLarge creates a PostRoutingEmailDomainTestconnectionRequestEntityTooLarge with default headers values
func NewPostRoutingEmailDomainTestconnectionRequestEntityTooLarge() *PostRoutingEmailDomainTestconnectionRequestEntityTooLarge {
	return &PostRoutingEmailDomainTestconnectionRequestEntityTooLarge{}
}

/*
PostRoutingEmailDomainTestconnectionRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostRoutingEmailDomainTestconnectionRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email domain testconnection request entity too large response has a 2xx status code
func (o *PostRoutingEmailDomainTestconnectionRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email domain testconnection request entity too large response has a 3xx status code
func (o *PostRoutingEmailDomainTestconnectionRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email domain testconnection request entity too large response has a 4xx status code
func (o *PostRoutingEmailDomainTestconnectionRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing email domain testconnection request entity too large response has a 5xx status code
func (o *PostRoutingEmailDomainTestconnectionRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing email domain testconnection request entity too large response a status code equal to that given
func (o *PostRoutingEmailDomainTestconnectionRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostRoutingEmailDomainTestconnectionRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains/{domainId}/testconnection][%d] postRoutingEmailDomainTestconnectionRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostRoutingEmailDomainTestconnectionRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains/{domainId}/testconnection][%d] postRoutingEmailDomainTestconnectionRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostRoutingEmailDomainTestconnectionRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailDomainTestconnectionRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailDomainTestconnectionUnsupportedMediaType creates a PostRoutingEmailDomainTestconnectionUnsupportedMediaType with default headers values
func NewPostRoutingEmailDomainTestconnectionUnsupportedMediaType() *PostRoutingEmailDomainTestconnectionUnsupportedMediaType {
	return &PostRoutingEmailDomainTestconnectionUnsupportedMediaType{}
}

/*
PostRoutingEmailDomainTestconnectionUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostRoutingEmailDomainTestconnectionUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email domain testconnection unsupported media type response has a 2xx status code
func (o *PostRoutingEmailDomainTestconnectionUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email domain testconnection unsupported media type response has a 3xx status code
func (o *PostRoutingEmailDomainTestconnectionUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email domain testconnection unsupported media type response has a 4xx status code
func (o *PostRoutingEmailDomainTestconnectionUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing email domain testconnection unsupported media type response has a 5xx status code
func (o *PostRoutingEmailDomainTestconnectionUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing email domain testconnection unsupported media type response a status code equal to that given
func (o *PostRoutingEmailDomainTestconnectionUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostRoutingEmailDomainTestconnectionUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains/{domainId}/testconnection][%d] postRoutingEmailDomainTestconnectionUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostRoutingEmailDomainTestconnectionUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains/{domainId}/testconnection][%d] postRoutingEmailDomainTestconnectionUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostRoutingEmailDomainTestconnectionUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailDomainTestconnectionUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailDomainTestconnectionTooManyRequests creates a PostRoutingEmailDomainTestconnectionTooManyRequests with default headers values
func NewPostRoutingEmailDomainTestconnectionTooManyRequests() *PostRoutingEmailDomainTestconnectionTooManyRequests {
	return &PostRoutingEmailDomainTestconnectionTooManyRequests{}
}

/*
PostRoutingEmailDomainTestconnectionTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostRoutingEmailDomainTestconnectionTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email domain testconnection too many requests response has a 2xx status code
func (o *PostRoutingEmailDomainTestconnectionTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email domain testconnection too many requests response has a 3xx status code
func (o *PostRoutingEmailDomainTestconnectionTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email domain testconnection too many requests response has a 4xx status code
func (o *PostRoutingEmailDomainTestconnectionTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing email domain testconnection too many requests response has a 5xx status code
func (o *PostRoutingEmailDomainTestconnectionTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing email domain testconnection too many requests response a status code equal to that given
func (o *PostRoutingEmailDomainTestconnectionTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostRoutingEmailDomainTestconnectionTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains/{domainId}/testconnection][%d] postRoutingEmailDomainTestconnectionTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostRoutingEmailDomainTestconnectionTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains/{domainId}/testconnection][%d] postRoutingEmailDomainTestconnectionTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostRoutingEmailDomainTestconnectionTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailDomainTestconnectionTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailDomainTestconnectionInternalServerError creates a PostRoutingEmailDomainTestconnectionInternalServerError with default headers values
func NewPostRoutingEmailDomainTestconnectionInternalServerError() *PostRoutingEmailDomainTestconnectionInternalServerError {
	return &PostRoutingEmailDomainTestconnectionInternalServerError{}
}

/*
PostRoutingEmailDomainTestconnectionInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostRoutingEmailDomainTestconnectionInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email domain testconnection internal server error response has a 2xx status code
func (o *PostRoutingEmailDomainTestconnectionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email domain testconnection internal server error response has a 3xx status code
func (o *PostRoutingEmailDomainTestconnectionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email domain testconnection internal server error response has a 4xx status code
func (o *PostRoutingEmailDomainTestconnectionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing email domain testconnection internal server error response has a 5xx status code
func (o *PostRoutingEmailDomainTestconnectionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post routing email domain testconnection internal server error response a status code equal to that given
func (o *PostRoutingEmailDomainTestconnectionInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostRoutingEmailDomainTestconnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains/{domainId}/testconnection][%d] postRoutingEmailDomainTestconnectionInternalServerError  %+v", 500, o.Payload)
}

func (o *PostRoutingEmailDomainTestconnectionInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains/{domainId}/testconnection][%d] postRoutingEmailDomainTestconnectionInternalServerError  %+v", 500, o.Payload)
}

func (o *PostRoutingEmailDomainTestconnectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailDomainTestconnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailDomainTestconnectionServiceUnavailable creates a PostRoutingEmailDomainTestconnectionServiceUnavailable with default headers values
func NewPostRoutingEmailDomainTestconnectionServiceUnavailable() *PostRoutingEmailDomainTestconnectionServiceUnavailable {
	return &PostRoutingEmailDomainTestconnectionServiceUnavailable{}
}

/*
PostRoutingEmailDomainTestconnectionServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostRoutingEmailDomainTestconnectionServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email domain testconnection service unavailable response has a 2xx status code
func (o *PostRoutingEmailDomainTestconnectionServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email domain testconnection service unavailable response has a 3xx status code
func (o *PostRoutingEmailDomainTestconnectionServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email domain testconnection service unavailable response has a 4xx status code
func (o *PostRoutingEmailDomainTestconnectionServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing email domain testconnection service unavailable response has a 5xx status code
func (o *PostRoutingEmailDomainTestconnectionServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post routing email domain testconnection service unavailable response a status code equal to that given
func (o *PostRoutingEmailDomainTestconnectionServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostRoutingEmailDomainTestconnectionServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains/{domainId}/testconnection][%d] postRoutingEmailDomainTestconnectionServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostRoutingEmailDomainTestconnectionServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains/{domainId}/testconnection][%d] postRoutingEmailDomainTestconnectionServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostRoutingEmailDomainTestconnectionServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailDomainTestconnectionServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailDomainTestconnectionGatewayTimeout creates a PostRoutingEmailDomainTestconnectionGatewayTimeout with default headers values
func NewPostRoutingEmailDomainTestconnectionGatewayTimeout() *PostRoutingEmailDomainTestconnectionGatewayTimeout {
	return &PostRoutingEmailDomainTestconnectionGatewayTimeout{}
}

/*
PostRoutingEmailDomainTestconnectionGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostRoutingEmailDomainTestconnectionGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email domain testconnection gateway timeout response has a 2xx status code
func (o *PostRoutingEmailDomainTestconnectionGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email domain testconnection gateway timeout response has a 3xx status code
func (o *PostRoutingEmailDomainTestconnectionGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email domain testconnection gateway timeout response has a 4xx status code
func (o *PostRoutingEmailDomainTestconnectionGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing email domain testconnection gateway timeout response has a 5xx status code
func (o *PostRoutingEmailDomainTestconnectionGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post routing email domain testconnection gateway timeout response a status code equal to that given
func (o *PostRoutingEmailDomainTestconnectionGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostRoutingEmailDomainTestconnectionGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains/{domainId}/testconnection][%d] postRoutingEmailDomainTestconnectionGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostRoutingEmailDomainTestconnectionGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains/{domainId}/testconnection][%d] postRoutingEmailDomainTestconnectionGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostRoutingEmailDomainTestconnectionGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailDomainTestconnectionGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
