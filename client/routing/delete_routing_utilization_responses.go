// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteRoutingUtilizationReader is a Reader for the DeleteRoutingUtilization structure.
type DeleteRoutingUtilizationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteRoutingUtilizationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteRoutingUtilizationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteRoutingUtilizationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteRoutingUtilizationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteRoutingUtilizationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteRoutingUtilizationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteRoutingUtilizationRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteRoutingUtilizationRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteRoutingUtilizationUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteRoutingUtilizationTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteRoutingUtilizationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteRoutingUtilizationServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteRoutingUtilizationGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteRoutingUtilizationOK creates a DeleteRoutingUtilizationOK with default headers values
func NewDeleteRoutingUtilizationOK() *DeleteRoutingUtilizationOK {
	return &DeleteRoutingUtilizationOK{}
}

/*DeleteRoutingUtilizationOK handles this case with default header values.

Operation was successful.
*/
type DeleteRoutingUtilizationOK struct {
}

func (o *DeleteRoutingUtilizationOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/utilization][%d] deleteRoutingUtilizationOK ", 200)
}

func (o *DeleteRoutingUtilizationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRoutingUtilizationBadRequest creates a DeleteRoutingUtilizationBadRequest with default headers values
func NewDeleteRoutingUtilizationBadRequest() *DeleteRoutingUtilizationBadRequest {
	return &DeleteRoutingUtilizationBadRequest{}
}

/*DeleteRoutingUtilizationBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteRoutingUtilizationBadRequest struct {
	Payload *models.ErrorBody
}

func (o *DeleteRoutingUtilizationBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/utilization][%d] deleteRoutingUtilizationBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteRoutingUtilizationBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingUtilizationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingUtilizationUnauthorized creates a DeleteRoutingUtilizationUnauthorized with default headers values
func NewDeleteRoutingUtilizationUnauthorized() *DeleteRoutingUtilizationUnauthorized {
	return &DeleteRoutingUtilizationUnauthorized{}
}

/*DeleteRoutingUtilizationUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteRoutingUtilizationUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *DeleteRoutingUtilizationUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/utilization][%d] deleteRoutingUtilizationUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteRoutingUtilizationUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingUtilizationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingUtilizationForbidden creates a DeleteRoutingUtilizationForbidden with default headers values
func NewDeleteRoutingUtilizationForbidden() *DeleteRoutingUtilizationForbidden {
	return &DeleteRoutingUtilizationForbidden{}
}

/*DeleteRoutingUtilizationForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type DeleteRoutingUtilizationForbidden struct {
	Payload *models.ErrorBody
}

func (o *DeleteRoutingUtilizationForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/utilization][%d] deleteRoutingUtilizationForbidden  %+v", 403, o.Payload)
}

func (o *DeleteRoutingUtilizationForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingUtilizationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingUtilizationNotFound creates a DeleteRoutingUtilizationNotFound with default headers values
func NewDeleteRoutingUtilizationNotFound() *DeleteRoutingUtilizationNotFound {
	return &DeleteRoutingUtilizationNotFound{}
}

/*DeleteRoutingUtilizationNotFound handles this case with default header values.

The requested resource was not found.
*/
type DeleteRoutingUtilizationNotFound struct {
	Payload *models.ErrorBody
}

func (o *DeleteRoutingUtilizationNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/utilization][%d] deleteRoutingUtilizationNotFound  %+v", 404, o.Payload)
}

func (o *DeleteRoutingUtilizationNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingUtilizationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingUtilizationRequestTimeout creates a DeleteRoutingUtilizationRequestTimeout with default headers values
func NewDeleteRoutingUtilizationRequestTimeout() *DeleteRoutingUtilizationRequestTimeout {
	return &DeleteRoutingUtilizationRequestTimeout{}
}

/*DeleteRoutingUtilizationRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteRoutingUtilizationRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *DeleteRoutingUtilizationRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/utilization][%d] deleteRoutingUtilizationRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteRoutingUtilizationRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingUtilizationRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingUtilizationRequestEntityTooLarge creates a DeleteRoutingUtilizationRequestEntityTooLarge with default headers values
func NewDeleteRoutingUtilizationRequestEntityTooLarge() *DeleteRoutingUtilizationRequestEntityTooLarge {
	return &DeleteRoutingUtilizationRequestEntityTooLarge{}
}

/*DeleteRoutingUtilizationRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type DeleteRoutingUtilizationRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *DeleteRoutingUtilizationRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/utilization][%d] deleteRoutingUtilizationRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteRoutingUtilizationRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingUtilizationRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingUtilizationUnsupportedMediaType creates a DeleteRoutingUtilizationUnsupportedMediaType with default headers values
func NewDeleteRoutingUtilizationUnsupportedMediaType() *DeleteRoutingUtilizationUnsupportedMediaType {
	return &DeleteRoutingUtilizationUnsupportedMediaType{}
}

/*DeleteRoutingUtilizationUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteRoutingUtilizationUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *DeleteRoutingUtilizationUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/utilization][%d] deleteRoutingUtilizationUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteRoutingUtilizationUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingUtilizationUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingUtilizationTooManyRequests creates a DeleteRoutingUtilizationTooManyRequests with default headers values
func NewDeleteRoutingUtilizationTooManyRequests() *DeleteRoutingUtilizationTooManyRequests {
	return &DeleteRoutingUtilizationTooManyRequests{}
}

/*DeleteRoutingUtilizationTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteRoutingUtilizationTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *DeleteRoutingUtilizationTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/utilization][%d] deleteRoutingUtilizationTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteRoutingUtilizationTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingUtilizationTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingUtilizationInternalServerError creates a DeleteRoutingUtilizationInternalServerError with default headers values
func NewDeleteRoutingUtilizationInternalServerError() *DeleteRoutingUtilizationInternalServerError {
	return &DeleteRoutingUtilizationInternalServerError{}
}

/*DeleteRoutingUtilizationInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteRoutingUtilizationInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *DeleteRoutingUtilizationInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/utilization][%d] deleteRoutingUtilizationInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteRoutingUtilizationInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingUtilizationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingUtilizationServiceUnavailable creates a DeleteRoutingUtilizationServiceUnavailable with default headers values
func NewDeleteRoutingUtilizationServiceUnavailable() *DeleteRoutingUtilizationServiceUnavailable {
	return &DeleteRoutingUtilizationServiceUnavailable{}
}

/*DeleteRoutingUtilizationServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteRoutingUtilizationServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *DeleteRoutingUtilizationServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/utilization][%d] deleteRoutingUtilizationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteRoutingUtilizationServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingUtilizationServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingUtilizationGatewayTimeout creates a DeleteRoutingUtilizationGatewayTimeout with default headers values
func NewDeleteRoutingUtilizationGatewayTimeout() *DeleteRoutingUtilizationGatewayTimeout {
	return &DeleteRoutingUtilizationGatewayTimeout{}
}

/*DeleteRoutingUtilizationGatewayTimeout handles this case with default header values.

The request timed out.
*/
type DeleteRoutingUtilizationGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *DeleteRoutingUtilizationGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/utilization][%d] deleteRoutingUtilizationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteRoutingUtilizationGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingUtilizationGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
