// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutRoutingEmailOutboundDomainActivationReader is a Reader for the PutRoutingEmailOutboundDomainActivation structure.
type PutRoutingEmailOutboundDomainActivationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRoutingEmailOutboundDomainActivationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutRoutingEmailOutboundDomainActivationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutRoutingEmailOutboundDomainActivationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutRoutingEmailOutboundDomainActivationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutRoutingEmailOutboundDomainActivationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutRoutingEmailOutboundDomainActivationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutRoutingEmailOutboundDomainActivationRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutRoutingEmailOutboundDomainActivationRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutRoutingEmailOutboundDomainActivationUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutRoutingEmailOutboundDomainActivationTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutRoutingEmailOutboundDomainActivationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutRoutingEmailOutboundDomainActivationServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutRoutingEmailOutboundDomainActivationGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutRoutingEmailOutboundDomainActivationOK creates a PutRoutingEmailOutboundDomainActivationOK with default headers values
func NewPutRoutingEmailOutboundDomainActivationOK() *PutRoutingEmailOutboundDomainActivationOK {
	return &PutRoutingEmailOutboundDomainActivationOK{}
}

/*
PutRoutingEmailOutboundDomainActivationOK describes a response with status code 200, with default header values.

successful operation
*/
type PutRoutingEmailOutboundDomainActivationOK struct {
	Payload *models.EmailOutboundDomainResult
}

// IsSuccess returns true when this put routing email outbound domain activation o k response has a 2xx status code
func (o *PutRoutingEmailOutboundDomainActivationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put routing email outbound domain activation o k response has a 3xx status code
func (o *PutRoutingEmailOutboundDomainActivationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing email outbound domain activation o k response has a 4xx status code
func (o *PutRoutingEmailOutboundDomainActivationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put routing email outbound domain activation o k response has a 5xx status code
func (o *PutRoutingEmailOutboundDomainActivationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing email outbound domain activation o k response a status code equal to that given
func (o *PutRoutingEmailOutboundDomainActivationOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutRoutingEmailOutboundDomainActivationOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] putRoutingEmailOutboundDomainActivationOK  %+v", 200, o.Payload)
}

func (o *PutRoutingEmailOutboundDomainActivationOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] putRoutingEmailOutboundDomainActivationOK  %+v", 200, o.Payload)
}

func (o *PutRoutingEmailOutboundDomainActivationOK) GetPayload() *models.EmailOutboundDomainResult {
	return o.Payload
}

func (o *PutRoutingEmailOutboundDomainActivationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EmailOutboundDomainResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingEmailOutboundDomainActivationBadRequest creates a PutRoutingEmailOutboundDomainActivationBadRequest with default headers values
func NewPutRoutingEmailOutboundDomainActivationBadRequest() *PutRoutingEmailOutboundDomainActivationBadRequest {
	return &PutRoutingEmailOutboundDomainActivationBadRequest{}
}

/*
PutRoutingEmailOutboundDomainActivationBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutRoutingEmailOutboundDomainActivationBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing email outbound domain activation bad request response has a 2xx status code
func (o *PutRoutingEmailOutboundDomainActivationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing email outbound domain activation bad request response has a 3xx status code
func (o *PutRoutingEmailOutboundDomainActivationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing email outbound domain activation bad request response has a 4xx status code
func (o *PutRoutingEmailOutboundDomainActivationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put routing email outbound domain activation bad request response has a 5xx status code
func (o *PutRoutingEmailOutboundDomainActivationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing email outbound domain activation bad request response a status code equal to that given
func (o *PutRoutingEmailOutboundDomainActivationBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutRoutingEmailOutboundDomainActivationBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] putRoutingEmailOutboundDomainActivationBadRequest  %+v", 400, o.Payload)
}

func (o *PutRoutingEmailOutboundDomainActivationBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] putRoutingEmailOutboundDomainActivationBadRequest  %+v", 400, o.Payload)
}

func (o *PutRoutingEmailOutboundDomainActivationBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingEmailOutboundDomainActivationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingEmailOutboundDomainActivationUnauthorized creates a PutRoutingEmailOutboundDomainActivationUnauthorized with default headers values
func NewPutRoutingEmailOutboundDomainActivationUnauthorized() *PutRoutingEmailOutboundDomainActivationUnauthorized {
	return &PutRoutingEmailOutboundDomainActivationUnauthorized{}
}

/*
PutRoutingEmailOutboundDomainActivationUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutRoutingEmailOutboundDomainActivationUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing email outbound domain activation unauthorized response has a 2xx status code
func (o *PutRoutingEmailOutboundDomainActivationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing email outbound domain activation unauthorized response has a 3xx status code
func (o *PutRoutingEmailOutboundDomainActivationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing email outbound domain activation unauthorized response has a 4xx status code
func (o *PutRoutingEmailOutboundDomainActivationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put routing email outbound domain activation unauthorized response has a 5xx status code
func (o *PutRoutingEmailOutboundDomainActivationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing email outbound domain activation unauthorized response a status code equal to that given
func (o *PutRoutingEmailOutboundDomainActivationUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutRoutingEmailOutboundDomainActivationUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] putRoutingEmailOutboundDomainActivationUnauthorized  %+v", 401, o.Payload)
}

func (o *PutRoutingEmailOutboundDomainActivationUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] putRoutingEmailOutboundDomainActivationUnauthorized  %+v", 401, o.Payload)
}

func (o *PutRoutingEmailOutboundDomainActivationUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingEmailOutboundDomainActivationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingEmailOutboundDomainActivationForbidden creates a PutRoutingEmailOutboundDomainActivationForbidden with default headers values
func NewPutRoutingEmailOutboundDomainActivationForbidden() *PutRoutingEmailOutboundDomainActivationForbidden {
	return &PutRoutingEmailOutboundDomainActivationForbidden{}
}

/*
PutRoutingEmailOutboundDomainActivationForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutRoutingEmailOutboundDomainActivationForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing email outbound domain activation forbidden response has a 2xx status code
func (o *PutRoutingEmailOutboundDomainActivationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing email outbound domain activation forbidden response has a 3xx status code
func (o *PutRoutingEmailOutboundDomainActivationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing email outbound domain activation forbidden response has a 4xx status code
func (o *PutRoutingEmailOutboundDomainActivationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put routing email outbound domain activation forbidden response has a 5xx status code
func (o *PutRoutingEmailOutboundDomainActivationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing email outbound domain activation forbidden response a status code equal to that given
func (o *PutRoutingEmailOutboundDomainActivationForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutRoutingEmailOutboundDomainActivationForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] putRoutingEmailOutboundDomainActivationForbidden  %+v", 403, o.Payload)
}

func (o *PutRoutingEmailOutboundDomainActivationForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] putRoutingEmailOutboundDomainActivationForbidden  %+v", 403, o.Payload)
}

func (o *PutRoutingEmailOutboundDomainActivationForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingEmailOutboundDomainActivationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingEmailOutboundDomainActivationNotFound creates a PutRoutingEmailOutboundDomainActivationNotFound with default headers values
func NewPutRoutingEmailOutboundDomainActivationNotFound() *PutRoutingEmailOutboundDomainActivationNotFound {
	return &PutRoutingEmailOutboundDomainActivationNotFound{}
}

/*
PutRoutingEmailOutboundDomainActivationNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutRoutingEmailOutboundDomainActivationNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing email outbound domain activation not found response has a 2xx status code
func (o *PutRoutingEmailOutboundDomainActivationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing email outbound domain activation not found response has a 3xx status code
func (o *PutRoutingEmailOutboundDomainActivationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing email outbound domain activation not found response has a 4xx status code
func (o *PutRoutingEmailOutboundDomainActivationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put routing email outbound domain activation not found response has a 5xx status code
func (o *PutRoutingEmailOutboundDomainActivationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing email outbound domain activation not found response a status code equal to that given
func (o *PutRoutingEmailOutboundDomainActivationNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutRoutingEmailOutboundDomainActivationNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] putRoutingEmailOutboundDomainActivationNotFound  %+v", 404, o.Payload)
}

func (o *PutRoutingEmailOutboundDomainActivationNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] putRoutingEmailOutboundDomainActivationNotFound  %+v", 404, o.Payload)
}

func (o *PutRoutingEmailOutboundDomainActivationNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingEmailOutboundDomainActivationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingEmailOutboundDomainActivationRequestTimeout creates a PutRoutingEmailOutboundDomainActivationRequestTimeout with default headers values
func NewPutRoutingEmailOutboundDomainActivationRequestTimeout() *PutRoutingEmailOutboundDomainActivationRequestTimeout {
	return &PutRoutingEmailOutboundDomainActivationRequestTimeout{}
}

/*
PutRoutingEmailOutboundDomainActivationRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutRoutingEmailOutboundDomainActivationRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing email outbound domain activation request timeout response has a 2xx status code
func (o *PutRoutingEmailOutboundDomainActivationRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing email outbound domain activation request timeout response has a 3xx status code
func (o *PutRoutingEmailOutboundDomainActivationRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing email outbound domain activation request timeout response has a 4xx status code
func (o *PutRoutingEmailOutboundDomainActivationRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put routing email outbound domain activation request timeout response has a 5xx status code
func (o *PutRoutingEmailOutboundDomainActivationRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing email outbound domain activation request timeout response a status code equal to that given
func (o *PutRoutingEmailOutboundDomainActivationRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutRoutingEmailOutboundDomainActivationRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] putRoutingEmailOutboundDomainActivationRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutRoutingEmailOutboundDomainActivationRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] putRoutingEmailOutboundDomainActivationRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutRoutingEmailOutboundDomainActivationRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingEmailOutboundDomainActivationRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingEmailOutboundDomainActivationRequestEntityTooLarge creates a PutRoutingEmailOutboundDomainActivationRequestEntityTooLarge with default headers values
func NewPutRoutingEmailOutboundDomainActivationRequestEntityTooLarge() *PutRoutingEmailOutboundDomainActivationRequestEntityTooLarge {
	return &PutRoutingEmailOutboundDomainActivationRequestEntityTooLarge{}
}

/*
PutRoutingEmailOutboundDomainActivationRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PutRoutingEmailOutboundDomainActivationRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing email outbound domain activation request entity too large response has a 2xx status code
func (o *PutRoutingEmailOutboundDomainActivationRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing email outbound domain activation request entity too large response has a 3xx status code
func (o *PutRoutingEmailOutboundDomainActivationRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing email outbound domain activation request entity too large response has a 4xx status code
func (o *PutRoutingEmailOutboundDomainActivationRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put routing email outbound domain activation request entity too large response has a 5xx status code
func (o *PutRoutingEmailOutboundDomainActivationRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing email outbound domain activation request entity too large response a status code equal to that given
func (o *PutRoutingEmailOutboundDomainActivationRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutRoutingEmailOutboundDomainActivationRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] putRoutingEmailOutboundDomainActivationRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutRoutingEmailOutboundDomainActivationRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] putRoutingEmailOutboundDomainActivationRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutRoutingEmailOutboundDomainActivationRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingEmailOutboundDomainActivationRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingEmailOutboundDomainActivationUnsupportedMediaType creates a PutRoutingEmailOutboundDomainActivationUnsupportedMediaType with default headers values
func NewPutRoutingEmailOutboundDomainActivationUnsupportedMediaType() *PutRoutingEmailOutboundDomainActivationUnsupportedMediaType {
	return &PutRoutingEmailOutboundDomainActivationUnsupportedMediaType{}
}

/*
PutRoutingEmailOutboundDomainActivationUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutRoutingEmailOutboundDomainActivationUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing email outbound domain activation unsupported media type response has a 2xx status code
func (o *PutRoutingEmailOutboundDomainActivationUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing email outbound domain activation unsupported media type response has a 3xx status code
func (o *PutRoutingEmailOutboundDomainActivationUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing email outbound domain activation unsupported media type response has a 4xx status code
func (o *PutRoutingEmailOutboundDomainActivationUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put routing email outbound domain activation unsupported media type response has a 5xx status code
func (o *PutRoutingEmailOutboundDomainActivationUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing email outbound domain activation unsupported media type response a status code equal to that given
func (o *PutRoutingEmailOutboundDomainActivationUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutRoutingEmailOutboundDomainActivationUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] putRoutingEmailOutboundDomainActivationUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutRoutingEmailOutboundDomainActivationUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] putRoutingEmailOutboundDomainActivationUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutRoutingEmailOutboundDomainActivationUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingEmailOutboundDomainActivationUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingEmailOutboundDomainActivationTooManyRequests creates a PutRoutingEmailOutboundDomainActivationTooManyRequests with default headers values
func NewPutRoutingEmailOutboundDomainActivationTooManyRequests() *PutRoutingEmailOutboundDomainActivationTooManyRequests {
	return &PutRoutingEmailOutboundDomainActivationTooManyRequests{}
}

/*
PutRoutingEmailOutboundDomainActivationTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutRoutingEmailOutboundDomainActivationTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing email outbound domain activation too many requests response has a 2xx status code
func (o *PutRoutingEmailOutboundDomainActivationTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing email outbound domain activation too many requests response has a 3xx status code
func (o *PutRoutingEmailOutboundDomainActivationTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing email outbound domain activation too many requests response has a 4xx status code
func (o *PutRoutingEmailOutboundDomainActivationTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put routing email outbound domain activation too many requests response has a 5xx status code
func (o *PutRoutingEmailOutboundDomainActivationTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing email outbound domain activation too many requests response a status code equal to that given
func (o *PutRoutingEmailOutboundDomainActivationTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutRoutingEmailOutboundDomainActivationTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] putRoutingEmailOutboundDomainActivationTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutRoutingEmailOutboundDomainActivationTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] putRoutingEmailOutboundDomainActivationTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutRoutingEmailOutboundDomainActivationTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingEmailOutboundDomainActivationTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingEmailOutboundDomainActivationInternalServerError creates a PutRoutingEmailOutboundDomainActivationInternalServerError with default headers values
func NewPutRoutingEmailOutboundDomainActivationInternalServerError() *PutRoutingEmailOutboundDomainActivationInternalServerError {
	return &PutRoutingEmailOutboundDomainActivationInternalServerError{}
}

/*
PutRoutingEmailOutboundDomainActivationInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutRoutingEmailOutboundDomainActivationInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing email outbound domain activation internal server error response has a 2xx status code
func (o *PutRoutingEmailOutboundDomainActivationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing email outbound domain activation internal server error response has a 3xx status code
func (o *PutRoutingEmailOutboundDomainActivationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing email outbound domain activation internal server error response has a 4xx status code
func (o *PutRoutingEmailOutboundDomainActivationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put routing email outbound domain activation internal server error response has a 5xx status code
func (o *PutRoutingEmailOutboundDomainActivationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put routing email outbound domain activation internal server error response a status code equal to that given
func (o *PutRoutingEmailOutboundDomainActivationInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutRoutingEmailOutboundDomainActivationInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] putRoutingEmailOutboundDomainActivationInternalServerError  %+v", 500, o.Payload)
}

func (o *PutRoutingEmailOutboundDomainActivationInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] putRoutingEmailOutboundDomainActivationInternalServerError  %+v", 500, o.Payload)
}

func (o *PutRoutingEmailOutboundDomainActivationInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingEmailOutboundDomainActivationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingEmailOutboundDomainActivationServiceUnavailable creates a PutRoutingEmailOutboundDomainActivationServiceUnavailable with default headers values
func NewPutRoutingEmailOutboundDomainActivationServiceUnavailable() *PutRoutingEmailOutboundDomainActivationServiceUnavailable {
	return &PutRoutingEmailOutboundDomainActivationServiceUnavailable{}
}

/*
PutRoutingEmailOutboundDomainActivationServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutRoutingEmailOutboundDomainActivationServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing email outbound domain activation service unavailable response has a 2xx status code
func (o *PutRoutingEmailOutboundDomainActivationServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing email outbound domain activation service unavailable response has a 3xx status code
func (o *PutRoutingEmailOutboundDomainActivationServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing email outbound domain activation service unavailable response has a 4xx status code
func (o *PutRoutingEmailOutboundDomainActivationServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put routing email outbound domain activation service unavailable response has a 5xx status code
func (o *PutRoutingEmailOutboundDomainActivationServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put routing email outbound domain activation service unavailable response a status code equal to that given
func (o *PutRoutingEmailOutboundDomainActivationServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutRoutingEmailOutboundDomainActivationServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] putRoutingEmailOutboundDomainActivationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutRoutingEmailOutboundDomainActivationServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] putRoutingEmailOutboundDomainActivationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutRoutingEmailOutboundDomainActivationServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingEmailOutboundDomainActivationServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingEmailOutboundDomainActivationGatewayTimeout creates a PutRoutingEmailOutboundDomainActivationGatewayTimeout with default headers values
func NewPutRoutingEmailOutboundDomainActivationGatewayTimeout() *PutRoutingEmailOutboundDomainActivationGatewayTimeout {
	return &PutRoutingEmailOutboundDomainActivationGatewayTimeout{}
}

/*
PutRoutingEmailOutboundDomainActivationGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutRoutingEmailOutboundDomainActivationGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing email outbound domain activation gateway timeout response has a 2xx status code
func (o *PutRoutingEmailOutboundDomainActivationGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing email outbound domain activation gateway timeout response has a 3xx status code
func (o *PutRoutingEmailOutboundDomainActivationGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing email outbound domain activation gateway timeout response has a 4xx status code
func (o *PutRoutingEmailOutboundDomainActivationGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put routing email outbound domain activation gateway timeout response has a 5xx status code
func (o *PutRoutingEmailOutboundDomainActivationGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put routing email outbound domain activation gateway timeout response a status code equal to that given
func (o *PutRoutingEmailOutboundDomainActivationGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutRoutingEmailOutboundDomainActivationGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] putRoutingEmailOutboundDomainActivationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutRoutingEmailOutboundDomainActivationGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] putRoutingEmailOutboundDomainActivationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutRoutingEmailOutboundDomainActivationGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingEmailOutboundDomainActivationGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
