// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteRoutingEmailDomainReader is a Reader for the DeleteRoutingEmailDomain structure.
type DeleteRoutingEmailDomainReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteRoutingEmailDomainReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteRoutingEmailDomainOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteRoutingEmailDomainBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteRoutingEmailDomainUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteRoutingEmailDomainForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteRoutingEmailDomainNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteRoutingEmailDomainRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteRoutingEmailDomainRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteRoutingEmailDomainUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteRoutingEmailDomainTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteRoutingEmailDomainInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteRoutingEmailDomainServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteRoutingEmailDomainGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteRoutingEmailDomainOK creates a DeleteRoutingEmailDomainOK with default headers values
func NewDeleteRoutingEmailDomainOK() *DeleteRoutingEmailDomainOK {
	return &DeleteRoutingEmailDomainOK{}
}

/*
DeleteRoutingEmailDomainOK describes a response with status code 200, with default header values.

Operation was successful.
*/
type DeleteRoutingEmailDomainOK struct {
}

// IsSuccess returns true when this delete routing email domain o k response has a 2xx status code
func (o *DeleteRoutingEmailDomainOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete routing email domain o k response has a 3xx status code
func (o *DeleteRoutingEmailDomainOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete routing email domain o k response has a 4xx status code
func (o *DeleteRoutingEmailDomainOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete routing email domain o k response has a 5xx status code
func (o *DeleteRoutingEmailDomainOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete routing email domain o k response a status code equal to that given
func (o *DeleteRoutingEmailDomainOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeleteRoutingEmailDomainOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainId}][%d] deleteRoutingEmailDomainOK ", 200)
}

func (o *DeleteRoutingEmailDomainOK) String() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainId}][%d] deleteRoutingEmailDomainOK ", 200)
}

func (o *DeleteRoutingEmailDomainOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRoutingEmailDomainBadRequest creates a DeleteRoutingEmailDomainBadRequest with default headers values
func NewDeleteRoutingEmailDomainBadRequest() *DeleteRoutingEmailDomainBadRequest {
	return &DeleteRoutingEmailDomainBadRequest{}
}

/*
DeleteRoutingEmailDomainBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteRoutingEmailDomainBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete routing email domain bad request response has a 2xx status code
func (o *DeleteRoutingEmailDomainBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete routing email domain bad request response has a 3xx status code
func (o *DeleteRoutingEmailDomainBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete routing email domain bad request response has a 4xx status code
func (o *DeleteRoutingEmailDomainBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete routing email domain bad request response has a 5xx status code
func (o *DeleteRoutingEmailDomainBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete routing email domain bad request response a status code equal to that given
func (o *DeleteRoutingEmailDomainBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteRoutingEmailDomainBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainId}][%d] deleteRoutingEmailDomainBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteRoutingEmailDomainBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainId}][%d] deleteRoutingEmailDomainBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteRoutingEmailDomainBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingEmailDomainBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingEmailDomainUnauthorized creates a DeleteRoutingEmailDomainUnauthorized with default headers values
func NewDeleteRoutingEmailDomainUnauthorized() *DeleteRoutingEmailDomainUnauthorized {
	return &DeleteRoutingEmailDomainUnauthorized{}
}

/*
DeleteRoutingEmailDomainUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteRoutingEmailDomainUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete routing email domain unauthorized response has a 2xx status code
func (o *DeleteRoutingEmailDomainUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete routing email domain unauthorized response has a 3xx status code
func (o *DeleteRoutingEmailDomainUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete routing email domain unauthorized response has a 4xx status code
func (o *DeleteRoutingEmailDomainUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete routing email domain unauthorized response has a 5xx status code
func (o *DeleteRoutingEmailDomainUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete routing email domain unauthorized response a status code equal to that given
func (o *DeleteRoutingEmailDomainUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteRoutingEmailDomainUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainId}][%d] deleteRoutingEmailDomainUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteRoutingEmailDomainUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainId}][%d] deleteRoutingEmailDomainUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteRoutingEmailDomainUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingEmailDomainUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingEmailDomainForbidden creates a DeleteRoutingEmailDomainForbidden with default headers values
func NewDeleteRoutingEmailDomainForbidden() *DeleteRoutingEmailDomainForbidden {
	return &DeleteRoutingEmailDomainForbidden{}
}

/*
DeleteRoutingEmailDomainForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type DeleteRoutingEmailDomainForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete routing email domain forbidden response has a 2xx status code
func (o *DeleteRoutingEmailDomainForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete routing email domain forbidden response has a 3xx status code
func (o *DeleteRoutingEmailDomainForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete routing email domain forbidden response has a 4xx status code
func (o *DeleteRoutingEmailDomainForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete routing email domain forbidden response has a 5xx status code
func (o *DeleteRoutingEmailDomainForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete routing email domain forbidden response a status code equal to that given
func (o *DeleteRoutingEmailDomainForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteRoutingEmailDomainForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainId}][%d] deleteRoutingEmailDomainForbidden  %+v", 403, o.Payload)
}

func (o *DeleteRoutingEmailDomainForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainId}][%d] deleteRoutingEmailDomainForbidden  %+v", 403, o.Payload)
}

func (o *DeleteRoutingEmailDomainForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingEmailDomainForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingEmailDomainNotFound creates a DeleteRoutingEmailDomainNotFound with default headers values
func NewDeleteRoutingEmailDomainNotFound() *DeleteRoutingEmailDomainNotFound {
	return &DeleteRoutingEmailDomainNotFound{}
}

/*
DeleteRoutingEmailDomainNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type DeleteRoutingEmailDomainNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete routing email domain not found response has a 2xx status code
func (o *DeleteRoutingEmailDomainNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete routing email domain not found response has a 3xx status code
func (o *DeleteRoutingEmailDomainNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete routing email domain not found response has a 4xx status code
func (o *DeleteRoutingEmailDomainNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete routing email domain not found response has a 5xx status code
func (o *DeleteRoutingEmailDomainNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete routing email domain not found response a status code equal to that given
func (o *DeleteRoutingEmailDomainNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteRoutingEmailDomainNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainId}][%d] deleteRoutingEmailDomainNotFound  %+v", 404, o.Payload)
}

func (o *DeleteRoutingEmailDomainNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainId}][%d] deleteRoutingEmailDomainNotFound  %+v", 404, o.Payload)
}

func (o *DeleteRoutingEmailDomainNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingEmailDomainNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingEmailDomainRequestTimeout creates a DeleteRoutingEmailDomainRequestTimeout with default headers values
func NewDeleteRoutingEmailDomainRequestTimeout() *DeleteRoutingEmailDomainRequestTimeout {
	return &DeleteRoutingEmailDomainRequestTimeout{}
}

/*
DeleteRoutingEmailDomainRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteRoutingEmailDomainRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete routing email domain request timeout response has a 2xx status code
func (o *DeleteRoutingEmailDomainRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete routing email domain request timeout response has a 3xx status code
func (o *DeleteRoutingEmailDomainRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete routing email domain request timeout response has a 4xx status code
func (o *DeleteRoutingEmailDomainRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete routing email domain request timeout response has a 5xx status code
func (o *DeleteRoutingEmailDomainRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete routing email domain request timeout response a status code equal to that given
func (o *DeleteRoutingEmailDomainRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *DeleteRoutingEmailDomainRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainId}][%d] deleteRoutingEmailDomainRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteRoutingEmailDomainRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainId}][%d] deleteRoutingEmailDomainRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteRoutingEmailDomainRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingEmailDomainRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingEmailDomainRequestEntityTooLarge creates a DeleteRoutingEmailDomainRequestEntityTooLarge with default headers values
func NewDeleteRoutingEmailDomainRequestEntityTooLarge() *DeleteRoutingEmailDomainRequestEntityTooLarge {
	return &DeleteRoutingEmailDomainRequestEntityTooLarge{}
}

/*
DeleteRoutingEmailDomainRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type DeleteRoutingEmailDomainRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete routing email domain request entity too large response has a 2xx status code
func (o *DeleteRoutingEmailDomainRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete routing email domain request entity too large response has a 3xx status code
func (o *DeleteRoutingEmailDomainRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete routing email domain request entity too large response has a 4xx status code
func (o *DeleteRoutingEmailDomainRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete routing email domain request entity too large response has a 5xx status code
func (o *DeleteRoutingEmailDomainRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this delete routing email domain request entity too large response a status code equal to that given
func (o *DeleteRoutingEmailDomainRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *DeleteRoutingEmailDomainRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainId}][%d] deleteRoutingEmailDomainRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteRoutingEmailDomainRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainId}][%d] deleteRoutingEmailDomainRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteRoutingEmailDomainRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingEmailDomainRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingEmailDomainUnsupportedMediaType creates a DeleteRoutingEmailDomainUnsupportedMediaType with default headers values
func NewDeleteRoutingEmailDomainUnsupportedMediaType() *DeleteRoutingEmailDomainUnsupportedMediaType {
	return &DeleteRoutingEmailDomainUnsupportedMediaType{}
}

/*
DeleteRoutingEmailDomainUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteRoutingEmailDomainUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete routing email domain unsupported media type response has a 2xx status code
func (o *DeleteRoutingEmailDomainUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete routing email domain unsupported media type response has a 3xx status code
func (o *DeleteRoutingEmailDomainUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete routing email domain unsupported media type response has a 4xx status code
func (o *DeleteRoutingEmailDomainUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete routing email domain unsupported media type response has a 5xx status code
func (o *DeleteRoutingEmailDomainUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this delete routing email domain unsupported media type response a status code equal to that given
func (o *DeleteRoutingEmailDomainUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *DeleteRoutingEmailDomainUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainId}][%d] deleteRoutingEmailDomainUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteRoutingEmailDomainUnsupportedMediaType) String() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainId}][%d] deleteRoutingEmailDomainUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteRoutingEmailDomainUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingEmailDomainUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingEmailDomainTooManyRequests creates a DeleteRoutingEmailDomainTooManyRequests with default headers values
func NewDeleteRoutingEmailDomainTooManyRequests() *DeleteRoutingEmailDomainTooManyRequests {
	return &DeleteRoutingEmailDomainTooManyRequests{}
}

/*
DeleteRoutingEmailDomainTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteRoutingEmailDomainTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete routing email domain too many requests response has a 2xx status code
func (o *DeleteRoutingEmailDomainTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete routing email domain too many requests response has a 3xx status code
func (o *DeleteRoutingEmailDomainTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete routing email domain too many requests response has a 4xx status code
func (o *DeleteRoutingEmailDomainTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete routing email domain too many requests response has a 5xx status code
func (o *DeleteRoutingEmailDomainTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete routing email domain too many requests response a status code equal to that given
func (o *DeleteRoutingEmailDomainTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteRoutingEmailDomainTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainId}][%d] deleteRoutingEmailDomainTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteRoutingEmailDomainTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainId}][%d] deleteRoutingEmailDomainTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteRoutingEmailDomainTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingEmailDomainTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingEmailDomainInternalServerError creates a DeleteRoutingEmailDomainInternalServerError with default headers values
func NewDeleteRoutingEmailDomainInternalServerError() *DeleteRoutingEmailDomainInternalServerError {
	return &DeleteRoutingEmailDomainInternalServerError{}
}

/*
DeleteRoutingEmailDomainInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteRoutingEmailDomainInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete routing email domain internal server error response has a 2xx status code
func (o *DeleteRoutingEmailDomainInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete routing email domain internal server error response has a 3xx status code
func (o *DeleteRoutingEmailDomainInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete routing email domain internal server error response has a 4xx status code
func (o *DeleteRoutingEmailDomainInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete routing email domain internal server error response has a 5xx status code
func (o *DeleteRoutingEmailDomainInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete routing email domain internal server error response a status code equal to that given
func (o *DeleteRoutingEmailDomainInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteRoutingEmailDomainInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainId}][%d] deleteRoutingEmailDomainInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteRoutingEmailDomainInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainId}][%d] deleteRoutingEmailDomainInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteRoutingEmailDomainInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingEmailDomainInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingEmailDomainServiceUnavailable creates a DeleteRoutingEmailDomainServiceUnavailable with default headers values
func NewDeleteRoutingEmailDomainServiceUnavailable() *DeleteRoutingEmailDomainServiceUnavailable {
	return &DeleteRoutingEmailDomainServiceUnavailable{}
}

/*
DeleteRoutingEmailDomainServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteRoutingEmailDomainServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete routing email domain service unavailable response has a 2xx status code
func (o *DeleteRoutingEmailDomainServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete routing email domain service unavailable response has a 3xx status code
func (o *DeleteRoutingEmailDomainServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete routing email domain service unavailable response has a 4xx status code
func (o *DeleteRoutingEmailDomainServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete routing email domain service unavailable response has a 5xx status code
func (o *DeleteRoutingEmailDomainServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete routing email domain service unavailable response a status code equal to that given
func (o *DeleteRoutingEmailDomainServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *DeleteRoutingEmailDomainServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainId}][%d] deleteRoutingEmailDomainServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteRoutingEmailDomainServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainId}][%d] deleteRoutingEmailDomainServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteRoutingEmailDomainServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingEmailDomainServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingEmailDomainGatewayTimeout creates a DeleteRoutingEmailDomainGatewayTimeout with default headers values
func NewDeleteRoutingEmailDomainGatewayTimeout() *DeleteRoutingEmailDomainGatewayTimeout {
	return &DeleteRoutingEmailDomainGatewayTimeout{}
}

/*
DeleteRoutingEmailDomainGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type DeleteRoutingEmailDomainGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete routing email domain gateway timeout response has a 2xx status code
func (o *DeleteRoutingEmailDomainGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete routing email domain gateway timeout response has a 3xx status code
func (o *DeleteRoutingEmailDomainGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete routing email domain gateway timeout response has a 4xx status code
func (o *DeleteRoutingEmailDomainGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete routing email domain gateway timeout response has a 5xx status code
func (o *DeleteRoutingEmailDomainGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this delete routing email domain gateway timeout response a status code equal to that given
func (o *DeleteRoutingEmailDomainGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *DeleteRoutingEmailDomainGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainId}][%d] deleteRoutingEmailDomainGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteRoutingEmailDomainGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainId}][%d] deleteRoutingEmailDomainGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteRoutingEmailDomainGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingEmailDomainGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
