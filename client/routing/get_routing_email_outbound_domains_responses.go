// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetRoutingEmailOutboundDomainsReader is a Reader for the GetRoutingEmailOutboundDomains structure.
type GetRoutingEmailOutboundDomainsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRoutingEmailOutboundDomainsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRoutingEmailOutboundDomainsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRoutingEmailOutboundDomainsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRoutingEmailOutboundDomainsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRoutingEmailOutboundDomainsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRoutingEmailOutboundDomainsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetRoutingEmailOutboundDomainsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetRoutingEmailOutboundDomainsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetRoutingEmailOutboundDomainsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetRoutingEmailOutboundDomainsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRoutingEmailOutboundDomainsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetRoutingEmailOutboundDomainsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetRoutingEmailOutboundDomainsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRoutingEmailOutboundDomainsOK creates a GetRoutingEmailOutboundDomainsOK with default headers values
func NewGetRoutingEmailOutboundDomainsOK() *GetRoutingEmailOutboundDomainsOK {
	return &GetRoutingEmailOutboundDomainsOK{}
}

/*GetRoutingEmailOutboundDomainsOK handles this case with default header values.

successful operation
*/
type GetRoutingEmailOutboundDomainsOK struct {
	Payload *models.OutboundDomainEntityListing
}

func (o *GetRoutingEmailOutboundDomainsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains][%d] getRoutingEmailOutboundDomainsOK  %+v", 200, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainsOK) GetPayload() *models.OutboundDomainEntityListing {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OutboundDomainEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainsBadRequest creates a GetRoutingEmailOutboundDomainsBadRequest with default headers values
func NewGetRoutingEmailOutboundDomainsBadRequest() *GetRoutingEmailOutboundDomainsBadRequest {
	return &GetRoutingEmailOutboundDomainsBadRequest{}
}

/*GetRoutingEmailOutboundDomainsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetRoutingEmailOutboundDomainsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingEmailOutboundDomainsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains][%d] getRoutingEmailOutboundDomainsBadRequest  %+v", 400, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainsUnauthorized creates a GetRoutingEmailOutboundDomainsUnauthorized with default headers values
func NewGetRoutingEmailOutboundDomainsUnauthorized() *GetRoutingEmailOutboundDomainsUnauthorized {
	return &GetRoutingEmailOutboundDomainsUnauthorized{}
}

/*GetRoutingEmailOutboundDomainsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetRoutingEmailOutboundDomainsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingEmailOutboundDomainsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains][%d] getRoutingEmailOutboundDomainsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainsForbidden creates a GetRoutingEmailOutboundDomainsForbidden with default headers values
func NewGetRoutingEmailOutboundDomainsForbidden() *GetRoutingEmailOutboundDomainsForbidden {
	return &GetRoutingEmailOutboundDomainsForbidden{}
}

/*GetRoutingEmailOutboundDomainsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetRoutingEmailOutboundDomainsForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingEmailOutboundDomainsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains][%d] getRoutingEmailOutboundDomainsForbidden  %+v", 403, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainsNotFound creates a GetRoutingEmailOutboundDomainsNotFound with default headers values
func NewGetRoutingEmailOutboundDomainsNotFound() *GetRoutingEmailOutboundDomainsNotFound {
	return &GetRoutingEmailOutboundDomainsNotFound{}
}

/*GetRoutingEmailOutboundDomainsNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetRoutingEmailOutboundDomainsNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingEmailOutboundDomainsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains][%d] getRoutingEmailOutboundDomainsNotFound  %+v", 404, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainsRequestTimeout creates a GetRoutingEmailOutboundDomainsRequestTimeout with default headers values
func NewGetRoutingEmailOutboundDomainsRequestTimeout() *GetRoutingEmailOutboundDomainsRequestTimeout {
	return &GetRoutingEmailOutboundDomainsRequestTimeout{}
}

/*GetRoutingEmailOutboundDomainsRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetRoutingEmailOutboundDomainsRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingEmailOutboundDomainsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains][%d] getRoutingEmailOutboundDomainsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainsRequestEntityTooLarge creates a GetRoutingEmailOutboundDomainsRequestEntityTooLarge with default headers values
func NewGetRoutingEmailOutboundDomainsRequestEntityTooLarge() *GetRoutingEmailOutboundDomainsRequestEntityTooLarge {
	return &GetRoutingEmailOutboundDomainsRequestEntityTooLarge{}
}

/*GetRoutingEmailOutboundDomainsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetRoutingEmailOutboundDomainsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingEmailOutboundDomainsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains][%d] getRoutingEmailOutboundDomainsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainsUnsupportedMediaType creates a GetRoutingEmailOutboundDomainsUnsupportedMediaType with default headers values
func NewGetRoutingEmailOutboundDomainsUnsupportedMediaType() *GetRoutingEmailOutboundDomainsUnsupportedMediaType {
	return &GetRoutingEmailOutboundDomainsUnsupportedMediaType{}
}

/*GetRoutingEmailOutboundDomainsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetRoutingEmailOutboundDomainsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingEmailOutboundDomainsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains][%d] getRoutingEmailOutboundDomainsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainsTooManyRequests creates a GetRoutingEmailOutboundDomainsTooManyRequests with default headers values
func NewGetRoutingEmailOutboundDomainsTooManyRequests() *GetRoutingEmailOutboundDomainsTooManyRequests {
	return &GetRoutingEmailOutboundDomainsTooManyRequests{}
}

/*GetRoutingEmailOutboundDomainsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetRoutingEmailOutboundDomainsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingEmailOutboundDomainsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains][%d] getRoutingEmailOutboundDomainsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainsInternalServerError creates a GetRoutingEmailOutboundDomainsInternalServerError with default headers values
func NewGetRoutingEmailOutboundDomainsInternalServerError() *GetRoutingEmailOutboundDomainsInternalServerError {
	return &GetRoutingEmailOutboundDomainsInternalServerError{}
}

/*GetRoutingEmailOutboundDomainsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetRoutingEmailOutboundDomainsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingEmailOutboundDomainsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains][%d] getRoutingEmailOutboundDomainsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainsServiceUnavailable creates a GetRoutingEmailOutboundDomainsServiceUnavailable with default headers values
func NewGetRoutingEmailOutboundDomainsServiceUnavailable() *GetRoutingEmailOutboundDomainsServiceUnavailable {
	return &GetRoutingEmailOutboundDomainsServiceUnavailable{}
}

/*GetRoutingEmailOutboundDomainsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetRoutingEmailOutboundDomainsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingEmailOutboundDomainsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains][%d] getRoutingEmailOutboundDomainsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainsGatewayTimeout creates a GetRoutingEmailOutboundDomainsGatewayTimeout with default headers values
func NewGetRoutingEmailOutboundDomainsGatewayTimeout() *GetRoutingEmailOutboundDomainsGatewayTimeout {
	return &GetRoutingEmailOutboundDomainsGatewayTimeout{}
}

/*GetRoutingEmailOutboundDomainsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetRoutingEmailOutboundDomainsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingEmailOutboundDomainsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains][%d] getRoutingEmailOutboundDomainsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
