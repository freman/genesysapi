// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetRoutingUtilizationReader is a Reader for the GetRoutingUtilization structure.
type GetRoutingUtilizationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRoutingUtilizationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRoutingUtilizationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRoutingUtilizationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRoutingUtilizationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRoutingUtilizationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRoutingUtilizationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetRoutingUtilizationRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetRoutingUtilizationRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetRoutingUtilizationUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetRoutingUtilizationTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRoutingUtilizationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetRoutingUtilizationServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetRoutingUtilizationGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRoutingUtilizationOK creates a GetRoutingUtilizationOK with default headers values
func NewGetRoutingUtilizationOK() *GetRoutingUtilizationOK {
	return &GetRoutingUtilizationOK{}
}

/*GetRoutingUtilizationOK handles this case with default header values.

successful operation
*/
type GetRoutingUtilizationOK struct {
	Payload *models.Utilization
}

func (o *GetRoutingUtilizationOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/utilization][%d] getRoutingUtilizationOK  %+v", 200, o.Payload)
}

func (o *GetRoutingUtilizationOK) GetPayload() *models.Utilization {
	return o.Payload
}

func (o *GetRoutingUtilizationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Utilization)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingUtilizationBadRequest creates a GetRoutingUtilizationBadRequest with default headers values
func NewGetRoutingUtilizationBadRequest() *GetRoutingUtilizationBadRequest {
	return &GetRoutingUtilizationBadRequest{}
}

/*GetRoutingUtilizationBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetRoutingUtilizationBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingUtilizationBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/utilization][%d] getRoutingUtilizationBadRequest  %+v", 400, o.Payload)
}

func (o *GetRoutingUtilizationBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingUtilizationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingUtilizationUnauthorized creates a GetRoutingUtilizationUnauthorized with default headers values
func NewGetRoutingUtilizationUnauthorized() *GetRoutingUtilizationUnauthorized {
	return &GetRoutingUtilizationUnauthorized{}
}

/*GetRoutingUtilizationUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetRoutingUtilizationUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingUtilizationUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/utilization][%d] getRoutingUtilizationUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRoutingUtilizationUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingUtilizationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingUtilizationForbidden creates a GetRoutingUtilizationForbidden with default headers values
func NewGetRoutingUtilizationForbidden() *GetRoutingUtilizationForbidden {
	return &GetRoutingUtilizationForbidden{}
}

/*GetRoutingUtilizationForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetRoutingUtilizationForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingUtilizationForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/utilization][%d] getRoutingUtilizationForbidden  %+v", 403, o.Payload)
}

func (o *GetRoutingUtilizationForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingUtilizationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingUtilizationNotFound creates a GetRoutingUtilizationNotFound with default headers values
func NewGetRoutingUtilizationNotFound() *GetRoutingUtilizationNotFound {
	return &GetRoutingUtilizationNotFound{}
}

/*GetRoutingUtilizationNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetRoutingUtilizationNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingUtilizationNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/utilization][%d] getRoutingUtilizationNotFound  %+v", 404, o.Payload)
}

func (o *GetRoutingUtilizationNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingUtilizationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingUtilizationRequestTimeout creates a GetRoutingUtilizationRequestTimeout with default headers values
func NewGetRoutingUtilizationRequestTimeout() *GetRoutingUtilizationRequestTimeout {
	return &GetRoutingUtilizationRequestTimeout{}
}

/*GetRoutingUtilizationRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetRoutingUtilizationRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingUtilizationRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/utilization][%d] getRoutingUtilizationRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetRoutingUtilizationRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingUtilizationRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingUtilizationRequestEntityTooLarge creates a GetRoutingUtilizationRequestEntityTooLarge with default headers values
func NewGetRoutingUtilizationRequestEntityTooLarge() *GetRoutingUtilizationRequestEntityTooLarge {
	return &GetRoutingUtilizationRequestEntityTooLarge{}
}

/*GetRoutingUtilizationRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetRoutingUtilizationRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingUtilizationRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/utilization][%d] getRoutingUtilizationRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetRoutingUtilizationRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingUtilizationRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingUtilizationUnsupportedMediaType creates a GetRoutingUtilizationUnsupportedMediaType with default headers values
func NewGetRoutingUtilizationUnsupportedMediaType() *GetRoutingUtilizationUnsupportedMediaType {
	return &GetRoutingUtilizationUnsupportedMediaType{}
}

/*GetRoutingUtilizationUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetRoutingUtilizationUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingUtilizationUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/utilization][%d] getRoutingUtilizationUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetRoutingUtilizationUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingUtilizationUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingUtilizationTooManyRequests creates a GetRoutingUtilizationTooManyRequests with default headers values
func NewGetRoutingUtilizationTooManyRequests() *GetRoutingUtilizationTooManyRequests {
	return &GetRoutingUtilizationTooManyRequests{}
}

/*GetRoutingUtilizationTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetRoutingUtilizationTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingUtilizationTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/utilization][%d] getRoutingUtilizationTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRoutingUtilizationTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingUtilizationTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingUtilizationInternalServerError creates a GetRoutingUtilizationInternalServerError with default headers values
func NewGetRoutingUtilizationInternalServerError() *GetRoutingUtilizationInternalServerError {
	return &GetRoutingUtilizationInternalServerError{}
}

/*GetRoutingUtilizationInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetRoutingUtilizationInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingUtilizationInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/utilization][%d] getRoutingUtilizationInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRoutingUtilizationInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingUtilizationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingUtilizationServiceUnavailable creates a GetRoutingUtilizationServiceUnavailable with default headers values
func NewGetRoutingUtilizationServiceUnavailable() *GetRoutingUtilizationServiceUnavailable {
	return &GetRoutingUtilizationServiceUnavailable{}
}

/*GetRoutingUtilizationServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetRoutingUtilizationServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingUtilizationServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/utilization][%d] getRoutingUtilizationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetRoutingUtilizationServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingUtilizationServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingUtilizationGatewayTimeout creates a GetRoutingUtilizationGatewayTimeout with default headers values
func NewGetRoutingUtilizationGatewayTimeout() *GetRoutingUtilizationGatewayTimeout {
	return &GetRoutingUtilizationGatewayTimeout{}
}

/*GetRoutingUtilizationGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetRoutingUtilizationGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingUtilizationGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/utilization][%d] getRoutingUtilizationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetRoutingUtilizationGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingUtilizationGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
