// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetRoutingSmsAvailablephonenumbersParams creates a new GetRoutingSmsAvailablephonenumbersParams object
// with the default values initialized.
func NewGetRoutingSmsAvailablephonenumbersParams() *GetRoutingSmsAvailablephonenumbersParams {
	var ()
	return &GetRoutingSmsAvailablephonenumbersParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetRoutingSmsAvailablephonenumbersParamsWithTimeout creates a new GetRoutingSmsAvailablephonenumbersParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetRoutingSmsAvailablephonenumbersParamsWithTimeout(timeout time.Duration) *GetRoutingSmsAvailablephonenumbersParams {
	var ()
	return &GetRoutingSmsAvailablephonenumbersParams{

		timeout: timeout,
	}
}

// NewGetRoutingSmsAvailablephonenumbersParamsWithContext creates a new GetRoutingSmsAvailablephonenumbersParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetRoutingSmsAvailablephonenumbersParamsWithContext(ctx context.Context) *GetRoutingSmsAvailablephonenumbersParams {
	var ()
	return &GetRoutingSmsAvailablephonenumbersParams{

		Context: ctx,
	}
}

// NewGetRoutingSmsAvailablephonenumbersParamsWithHTTPClient creates a new GetRoutingSmsAvailablephonenumbersParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetRoutingSmsAvailablephonenumbersParamsWithHTTPClient(client *http.Client) *GetRoutingSmsAvailablephonenumbersParams {
	var ()
	return &GetRoutingSmsAvailablephonenumbersParams{
		HTTPClient: client,
	}
}

/*GetRoutingSmsAvailablephonenumbersParams contains all the parameters to send to the API endpoint
for the get routing sms availablephonenumbers operation typically these are written to a http.Request
*/
type GetRoutingSmsAvailablephonenumbersParams struct {

	/*AddressRequirement
	  This indicates whether the phone number requires to have an Address registered.

	*/
	AddressRequirement *string
	/*AreaCode
	  Area code that can be used to restrict the numbers returned

	*/
	AreaCode *string
	/*City
	  City that can be used to restrict the numbers returned

	*/
	City *string
	/*CountryCode
	  The ISO 3166-1 alpha-2 country code of the county for which available phone numbers should be returned

	*/
	CountryCode string
	/*Pattern
	  A pattern to match phone numbers. Valid characters are '*' and [0-9a-zA-Z]. The '*' character will match any single digit.

	*/
	Pattern *string
	/*PhoneNumberType
	  Type of available phone numbers searched

	*/
	PhoneNumberType string
	/*Region
	  Region/province/state that can be used to restrict the numbers returned

	*/
	Region *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get routing sms availablephonenumbers params
func (o *GetRoutingSmsAvailablephonenumbersParams) WithTimeout(timeout time.Duration) *GetRoutingSmsAvailablephonenumbersParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get routing sms availablephonenumbers params
func (o *GetRoutingSmsAvailablephonenumbersParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get routing sms availablephonenumbers params
func (o *GetRoutingSmsAvailablephonenumbersParams) WithContext(ctx context.Context) *GetRoutingSmsAvailablephonenumbersParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get routing sms availablephonenumbers params
func (o *GetRoutingSmsAvailablephonenumbersParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get routing sms availablephonenumbers params
func (o *GetRoutingSmsAvailablephonenumbersParams) WithHTTPClient(client *http.Client) *GetRoutingSmsAvailablephonenumbersParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get routing sms availablephonenumbers params
func (o *GetRoutingSmsAvailablephonenumbersParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAddressRequirement adds the addressRequirement to the get routing sms availablephonenumbers params
func (o *GetRoutingSmsAvailablephonenumbersParams) WithAddressRequirement(addressRequirement *string) *GetRoutingSmsAvailablephonenumbersParams {
	o.SetAddressRequirement(addressRequirement)
	return o
}

// SetAddressRequirement adds the addressRequirement to the get routing sms availablephonenumbers params
func (o *GetRoutingSmsAvailablephonenumbersParams) SetAddressRequirement(addressRequirement *string) {
	o.AddressRequirement = addressRequirement
}

// WithAreaCode adds the areaCode to the get routing sms availablephonenumbers params
func (o *GetRoutingSmsAvailablephonenumbersParams) WithAreaCode(areaCode *string) *GetRoutingSmsAvailablephonenumbersParams {
	o.SetAreaCode(areaCode)
	return o
}

// SetAreaCode adds the areaCode to the get routing sms availablephonenumbers params
func (o *GetRoutingSmsAvailablephonenumbersParams) SetAreaCode(areaCode *string) {
	o.AreaCode = areaCode
}

// WithCity adds the city to the get routing sms availablephonenumbers params
func (o *GetRoutingSmsAvailablephonenumbersParams) WithCity(city *string) *GetRoutingSmsAvailablephonenumbersParams {
	o.SetCity(city)
	return o
}

// SetCity adds the city to the get routing sms availablephonenumbers params
func (o *GetRoutingSmsAvailablephonenumbersParams) SetCity(city *string) {
	o.City = city
}

// WithCountryCode adds the countryCode to the get routing sms availablephonenumbers params
func (o *GetRoutingSmsAvailablephonenumbersParams) WithCountryCode(countryCode string) *GetRoutingSmsAvailablephonenumbersParams {
	o.SetCountryCode(countryCode)
	return o
}

// SetCountryCode adds the countryCode to the get routing sms availablephonenumbers params
func (o *GetRoutingSmsAvailablephonenumbersParams) SetCountryCode(countryCode string) {
	o.CountryCode = countryCode
}

// WithPattern adds the pattern to the get routing sms availablephonenumbers params
func (o *GetRoutingSmsAvailablephonenumbersParams) WithPattern(pattern *string) *GetRoutingSmsAvailablephonenumbersParams {
	o.SetPattern(pattern)
	return o
}

// SetPattern adds the pattern to the get routing sms availablephonenumbers params
func (o *GetRoutingSmsAvailablephonenumbersParams) SetPattern(pattern *string) {
	o.Pattern = pattern
}

// WithPhoneNumberType adds the phoneNumberType to the get routing sms availablephonenumbers params
func (o *GetRoutingSmsAvailablephonenumbersParams) WithPhoneNumberType(phoneNumberType string) *GetRoutingSmsAvailablephonenumbersParams {
	o.SetPhoneNumberType(phoneNumberType)
	return o
}

// SetPhoneNumberType adds the phoneNumberType to the get routing sms availablephonenumbers params
func (o *GetRoutingSmsAvailablephonenumbersParams) SetPhoneNumberType(phoneNumberType string) {
	o.PhoneNumberType = phoneNumberType
}

// WithRegion adds the region to the get routing sms availablephonenumbers params
func (o *GetRoutingSmsAvailablephonenumbersParams) WithRegion(region *string) *GetRoutingSmsAvailablephonenumbersParams {
	o.SetRegion(region)
	return o
}

// SetRegion adds the region to the get routing sms availablephonenumbers params
func (o *GetRoutingSmsAvailablephonenumbersParams) SetRegion(region *string) {
	o.Region = region
}

// WriteToRequest writes these params to a swagger request
func (o *GetRoutingSmsAvailablephonenumbersParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AddressRequirement != nil {

		// query param addressRequirement
		var qrAddressRequirement string
		if o.AddressRequirement != nil {
			qrAddressRequirement = *o.AddressRequirement
		}
		qAddressRequirement := qrAddressRequirement
		if qAddressRequirement != "" {
			if err := r.SetQueryParam("addressRequirement", qAddressRequirement); err != nil {
				return err
			}
		}

	}

	if o.AreaCode != nil {

		// query param areaCode
		var qrAreaCode string
		if o.AreaCode != nil {
			qrAreaCode = *o.AreaCode
		}
		qAreaCode := qrAreaCode
		if qAreaCode != "" {
			if err := r.SetQueryParam("areaCode", qAreaCode); err != nil {
				return err
			}
		}

	}

	if o.City != nil {

		// query param city
		var qrCity string
		if o.City != nil {
			qrCity = *o.City
		}
		qCity := qrCity
		if qCity != "" {
			if err := r.SetQueryParam("city", qCity); err != nil {
				return err
			}
		}

	}

	// query param countryCode
	qrCountryCode := o.CountryCode
	qCountryCode := qrCountryCode
	if qCountryCode != "" {
		if err := r.SetQueryParam("countryCode", qCountryCode); err != nil {
			return err
		}
	}

	if o.Pattern != nil {

		// query param pattern
		var qrPattern string
		if o.Pattern != nil {
			qrPattern = *o.Pattern
		}
		qPattern := qrPattern
		if qPattern != "" {
			if err := r.SetQueryParam("pattern", qPattern); err != nil {
				return err
			}
		}

	}

	// query param phoneNumberType
	qrPhoneNumberType := o.PhoneNumberType
	qPhoneNumberType := qrPhoneNumberType
	if qPhoneNumberType != "" {
		if err := r.SetQueryParam("phoneNumberType", qPhoneNumberType); err != nil {
			return err
		}
	}

	if o.Region != nil {

		// query param region
		var qrRegion string
		if o.Region != nil {
			qrRegion = *o.Region
		}
		qRegion := qrRegion
		if qRegion != "" {
			if err := r.SetQueryParam("region", qRegion); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
