// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetRoutingEmailOutboundDomainReader is a Reader for the GetRoutingEmailOutboundDomain structure.
type GetRoutingEmailOutboundDomainReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRoutingEmailOutboundDomainReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRoutingEmailOutboundDomainOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRoutingEmailOutboundDomainBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRoutingEmailOutboundDomainUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRoutingEmailOutboundDomainForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRoutingEmailOutboundDomainNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetRoutingEmailOutboundDomainRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetRoutingEmailOutboundDomainRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetRoutingEmailOutboundDomainUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetRoutingEmailOutboundDomainTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRoutingEmailOutboundDomainInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetRoutingEmailOutboundDomainServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetRoutingEmailOutboundDomainGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRoutingEmailOutboundDomainOK creates a GetRoutingEmailOutboundDomainOK with default headers values
func NewGetRoutingEmailOutboundDomainOK() *GetRoutingEmailOutboundDomainOK {
	return &GetRoutingEmailOutboundDomainOK{}
}

/*GetRoutingEmailOutboundDomainOK handles this case with default header values.

successful operation
*/
type GetRoutingEmailOutboundDomainOK struct {
	Payload *models.OutboundDomain
}

func (o *GetRoutingEmailOutboundDomainOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}][%d] getRoutingEmailOutboundDomainOK  %+v", 200, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainOK) GetPayload() *models.OutboundDomain {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OutboundDomain)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainBadRequest creates a GetRoutingEmailOutboundDomainBadRequest with default headers values
func NewGetRoutingEmailOutboundDomainBadRequest() *GetRoutingEmailOutboundDomainBadRequest {
	return &GetRoutingEmailOutboundDomainBadRequest{}
}

/*GetRoutingEmailOutboundDomainBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetRoutingEmailOutboundDomainBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingEmailOutboundDomainBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}][%d] getRoutingEmailOutboundDomainBadRequest  %+v", 400, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainUnauthorized creates a GetRoutingEmailOutboundDomainUnauthorized with default headers values
func NewGetRoutingEmailOutboundDomainUnauthorized() *GetRoutingEmailOutboundDomainUnauthorized {
	return &GetRoutingEmailOutboundDomainUnauthorized{}
}

/*GetRoutingEmailOutboundDomainUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetRoutingEmailOutboundDomainUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingEmailOutboundDomainUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}][%d] getRoutingEmailOutboundDomainUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainForbidden creates a GetRoutingEmailOutboundDomainForbidden with default headers values
func NewGetRoutingEmailOutboundDomainForbidden() *GetRoutingEmailOutboundDomainForbidden {
	return &GetRoutingEmailOutboundDomainForbidden{}
}

/*GetRoutingEmailOutboundDomainForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetRoutingEmailOutboundDomainForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingEmailOutboundDomainForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}][%d] getRoutingEmailOutboundDomainForbidden  %+v", 403, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainNotFound creates a GetRoutingEmailOutboundDomainNotFound with default headers values
func NewGetRoutingEmailOutboundDomainNotFound() *GetRoutingEmailOutboundDomainNotFound {
	return &GetRoutingEmailOutboundDomainNotFound{}
}

/*GetRoutingEmailOutboundDomainNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetRoutingEmailOutboundDomainNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingEmailOutboundDomainNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}][%d] getRoutingEmailOutboundDomainNotFound  %+v", 404, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainRequestTimeout creates a GetRoutingEmailOutboundDomainRequestTimeout with default headers values
func NewGetRoutingEmailOutboundDomainRequestTimeout() *GetRoutingEmailOutboundDomainRequestTimeout {
	return &GetRoutingEmailOutboundDomainRequestTimeout{}
}

/*GetRoutingEmailOutboundDomainRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetRoutingEmailOutboundDomainRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingEmailOutboundDomainRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}][%d] getRoutingEmailOutboundDomainRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainRequestEntityTooLarge creates a GetRoutingEmailOutboundDomainRequestEntityTooLarge with default headers values
func NewGetRoutingEmailOutboundDomainRequestEntityTooLarge() *GetRoutingEmailOutboundDomainRequestEntityTooLarge {
	return &GetRoutingEmailOutboundDomainRequestEntityTooLarge{}
}

/*GetRoutingEmailOutboundDomainRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetRoutingEmailOutboundDomainRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingEmailOutboundDomainRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}][%d] getRoutingEmailOutboundDomainRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainUnsupportedMediaType creates a GetRoutingEmailOutboundDomainUnsupportedMediaType with default headers values
func NewGetRoutingEmailOutboundDomainUnsupportedMediaType() *GetRoutingEmailOutboundDomainUnsupportedMediaType {
	return &GetRoutingEmailOutboundDomainUnsupportedMediaType{}
}

/*GetRoutingEmailOutboundDomainUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetRoutingEmailOutboundDomainUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingEmailOutboundDomainUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}][%d] getRoutingEmailOutboundDomainUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainTooManyRequests creates a GetRoutingEmailOutboundDomainTooManyRequests with default headers values
func NewGetRoutingEmailOutboundDomainTooManyRequests() *GetRoutingEmailOutboundDomainTooManyRequests {
	return &GetRoutingEmailOutboundDomainTooManyRequests{}
}

/*GetRoutingEmailOutboundDomainTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetRoutingEmailOutboundDomainTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingEmailOutboundDomainTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}][%d] getRoutingEmailOutboundDomainTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainInternalServerError creates a GetRoutingEmailOutboundDomainInternalServerError with default headers values
func NewGetRoutingEmailOutboundDomainInternalServerError() *GetRoutingEmailOutboundDomainInternalServerError {
	return &GetRoutingEmailOutboundDomainInternalServerError{}
}

/*GetRoutingEmailOutboundDomainInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetRoutingEmailOutboundDomainInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingEmailOutboundDomainInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}][%d] getRoutingEmailOutboundDomainInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainServiceUnavailable creates a GetRoutingEmailOutboundDomainServiceUnavailable with default headers values
func NewGetRoutingEmailOutboundDomainServiceUnavailable() *GetRoutingEmailOutboundDomainServiceUnavailable {
	return &GetRoutingEmailOutboundDomainServiceUnavailable{}
}

/*GetRoutingEmailOutboundDomainServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetRoutingEmailOutboundDomainServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingEmailOutboundDomainServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}][%d] getRoutingEmailOutboundDomainServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainGatewayTimeout creates a GetRoutingEmailOutboundDomainGatewayTimeout with default headers values
func NewGetRoutingEmailOutboundDomainGatewayTimeout() *GetRoutingEmailOutboundDomainGatewayTimeout {
	return &GetRoutingEmailOutboundDomainGatewayTimeout{}
}

/*GetRoutingEmailOutboundDomainGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetRoutingEmailOutboundDomainGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingEmailOutboundDomainGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}][%d] getRoutingEmailOutboundDomainGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
