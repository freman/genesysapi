// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteRoutingEmailDomainRouteReader is a Reader for the DeleteRoutingEmailDomainRoute structure.
type DeleteRoutingEmailDomainRouteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteRoutingEmailDomainRouteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteRoutingEmailDomainRouteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteRoutingEmailDomainRouteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteRoutingEmailDomainRouteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteRoutingEmailDomainRouteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteRoutingEmailDomainRouteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteRoutingEmailDomainRouteRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteRoutingEmailDomainRouteConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteRoutingEmailDomainRouteRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteRoutingEmailDomainRouteUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteRoutingEmailDomainRouteTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteRoutingEmailDomainRouteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteRoutingEmailDomainRouteServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteRoutingEmailDomainRouteGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteRoutingEmailDomainRouteOK creates a DeleteRoutingEmailDomainRouteOK with default headers values
func NewDeleteRoutingEmailDomainRouteOK() *DeleteRoutingEmailDomainRouteOK {
	return &DeleteRoutingEmailDomainRouteOK{}
}

/*
DeleteRoutingEmailDomainRouteOK describes a response with status code 200, with default header values.

Operation was successful.
*/
type DeleteRoutingEmailDomainRouteOK struct {
}

// IsSuccess returns true when this delete routing email domain route o k response has a 2xx status code
func (o *DeleteRoutingEmailDomainRouteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete routing email domain route o k response has a 3xx status code
func (o *DeleteRoutingEmailDomainRouteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete routing email domain route o k response has a 4xx status code
func (o *DeleteRoutingEmailDomainRouteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete routing email domain route o k response has a 5xx status code
func (o *DeleteRoutingEmailDomainRouteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete routing email domain route o k response a status code equal to that given
func (o *DeleteRoutingEmailDomainRouteOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeleteRoutingEmailDomainRouteOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainName}/routes/{routeId}][%d] deleteRoutingEmailDomainRouteOK ", 200)
}

func (o *DeleteRoutingEmailDomainRouteOK) String() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainName}/routes/{routeId}][%d] deleteRoutingEmailDomainRouteOK ", 200)
}

func (o *DeleteRoutingEmailDomainRouteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRoutingEmailDomainRouteBadRequest creates a DeleteRoutingEmailDomainRouteBadRequest with default headers values
func NewDeleteRoutingEmailDomainRouteBadRequest() *DeleteRoutingEmailDomainRouteBadRequest {
	return &DeleteRoutingEmailDomainRouteBadRequest{}
}

/*
DeleteRoutingEmailDomainRouteBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteRoutingEmailDomainRouteBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete routing email domain route bad request response has a 2xx status code
func (o *DeleteRoutingEmailDomainRouteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete routing email domain route bad request response has a 3xx status code
func (o *DeleteRoutingEmailDomainRouteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete routing email domain route bad request response has a 4xx status code
func (o *DeleteRoutingEmailDomainRouteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete routing email domain route bad request response has a 5xx status code
func (o *DeleteRoutingEmailDomainRouteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete routing email domain route bad request response a status code equal to that given
func (o *DeleteRoutingEmailDomainRouteBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteRoutingEmailDomainRouteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainName}/routes/{routeId}][%d] deleteRoutingEmailDomainRouteBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteRoutingEmailDomainRouteBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainName}/routes/{routeId}][%d] deleteRoutingEmailDomainRouteBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteRoutingEmailDomainRouteBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingEmailDomainRouteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingEmailDomainRouteUnauthorized creates a DeleteRoutingEmailDomainRouteUnauthorized with default headers values
func NewDeleteRoutingEmailDomainRouteUnauthorized() *DeleteRoutingEmailDomainRouteUnauthorized {
	return &DeleteRoutingEmailDomainRouteUnauthorized{}
}

/*
DeleteRoutingEmailDomainRouteUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteRoutingEmailDomainRouteUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete routing email domain route unauthorized response has a 2xx status code
func (o *DeleteRoutingEmailDomainRouteUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete routing email domain route unauthorized response has a 3xx status code
func (o *DeleteRoutingEmailDomainRouteUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete routing email domain route unauthorized response has a 4xx status code
func (o *DeleteRoutingEmailDomainRouteUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete routing email domain route unauthorized response has a 5xx status code
func (o *DeleteRoutingEmailDomainRouteUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete routing email domain route unauthorized response a status code equal to that given
func (o *DeleteRoutingEmailDomainRouteUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteRoutingEmailDomainRouteUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainName}/routes/{routeId}][%d] deleteRoutingEmailDomainRouteUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteRoutingEmailDomainRouteUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainName}/routes/{routeId}][%d] deleteRoutingEmailDomainRouteUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteRoutingEmailDomainRouteUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingEmailDomainRouteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingEmailDomainRouteForbidden creates a DeleteRoutingEmailDomainRouteForbidden with default headers values
func NewDeleteRoutingEmailDomainRouteForbidden() *DeleteRoutingEmailDomainRouteForbidden {
	return &DeleteRoutingEmailDomainRouteForbidden{}
}

/*
DeleteRoutingEmailDomainRouteForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type DeleteRoutingEmailDomainRouteForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete routing email domain route forbidden response has a 2xx status code
func (o *DeleteRoutingEmailDomainRouteForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete routing email domain route forbidden response has a 3xx status code
func (o *DeleteRoutingEmailDomainRouteForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete routing email domain route forbidden response has a 4xx status code
func (o *DeleteRoutingEmailDomainRouteForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete routing email domain route forbidden response has a 5xx status code
func (o *DeleteRoutingEmailDomainRouteForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete routing email domain route forbidden response a status code equal to that given
func (o *DeleteRoutingEmailDomainRouteForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteRoutingEmailDomainRouteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainName}/routes/{routeId}][%d] deleteRoutingEmailDomainRouteForbidden  %+v", 403, o.Payload)
}

func (o *DeleteRoutingEmailDomainRouteForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainName}/routes/{routeId}][%d] deleteRoutingEmailDomainRouteForbidden  %+v", 403, o.Payload)
}

func (o *DeleteRoutingEmailDomainRouteForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingEmailDomainRouteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingEmailDomainRouteNotFound creates a DeleteRoutingEmailDomainRouteNotFound with default headers values
func NewDeleteRoutingEmailDomainRouteNotFound() *DeleteRoutingEmailDomainRouteNotFound {
	return &DeleteRoutingEmailDomainRouteNotFound{}
}

/*
DeleteRoutingEmailDomainRouteNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type DeleteRoutingEmailDomainRouteNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete routing email domain route not found response has a 2xx status code
func (o *DeleteRoutingEmailDomainRouteNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete routing email domain route not found response has a 3xx status code
func (o *DeleteRoutingEmailDomainRouteNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete routing email domain route not found response has a 4xx status code
func (o *DeleteRoutingEmailDomainRouteNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete routing email domain route not found response has a 5xx status code
func (o *DeleteRoutingEmailDomainRouteNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete routing email domain route not found response a status code equal to that given
func (o *DeleteRoutingEmailDomainRouteNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteRoutingEmailDomainRouteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainName}/routes/{routeId}][%d] deleteRoutingEmailDomainRouteNotFound  %+v", 404, o.Payload)
}

func (o *DeleteRoutingEmailDomainRouteNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainName}/routes/{routeId}][%d] deleteRoutingEmailDomainRouteNotFound  %+v", 404, o.Payload)
}

func (o *DeleteRoutingEmailDomainRouteNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingEmailDomainRouteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingEmailDomainRouteRequestTimeout creates a DeleteRoutingEmailDomainRouteRequestTimeout with default headers values
func NewDeleteRoutingEmailDomainRouteRequestTimeout() *DeleteRoutingEmailDomainRouteRequestTimeout {
	return &DeleteRoutingEmailDomainRouteRequestTimeout{}
}

/*
DeleteRoutingEmailDomainRouteRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteRoutingEmailDomainRouteRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete routing email domain route request timeout response has a 2xx status code
func (o *DeleteRoutingEmailDomainRouteRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete routing email domain route request timeout response has a 3xx status code
func (o *DeleteRoutingEmailDomainRouteRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete routing email domain route request timeout response has a 4xx status code
func (o *DeleteRoutingEmailDomainRouteRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete routing email domain route request timeout response has a 5xx status code
func (o *DeleteRoutingEmailDomainRouteRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete routing email domain route request timeout response a status code equal to that given
func (o *DeleteRoutingEmailDomainRouteRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *DeleteRoutingEmailDomainRouteRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainName}/routes/{routeId}][%d] deleteRoutingEmailDomainRouteRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteRoutingEmailDomainRouteRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainName}/routes/{routeId}][%d] deleteRoutingEmailDomainRouteRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteRoutingEmailDomainRouteRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingEmailDomainRouteRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingEmailDomainRouteConflict creates a DeleteRoutingEmailDomainRouteConflict with default headers values
func NewDeleteRoutingEmailDomainRouteConflict() *DeleteRoutingEmailDomainRouteConflict {
	return &DeleteRoutingEmailDomainRouteConflict{}
}

/*
DeleteRoutingEmailDomainRouteConflict describes a response with status code 409, with default header values.

Conflict
*/
type DeleteRoutingEmailDomainRouteConflict struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete routing email domain route conflict response has a 2xx status code
func (o *DeleteRoutingEmailDomainRouteConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete routing email domain route conflict response has a 3xx status code
func (o *DeleteRoutingEmailDomainRouteConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete routing email domain route conflict response has a 4xx status code
func (o *DeleteRoutingEmailDomainRouteConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete routing email domain route conflict response has a 5xx status code
func (o *DeleteRoutingEmailDomainRouteConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this delete routing email domain route conflict response a status code equal to that given
func (o *DeleteRoutingEmailDomainRouteConflict) IsCode(code int) bool {
	return code == 409
}

func (o *DeleteRoutingEmailDomainRouteConflict) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainName}/routes/{routeId}][%d] deleteRoutingEmailDomainRouteConflict  %+v", 409, o.Payload)
}

func (o *DeleteRoutingEmailDomainRouteConflict) String() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainName}/routes/{routeId}][%d] deleteRoutingEmailDomainRouteConflict  %+v", 409, o.Payload)
}

func (o *DeleteRoutingEmailDomainRouteConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingEmailDomainRouteConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingEmailDomainRouteRequestEntityTooLarge creates a DeleteRoutingEmailDomainRouteRequestEntityTooLarge with default headers values
func NewDeleteRoutingEmailDomainRouteRequestEntityTooLarge() *DeleteRoutingEmailDomainRouteRequestEntityTooLarge {
	return &DeleteRoutingEmailDomainRouteRequestEntityTooLarge{}
}

/*
DeleteRoutingEmailDomainRouteRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type DeleteRoutingEmailDomainRouteRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete routing email domain route request entity too large response has a 2xx status code
func (o *DeleteRoutingEmailDomainRouteRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete routing email domain route request entity too large response has a 3xx status code
func (o *DeleteRoutingEmailDomainRouteRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete routing email domain route request entity too large response has a 4xx status code
func (o *DeleteRoutingEmailDomainRouteRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete routing email domain route request entity too large response has a 5xx status code
func (o *DeleteRoutingEmailDomainRouteRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this delete routing email domain route request entity too large response a status code equal to that given
func (o *DeleteRoutingEmailDomainRouteRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *DeleteRoutingEmailDomainRouteRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainName}/routes/{routeId}][%d] deleteRoutingEmailDomainRouteRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteRoutingEmailDomainRouteRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainName}/routes/{routeId}][%d] deleteRoutingEmailDomainRouteRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteRoutingEmailDomainRouteRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingEmailDomainRouteRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingEmailDomainRouteUnsupportedMediaType creates a DeleteRoutingEmailDomainRouteUnsupportedMediaType with default headers values
func NewDeleteRoutingEmailDomainRouteUnsupportedMediaType() *DeleteRoutingEmailDomainRouteUnsupportedMediaType {
	return &DeleteRoutingEmailDomainRouteUnsupportedMediaType{}
}

/*
DeleteRoutingEmailDomainRouteUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteRoutingEmailDomainRouteUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete routing email domain route unsupported media type response has a 2xx status code
func (o *DeleteRoutingEmailDomainRouteUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete routing email domain route unsupported media type response has a 3xx status code
func (o *DeleteRoutingEmailDomainRouteUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete routing email domain route unsupported media type response has a 4xx status code
func (o *DeleteRoutingEmailDomainRouteUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete routing email domain route unsupported media type response has a 5xx status code
func (o *DeleteRoutingEmailDomainRouteUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this delete routing email domain route unsupported media type response a status code equal to that given
func (o *DeleteRoutingEmailDomainRouteUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *DeleteRoutingEmailDomainRouteUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainName}/routes/{routeId}][%d] deleteRoutingEmailDomainRouteUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteRoutingEmailDomainRouteUnsupportedMediaType) String() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainName}/routes/{routeId}][%d] deleteRoutingEmailDomainRouteUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteRoutingEmailDomainRouteUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingEmailDomainRouteUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingEmailDomainRouteTooManyRequests creates a DeleteRoutingEmailDomainRouteTooManyRequests with default headers values
func NewDeleteRoutingEmailDomainRouteTooManyRequests() *DeleteRoutingEmailDomainRouteTooManyRequests {
	return &DeleteRoutingEmailDomainRouteTooManyRequests{}
}

/*
DeleteRoutingEmailDomainRouteTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteRoutingEmailDomainRouteTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete routing email domain route too many requests response has a 2xx status code
func (o *DeleteRoutingEmailDomainRouteTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete routing email domain route too many requests response has a 3xx status code
func (o *DeleteRoutingEmailDomainRouteTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete routing email domain route too many requests response has a 4xx status code
func (o *DeleteRoutingEmailDomainRouteTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete routing email domain route too many requests response has a 5xx status code
func (o *DeleteRoutingEmailDomainRouteTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete routing email domain route too many requests response a status code equal to that given
func (o *DeleteRoutingEmailDomainRouteTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteRoutingEmailDomainRouteTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainName}/routes/{routeId}][%d] deleteRoutingEmailDomainRouteTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteRoutingEmailDomainRouteTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainName}/routes/{routeId}][%d] deleteRoutingEmailDomainRouteTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteRoutingEmailDomainRouteTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingEmailDomainRouteTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingEmailDomainRouteInternalServerError creates a DeleteRoutingEmailDomainRouteInternalServerError with default headers values
func NewDeleteRoutingEmailDomainRouteInternalServerError() *DeleteRoutingEmailDomainRouteInternalServerError {
	return &DeleteRoutingEmailDomainRouteInternalServerError{}
}

/*
DeleteRoutingEmailDomainRouteInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteRoutingEmailDomainRouteInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete routing email domain route internal server error response has a 2xx status code
func (o *DeleteRoutingEmailDomainRouteInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete routing email domain route internal server error response has a 3xx status code
func (o *DeleteRoutingEmailDomainRouteInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete routing email domain route internal server error response has a 4xx status code
func (o *DeleteRoutingEmailDomainRouteInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete routing email domain route internal server error response has a 5xx status code
func (o *DeleteRoutingEmailDomainRouteInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete routing email domain route internal server error response a status code equal to that given
func (o *DeleteRoutingEmailDomainRouteInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteRoutingEmailDomainRouteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainName}/routes/{routeId}][%d] deleteRoutingEmailDomainRouteInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteRoutingEmailDomainRouteInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainName}/routes/{routeId}][%d] deleteRoutingEmailDomainRouteInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteRoutingEmailDomainRouteInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingEmailDomainRouteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingEmailDomainRouteServiceUnavailable creates a DeleteRoutingEmailDomainRouteServiceUnavailable with default headers values
func NewDeleteRoutingEmailDomainRouteServiceUnavailable() *DeleteRoutingEmailDomainRouteServiceUnavailable {
	return &DeleteRoutingEmailDomainRouteServiceUnavailable{}
}

/*
DeleteRoutingEmailDomainRouteServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteRoutingEmailDomainRouteServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete routing email domain route service unavailable response has a 2xx status code
func (o *DeleteRoutingEmailDomainRouteServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete routing email domain route service unavailable response has a 3xx status code
func (o *DeleteRoutingEmailDomainRouteServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete routing email domain route service unavailable response has a 4xx status code
func (o *DeleteRoutingEmailDomainRouteServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete routing email domain route service unavailable response has a 5xx status code
func (o *DeleteRoutingEmailDomainRouteServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete routing email domain route service unavailable response a status code equal to that given
func (o *DeleteRoutingEmailDomainRouteServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *DeleteRoutingEmailDomainRouteServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainName}/routes/{routeId}][%d] deleteRoutingEmailDomainRouteServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteRoutingEmailDomainRouteServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainName}/routes/{routeId}][%d] deleteRoutingEmailDomainRouteServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteRoutingEmailDomainRouteServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingEmailDomainRouteServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingEmailDomainRouteGatewayTimeout creates a DeleteRoutingEmailDomainRouteGatewayTimeout with default headers values
func NewDeleteRoutingEmailDomainRouteGatewayTimeout() *DeleteRoutingEmailDomainRouteGatewayTimeout {
	return &DeleteRoutingEmailDomainRouteGatewayTimeout{}
}

/*
DeleteRoutingEmailDomainRouteGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type DeleteRoutingEmailDomainRouteGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete routing email domain route gateway timeout response has a 2xx status code
func (o *DeleteRoutingEmailDomainRouteGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete routing email domain route gateway timeout response has a 3xx status code
func (o *DeleteRoutingEmailDomainRouteGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete routing email domain route gateway timeout response has a 4xx status code
func (o *DeleteRoutingEmailDomainRouteGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete routing email domain route gateway timeout response has a 5xx status code
func (o *DeleteRoutingEmailDomainRouteGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this delete routing email domain route gateway timeout response a status code equal to that given
func (o *DeleteRoutingEmailDomainRouteGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *DeleteRoutingEmailDomainRouteGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainName}/routes/{routeId}][%d] deleteRoutingEmailDomainRouteGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteRoutingEmailDomainRouteGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/routing/email/domains/{domainName}/routes/{routeId}][%d] deleteRoutingEmailDomainRouteGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteRoutingEmailDomainRouteGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteRoutingEmailDomainRouteGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
