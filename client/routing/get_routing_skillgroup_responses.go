// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetRoutingSkillgroupReader is a Reader for the GetRoutingSkillgroup structure.
type GetRoutingSkillgroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRoutingSkillgroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRoutingSkillgroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRoutingSkillgroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRoutingSkillgroupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRoutingSkillgroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRoutingSkillgroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetRoutingSkillgroupRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetRoutingSkillgroupRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetRoutingSkillgroupUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetRoutingSkillgroupTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRoutingSkillgroupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetRoutingSkillgroupServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetRoutingSkillgroupGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRoutingSkillgroupOK creates a GetRoutingSkillgroupOK with default headers values
func NewGetRoutingSkillgroupOK() *GetRoutingSkillgroupOK {
	return &GetRoutingSkillgroupOK{}
}

/*
GetRoutingSkillgroupOK describes a response with status code 200, with default header values.

successful operation
*/
type GetRoutingSkillgroupOK struct {
	Payload *models.SkillGroup
}

// IsSuccess returns true when this get routing skillgroup o k response has a 2xx status code
func (o *GetRoutingSkillgroupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get routing skillgroup o k response has a 3xx status code
func (o *GetRoutingSkillgroupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing skillgroup o k response has a 4xx status code
func (o *GetRoutingSkillgroupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing skillgroup o k response has a 5xx status code
func (o *GetRoutingSkillgroupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing skillgroup o k response a status code equal to that given
func (o *GetRoutingSkillgroupOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetRoutingSkillgroupOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/skillgroups/{skillGroupId}][%d] getRoutingSkillgroupOK  %+v", 200, o.Payload)
}

func (o *GetRoutingSkillgroupOK) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/skillgroups/{skillGroupId}][%d] getRoutingSkillgroupOK  %+v", 200, o.Payload)
}

func (o *GetRoutingSkillgroupOK) GetPayload() *models.SkillGroup {
	return o.Payload
}

func (o *GetRoutingSkillgroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SkillGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingSkillgroupBadRequest creates a GetRoutingSkillgroupBadRequest with default headers values
func NewGetRoutingSkillgroupBadRequest() *GetRoutingSkillgroupBadRequest {
	return &GetRoutingSkillgroupBadRequest{}
}

/*
GetRoutingSkillgroupBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetRoutingSkillgroupBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing skillgroup bad request response has a 2xx status code
func (o *GetRoutingSkillgroupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing skillgroup bad request response has a 3xx status code
func (o *GetRoutingSkillgroupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing skillgroup bad request response has a 4xx status code
func (o *GetRoutingSkillgroupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing skillgroup bad request response has a 5xx status code
func (o *GetRoutingSkillgroupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing skillgroup bad request response a status code equal to that given
func (o *GetRoutingSkillgroupBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetRoutingSkillgroupBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/skillgroups/{skillGroupId}][%d] getRoutingSkillgroupBadRequest  %+v", 400, o.Payload)
}

func (o *GetRoutingSkillgroupBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/skillgroups/{skillGroupId}][%d] getRoutingSkillgroupBadRequest  %+v", 400, o.Payload)
}

func (o *GetRoutingSkillgroupBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingSkillgroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingSkillgroupUnauthorized creates a GetRoutingSkillgroupUnauthorized with default headers values
func NewGetRoutingSkillgroupUnauthorized() *GetRoutingSkillgroupUnauthorized {
	return &GetRoutingSkillgroupUnauthorized{}
}

/*
GetRoutingSkillgroupUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetRoutingSkillgroupUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing skillgroup unauthorized response has a 2xx status code
func (o *GetRoutingSkillgroupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing skillgroup unauthorized response has a 3xx status code
func (o *GetRoutingSkillgroupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing skillgroup unauthorized response has a 4xx status code
func (o *GetRoutingSkillgroupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing skillgroup unauthorized response has a 5xx status code
func (o *GetRoutingSkillgroupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing skillgroup unauthorized response a status code equal to that given
func (o *GetRoutingSkillgroupUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetRoutingSkillgroupUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/skillgroups/{skillGroupId}][%d] getRoutingSkillgroupUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRoutingSkillgroupUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/skillgroups/{skillGroupId}][%d] getRoutingSkillgroupUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRoutingSkillgroupUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingSkillgroupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingSkillgroupForbidden creates a GetRoutingSkillgroupForbidden with default headers values
func NewGetRoutingSkillgroupForbidden() *GetRoutingSkillgroupForbidden {
	return &GetRoutingSkillgroupForbidden{}
}

/*
GetRoutingSkillgroupForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetRoutingSkillgroupForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing skillgroup forbidden response has a 2xx status code
func (o *GetRoutingSkillgroupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing skillgroup forbidden response has a 3xx status code
func (o *GetRoutingSkillgroupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing skillgroup forbidden response has a 4xx status code
func (o *GetRoutingSkillgroupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing skillgroup forbidden response has a 5xx status code
func (o *GetRoutingSkillgroupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing skillgroup forbidden response a status code equal to that given
func (o *GetRoutingSkillgroupForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetRoutingSkillgroupForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/skillgroups/{skillGroupId}][%d] getRoutingSkillgroupForbidden  %+v", 403, o.Payload)
}

func (o *GetRoutingSkillgroupForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/skillgroups/{skillGroupId}][%d] getRoutingSkillgroupForbidden  %+v", 403, o.Payload)
}

func (o *GetRoutingSkillgroupForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingSkillgroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingSkillgroupNotFound creates a GetRoutingSkillgroupNotFound with default headers values
func NewGetRoutingSkillgroupNotFound() *GetRoutingSkillgroupNotFound {
	return &GetRoutingSkillgroupNotFound{}
}

/*
GetRoutingSkillgroupNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetRoutingSkillgroupNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing skillgroup not found response has a 2xx status code
func (o *GetRoutingSkillgroupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing skillgroup not found response has a 3xx status code
func (o *GetRoutingSkillgroupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing skillgroup not found response has a 4xx status code
func (o *GetRoutingSkillgroupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing skillgroup not found response has a 5xx status code
func (o *GetRoutingSkillgroupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing skillgroup not found response a status code equal to that given
func (o *GetRoutingSkillgroupNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetRoutingSkillgroupNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/skillgroups/{skillGroupId}][%d] getRoutingSkillgroupNotFound  %+v", 404, o.Payload)
}

func (o *GetRoutingSkillgroupNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/skillgroups/{skillGroupId}][%d] getRoutingSkillgroupNotFound  %+v", 404, o.Payload)
}

func (o *GetRoutingSkillgroupNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingSkillgroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingSkillgroupRequestTimeout creates a GetRoutingSkillgroupRequestTimeout with default headers values
func NewGetRoutingSkillgroupRequestTimeout() *GetRoutingSkillgroupRequestTimeout {
	return &GetRoutingSkillgroupRequestTimeout{}
}

/*
GetRoutingSkillgroupRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetRoutingSkillgroupRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing skillgroup request timeout response has a 2xx status code
func (o *GetRoutingSkillgroupRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing skillgroup request timeout response has a 3xx status code
func (o *GetRoutingSkillgroupRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing skillgroup request timeout response has a 4xx status code
func (o *GetRoutingSkillgroupRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing skillgroup request timeout response has a 5xx status code
func (o *GetRoutingSkillgroupRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing skillgroup request timeout response a status code equal to that given
func (o *GetRoutingSkillgroupRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetRoutingSkillgroupRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/skillgroups/{skillGroupId}][%d] getRoutingSkillgroupRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetRoutingSkillgroupRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/skillgroups/{skillGroupId}][%d] getRoutingSkillgroupRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetRoutingSkillgroupRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingSkillgroupRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingSkillgroupRequestEntityTooLarge creates a GetRoutingSkillgroupRequestEntityTooLarge with default headers values
func NewGetRoutingSkillgroupRequestEntityTooLarge() *GetRoutingSkillgroupRequestEntityTooLarge {
	return &GetRoutingSkillgroupRequestEntityTooLarge{}
}

/*
GetRoutingSkillgroupRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetRoutingSkillgroupRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing skillgroup request entity too large response has a 2xx status code
func (o *GetRoutingSkillgroupRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing skillgroup request entity too large response has a 3xx status code
func (o *GetRoutingSkillgroupRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing skillgroup request entity too large response has a 4xx status code
func (o *GetRoutingSkillgroupRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing skillgroup request entity too large response has a 5xx status code
func (o *GetRoutingSkillgroupRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing skillgroup request entity too large response a status code equal to that given
func (o *GetRoutingSkillgroupRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetRoutingSkillgroupRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/skillgroups/{skillGroupId}][%d] getRoutingSkillgroupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetRoutingSkillgroupRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/skillgroups/{skillGroupId}][%d] getRoutingSkillgroupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetRoutingSkillgroupRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingSkillgroupRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingSkillgroupUnsupportedMediaType creates a GetRoutingSkillgroupUnsupportedMediaType with default headers values
func NewGetRoutingSkillgroupUnsupportedMediaType() *GetRoutingSkillgroupUnsupportedMediaType {
	return &GetRoutingSkillgroupUnsupportedMediaType{}
}

/*
GetRoutingSkillgroupUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetRoutingSkillgroupUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing skillgroup unsupported media type response has a 2xx status code
func (o *GetRoutingSkillgroupUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing skillgroup unsupported media type response has a 3xx status code
func (o *GetRoutingSkillgroupUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing skillgroup unsupported media type response has a 4xx status code
func (o *GetRoutingSkillgroupUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing skillgroup unsupported media type response has a 5xx status code
func (o *GetRoutingSkillgroupUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing skillgroup unsupported media type response a status code equal to that given
func (o *GetRoutingSkillgroupUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetRoutingSkillgroupUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/skillgroups/{skillGroupId}][%d] getRoutingSkillgroupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetRoutingSkillgroupUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/skillgroups/{skillGroupId}][%d] getRoutingSkillgroupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetRoutingSkillgroupUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingSkillgroupUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingSkillgroupTooManyRequests creates a GetRoutingSkillgroupTooManyRequests with default headers values
func NewGetRoutingSkillgroupTooManyRequests() *GetRoutingSkillgroupTooManyRequests {
	return &GetRoutingSkillgroupTooManyRequests{}
}

/*
GetRoutingSkillgroupTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetRoutingSkillgroupTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing skillgroup too many requests response has a 2xx status code
func (o *GetRoutingSkillgroupTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing skillgroup too many requests response has a 3xx status code
func (o *GetRoutingSkillgroupTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing skillgroup too many requests response has a 4xx status code
func (o *GetRoutingSkillgroupTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing skillgroup too many requests response has a 5xx status code
func (o *GetRoutingSkillgroupTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing skillgroup too many requests response a status code equal to that given
func (o *GetRoutingSkillgroupTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetRoutingSkillgroupTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/skillgroups/{skillGroupId}][%d] getRoutingSkillgroupTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRoutingSkillgroupTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/skillgroups/{skillGroupId}][%d] getRoutingSkillgroupTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRoutingSkillgroupTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingSkillgroupTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingSkillgroupInternalServerError creates a GetRoutingSkillgroupInternalServerError with default headers values
func NewGetRoutingSkillgroupInternalServerError() *GetRoutingSkillgroupInternalServerError {
	return &GetRoutingSkillgroupInternalServerError{}
}

/*
GetRoutingSkillgroupInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetRoutingSkillgroupInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing skillgroup internal server error response has a 2xx status code
func (o *GetRoutingSkillgroupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing skillgroup internal server error response has a 3xx status code
func (o *GetRoutingSkillgroupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing skillgroup internal server error response has a 4xx status code
func (o *GetRoutingSkillgroupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing skillgroup internal server error response has a 5xx status code
func (o *GetRoutingSkillgroupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get routing skillgroup internal server error response a status code equal to that given
func (o *GetRoutingSkillgroupInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetRoutingSkillgroupInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/skillgroups/{skillGroupId}][%d] getRoutingSkillgroupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRoutingSkillgroupInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/skillgroups/{skillGroupId}][%d] getRoutingSkillgroupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRoutingSkillgroupInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingSkillgroupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingSkillgroupServiceUnavailable creates a GetRoutingSkillgroupServiceUnavailable with default headers values
func NewGetRoutingSkillgroupServiceUnavailable() *GetRoutingSkillgroupServiceUnavailable {
	return &GetRoutingSkillgroupServiceUnavailable{}
}

/*
GetRoutingSkillgroupServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetRoutingSkillgroupServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing skillgroup service unavailable response has a 2xx status code
func (o *GetRoutingSkillgroupServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing skillgroup service unavailable response has a 3xx status code
func (o *GetRoutingSkillgroupServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing skillgroup service unavailable response has a 4xx status code
func (o *GetRoutingSkillgroupServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing skillgroup service unavailable response has a 5xx status code
func (o *GetRoutingSkillgroupServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get routing skillgroup service unavailable response a status code equal to that given
func (o *GetRoutingSkillgroupServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetRoutingSkillgroupServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/skillgroups/{skillGroupId}][%d] getRoutingSkillgroupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetRoutingSkillgroupServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/skillgroups/{skillGroupId}][%d] getRoutingSkillgroupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetRoutingSkillgroupServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingSkillgroupServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingSkillgroupGatewayTimeout creates a GetRoutingSkillgroupGatewayTimeout with default headers values
func NewGetRoutingSkillgroupGatewayTimeout() *GetRoutingSkillgroupGatewayTimeout {
	return &GetRoutingSkillgroupGatewayTimeout{}
}

/*
GetRoutingSkillgroupGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetRoutingSkillgroupGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing skillgroup gateway timeout response has a 2xx status code
func (o *GetRoutingSkillgroupGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing skillgroup gateway timeout response has a 3xx status code
func (o *GetRoutingSkillgroupGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing skillgroup gateway timeout response has a 4xx status code
func (o *GetRoutingSkillgroupGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing skillgroup gateway timeout response has a 5xx status code
func (o *GetRoutingSkillgroupGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get routing skillgroup gateway timeout response a status code equal to that given
func (o *GetRoutingSkillgroupGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetRoutingSkillgroupGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/skillgroups/{skillGroupId}][%d] getRoutingSkillgroupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetRoutingSkillgroupGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/skillgroups/{skillGroupId}][%d] getRoutingSkillgroupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetRoutingSkillgroupGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingSkillgroupGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
