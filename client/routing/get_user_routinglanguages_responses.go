// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetUserRoutinglanguagesReader is a Reader for the GetUserRoutinglanguages structure.
type GetUserRoutinglanguagesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserRoutinglanguagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserRoutinglanguagesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUserRoutinglanguagesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetUserRoutinglanguagesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUserRoutinglanguagesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUserRoutinglanguagesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetUserRoutinglanguagesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetUserRoutinglanguagesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetUserRoutinglanguagesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUserRoutinglanguagesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetUserRoutinglanguagesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetUserRoutinglanguagesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUserRoutinglanguagesOK creates a GetUserRoutinglanguagesOK with default headers values
func NewGetUserRoutinglanguagesOK() *GetUserRoutinglanguagesOK {
	return &GetUserRoutinglanguagesOK{}
}

/*GetUserRoutinglanguagesOK handles this case with default header values.

successful operation
*/
type GetUserRoutinglanguagesOK struct {
	Payload *models.UserLanguageEntityListing
}

func (o *GetUserRoutinglanguagesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/routinglanguages][%d] getUserRoutinglanguagesOK  %+v", 200, o.Payload)
}

func (o *GetUserRoutinglanguagesOK) GetPayload() *models.UserLanguageEntityListing {
	return o.Payload
}

func (o *GetUserRoutinglanguagesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserLanguageEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRoutinglanguagesBadRequest creates a GetUserRoutinglanguagesBadRequest with default headers values
func NewGetUserRoutinglanguagesBadRequest() *GetUserRoutinglanguagesBadRequest {
	return &GetUserRoutinglanguagesBadRequest{}
}

/*GetUserRoutinglanguagesBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetUserRoutinglanguagesBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetUserRoutinglanguagesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/routinglanguages][%d] getUserRoutinglanguagesBadRequest  %+v", 400, o.Payload)
}

func (o *GetUserRoutinglanguagesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserRoutinglanguagesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRoutinglanguagesUnauthorized creates a GetUserRoutinglanguagesUnauthorized with default headers values
func NewGetUserRoutinglanguagesUnauthorized() *GetUserRoutinglanguagesUnauthorized {
	return &GetUserRoutinglanguagesUnauthorized{}
}

/*GetUserRoutinglanguagesUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetUserRoutinglanguagesUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetUserRoutinglanguagesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/routinglanguages][%d] getUserRoutinglanguagesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUserRoutinglanguagesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserRoutinglanguagesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRoutinglanguagesForbidden creates a GetUserRoutinglanguagesForbidden with default headers values
func NewGetUserRoutinglanguagesForbidden() *GetUserRoutinglanguagesForbidden {
	return &GetUserRoutinglanguagesForbidden{}
}

/*GetUserRoutinglanguagesForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetUserRoutinglanguagesForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetUserRoutinglanguagesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/routinglanguages][%d] getUserRoutinglanguagesForbidden  %+v", 403, o.Payload)
}

func (o *GetUserRoutinglanguagesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserRoutinglanguagesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRoutinglanguagesNotFound creates a GetUserRoutinglanguagesNotFound with default headers values
func NewGetUserRoutinglanguagesNotFound() *GetUserRoutinglanguagesNotFound {
	return &GetUserRoutinglanguagesNotFound{}
}

/*GetUserRoutinglanguagesNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetUserRoutinglanguagesNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetUserRoutinglanguagesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/routinglanguages][%d] getUserRoutinglanguagesNotFound  %+v", 404, o.Payload)
}

func (o *GetUserRoutinglanguagesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserRoutinglanguagesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRoutinglanguagesRequestEntityTooLarge creates a GetUserRoutinglanguagesRequestEntityTooLarge with default headers values
func NewGetUserRoutinglanguagesRequestEntityTooLarge() *GetUserRoutinglanguagesRequestEntityTooLarge {
	return &GetUserRoutinglanguagesRequestEntityTooLarge{}
}

/*GetUserRoutinglanguagesRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetUserRoutinglanguagesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetUserRoutinglanguagesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/routinglanguages][%d] getUserRoutinglanguagesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetUserRoutinglanguagesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserRoutinglanguagesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRoutinglanguagesUnsupportedMediaType creates a GetUserRoutinglanguagesUnsupportedMediaType with default headers values
func NewGetUserRoutinglanguagesUnsupportedMediaType() *GetUserRoutinglanguagesUnsupportedMediaType {
	return &GetUserRoutinglanguagesUnsupportedMediaType{}
}

/*GetUserRoutinglanguagesUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetUserRoutinglanguagesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetUserRoutinglanguagesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/routinglanguages][%d] getUserRoutinglanguagesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetUserRoutinglanguagesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserRoutinglanguagesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRoutinglanguagesTooManyRequests creates a GetUserRoutinglanguagesTooManyRequests with default headers values
func NewGetUserRoutinglanguagesTooManyRequests() *GetUserRoutinglanguagesTooManyRequests {
	return &GetUserRoutinglanguagesTooManyRequests{}
}

/*GetUserRoutinglanguagesTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type GetUserRoutinglanguagesTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetUserRoutinglanguagesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/routinglanguages][%d] getUserRoutinglanguagesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetUserRoutinglanguagesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserRoutinglanguagesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRoutinglanguagesInternalServerError creates a GetUserRoutinglanguagesInternalServerError with default headers values
func NewGetUserRoutinglanguagesInternalServerError() *GetUserRoutinglanguagesInternalServerError {
	return &GetUserRoutinglanguagesInternalServerError{}
}

/*GetUserRoutinglanguagesInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetUserRoutinglanguagesInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetUserRoutinglanguagesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/routinglanguages][%d] getUserRoutinglanguagesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUserRoutinglanguagesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserRoutinglanguagesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRoutinglanguagesServiceUnavailable creates a GetUserRoutinglanguagesServiceUnavailable with default headers values
func NewGetUserRoutinglanguagesServiceUnavailable() *GetUserRoutinglanguagesServiceUnavailable {
	return &GetUserRoutinglanguagesServiceUnavailable{}
}

/*GetUserRoutinglanguagesServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetUserRoutinglanguagesServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetUserRoutinglanguagesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/routinglanguages][%d] getUserRoutinglanguagesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUserRoutinglanguagesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserRoutinglanguagesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRoutinglanguagesGatewayTimeout creates a GetUserRoutinglanguagesGatewayTimeout with default headers values
func NewGetUserRoutinglanguagesGatewayTimeout() *GetUserRoutinglanguagesGatewayTimeout {
	return &GetUserRoutinglanguagesGatewayTimeout{}
}

/*GetUserRoutinglanguagesGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetUserRoutinglanguagesGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetUserRoutinglanguagesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/routinglanguages][%d] getUserRoutinglanguagesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUserRoutinglanguagesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserRoutinglanguagesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
