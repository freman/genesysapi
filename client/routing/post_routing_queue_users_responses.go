// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostRoutingQueueUsersReader is a Reader for the PostRoutingQueueUsers structure.
type PostRoutingQueueUsersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRoutingQueueUsersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewPostRoutingQueueUsersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostRoutingQueueUsersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostRoutingQueueUsersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostRoutingQueueUsersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostRoutingQueueUsersRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostRoutingQueueUsersRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostRoutingQueueUsersUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostRoutingQueueUsersTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostRoutingQueueUsersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostRoutingQueueUsersServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostRoutingQueueUsersGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPostRoutingQueueUsersDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostRoutingQueueUsersBadRequest creates a PostRoutingQueueUsersBadRequest with default headers values
func NewPostRoutingQueueUsersBadRequest() *PostRoutingQueueUsersBadRequest {
	return &PostRoutingQueueUsersBadRequest{}
}

/*
PostRoutingQueueUsersBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostRoutingQueueUsersBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing queue users bad request response has a 2xx status code
func (o *PostRoutingQueueUsersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing queue users bad request response has a 3xx status code
func (o *PostRoutingQueueUsersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing queue users bad request response has a 4xx status code
func (o *PostRoutingQueueUsersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing queue users bad request response has a 5xx status code
func (o *PostRoutingQueueUsersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing queue users bad request response a status code equal to that given
func (o *PostRoutingQueueUsersBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostRoutingQueueUsersBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/users][%d] postRoutingQueueUsersBadRequest  %+v", 400, o.Payload)
}

func (o *PostRoutingQueueUsersBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/users][%d] postRoutingQueueUsersBadRequest  %+v", 400, o.Payload)
}

func (o *PostRoutingQueueUsersBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingQueueUsersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingQueueUsersUnauthorized creates a PostRoutingQueueUsersUnauthorized with default headers values
func NewPostRoutingQueueUsersUnauthorized() *PostRoutingQueueUsersUnauthorized {
	return &PostRoutingQueueUsersUnauthorized{}
}

/*
PostRoutingQueueUsersUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostRoutingQueueUsersUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing queue users unauthorized response has a 2xx status code
func (o *PostRoutingQueueUsersUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing queue users unauthorized response has a 3xx status code
func (o *PostRoutingQueueUsersUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing queue users unauthorized response has a 4xx status code
func (o *PostRoutingQueueUsersUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing queue users unauthorized response has a 5xx status code
func (o *PostRoutingQueueUsersUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing queue users unauthorized response a status code equal to that given
func (o *PostRoutingQueueUsersUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostRoutingQueueUsersUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/users][%d] postRoutingQueueUsersUnauthorized  %+v", 401, o.Payload)
}

func (o *PostRoutingQueueUsersUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/users][%d] postRoutingQueueUsersUnauthorized  %+v", 401, o.Payload)
}

func (o *PostRoutingQueueUsersUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingQueueUsersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingQueueUsersForbidden creates a PostRoutingQueueUsersForbidden with default headers values
func NewPostRoutingQueueUsersForbidden() *PostRoutingQueueUsersForbidden {
	return &PostRoutingQueueUsersForbidden{}
}

/*
PostRoutingQueueUsersForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostRoutingQueueUsersForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing queue users forbidden response has a 2xx status code
func (o *PostRoutingQueueUsersForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing queue users forbidden response has a 3xx status code
func (o *PostRoutingQueueUsersForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing queue users forbidden response has a 4xx status code
func (o *PostRoutingQueueUsersForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing queue users forbidden response has a 5xx status code
func (o *PostRoutingQueueUsersForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing queue users forbidden response a status code equal to that given
func (o *PostRoutingQueueUsersForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostRoutingQueueUsersForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/users][%d] postRoutingQueueUsersForbidden  %+v", 403, o.Payload)
}

func (o *PostRoutingQueueUsersForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/users][%d] postRoutingQueueUsersForbidden  %+v", 403, o.Payload)
}

func (o *PostRoutingQueueUsersForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingQueueUsersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingQueueUsersNotFound creates a PostRoutingQueueUsersNotFound with default headers values
func NewPostRoutingQueueUsersNotFound() *PostRoutingQueueUsersNotFound {
	return &PostRoutingQueueUsersNotFound{}
}

/*
PostRoutingQueueUsersNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostRoutingQueueUsersNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing queue users not found response has a 2xx status code
func (o *PostRoutingQueueUsersNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing queue users not found response has a 3xx status code
func (o *PostRoutingQueueUsersNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing queue users not found response has a 4xx status code
func (o *PostRoutingQueueUsersNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing queue users not found response has a 5xx status code
func (o *PostRoutingQueueUsersNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing queue users not found response a status code equal to that given
func (o *PostRoutingQueueUsersNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostRoutingQueueUsersNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/users][%d] postRoutingQueueUsersNotFound  %+v", 404, o.Payload)
}

func (o *PostRoutingQueueUsersNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/users][%d] postRoutingQueueUsersNotFound  %+v", 404, o.Payload)
}

func (o *PostRoutingQueueUsersNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingQueueUsersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingQueueUsersRequestTimeout creates a PostRoutingQueueUsersRequestTimeout with default headers values
func NewPostRoutingQueueUsersRequestTimeout() *PostRoutingQueueUsersRequestTimeout {
	return &PostRoutingQueueUsersRequestTimeout{}
}

/*
PostRoutingQueueUsersRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostRoutingQueueUsersRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing queue users request timeout response has a 2xx status code
func (o *PostRoutingQueueUsersRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing queue users request timeout response has a 3xx status code
func (o *PostRoutingQueueUsersRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing queue users request timeout response has a 4xx status code
func (o *PostRoutingQueueUsersRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing queue users request timeout response has a 5xx status code
func (o *PostRoutingQueueUsersRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing queue users request timeout response a status code equal to that given
func (o *PostRoutingQueueUsersRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostRoutingQueueUsersRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/users][%d] postRoutingQueueUsersRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostRoutingQueueUsersRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/users][%d] postRoutingQueueUsersRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostRoutingQueueUsersRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingQueueUsersRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingQueueUsersRequestEntityTooLarge creates a PostRoutingQueueUsersRequestEntityTooLarge with default headers values
func NewPostRoutingQueueUsersRequestEntityTooLarge() *PostRoutingQueueUsersRequestEntityTooLarge {
	return &PostRoutingQueueUsersRequestEntityTooLarge{}
}

/*
PostRoutingQueueUsersRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostRoutingQueueUsersRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing queue users request entity too large response has a 2xx status code
func (o *PostRoutingQueueUsersRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing queue users request entity too large response has a 3xx status code
func (o *PostRoutingQueueUsersRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing queue users request entity too large response has a 4xx status code
func (o *PostRoutingQueueUsersRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing queue users request entity too large response has a 5xx status code
func (o *PostRoutingQueueUsersRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing queue users request entity too large response a status code equal to that given
func (o *PostRoutingQueueUsersRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostRoutingQueueUsersRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/users][%d] postRoutingQueueUsersRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostRoutingQueueUsersRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/users][%d] postRoutingQueueUsersRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostRoutingQueueUsersRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingQueueUsersRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingQueueUsersUnsupportedMediaType creates a PostRoutingQueueUsersUnsupportedMediaType with default headers values
func NewPostRoutingQueueUsersUnsupportedMediaType() *PostRoutingQueueUsersUnsupportedMediaType {
	return &PostRoutingQueueUsersUnsupportedMediaType{}
}

/*
PostRoutingQueueUsersUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostRoutingQueueUsersUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing queue users unsupported media type response has a 2xx status code
func (o *PostRoutingQueueUsersUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing queue users unsupported media type response has a 3xx status code
func (o *PostRoutingQueueUsersUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing queue users unsupported media type response has a 4xx status code
func (o *PostRoutingQueueUsersUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing queue users unsupported media type response has a 5xx status code
func (o *PostRoutingQueueUsersUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing queue users unsupported media type response a status code equal to that given
func (o *PostRoutingQueueUsersUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostRoutingQueueUsersUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/users][%d] postRoutingQueueUsersUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostRoutingQueueUsersUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/users][%d] postRoutingQueueUsersUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostRoutingQueueUsersUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingQueueUsersUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingQueueUsersTooManyRequests creates a PostRoutingQueueUsersTooManyRequests with default headers values
func NewPostRoutingQueueUsersTooManyRequests() *PostRoutingQueueUsersTooManyRequests {
	return &PostRoutingQueueUsersTooManyRequests{}
}

/*
PostRoutingQueueUsersTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostRoutingQueueUsersTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing queue users too many requests response has a 2xx status code
func (o *PostRoutingQueueUsersTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing queue users too many requests response has a 3xx status code
func (o *PostRoutingQueueUsersTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing queue users too many requests response has a 4xx status code
func (o *PostRoutingQueueUsersTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing queue users too many requests response has a 5xx status code
func (o *PostRoutingQueueUsersTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing queue users too many requests response a status code equal to that given
func (o *PostRoutingQueueUsersTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostRoutingQueueUsersTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/users][%d] postRoutingQueueUsersTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostRoutingQueueUsersTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/users][%d] postRoutingQueueUsersTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostRoutingQueueUsersTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingQueueUsersTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingQueueUsersInternalServerError creates a PostRoutingQueueUsersInternalServerError with default headers values
func NewPostRoutingQueueUsersInternalServerError() *PostRoutingQueueUsersInternalServerError {
	return &PostRoutingQueueUsersInternalServerError{}
}

/*
PostRoutingQueueUsersInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostRoutingQueueUsersInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing queue users internal server error response has a 2xx status code
func (o *PostRoutingQueueUsersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing queue users internal server error response has a 3xx status code
func (o *PostRoutingQueueUsersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing queue users internal server error response has a 4xx status code
func (o *PostRoutingQueueUsersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing queue users internal server error response has a 5xx status code
func (o *PostRoutingQueueUsersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post routing queue users internal server error response a status code equal to that given
func (o *PostRoutingQueueUsersInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostRoutingQueueUsersInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/users][%d] postRoutingQueueUsersInternalServerError  %+v", 500, o.Payload)
}

func (o *PostRoutingQueueUsersInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/users][%d] postRoutingQueueUsersInternalServerError  %+v", 500, o.Payload)
}

func (o *PostRoutingQueueUsersInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingQueueUsersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingQueueUsersServiceUnavailable creates a PostRoutingQueueUsersServiceUnavailable with default headers values
func NewPostRoutingQueueUsersServiceUnavailable() *PostRoutingQueueUsersServiceUnavailable {
	return &PostRoutingQueueUsersServiceUnavailable{}
}

/*
PostRoutingQueueUsersServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostRoutingQueueUsersServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing queue users service unavailable response has a 2xx status code
func (o *PostRoutingQueueUsersServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing queue users service unavailable response has a 3xx status code
func (o *PostRoutingQueueUsersServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing queue users service unavailable response has a 4xx status code
func (o *PostRoutingQueueUsersServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing queue users service unavailable response has a 5xx status code
func (o *PostRoutingQueueUsersServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post routing queue users service unavailable response a status code equal to that given
func (o *PostRoutingQueueUsersServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostRoutingQueueUsersServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/users][%d] postRoutingQueueUsersServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostRoutingQueueUsersServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/users][%d] postRoutingQueueUsersServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostRoutingQueueUsersServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingQueueUsersServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingQueueUsersGatewayTimeout creates a PostRoutingQueueUsersGatewayTimeout with default headers values
func NewPostRoutingQueueUsersGatewayTimeout() *PostRoutingQueueUsersGatewayTimeout {
	return &PostRoutingQueueUsersGatewayTimeout{}
}

/*
PostRoutingQueueUsersGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostRoutingQueueUsersGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing queue users gateway timeout response has a 2xx status code
func (o *PostRoutingQueueUsersGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing queue users gateway timeout response has a 3xx status code
func (o *PostRoutingQueueUsersGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing queue users gateway timeout response has a 4xx status code
func (o *PostRoutingQueueUsersGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing queue users gateway timeout response has a 5xx status code
func (o *PostRoutingQueueUsersGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post routing queue users gateway timeout response a status code equal to that given
func (o *PostRoutingQueueUsersGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostRoutingQueueUsersGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/users][%d] postRoutingQueueUsersGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostRoutingQueueUsersGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/users][%d] postRoutingQueueUsersGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostRoutingQueueUsersGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingQueueUsersGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingQueueUsersDefault creates a PostRoutingQueueUsersDefault with default headers values
func NewPostRoutingQueueUsersDefault(code int) *PostRoutingQueueUsersDefault {
	return &PostRoutingQueueUsersDefault{
		_statusCode: code,
	}
}

/*
PostRoutingQueueUsersDefault describes a response with status code -1, with default header values.

successful operation
*/
type PostRoutingQueueUsersDefault struct {
	_statusCode int
}

// Code gets the status code for the post routing queue users default response
func (o *PostRoutingQueueUsersDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this post routing queue users default response has a 2xx status code
func (o *PostRoutingQueueUsersDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this post routing queue users default response has a 3xx status code
func (o *PostRoutingQueueUsersDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this post routing queue users default response has a 4xx status code
func (o *PostRoutingQueueUsersDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this post routing queue users default response has a 5xx status code
func (o *PostRoutingQueueUsersDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this post routing queue users default response a status code equal to that given
func (o *PostRoutingQueueUsersDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *PostRoutingQueueUsersDefault) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/users][%d] postRoutingQueueUsers default ", o._statusCode)
}

func (o *PostRoutingQueueUsersDefault) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/queues/{queueId}/users][%d] postRoutingQueueUsers default ", o._statusCode)
}

func (o *PostRoutingQueueUsersDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
