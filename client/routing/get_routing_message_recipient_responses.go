// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetRoutingMessageRecipientReader is a Reader for the GetRoutingMessageRecipient structure.
type GetRoutingMessageRecipientReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRoutingMessageRecipientReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRoutingMessageRecipientOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRoutingMessageRecipientBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRoutingMessageRecipientUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRoutingMessageRecipientForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRoutingMessageRecipientNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetRoutingMessageRecipientRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetRoutingMessageRecipientRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetRoutingMessageRecipientUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetRoutingMessageRecipientTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRoutingMessageRecipientInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetRoutingMessageRecipientServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetRoutingMessageRecipientGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRoutingMessageRecipientOK creates a GetRoutingMessageRecipientOK with default headers values
func NewGetRoutingMessageRecipientOK() *GetRoutingMessageRecipientOK {
	return &GetRoutingMessageRecipientOK{}
}

/*GetRoutingMessageRecipientOK handles this case with default header values.

successful operation
*/
type GetRoutingMessageRecipientOK struct {
	Payload *models.Recipient
}

func (o *GetRoutingMessageRecipientOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/message/recipients/{recipientId}][%d] getRoutingMessageRecipientOK  %+v", 200, o.Payload)
}

func (o *GetRoutingMessageRecipientOK) GetPayload() *models.Recipient {
	return o.Payload
}

func (o *GetRoutingMessageRecipientOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Recipient)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingMessageRecipientBadRequest creates a GetRoutingMessageRecipientBadRequest with default headers values
func NewGetRoutingMessageRecipientBadRequest() *GetRoutingMessageRecipientBadRequest {
	return &GetRoutingMessageRecipientBadRequest{}
}

/*GetRoutingMessageRecipientBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetRoutingMessageRecipientBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingMessageRecipientBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/message/recipients/{recipientId}][%d] getRoutingMessageRecipientBadRequest  %+v", 400, o.Payload)
}

func (o *GetRoutingMessageRecipientBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingMessageRecipientBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingMessageRecipientUnauthorized creates a GetRoutingMessageRecipientUnauthorized with default headers values
func NewGetRoutingMessageRecipientUnauthorized() *GetRoutingMessageRecipientUnauthorized {
	return &GetRoutingMessageRecipientUnauthorized{}
}

/*GetRoutingMessageRecipientUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetRoutingMessageRecipientUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingMessageRecipientUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/message/recipients/{recipientId}][%d] getRoutingMessageRecipientUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRoutingMessageRecipientUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingMessageRecipientUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingMessageRecipientForbidden creates a GetRoutingMessageRecipientForbidden with default headers values
func NewGetRoutingMessageRecipientForbidden() *GetRoutingMessageRecipientForbidden {
	return &GetRoutingMessageRecipientForbidden{}
}

/*GetRoutingMessageRecipientForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetRoutingMessageRecipientForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingMessageRecipientForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/message/recipients/{recipientId}][%d] getRoutingMessageRecipientForbidden  %+v", 403, o.Payload)
}

func (o *GetRoutingMessageRecipientForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingMessageRecipientForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingMessageRecipientNotFound creates a GetRoutingMessageRecipientNotFound with default headers values
func NewGetRoutingMessageRecipientNotFound() *GetRoutingMessageRecipientNotFound {
	return &GetRoutingMessageRecipientNotFound{}
}

/*GetRoutingMessageRecipientNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetRoutingMessageRecipientNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingMessageRecipientNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/message/recipients/{recipientId}][%d] getRoutingMessageRecipientNotFound  %+v", 404, o.Payload)
}

func (o *GetRoutingMessageRecipientNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingMessageRecipientNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingMessageRecipientRequestTimeout creates a GetRoutingMessageRecipientRequestTimeout with default headers values
func NewGetRoutingMessageRecipientRequestTimeout() *GetRoutingMessageRecipientRequestTimeout {
	return &GetRoutingMessageRecipientRequestTimeout{}
}

/*GetRoutingMessageRecipientRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetRoutingMessageRecipientRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingMessageRecipientRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/message/recipients/{recipientId}][%d] getRoutingMessageRecipientRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetRoutingMessageRecipientRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingMessageRecipientRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingMessageRecipientRequestEntityTooLarge creates a GetRoutingMessageRecipientRequestEntityTooLarge with default headers values
func NewGetRoutingMessageRecipientRequestEntityTooLarge() *GetRoutingMessageRecipientRequestEntityTooLarge {
	return &GetRoutingMessageRecipientRequestEntityTooLarge{}
}

/*GetRoutingMessageRecipientRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetRoutingMessageRecipientRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingMessageRecipientRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/message/recipients/{recipientId}][%d] getRoutingMessageRecipientRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetRoutingMessageRecipientRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingMessageRecipientRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingMessageRecipientUnsupportedMediaType creates a GetRoutingMessageRecipientUnsupportedMediaType with default headers values
func NewGetRoutingMessageRecipientUnsupportedMediaType() *GetRoutingMessageRecipientUnsupportedMediaType {
	return &GetRoutingMessageRecipientUnsupportedMediaType{}
}

/*GetRoutingMessageRecipientUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetRoutingMessageRecipientUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingMessageRecipientUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/message/recipients/{recipientId}][%d] getRoutingMessageRecipientUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetRoutingMessageRecipientUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingMessageRecipientUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingMessageRecipientTooManyRequests creates a GetRoutingMessageRecipientTooManyRequests with default headers values
func NewGetRoutingMessageRecipientTooManyRequests() *GetRoutingMessageRecipientTooManyRequests {
	return &GetRoutingMessageRecipientTooManyRequests{}
}

/*GetRoutingMessageRecipientTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetRoutingMessageRecipientTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingMessageRecipientTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/message/recipients/{recipientId}][%d] getRoutingMessageRecipientTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRoutingMessageRecipientTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingMessageRecipientTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingMessageRecipientInternalServerError creates a GetRoutingMessageRecipientInternalServerError with default headers values
func NewGetRoutingMessageRecipientInternalServerError() *GetRoutingMessageRecipientInternalServerError {
	return &GetRoutingMessageRecipientInternalServerError{}
}

/*GetRoutingMessageRecipientInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetRoutingMessageRecipientInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingMessageRecipientInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/message/recipients/{recipientId}][%d] getRoutingMessageRecipientInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRoutingMessageRecipientInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingMessageRecipientInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingMessageRecipientServiceUnavailable creates a GetRoutingMessageRecipientServiceUnavailable with default headers values
func NewGetRoutingMessageRecipientServiceUnavailable() *GetRoutingMessageRecipientServiceUnavailable {
	return &GetRoutingMessageRecipientServiceUnavailable{}
}

/*GetRoutingMessageRecipientServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetRoutingMessageRecipientServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingMessageRecipientServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/message/recipients/{recipientId}][%d] getRoutingMessageRecipientServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetRoutingMessageRecipientServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingMessageRecipientServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingMessageRecipientGatewayTimeout creates a GetRoutingMessageRecipientGatewayTimeout with default headers values
func NewGetRoutingMessageRecipientGatewayTimeout() *GetRoutingMessageRecipientGatewayTimeout {
	return &GetRoutingMessageRecipientGatewayTimeout{}
}

/*GetRoutingMessageRecipientGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetRoutingMessageRecipientGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingMessageRecipientGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/message/recipients/{recipientId}][%d] getRoutingMessageRecipientGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetRoutingMessageRecipientGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingMessageRecipientGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
