// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostRoutingSkillgroupsReader is a Reader for the PostRoutingSkillgroups structure.
type PostRoutingSkillgroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRoutingSkillgroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostRoutingSkillgroupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostRoutingSkillgroupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostRoutingSkillgroupsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostRoutingSkillgroupsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostRoutingSkillgroupsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostRoutingSkillgroupsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostRoutingSkillgroupsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostRoutingSkillgroupsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostRoutingSkillgroupsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostRoutingSkillgroupsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostRoutingSkillgroupsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostRoutingSkillgroupsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostRoutingSkillgroupsOK creates a PostRoutingSkillgroupsOK with default headers values
func NewPostRoutingSkillgroupsOK() *PostRoutingSkillgroupsOK {
	return &PostRoutingSkillgroupsOK{}
}

/*
PostRoutingSkillgroupsOK describes a response with status code 200, with default header values.

successful operation
*/
type PostRoutingSkillgroupsOK struct {
	Payload *models.SkillGroup
}

// IsSuccess returns true when this post routing skillgroups o k response has a 2xx status code
func (o *PostRoutingSkillgroupsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post routing skillgroups o k response has a 3xx status code
func (o *PostRoutingSkillgroupsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing skillgroups o k response has a 4xx status code
func (o *PostRoutingSkillgroupsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing skillgroups o k response has a 5xx status code
func (o *PostRoutingSkillgroupsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing skillgroups o k response a status code equal to that given
func (o *PostRoutingSkillgroupsOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostRoutingSkillgroupsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/skillgroups][%d] postRoutingSkillgroupsOK  %+v", 200, o.Payload)
}

func (o *PostRoutingSkillgroupsOK) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/skillgroups][%d] postRoutingSkillgroupsOK  %+v", 200, o.Payload)
}

func (o *PostRoutingSkillgroupsOK) GetPayload() *models.SkillGroup {
	return o.Payload
}

func (o *PostRoutingSkillgroupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SkillGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSkillgroupsBadRequest creates a PostRoutingSkillgroupsBadRequest with default headers values
func NewPostRoutingSkillgroupsBadRequest() *PostRoutingSkillgroupsBadRequest {
	return &PostRoutingSkillgroupsBadRequest{}
}

/*
PostRoutingSkillgroupsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostRoutingSkillgroupsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing skillgroups bad request response has a 2xx status code
func (o *PostRoutingSkillgroupsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing skillgroups bad request response has a 3xx status code
func (o *PostRoutingSkillgroupsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing skillgroups bad request response has a 4xx status code
func (o *PostRoutingSkillgroupsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing skillgroups bad request response has a 5xx status code
func (o *PostRoutingSkillgroupsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing skillgroups bad request response a status code equal to that given
func (o *PostRoutingSkillgroupsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostRoutingSkillgroupsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/skillgroups][%d] postRoutingSkillgroupsBadRequest  %+v", 400, o.Payload)
}

func (o *PostRoutingSkillgroupsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/skillgroups][%d] postRoutingSkillgroupsBadRequest  %+v", 400, o.Payload)
}

func (o *PostRoutingSkillgroupsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSkillgroupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSkillgroupsUnauthorized creates a PostRoutingSkillgroupsUnauthorized with default headers values
func NewPostRoutingSkillgroupsUnauthorized() *PostRoutingSkillgroupsUnauthorized {
	return &PostRoutingSkillgroupsUnauthorized{}
}

/*
PostRoutingSkillgroupsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostRoutingSkillgroupsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing skillgroups unauthorized response has a 2xx status code
func (o *PostRoutingSkillgroupsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing skillgroups unauthorized response has a 3xx status code
func (o *PostRoutingSkillgroupsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing skillgroups unauthorized response has a 4xx status code
func (o *PostRoutingSkillgroupsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing skillgroups unauthorized response has a 5xx status code
func (o *PostRoutingSkillgroupsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing skillgroups unauthorized response a status code equal to that given
func (o *PostRoutingSkillgroupsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostRoutingSkillgroupsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/skillgroups][%d] postRoutingSkillgroupsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostRoutingSkillgroupsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/skillgroups][%d] postRoutingSkillgroupsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostRoutingSkillgroupsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSkillgroupsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSkillgroupsForbidden creates a PostRoutingSkillgroupsForbidden with default headers values
func NewPostRoutingSkillgroupsForbidden() *PostRoutingSkillgroupsForbidden {
	return &PostRoutingSkillgroupsForbidden{}
}

/*
PostRoutingSkillgroupsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostRoutingSkillgroupsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing skillgroups forbidden response has a 2xx status code
func (o *PostRoutingSkillgroupsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing skillgroups forbidden response has a 3xx status code
func (o *PostRoutingSkillgroupsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing skillgroups forbidden response has a 4xx status code
func (o *PostRoutingSkillgroupsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing skillgroups forbidden response has a 5xx status code
func (o *PostRoutingSkillgroupsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing skillgroups forbidden response a status code equal to that given
func (o *PostRoutingSkillgroupsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostRoutingSkillgroupsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/skillgroups][%d] postRoutingSkillgroupsForbidden  %+v", 403, o.Payload)
}

func (o *PostRoutingSkillgroupsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/skillgroups][%d] postRoutingSkillgroupsForbidden  %+v", 403, o.Payload)
}

func (o *PostRoutingSkillgroupsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSkillgroupsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSkillgroupsNotFound creates a PostRoutingSkillgroupsNotFound with default headers values
func NewPostRoutingSkillgroupsNotFound() *PostRoutingSkillgroupsNotFound {
	return &PostRoutingSkillgroupsNotFound{}
}

/*
PostRoutingSkillgroupsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostRoutingSkillgroupsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing skillgroups not found response has a 2xx status code
func (o *PostRoutingSkillgroupsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing skillgroups not found response has a 3xx status code
func (o *PostRoutingSkillgroupsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing skillgroups not found response has a 4xx status code
func (o *PostRoutingSkillgroupsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing skillgroups not found response has a 5xx status code
func (o *PostRoutingSkillgroupsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing skillgroups not found response a status code equal to that given
func (o *PostRoutingSkillgroupsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostRoutingSkillgroupsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/skillgroups][%d] postRoutingSkillgroupsNotFound  %+v", 404, o.Payload)
}

func (o *PostRoutingSkillgroupsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/skillgroups][%d] postRoutingSkillgroupsNotFound  %+v", 404, o.Payload)
}

func (o *PostRoutingSkillgroupsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSkillgroupsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSkillgroupsRequestTimeout creates a PostRoutingSkillgroupsRequestTimeout with default headers values
func NewPostRoutingSkillgroupsRequestTimeout() *PostRoutingSkillgroupsRequestTimeout {
	return &PostRoutingSkillgroupsRequestTimeout{}
}

/*
PostRoutingSkillgroupsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostRoutingSkillgroupsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing skillgroups request timeout response has a 2xx status code
func (o *PostRoutingSkillgroupsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing skillgroups request timeout response has a 3xx status code
func (o *PostRoutingSkillgroupsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing skillgroups request timeout response has a 4xx status code
func (o *PostRoutingSkillgroupsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing skillgroups request timeout response has a 5xx status code
func (o *PostRoutingSkillgroupsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing skillgroups request timeout response a status code equal to that given
func (o *PostRoutingSkillgroupsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostRoutingSkillgroupsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/skillgroups][%d] postRoutingSkillgroupsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostRoutingSkillgroupsRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/skillgroups][%d] postRoutingSkillgroupsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostRoutingSkillgroupsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSkillgroupsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSkillgroupsRequestEntityTooLarge creates a PostRoutingSkillgroupsRequestEntityTooLarge with default headers values
func NewPostRoutingSkillgroupsRequestEntityTooLarge() *PostRoutingSkillgroupsRequestEntityTooLarge {
	return &PostRoutingSkillgroupsRequestEntityTooLarge{}
}

/*
PostRoutingSkillgroupsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostRoutingSkillgroupsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing skillgroups request entity too large response has a 2xx status code
func (o *PostRoutingSkillgroupsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing skillgroups request entity too large response has a 3xx status code
func (o *PostRoutingSkillgroupsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing skillgroups request entity too large response has a 4xx status code
func (o *PostRoutingSkillgroupsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing skillgroups request entity too large response has a 5xx status code
func (o *PostRoutingSkillgroupsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing skillgroups request entity too large response a status code equal to that given
func (o *PostRoutingSkillgroupsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostRoutingSkillgroupsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/skillgroups][%d] postRoutingSkillgroupsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostRoutingSkillgroupsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/skillgroups][%d] postRoutingSkillgroupsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostRoutingSkillgroupsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSkillgroupsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSkillgroupsUnsupportedMediaType creates a PostRoutingSkillgroupsUnsupportedMediaType with default headers values
func NewPostRoutingSkillgroupsUnsupportedMediaType() *PostRoutingSkillgroupsUnsupportedMediaType {
	return &PostRoutingSkillgroupsUnsupportedMediaType{}
}

/*
PostRoutingSkillgroupsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostRoutingSkillgroupsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing skillgroups unsupported media type response has a 2xx status code
func (o *PostRoutingSkillgroupsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing skillgroups unsupported media type response has a 3xx status code
func (o *PostRoutingSkillgroupsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing skillgroups unsupported media type response has a 4xx status code
func (o *PostRoutingSkillgroupsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing skillgroups unsupported media type response has a 5xx status code
func (o *PostRoutingSkillgroupsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing skillgroups unsupported media type response a status code equal to that given
func (o *PostRoutingSkillgroupsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostRoutingSkillgroupsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/skillgroups][%d] postRoutingSkillgroupsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostRoutingSkillgroupsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/skillgroups][%d] postRoutingSkillgroupsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostRoutingSkillgroupsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSkillgroupsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSkillgroupsTooManyRequests creates a PostRoutingSkillgroupsTooManyRequests with default headers values
func NewPostRoutingSkillgroupsTooManyRequests() *PostRoutingSkillgroupsTooManyRequests {
	return &PostRoutingSkillgroupsTooManyRequests{}
}

/*
PostRoutingSkillgroupsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostRoutingSkillgroupsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing skillgroups too many requests response has a 2xx status code
func (o *PostRoutingSkillgroupsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing skillgroups too many requests response has a 3xx status code
func (o *PostRoutingSkillgroupsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing skillgroups too many requests response has a 4xx status code
func (o *PostRoutingSkillgroupsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing skillgroups too many requests response has a 5xx status code
func (o *PostRoutingSkillgroupsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing skillgroups too many requests response a status code equal to that given
func (o *PostRoutingSkillgroupsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostRoutingSkillgroupsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/skillgroups][%d] postRoutingSkillgroupsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostRoutingSkillgroupsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/skillgroups][%d] postRoutingSkillgroupsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostRoutingSkillgroupsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSkillgroupsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSkillgroupsInternalServerError creates a PostRoutingSkillgroupsInternalServerError with default headers values
func NewPostRoutingSkillgroupsInternalServerError() *PostRoutingSkillgroupsInternalServerError {
	return &PostRoutingSkillgroupsInternalServerError{}
}

/*
PostRoutingSkillgroupsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostRoutingSkillgroupsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing skillgroups internal server error response has a 2xx status code
func (o *PostRoutingSkillgroupsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing skillgroups internal server error response has a 3xx status code
func (o *PostRoutingSkillgroupsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing skillgroups internal server error response has a 4xx status code
func (o *PostRoutingSkillgroupsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing skillgroups internal server error response has a 5xx status code
func (o *PostRoutingSkillgroupsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post routing skillgroups internal server error response a status code equal to that given
func (o *PostRoutingSkillgroupsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostRoutingSkillgroupsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/skillgroups][%d] postRoutingSkillgroupsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostRoutingSkillgroupsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/skillgroups][%d] postRoutingSkillgroupsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostRoutingSkillgroupsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSkillgroupsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSkillgroupsServiceUnavailable creates a PostRoutingSkillgroupsServiceUnavailable with default headers values
func NewPostRoutingSkillgroupsServiceUnavailable() *PostRoutingSkillgroupsServiceUnavailable {
	return &PostRoutingSkillgroupsServiceUnavailable{}
}

/*
PostRoutingSkillgroupsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostRoutingSkillgroupsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing skillgroups service unavailable response has a 2xx status code
func (o *PostRoutingSkillgroupsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing skillgroups service unavailable response has a 3xx status code
func (o *PostRoutingSkillgroupsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing skillgroups service unavailable response has a 4xx status code
func (o *PostRoutingSkillgroupsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing skillgroups service unavailable response has a 5xx status code
func (o *PostRoutingSkillgroupsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post routing skillgroups service unavailable response a status code equal to that given
func (o *PostRoutingSkillgroupsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostRoutingSkillgroupsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/skillgroups][%d] postRoutingSkillgroupsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostRoutingSkillgroupsServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/skillgroups][%d] postRoutingSkillgroupsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostRoutingSkillgroupsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSkillgroupsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSkillgroupsGatewayTimeout creates a PostRoutingSkillgroupsGatewayTimeout with default headers values
func NewPostRoutingSkillgroupsGatewayTimeout() *PostRoutingSkillgroupsGatewayTimeout {
	return &PostRoutingSkillgroupsGatewayTimeout{}
}

/*
PostRoutingSkillgroupsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostRoutingSkillgroupsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing skillgroups gateway timeout response has a 2xx status code
func (o *PostRoutingSkillgroupsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing skillgroups gateway timeout response has a 3xx status code
func (o *PostRoutingSkillgroupsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing skillgroups gateway timeout response has a 4xx status code
func (o *PostRoutingSkillgroupsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing skillgroups gateway timeout response has a 5xx status code
func (o *PostRoutingSkillgroupsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post routing skillgroups gateway timeout response a status code equal to that given
func (o *PostRoutingSkillgroupsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostRoutingSkillgroupsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/skillgroups][%d] postRoutingSkillgroupsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostRoutingSkillgroupsGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/skillgroups][%d] postRoutingSkillgroupsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostRoutingSkillgroupsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSkillgroupsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
