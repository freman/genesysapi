// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetRoutingQueueEstimatedwaittimeParams creates a new GetRoutingQueueEstimatedwaittimeParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetRoutingQueueEstimatedwaittimeParams() *GetRoutingQueueEstimatedwaittimeParams {
	return &GetRoutingQueueEstimatedwaittimeParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetRoutingQueueEstimatedwaittimeParamsWithTimeout creates a new GetRoutingQueueEstimatedwaittimeParams object
// with the ability to set a timeout on a request.
func NewGetRoutingQueueEstimatedwaittimeParamsWithTimeout(timeout time.Duration) *GetRoutingQueueEstimatedwaittimeParams {
	return &GetRoutingQueueEstimatedwaittimeParams{
		timeout: timeout,
	}
}

// NewGetRoutingQueueEstimatedwaittimeParamsWithContext creates a new GetRoutingQueueEstimatedwaittimeParams object
// with the ability to set a context for a request.
func NewGetRoutingQueueEstimatedwaittimeParamsWithContext(ctx context.Context) *GetRoutingQueueEstimatedwaittimeParams {
	return &GetRoutingQueueEstimatedwaittimeParams{
		Context: ctx,
	}
}

// NewGetRoutingQueueEstimatedwaittimeParamsWithHTTPClient creates a new GetRoutingQueueEstimatedwaittimeParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetRoutingQueueEstimatedwaittimeParamsWithHTTPClient(client *http.Client) *GetRoutingQueueEstimatedwaittimeParams {
	return &GetRoutingQueueEstimatedwaittimeParams{
		HTTPClient: client,
	}
}

/*
GetRoutingQueueEstimatedwaittimeParams contains all the parameters to send to the API endpoint

	for the get routing queue estimatedwaittime operation.

	Typically these are written to a http.Request.
*/
type GetRoutingQueueEstimatedwaittimeParams struct {

	/* ConversationID.

	   conversationId
	*/
	ConversationID *string

	/* QueueID.

	   queueId
	*/
	QueueID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get routing queue estimatedwaittime params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetRoutingQueueEstimatedwaittimeParams) WithDefaults() *GetRoutingQueueEstimatedwaittimeParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get routing queue estimatedwaittime params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetRoutingQueueEstimatedwaittimeParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get routing queue estimatedwaittime params
func (o *GetRoutingQueueEstimatedwaittimeParams) WithTimeout(timeout time.Duration) *GetRoutingQueueEstimatedwaittimeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get routing queue estimatedwaittime params
func (o *GetRoutingQueueEstimatedwaittimeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get routing queue estimatedwaittime params
func (o *GetRoutingQueueEstimatedwaittimeParams) WithContext(ctx context.Context) *GetRoutingQueueEstimatedwaittimeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get routing queue estimatedwaittime params
func (o *GetRoutingQueueEstimatedwaittimeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get routing queue estimatedwaittime params
func (o *GetRoutingQueueEstimatedwaittimeParams) WithHTTPClient(client *http.Client) *GetRoutingQueueEstimatedwaittimeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get routing queue estimatedwaittime params
func (o *GetRoutingQueueEstimatedwaittimeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithConversationID adds the conversationID to the get routing queue estimatedwaittime params
func (o *GetRoutingQueueEstimatedwaittimeParams) WithConversationID(conversationID *string) *GetRoutingQueueEstimatedwaittimeParams {
	o.SetConversationID(conversationID)
	return o
}

// SetConversationID adds the conversationId to the get routing queue estimatedwaittime params
func (o *GetRoutingQueueEstimatedwaittimeParams) SetConversationID(conversationID *string) {
	o.ConversationID = conversationID
}

// WithQueueID adds the queueID to the get routing queue estimatedwaittime params
func (o *GetRoutingQueueEstimatedwaittimeParams) WithQueueID(queueID string) *GetRoutingQueueEstimatedwaittimeParams {
	o.SetQueueID(queueID)
	return o
}

// SetQueueID adds the queueId to the get routing queue estimatedwaittime params
func (o *GetRoutingQueueEstimatedwaittimeParams) SetQueueID(queueID string) {
	o.QueueID = queueID
}

// WriteToRequest writes these params to a swagger request
func (o *GetRoutingQueueEstimatedwaittimeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ConversationID != nil {

		// query param conversationId
		var qrConversationID string

		if o.ConversationID != nil {
			qrConversationID = *o.ConversationID
		}
		qConversationID := qrConversationID
		if qConversationID != "" {

			if err := r.SetQueryParam("conversationId", qConversationID); err != nil {
				return err
			}
		}
	}

	// path param queueId
	if err := r.SetPathParam("queueId", o.QueueID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
