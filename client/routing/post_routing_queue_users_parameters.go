// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/freman/genesysapi/models"
)

// NewPostRoutingQueueUsersParams creates a new PostRoutingQueueUsersParams object
// with the default values initialized.
func NewPostRoutingQueueUsersParams() *PostRoutingQueueUsersParams {
	var (
		deleteDefault = bool(false)
	)
	return &PostRoutingQueueUsersParams{
		Delete: &deleteDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewPostRoutingQueueUsersParamsWithTimeout creates a new PostRoutingQueueUsersParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostRoutingQueueUsersParamsWithTimeout(timeout time.Duration) *PostRoutingQueueUsersParams {
	var (
		deleteDefault = bool(false)
	)
	return &PostRoutingQueueUsersParams{
		Delete: &deleteDefault,

		timeout: timeout,
	}
}

// NewPostRoutingQueueUsersParamsWithContext creates a new PostRoutingQueueUsersParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostRoutingQueueUsersParamsWithContext(ctx context.Context) *PostRoutingQueueUsersParams {
	var (
		deleteDefault = bool(false)
	)
	return &PostRoutingQueueUsersParams{
		Delete: &deleteDefault,

		Context: ctx,
	}
}

// NewPostRoutingQueueUsersParamsWithHTTPClient creates a new PostRoutingQueueUsersParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostRoutingQueueUsersParamsWithHTTPClient(client *http.Client) *PostRoutingQueueUsersParams {
	var (
		deleteDefault = bool(false)
	)
	return &PostRoutingQueueUsersParams{
		Delete:     &deleteDefault,
		HTTPClient: client,
	}
}

/*PostRoutingQueueUsersParams contains all the parameters to send to the API endpoint
for the post routing queue users operation typically these are written to a http.Request
*/
type PostRoutingQueueUsersParams struct {

	/*Body
	  Queue Members

	*/
	Body []*models.WritableEntity
	/*Delete
	  True to delete queue members

	*/
	Delete *bool
	/*QueueID
	  Queue ID

	*/
	QueueID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post routing queue users params
func (o *PostRoutingQueueUsersParams) WithTimeout(timeout time.Duration) *PostRoutingQueueUsersParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post routing queue users params
func (o *PostRoutingQueueUsersParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post routing queue users params
func (o *PostRoutingQueueUsersParams) WithContext(ctx context.Context) *PostRoutingQueueUsersParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post routing queue users params
func (o *PostRoutingQueueUsersParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post routing queue users params
func (o *PostRoutingQueueUsersParams) WithHTTPClient(client *http.Client) *PostRoutingQueueUsersParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post routing queue users params
func (o *PostRoutingQueueUsersParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the post routing queue users params
func (o *PostRoutingQueueUsersParams) WithBody(body []*models.WritableEntity) *PostRoutingQueueUsersParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the post routing queue users params
func (o *PostRoutingQueueUsersParams) SetBody(body []*models.WritableEntity) {
	o.Body = body
}

// WithDelete adds the delete to the post routing queue users params
func (o *PostRoutingQueueUsersParams) WithDelete(delete *bool) *PostRoutingQueueUsersParams {
	o.SetDelete(delete)
	return o
}

// SetDelete adds the delete to the post routing queue users params
func (o *PostRoutingQueueUsersParams) SetDelete(delete *bool) {
	o.Delete = delete
}

// WithQueueID adds the queueID to the post routing queue users params
func (o *PostRoutingQueueUsersParams) WithQueueID(queueID string) *PostRoutingQueueUsersParams {
	o.SetQueueID(queueID)
	return o
}

// SetQueueID adds the queueId to the post routing queue users params
func (o *PostRoutingQueueUsersParams) SetQueueID(queueID string) {
	o.QueueID = queueID
}

// WriteToRequest writes these params to a swagger request
func (o *PostRoutingQueueUsersParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if o.Delete != nil {

		// query param delete
		var qrDelete bool
		if o.Delete != nil {
			qrDelete = *o.Delete
		}
		qDelete := swag.FormatBool(qrDelete)
		if qDelete != "" {
			if err := r.SetQueryParam("delete", qDelete); err != nil {
				return err
			}
		}

	}

	// path param queueId
	if err := r.SetPathParam("queueId", o.QueueID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
