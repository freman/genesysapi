// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetRoutingSkillParams creates a new GetRoutingSkillParams object
// with the default values initialized.
func NewGetRoutingSkillParams() *GetRoutingSkillParams {
	var ()
	return &GetRoutingSkillParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetRoutingSkillParamsWithTimeout creates a new GetRoutingSkillParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetRoutingSkillParamsWithTimeout(timeout time.Duration) *GetRoutingSkillParams {
	var ()
	return &GetRoutingSkillParams{

		timeout: timeout,
	}
}

// NewGetRoutingSkillParamsWithContext creates a new GetRoutingSkillParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetRoutingSkillParamsWithContext(ctx context.Context) *GetRoutingSkillParams {
	var ()
	return &GetRoutingSkillParams{

		Context: ctx,
	}
}

// NewGetRoutingSkillParamsWithHTTPClient creates a new GetRoutingSkillParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetRoutingSkillParamsWithHTTPClient(client *http.Client) *GetRoutingSkillParams {
	var ()
	return &GetRoutingSkillParams{
		HTTPClient: client,
	}
}

/*GetRoutingSkillParams contains all the parameters to send to the API endpoint
for the get routing skill operation typically these are written to a http.Request
*/
type GetRoutingSkillParams struct {

	/*SkillID
	  Skill ID

	*/
	SkillID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get routing skill params
func (o *GetRoutingSkillParams) WithTimeout(timeout time.Duration) *GetRoutingSkillParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get routing skill params
func (o *GetRoutingSkillParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get routing skill params
func (o *GetRoutingSkillParams) WithContext(ctx context.Context) *GetRoutingSkillParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get routing skill params
func (o *GetRoutingSkillParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get routing skill params
func (o *GetRoutingSkillParams) WithHTTPClient(client *http.Client) *GetRoutingSkillParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get routing skill params
func (o *GetRoutingSkillParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSkillID adds the skillID to the get routing skill params
func (o *GetRoutingSkillParams) WithSkillID(skillID string) *GetRoutingSkillParams {
	o.SetSkillID(skillID)
	return o
}

// SetSkillID adds the skillId to the get routing skill params
func (o *GetRoutingSkillParams) SetSkillID(skillID string) {
	o.SkillID = skillID
}

// WriteToRequest writes these params to a swagger request
func (o *GetRoutingSkillParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param skillId
	if err := r.SetPathParam("skillId", o.SkillID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
