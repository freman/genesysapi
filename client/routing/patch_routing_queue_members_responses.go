// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PatchRoutingQueueMembersReader is a Reader for the PatchRoutingQueueMembers structure.
type PatchRoutingQueueMembersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchRoutingQueueMembersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchRoutingQueueMembersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchRoutingQueueMembersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchRoutingQueueMembersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchRoutingQueueMembersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchRoutingQueueMembersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPatchRoutingQueueMembersRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPatchRoutingQueueMembersRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchRoutingQueueMembersUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPatchRoutingQueueMembersTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchRoutingQueueMembersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPatchRoutingQueueMembersServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPatchRoutingQueueMembersGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchRoutingQueueMembersOK creates a PatchRoutingQueueMembersOK with default headers values
func NewPatchRoutingQueueMembersOK() *PatchRoutingQueueMembersOK {
	return &PatchRoutingQueueMembersOK{}
}

/*
PatchRoutingQueueMembersOK describes a response with status code 200, with default header values.

successful operation
*/
type PatchRoutingQueueMembersOK struct {
	Payload *models.QueueMemberEntityListing
}

// IsSuccess returns true when this patch routing queue members o k response has a 2xx status code
func (o *PatchRoutingQueueMembersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch routing queue members o k response has a 3xx status code
func (o *PatchRoutingQueueMembersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch routing queue members o k response has a 4xx status code
func (o *PatchRoutingQueueMembersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch routing queue members o k response has a 5xx status code
func (o *PatchRoutingQueueMembersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this patch routing queue members o k response a status code equal to that given
func (o *PatchRoutingQueueMembersOK) IsCode(code int) bool {
	return code == 200
}

func (o *PatchRoutingQueueMembersOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/routing/queues/{queueId}/members][%d] patchRoutingQueueMembersOK  %+v", 200, o.Payload)
}

func (o *PatchRoutingQueueMembersOK) String() string {
	return fmt.Sprintf("[PATCH /api/v2/routing/queues/{queueId}/members][%d] patchRoutingQueueMembersOK  %+v", 200, o.Payload)
}

func (o *PatchRoutingQueueMembersOK) GetPayload() *models.QueueMemberEntityListing {
	return o.Payload
}

func (o *PatchRoutingQueueMembersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.QueueMemberEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchRoutingQueueMembersBadRequest creates a PatchRoutingQueueMembersBadRequest with default headers values
func NewPatchRoutingQueueMembersBadRequest() *PatchRoutingQueueMembersBadRequest {
	return &PatchRoutingQueueMembersBadRequest{}
}

/*
PatchRoutingQueueMembersBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PatchRoutingQueueMembersBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch routing queue members bad request response has a 2xx status code
func (o *PatchRoutingQueueMembersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch routing queue members bad request response has a 3xx status code
func (o *PatchRoutingQueueMembersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch routing queue members bad request response has a 4xx status code
func (o *PatchRoutingQueueMembersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch routing queue members bad request response has a 5xx status code
func (o *PatchRoutingQueueMembersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this patch routing queue members bad request response a status code equal to that given
func (o *PatchRoutingQueueMembersBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PatchRoutingQueueMembersBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/routing/queues/{queueId}/members][%d] patchRoutingQueueMembersBadRequest  %+v", 400, o.Payload)
}

func (o *PatchRoutingQueueMembersBadRequest) String() string {
	return fmt.Sprintf("[PATCH /api/v2/routing/queues/{queueId}/members][%d] patchRoutingQueueMembersBadRequest  %+v", 400, o.Payload)
}

func (o *PatchRoutingQueueMembersBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchRoutingQueueMembersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchRoutingQueueMembersUnauthorized creates a PatchRoutingQueueMembersUnauthorized with default headers values
func NewPatchRoutingQueueMembersUnauthorized() *PatchRoutingQueueMembersUnauthorized {
	return &PatchRoutingQueueMembersUnauthorized{}
}

/*
PatchRoutingQueueMembersUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PatchRoutingQueueMembersUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch routing queue members unauthorized response has a 2xx status code
func (o *PatchRoutingQueueMembersUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch routing queue members unauthorized response has a 3xx status code
func (o *PatchRoutingQueueMembersUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch routing queue members unauthorized response has a 4xx status code
func (o *PatchRoutingQueueMembersUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch routing queue members unauthorized response has a 5xx status code
func (o *PatchRoutingQueueMembersUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this patch routing queue members unauthorized response a status code equal to that given
func (o *PatchRoutingQueueMembersUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PatchRoutingQueueMembersUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/routing/queues/{queueId}/members][%d] patchRoutingQueueMembersUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchRoutingQueueMembersUnauthorized) String() string {
	return fmt.Sprintf("[PATCH /api/v2/routing/queues/{queueId}/members][%d] patchRoutingQueueMembersUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchRoutingQueueMembersUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchRoutingQueueMembersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchRoutingQueueMembersForbidden creates a PatchRoutingQueueMembersForbidden with default headers values
func NewPatchRoutingQueueMembersForbidden() *PatchRoutingQueueMembersForbidden {
	return &PatchRoutingQueueMembersForbidden{}
}

/*
PatchRoutingQueueMembersForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PatchRoutingQueueMembersForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch routing queue members forbidden response has a 2xx status code
func (o *PatchRoutingQueueMembersForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch routing queue members forbidden response has a 3xx status code
func (o *PatchRoutingQueueMembersForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch routing queue members forbidden response has a 4xx status code
func (o *PatchRoutingQueueMembersForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch routing queue members forbidden response has a 5xx status code
func (o *PatchRoutingQueueMembersForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this patch routing queue members forbidden response a status code equal to that given
func (o *PatchRoutingQueueMembersForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PatchRoutingQueueMembersForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/routing/queues/{queueId}/members][%d] patchRoutingQueueMembersForbidden  %+v", 403, o.Payload)
}

func (o *PatchRoutingQueueMembersForbidden) String() string {
	return fmt.Sprintf("[PATCH /api/v2/routing/queues/{queueId}/members][%d] patchRoutingQueueMembersForbidden  %+v", 403, o.Payload)
}

func (o *PatchRoutingQueueMembersForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchRoutingQueueMembersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchRoutingQueueMembersNotFound creates a PatchRoutingQueueMembersNotFound with default headers values
func NewPatchRoutingQueueMembersNotFound() *PatchRoutingQueueMembersNotFound {
	return &PatchRoutingQueueMembersNotFound{}
}

/*
PatchRoutingQueueMembersNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PatchRoutingQueueMembersNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch routing queue members not found response has a 2xx status code
func (o *PatchRoutingQueueMembersNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch routing queue members not found response has a 3xx status code
func (o *PatchRoutingQueueMembersNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch routing queue members not found response has a 4xx status code
func (o *PatchRoutingQueueMembersNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch routing queue members not found response has a 5xx status code
func (o *PatchRoutingQueueMembersNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this patch routing queue members not found response a status code equal to that given
func (o *PatchRoutingQueueMembersNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PatchRoutingQueueMembersNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/routing/queues/{queueId}/members][%d] patchRoutingQueueMembersNotFound  %+v", 404, o.Payload)
}

func (o *PatchRoutingQueueMembersNotFound) String() string {
	return fmt.Sprintf("[PATCH /api/v2/routing/queues/{queueId}/members][%d] patchRoutingQueueMembersNotFound  %+v", 404, o.Payload)
}

func (o *PatchRoutingQueueMembersNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchRoutingQueueMembersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchRoutingQueueMembersRequestTimeout creates a PatchRoutingQueueMembersRequestTimeout with default headers values
func NewPatchRoutingQueueMembersRequestTimeout() *PatchRoutingQueueMembersRequestTimeout {
	return &PatchRoutingQueueMembersRequestTimeout{}
}

/*
PatchRoutingQueueMembersRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PatchRoutingQueueMembersRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch routing queue members request timeout response has a 2xx status code
func (o *PatchRoutingQueueMembersRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch routing queue members request timeout response has a 3xx status code
func (o *PatchRoutingQueueMembersRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch routing queue members request timeout response has a 4xx status code
func (o *PatchRoutingQueueMembersRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch routing queue members request timeout response has a 5xx status code
func (o *PatchRoutingQueueMembersRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this patch routing queue members request timeout response a status code equal to that given
func (o *PatchRoutingQueueMembersRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PatchRoutingQueueMembersRequestTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/routing/queues/{queueId}/members][%d] patchRoutingQueueMembersRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchRoutingQueueMembersRequestTimeout) String() string {
	return fmt.Sprintf("[PATCH /api/v2/routing/queues/{queueId}/members][%d] patchRoutingQueueMembersRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchRoutingQueueMembersRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchRoutingQueueMembersRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchRoutingQueueMembersRequestEntityTooLarge creates a PatchRoutingQueueMembersRequestEntityTooLarge with default headers values
func NewPatchRoutingQueueMembersRequestEntityTooLarge() *PatchRoutingQueueMembersRequestEntityTooLarge {
	return &PatchRoutingQueueMembersRequestEntityTooLarge{}
}

/*
PatchRoutingQueueMembersRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PatchRoutingQueueMembersRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch routing queue members request entity too large response has a 2xx status code
func (o *PatchRoutingQueueMembersRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch routing queue members request entity too large response has a 3xx status code
func (o *PatchRoutingQueueMembersRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch routing queue members request entity too large response has a 4xx status code
func (o *PatchRoutingQueueMembersRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch routing queue members request entity too large response has a 5xx status code
func (o *PatchRoutingQueueMembersRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this patch routing queue members request entity too large response a status code equal to that given
func (o *PatchRoutingQueueMembersRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PatchRoutingQueueMembersRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/routing/queues/{queueId}/members][%d] patchRoutingQueueMembersRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchRoutingQueueMembersRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PATCH /api/v2/routing/queues/{queueId}/members][%d] patchRoutingQueueMembersRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchRoutingQueueMembersRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchRoutingQueueMembersRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchRoutingQueueMembersUnsupportedMediaType creates a PatchRoutingQueueMembersUnsupportedMediaType with default headers values
func NewPatchRoutingQueueMembersUnsupportedMediaType() *PatchRoutingQueueMembersUnsupportedMediaType {
	return &PatchRoutingQueueMembersUnsupportedMediaType{}
}

/*
PatchRoutingQueueMembersUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PatchRoutingQueueMembersUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch routing queue members unsupported media type response has a 2xx status code
func (o *PatchRoutingQueueMembersUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch routing queue members unsupported media type response has a 3xx status code
func (o *PatchRoutingQueueMembersUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch routing queue members unsupported media type response has a 4xx status code
func (o *PatchRoutingQueueMembersUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch routing queue members unsupported media type response has a 5xx status code
func (o *PatchRoutingQueueMembersUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this patch routing queue members unsupported media type response a status code equal to that given
func (o *PatchRoutingQueueMembersUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PatchRoutingQueueMembersUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/routing/queues/{queueId}/members][%d] patchRoutingQueueMembersUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchRoutingQueueMembersUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PATCH /api/v2/routing/queues/{queueId}/members][%d] patchRoutingQueueMembersUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchRoutingQueueMembersUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchRoutingQueueMembersUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchRoutingQueueMembersTooManyRequests creates a PatchRoutingQueueMembersTooManyRequests with default headers values
func NewPatchRoutingQueueMembersTooManyRequests() *PatchRoutingQueueMembersTooManyRequests {
	return &PatchRoutingQueueMembersTooManyRequests{}
}

/*
PatchRoutingQueueMembersTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PatchRoutingQueueMembersTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch routing queue members too many requests response has a 2xx status code
func (o *PatchRoutingQueueMembersTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch routing queue members too many requests response has a 3xx status code
func (o *PatchRoutingQueueMembersTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch routing queue members too many requests response has a 4xx status code
func (o *PatchRoutingQueueMembersTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch routing queue members too many requests response has a 5xx status code
func (o *PatchRoutingQueueMembersTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this patch routing queue members too many requests response a status code equal to that given
func (o *PatchRoutingQueueMembersTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PatchRoutingQueueMembersTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/routing/queues/{queueId}/members][%d] patchRoutingQueueMembersTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchRoutingQueueMembersTooManyRequests) String() string {
	return fmt.Sprintf("[PATCH /api/v2/routing/queues/{queueId}/members][%d] patchRoutingQueueMembersTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchRoutingQueueMembersTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchRoutingQueueMembersTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchRoutingQueueMembersInternalServerError creates a PatchRoutingQueueMembersInternalServerError with default headers values
func NewPatchRoutingQueueMembersInternalServerError() *PatchRoutingQueueMembersInternalServerError {
	return &PatchRoutingQueueMembersInternalServerError{}
}

/*
PatchRoutingQueueMembersInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PatchRoutingQueueMembersInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch routing queue members internal server error response has a 2xx status code
func (o *PatchRoutingQueueMembersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch routing queue members internal server error response has a 3xx status code
func (o *PatchRoutingQueueMembersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch routing queue members internal server error response has a 4xx status code
func (o *PatchRoutingQueueMembersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch routing queue members internal server error response has a 5xx status code
func (o *PatchRoutingQueueMembersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this patch routing queue members internal server error response a status code equal to that given
func (o *PatchRoutingQueueMembersInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PatchRoutingQueueMembersInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/routing/queues/{queueId}/members][%d] patchRoutingQueueMembersInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchRoutingQueueMembersInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /api/v2/routing/queues/{queueId}/members][%d] patchRoutingQueueMembersInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchRoutingQueueMembersInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchRoutingQueueMembersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchRoutingQueueMembersServiceUnavailable creates a PatchRoutingQueueMembersServiceUnavailable with default headers values
func NewPatchRoutingQueueMembersServiceUnavailable() *PatchRoutingQueueMembersServiceUnavailable {
	return &PatchRoutingQueueMembersServiceUnavailable{}
}

/*
PatchRoutingQueueMembersServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PatchRoutingQueueMembersServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch routing queue members service unavailable response has a 2xx status code
func (o *PatchRoutingQueueMembersServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch routing queue members service unavailable response has a 3xx status code
func (o *PatchRoutingQueueMembersServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch routing queue members service unavailable response has a 4xx status code
func (o *PatchRoutingQueueMembersServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch routing queue members service unavailable response has a 5xx status code
func (o *PatchRoutingQueueMembersServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this patch routing queue members service unavailable response a status code equal to that given
func (o *PatchRoutingQueueMembersServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PatchRoutingQueueMembersServiceUnavailable) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/routing/queues/{queueId}/members][%d] patchRoutingQueueMembersServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchRoutingQueueMembersServiceUnavailable) String() string {
	return fmt.Sprintf("[PATCH /api/v2/routing/queues/{queueId}/members][%d] patchRoutingQueueMembersServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchRoutingQueueMembersServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchRoutingQueueMembersServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchRoutingQueueMembersGatewayTimeout creates a PatchRoutingQueueMembersGatewayTimeout with default headers values
func NewPatchRoutingQueueMembersGatewayTimeout() *PatchRoutingQueueMembersGatewayTimeout {
	return &PatchRoutingQueueMembersGatewayTimeout{}
}

/*
PatchRoutingQueueMembersGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PatchRoutingQueueMembersGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch routing queue members gateway timeout response has a 2xx status code
func (o *PatchRoutingQueueMembersGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch routing queue members gateway timeout response has a 3xx status code
func (o *PatchRoutingQueueMembersGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch routing queue members gateway timeout response has a 4xx status code
func (o *PatchRoutingQueueMembersGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch routing queue members gateway timeout response has a 5xx status code
func (o *PatchRoutingQueueMembersGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this patch routing queue members gateway timeout response a status code equal to that given
func (o *PatchRoutingQueueMembersGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PatchRoutingQueueMembersGatewayTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/routing/queues/{queueId}/members][%d] patchRoutingQueueMembersGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchRoutingQueueMembersGatewayTimeout) String() string {
	return fmt.Sprintf("[PATCH /api/v2/routing/queues/{queueId}/members][%d] patchRoutingQueueMembersGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchRoutingQueueMembersGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchRoutingQueueMembersGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
