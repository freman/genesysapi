// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutRoutingSettingsTranscriptionReader is a Reader for the PutRoutingSettingsTranscription structure.
type PutRoutingSettingsTranscriptionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRoutingSettingsTranscriptionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutRoutingSettingsTranscriptionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewPutRoutingSettingsTranscriptionAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutRoutingSettingsTranscriptionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutRoutingSettingsTranscriptionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutRoutingSettingsTranscriptionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutRoutingSettingsTranscriptionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutRoutingSettingsTranscriptionRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutRoutingSettingsTranscriptionRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutRoutingSettingsTranscriptionUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutRoutingSettingsTranscriptionTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutRoutingSettingsTranscriptionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutRoutingSettingsTranscriptionServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutRoutingSettingsTranscriptionGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutRoutingSettingsTranscriptionOK creates a PutRoutingSettingsTranscriptionOK with default headers values
func NewPutRoutingSettingsTranscriptionOK() *PutRoutingSettingsTranscriptionOK {
	return &PutRoutingSettingsTranscriptionOK{}
}

/*
PutRoutingSettingsTranscriptionOK describes a response with status code 200, with default header values.

successful operation
*/
type PutRoutingSettingsTranscriptionOK struct {
	Payload *models.TranscriptionSettings
}

// IsSuccess returns true when this put routing settings transcription o k response has a 2xx status code
func (o *PutRoutingSettingsTranscriptionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put routing settings transcription o k response has a 3xx status code
func (o *PutRoutingSettingsTranscriptionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing settings transcription o k response has a 4xx status code
func (o *PutRoutingSettingsTranscriptionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put routing settings transcription o k response has a 5xx status code
func (o *PutRoutingSettingsTranscriptionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing settings transcription o k response a status code equal to that given
func (o *PutRoutingSettingsTranscriptionOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutRoutingSettingsTranscriptionOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings/transcription][%d] putRoutingSettingsTranscriptionOK  %+v", 200, o.Payload)
}

func (o *PutRoutingSettingsTranscriptionOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings/transcription][%d] putRoutingSettingsTranscriptionOK  %+v", 200, o.Payload)
}

func (o *PutRoutingSettingsTranscriptionOK) GetPayload() *models.TranscriptionSettings {
	return o.Payload
}

func (o *PutRoutingSettingsTranscriptionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TranscriptionSettings)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSettingsTranscriptionAccepted creates a PutRoutingSettingsTranscriptionAccepted with default headers values
func NewPutRoutingSettingsTranscriptionAccepted() *PutRoutingSettingsTranscriptionAccepted {
	return &PutRoutingSettingsTranscriptionAccepted{}
}

/*
PutRoutingSettingsTranscriptionAccepted describes a response with status code 202, with default header values.

Request to update transcription settings has been accepted
*/
type PutRoutingSettingsTranscriptionAccepted struct {
	Payload *models.TranscriptionSettings
}

// IsSuccess returns true when this put routing settings transcription accepted response has a 2xx status code
func (o *PutRoutingSettingsTranscriptionAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put routing settings transcription accepted response has a 3xx status code
func (o *PutRoutingSettingsTranscriptionAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing settings transcription accepted response has a 4xx status code
func (o *PutRoutingSettingsTranscriptionAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this put routing settings transcription accepted response has a 5xx status code
func (o *PutRoutingSettingsTranscriptionAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing settings transcription accepted response a status code equal to that given
func (o *PutRoutingSettingsTranscriptionAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *PutRoutingSettingsTranscriptionAccepted) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings/transcription][%d] putRoutingSettingsTranscriptionAccepted  %+v", 202, o.Payload)
}

func (o *PutRoutingSettingsTranscriptionAccepted) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings/transcription][%d] putRoutingSettingsTranscriptionAccepted  %+v", 202, o.Payload)
}

func (o *PutRoutingSettingsTranscriptionAccepted) GetPayload() *models.TranscriptionSettings {
	return o.Payload
}

func (o *PutRoutingSettingsTranscriptionAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TranscriptionSettings)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSettingsTranscriptionBadRequest creates a PutRoutingSettingsTranscriptionBadRequest with default headers values
func NewPutRoutingSettingsTranscriptionBadRequest() *PutRoutingSettingsTranscriptionBadRequest {
	return &PutRoutingSettingsTranscriptionBadRequest{}
}

/*
PutRoutingSettingsTranscriptionBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutRoutingSettingsTranscriptionBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing settings transcription bad request response has a 2xx status code
func (o *PutRoutingSettingsTranscriptionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing settings transcription bad request response has a 3xx status code
func (o *PutRoutingSettingsTranscriptionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing settings transcription bad request response has a 4xx status code
func (o *PutRoutingSettingsTranscriptionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put routing settings transcription bad request response has a 5xx status code
func (o *PutRoutingSettingsTranscriptionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing settings transcription bad request response a status code equal to that given
func (o *PutRoutingSettingsTranscriptionBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutRoutingSettingsTranscriptionBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings/transcription][%d] putRoutingSettingsTranscriptionBadRequest  %+v", 400, o.Payload)
}

func (o *PutRoutingSettingsTranscriptionBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings/transcription][%d] putRoutingSettingsTranscriptionBadRequest  %+v", 400, o.Payload)
}

func (o *PutRoutingSettingsTranscriptionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSettingsTranscriptionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSettingsTranscriptionUnauthorized creates a PutRoutingSettingsTranscriptionUnauthorized with default headers values
func NewPutRoutingSettingsTranscriptionUnauthorized() *PutRoutingSettingsTranscriptionUnauthorized {
	return &PutRoutingSettingsTranscriptionUnauthorized{}
}

/*
PutRoutingSettingsTranscriptionUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutRoutingSettingsTranscriptionUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing settings transcription unauthorized response has a 2xx status code
func (o *PutRoutingSettingsTranscriptionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing settings transcription unauthorized response has a 3xx status code
func (o *PutRoutingSettingsTranscriptionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing settings transcription unauthorized response has a 4xx status code
func (o *PutRoutingSettingsTranscriptionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put routing settings transcription unauthorized response has a 5xx status code
func (o *PutRoutingSettingsTranscriptionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing settings transcription unauthorized response a status code equal to that given
func (o *PutRoutingSettingsTranscriptionUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutRoutingSettingsTranscriptionUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings/transcription][%d] putRoutingSettingsTranscriptionUnauthorized  %+v", 401, o.Payload)
}

func (o *PutRoutingSettingsTranscriptionUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings/transcription][%d] putRoutingSettingsTranscriptionUnauthorized  %+v", 401, o.Payload)
}

func (o *PutRoutingSettingsTranscriptionUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSettingsTranscriptionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSettingsTranscriptionForbidden creates a PutRoutingSettingsTranscriptionForbidden with default headers values
func NewPutRoutingSettingsTranscriptionForbidden() *PutRoutingSettingsTranscriptionForbidden {
	return &PutRoutingSettingsTranscriptionForbidden{}
}

/*
PutRoutingSettingsTranscriptionForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutRoutingSettingsTranscriptionForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing settings transcription forbidden response has a 2xx status code
func (o *PutRoutingSettingsTranscriptionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing settings transcription forbidden response has a 3xx status code
func (o *PutRoutingSettingsTranscriptionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing settings transcription forbidden response has a 4xx status code
func (o *PutRoutingSettingsTranscriptionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put routing settings transcription forbidden response has a 5xx status code
func (o *PutRoutingSettingsTranscriptionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing settings transcription forbidden response a status code equal to that given
func (o *PutRoutingSettingsTranscriptionForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutRoutingSettingsTranscriptionForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings/transcription][%d] putRoutingSettingsTranscriptionForbidden  %+v", 403, o.Payload)
}

func (o *PutRoutingSettingsTranscriptionForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings/transcription][%d] putRoutingSettingsTranscriptionForbidden  %+v", 403, o.Payload)
}

func (o *PutRoutingSettingsTranscriptionForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSettingsTranscriptionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSettingsTranscriptionNotFound creates a PutRoutingSettingsTranscriptionNotFound with default headers values
func NewPutRoutingSettingsTranscriptionNotFound() *PutRoutingSettingsTranscriptionNotFound {
	return &PutRoutingSettingsTranscriptionNotFound{}
}

/*
PutRoutingSettingsTranscriptionNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutRoutingSettingsTranscriptionNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing settings transcription not found response has a 2xx status code
func (o *PutRoutingSettingsTranscriptionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing settings transcription not found response has a 3xx status code
func (o *PutRoutingSettingsTranscriptionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing settings transcription not found response has a 4xx status code
func (o *PutRoutingSettingsTranscriptionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put routing settings transcription not found response has a 5xx status code
func (o *PutRoutingSettingsTranscriptionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing settings transcription not found response a status code equal to that given
func (o *PutRoutingSettingsTranscriptionNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutRoutingSettingsTranscriptionNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings/transcription][%d] putRoutingSettingsTranscriptionNotFound  %+v", 404, o.Payload)
}

func (o *PutRoutingSettingsTranscriptionNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings/transcription][%d] putRoutingSettingsTranscriptionNotFound  %+v", 404, o.Payload)
}

func (o *PutRoutingSettingsTranscriptionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSettingsTranscriptionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSettingsTranscriptionRequestTimeout creates a PutRoutingSettingsTranscriptionRequestTimeout with default headers values
func NewPutRoutingSettingsTranscriptionRequestTimeout() *PutRoutingSettingsTranscriptionRequestTimeout {
	return &PutRoutingSettingsTranscriptionRequestTimeout{}
}

/*
PutRoutingSettingsTranscriptionRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutRoutingSettingsTranscriptionRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing settings transcription request timeout response has a 2xx status code
func (o *PutRoutingSettingsTranscriptionRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing settings transcription request timeout response has a 3xx status code
func (o *PutRoutingSettingsTranscriptionRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing settings transcription request timeout response has a 4xx status code
func (o *PutRoutingSettingsTranscriptionRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put routing settings transcription request timeout response has a 5xx status code
func (o *PutRoutingSettingsTranscriptionRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing settings transcription request timeout response a status code equal to that given
func (o *PutRoutingSettingsTranscriptionRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutRoutingSettingsTranscriptionRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings/transcription][%d] putRoutingSettingsTranscriptionRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutRoutingSettingsTranscriptionRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings/transcription][%d] putRoutingSettingsTranscriptionRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutRoutingSettingsTranscriptionRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSettingsTranscriptionRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSettingsTranscriptionRequestEntityTooLarge creates a PutRoutingSettingsTranscriptionRequestEntityTooLarge with default headers values
func NewPutRoutingSettingsTranscriptionRequestEntityTooLarge() *PutRoutingSettingsTranscriptionRequestEntityTooLarge {
	return &PutRoutingSettingsTranscriptionRequestEntityTooLarge{}
}

/*
PutRoutingSettingsTranscriptionRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PutRoutingSettingsTranscriptionRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing settings transcription request entity too large response has a 2xx status code
func (o *PutRoutingSettingsTranscriptionRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing settings transcription request entity too large response has a 3xx status code
func (o *PutRoutingSettingsTranscriptionRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing settings transcription request entity too large response has a 4xx status code
func (o *PutRoutingSettingsTranscriptionRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put routing settings transcription request entity too large response has a 5xx status code
func (o *PutRoutingSettingsTranscriptionRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing settings transcription request entity too large response a status code equal to that given
func (o *PutRoutingSettingsTranscriptionRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutRoutingSettingsTranscriptionRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings/transcription][%d] putRoutingSettingsTranscriptionRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutRoutingSettingsTranscriptionRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings/transcription][%d] putRoutingSettingsTranscriptionRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutRoutingSettingsTranscriptionRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSettingsTranscriptionRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSettingsTranscriptionUnsupportedMediaType creates a PutRoutingSettingsTranscriptionUnsupportedMediaType with default headers values
func NewPutRoutingSettingsTranscriptionUnsupportedMediaType() *PutRoutingSettingsTranscriptionUnsupportedMediaType {
	return &PutRoutingSettingsTranscriptionUnsupportedMediaType{}
}

/*
PutRoutingSettingsTranscriptionUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutRoutingSettingsTranscriptionUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing settings transcription unsupported media type response has a 2xx status code
func (o *PutRoutingSettingsTranscriptionUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing settings transcription unsupported media type response has a 3xx status code
func (o *PutRoutingSettingsTranscriptionUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing settings transcription unsupported media type response has a 4xx status code
func (o *PutRoutingSettingsTranscriptionUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put routing settings transcription unsupported media type response has a 5xx status code
func (o *PutRoutingSettingsTranscriptionUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing settings transcription unsupported media type response a status code equal to that given
func (o *PutRoutingSettingsTranscriptionUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutRoutingSettingsTranscriptionUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings/transcription][%d] putRoutingSettingsTranscriptionUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutRoutingSettingsTranscriptionUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings/transcription][%d] putRoutingSettingsTranscriptionUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutRoutingSettingsTranscriptionUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSettingsTranscriptionUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSettingsTranscriptionTooManyRequests creates a PutRoutingSettingsTranscriptionTooManyRequests with default headers values
func NewPutRoutingSettingsTranscriptionTooManyRequests() *PutRoutingSettingsTranscriptionTooManyRequests {
	return &PutRoutingSettingsTranscriptionTooManyRequests{}
}

/*
PutRoutingSettingsTranscriptionTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutRoutingSettingsTranscriptionTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing settings transcription too many requests response has a 2xx status code
func (o *PutRoutingSettingsTranscriptionTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing settings transcription too many requests response has a 3xx status code
func (o *PutRoutingSettingsTranscriptionTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing settings transcription too many requests response has a 4xx status code
func (o *PutRoutingSettingsTranscriptionTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put routing settings transcription too many requests response has a 5xx status code
func (o *PutRoutingSettingsTranscriptionTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing settings transcription too many requests response a status code equal to that given
func (o *PutRoutingSettingsTranscriptionTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutRoutingSettingsTranscriptionTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings/transcription][%d] putRoutingSettingsTranscriptionTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutRoutingSettingsTranscriptionTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings/transcription][%d] putRoutingSettingsTranscriptionTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutRoutingSettingsTranscriptionTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSettingsTranscriptionTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSettingsTranscriptionInternalServerError creates a PutRoutingSettingsTranscriptionInternalServerError with default headers values
func NewPutRoutingSettingsTranscriptionInternalServerError() *PutRoutingSettingsTranscriptionInternalServerError {
	return &PutRoutingSettingsTranscriptionInternalServerError{}
}

/*
PutRoutingSettingsTranscriptionInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutRoutingSettingsTranscriptionInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing settings transcription internal server error response has a 2xx status code
func (o *PutRoutingSettingsTranscriptionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing settings transcription internal server error response has a 3xx status code
func (o *PutRoutingSettingsTranscriptionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing settings transcription internal server error response has a 4xx status code
func (o *PutRoutingSettingsTranscriptionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put routing settings transcription internal server error response has a 5xx status code
func (o *PutRoutingSettingsTranscriptionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put routing settings transcription internal server error response a status code equal to that given
func (o *PutRoutingSettingsTranscriptionInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutRoutingSettingsTranscriptionInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings/transcription][%d] putRoutingSettingsTranscriptionInternalServerError  %+v", 500, o.Payload)
}

func (o *PutRoutingSettingsTranscriptionInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings/transcription][%d] putRoutingSettingsTranscriptionInternalServerError  %+v", 500, o.Payload)
}

func (o *PutRoutingSettingsTranscriptionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSettingsTranscriptionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSettingsTranscriptionServiceUnavailable creates a PutRoutingSettingsTranscriptionServiceUnavailable with default headers values
func NewPutRoutingSettingsTranscriptionServiceUnavailable() *PutRoutingSettingsTranscriptionServiceUnavailable {
	return &PutRoutingSettingsTranscriptionServiceUnavailable{}
}

/*
PutRoutingSettingsTranscriptionServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutRoutingSettingsTranscriptionServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing settings transcription service unavailable response has a 2xx status code
func (o *PutRoutingSettingsTranscriptionServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing settings transcription service unavailable response has a 3xx status code
func (o *PutRoutingSettingsTranscriptionServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing settings transcription service unavailable response has a 4xx status code
func (o *PutRoutingSettingsTranscriptionServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put routing settings transcription service unavailable response has a 5xx status code
func (o *PutRoutingSettingsTranscriptionServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put routing settings transcription service unavailable response a status code equal to that given
func (o *PutRoutingSettingsTranscriptionServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutRoutingSettingsTranscriptionServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings/transcription][%d] putRoutingSettingsTranscriptionServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutRoutingSettingsTranscriptionServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings/transcription][%d] putRoutingSettingsTranscriptionServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutRoutingSettingsTranscriptionServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSettingsTranscriptionServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSettingsTranscriptionGatewayTimeout creates a PutRoutingSettingsTranscriptionGatewayTimeout with default headers values
func NewPutRoutingSettingsTranscriptionGatewayTimeout() *PutRoutingSettingsTranscriptionGatewayTimeout {
	return &PutRoutingSettingsTranscriptionGatewayTimeout{}
}

/*
PutRoutingSettingsTranscriptionGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutRoutingSettingsTranscriptionGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing settings transcription gateway timeout response has a 2xx status code
func (o *PutRoutingSettingsTranscriptionGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing settings transcription gateway timeout response has a 3xx status code
func (o *PutRoutingSettingsTranscriptionGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing settings transcription gateway timeout response has a 4xx status code
func (o *PutRoutingSettingsTranscriptionGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put routing settings transcription gateway timeout response has a 5xx status code
func (o *PutRoutingSettingsTranscriptionGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put routing settings transcription gateway timeout response a status code equal to that given
func (o *PutRoutingSettingsTranscriptionGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutRoutingSettingsTranscriptionGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings/transcription][%d] putRoutingSettingsTranscriptionGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutRoutingSettingsTranscriptionGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings/transcription][%d] putRoutingSettingsTranscriptionGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutRoutingSettingsTranscriptionGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSettingsTranscriptionGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
