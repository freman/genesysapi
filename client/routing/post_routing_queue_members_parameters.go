// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/freman/genesysapi/models"
)

// NewPostRoutingQueueMembersParams creates a new PostRoutingQueueMembersParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostRoutingQueueMembersParams() *PostRoutingQueueMembersParams {
	return &PostRoutingQueueMembersParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostRoutingQueueMembersParamsWithTimeout creates a new PostRoutingQueueMembersParams object
// with the ability to set a timeout on a request.
func NewPostRoutingQueueMembersParamsWithTimeout(timeout time.Duration) *PostRoutingQueueMembersParams {
	return &PostRoutingQueueMembersParams{
		timeout: timeout,
	}
}

// NewPostRoutingQueueMembersParamsWithContext creates a new PostRoutingQueueMembersParams object
// with the ability to set a context for a request.
func NewPostRoutingQueueMembersParamsWithContext(ctx context.Context) *PostRoutingQueueMembersParams {
	return &PostRoutingQueueMembersParams{
		Context: ctx,
	}
}

// NewPostRoutingQueueMembersParamsWithHTTPClient creates a new PostRoutingQueueMembersParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostRoutingQueueMembersParamsWithHTTPClient(client *http.Client) *PostRoutingQueueMembersParams {
	return &PostRoutingQueueMembersParams{
		HTTPClient: client,
	}
}

/*
PostRoutingQueueMembersParams contains all the parameters to send to the API endpoint

	for the post routing queue members operation.

	Typically these are written to a http.Request.
*/
type PostRoutingQueueMembersParams struct {

	/* Body.

	   Queue Members
	*/
	Body []*models.WritableEntity

	/* Delete.

	   True to delete queue members
	*/
	Delete *bool

	/* QueueID.

	   Queue ID
	*/
	QueueID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post routing queue members params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostRoutingQueueMembersParams) WithDefaults() *PostRoutingQueueMembersParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post routing queue members params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostRoutingQueueMembersParams) SetDefaults() {
	var (
		deleteDefault = bool(false)
	)

	val := PostRoutingQueueMembersParams{
		Delete: &deleteDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the post routing queue members params
func (o *PostRoutingQueueMembersParams) WithTimeout(timeout time.Duration) *PostRoutingQueueMembersParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post routing queue members params
func (o *PostRoutingQueueMembersParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post routing queue members params
func (o *PostRoutingQueueMembersParams) WithContext(ctx context.Context) *PostRoutingQueueMembersParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post routing queue members params
func (o *PostRoutingQueueMembersParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post routing queue members params
func (o *PostRoutingQueueMembersParams) WithHTTPClient(client *http.Client) *PostRoutingQueueMembersParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post routing queue members params
func (o *PostRoutingQueueMembersParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the post routing queue members params
func (o *PostRoutingQueueMembersParams) WithBody(body []*models.WritableEntity) *PostRoutingQueueMembersParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the post routing queue members params
func (o *PostRoutingQueueMembersParams) SetBody(body []*models.WritableEntity) {
	o.Body = body
}

// WithDelete adds the delete to the post routing queue members params
func (o *PostRoutingQueueMembersParams) WithDelete(delete *bool) *PostRoutingQueueMembersParams {
	o.SetDelete(delete)
	return o
}

// SetDelete adds the delete to the post routing queue members params
func (o *PostRoutingQueueMembersParams) SetDelete(delete *bool) {
	o.Delete = delete
}

// WithQueueID adds the queueID to the post routing queue members params
func (o *PostRoutingQueueMembersParams) WithQueueID(queueID string) *PostRoutingQueueMembersParams {
	o.SetQueueID(queueID)
	return o
}

// SetQueueID adds the queueId to the post routing queue members params
func (o *PostRoutingQueueMembersParams) SetQueueID(queueID string) {
	o.QueueID = queueID
}

// WriteToRequest writes these params to a swagger request
func (o *PostRoutingQueueMembersParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if o.Delete != nil {

		// query param delete
		var qrDelete bool

		if o.Delete != nil {
			qrDelete = *o.Delete
		}
		qDelete := swag.FormatBool(qrDelete)
		if qDelete != "" {

			if err := r.SetQueryParam("delete", qDelete); err != nil {
				return err
			}
		}
	}

	// path param queueId
	if err := r.SetPathParam("queueId", o.QueueID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
