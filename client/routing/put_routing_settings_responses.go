// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutRoutingSettingsReader is a Reader for the PutRoutingSettings structure.
type PutRoutingSettingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRoutingSettingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutRoutingSettingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutRoutingSettingsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutRoutingSettingsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutRoutingSettingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutRoutingSettingsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutRoutingSettingsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutRoutingSettingsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutRoutingSettingsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutRoutingSettingsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutRoutingSettingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutRoutingSettingsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutRoutingSettingsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutRoutingSettingsOK creates a PutRoutingSettingsOK with default headers values
func NewPutRoutingSettingsOK() *PutRoutingSettingsOK {
	return &PutRoutingSettingsOK{}
}

/*PutRoutingSettingsOK handles this case with default header values.

successful operation
*/
type PutRoutingSettingsOK struct {
	Payload *models.RoutingSettings
}

func (o *PutRoutingSettingsOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings][%d] putRoutingSettingsOK  %+v", 200, o.Payload)
}

func (o *PutRoutingSettingsOK) GetPayload() *models.RoutingSettings {
	return o.Payload
}

func (o *PutRoutingSettingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RoutingSettings)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSettingsBadRequest creates a PutRoutingSettingsBadRequest with default headers values
func NewPutRoutingSettingsBadRequest() *PutRoutingSettingsBadRequest {
	return &PutRoutingSettingsBadRequest{}
}

/*PutRoutingSettingsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutRoutingSettingsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PutRoutingSettingsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings][%d] putRoutingSettingsBadRequest  %+v", 400, o.Payload)
}

func (o *PutRoutingSettingsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSettingsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSettingsUnauthorized creates a PutRoutingSettingsUnauthorized with default headers values
func NewPutRoutingSettingsUnauthorized() *PutRoutingSettingsUnauthorized {
	return &PutRoutingSettingsUnauthorized{}
}

/*PutRoutingSettingsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PutRoutingSettingsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PutRoutingSettingsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings][%d] putRoutingSettingsUnauthorized  %+v", 401, o.Payload)
}

func (o *PutRoutingSettingsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSettingsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSettingsForbidden creates a PutRoutingSettingsForbidden with default headers values
func NewPutRoutingSettingsForbidden() *PutRoutingSettingsForbidden {
	return &PutRoutingSettingsForbidden{}
}

/*PutRoutingSettingsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PutRoutingSettingsForbidden struct {
	Payload *models.ErrorBody
}

func (o *PutRoutingSettingsForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings][%d] putRoutingSettingsForbidden  %+v", 403, o.Payload)
}

func (o *PutRoutingSettingsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSettingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSettingsNotFound creates a PutRoutingSettingsNotFound with default headers values
func NewPutRoutingSettingsNotFound() *PutRoutingSettingsNotFound {
	return &PutRoutingSettingsNotFound{}
}

/*PutRoutingSettingsNotFound handles this case with default header values.

The requested resource was not found.
*/
type PutRoutingSettingsNotFound struct {
	Payload *models.ErrorBody
}

func (o *PutRoutingSettingsNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings][%d] putRoutingSettingsNotFound  %+v", 404, o.Payload)
}

func (o *PutRoutingSettingsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSettingsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSettingsRequestTimeout creates a PutRoutingSettingsRequestTimeout with default headers values
func NewPutRoutingSettingsRequestTimeout() *PutRoutingSettingsRequestTimeout {
	return &PutRoutingSettingsRequestTimeout{}
}

/*PutRoutingSettingsRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutRoutingSettingsRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutRoutingSettingsRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings][%d] putRoutingSettingsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutRoutingSettingsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSettingsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSettingsRequestEntityTooLarge creates a PutRoutingSettingsRequestEntityTooLarge with default headers values
func NewPutRoutingSettingsRequestEntityTooLarge() *PutRoutingSettingsRequestEntityTooLarge {
	return &PutRoutingSettingsRequestEntityTooLarge{}
}

/*PutRoutingSettingsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type PutRoutingSettingsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PutRoutingSettingsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings][%d] putRoutingSettingsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutRoutingSettingsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSettingsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSettingsUnsupportedMediaType creates a PutRoutingSettingsUnsupportedMediaType with default headers values
func NewPutRoutingSettingsUnsupportedMediaType() *PutRoutingSettingsUnsupportedMediaType {
	return &PutRoutingSettingsUnsupportedMediaType{}
}

/*PutRoutingSettingsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutRoutingSettingsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PutRoutingSettingsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings][%d] putRoutingSettingsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutRoutingSettingsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSettingsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSettingsTooManyRequests creates a PutRoutingSettingsTooManyRequests with default headers values
func NewPutRoutingSettingsTooManyRequests() *PutRoutingSettingsTooManyRequests {
	return &PutRoutingSettingsTooManyRequests{}
}

/*PutRoutingSettingsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutRoutingSettingsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PutRoutingSettingsTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings][%d] putRoutingSettingsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutRoutingSettingsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSettingsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSettingsInternalServerError creates a PutRoutingSettingsInternalServerError with default headers values
func NewPutRoutingSettingsInternalServerError() *PutRoutingSettingsInternalServerError {
	return &PutRoutingSettingsInternalServerError{}
}

/*PutRoutingSettingsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutRoutingSettingsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PutRoutingSettingsInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings][%d] putRoutingSettingsInternalServerError  %+v", 500, o.Payload)
}

func (o *PutRoutingSettingsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSettingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSettingsServiceUnavailable creates a PutRoutingSettingsServiceUnavailable with default headers values
func NewPutRoutingSettingsServiceUnavailable() *PutRoutingSettingsServiceUnavailable {
	return &PutRoutingSettingsServiceUnavailable{}
}

/*PutRoutingSettingsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutRoutingSettingsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PutRoutingSettingsServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings][%d] putRoutingSettingsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutRoutingSettingsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSettingsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSettingsGatewayTimeout creates a PutRoutingSettingsGatewayTimeout with default headers values
func NewPutRoutingSettingsGatewayTimeout() *PutRoutingSettingsGatewayTimeout {
	return &PutRoutingSettingsGatewayTimeout{}
}

/*PutRoutingSettingsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PutRoutingSettingsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutRoutingSettingsGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/settings][%d] putRoutingSettingsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutRoutingSettingsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSettingsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
