// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetUserSkillgroupsReader is a Reader for the GetUserSkillgroups structure.
type GetUserSkillgroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserSkillgroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserSkillgroupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUserSkillgroupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetUserSkillgroupsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUserSkillgroupsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUserSkillgroupsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetUserSkillgroupsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetUserSkillgroupsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetUserSkillgroupsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetUserSkillgroupsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUserSkillgroupsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetUserSkillgroupsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetUserSkillgroupsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUserSkillgroupsOK creates a GetUserSkillgroupsOK with default headers values
func NewGetUserSkillgroupsOK() *GetUserSkillgroupsOK {
	return &GetUserSkillgroupsOK{}
}

/*
GetUserSkillgroupsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetUserSkillgroupsOK struct {
	Payload *models.UserSkillGroupEntityListing
}

// IsSuccess returns true when this get user skillgroups o k response has a 2xx status code
func (o *GetUserSkillgroupsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get user skillgroups o k response has a 3xx status code
func (o *GetUserSkillgroupsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user skillgroups o k response has a 4xx status code
func (o *GetUserSkillgroupsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user skillgroups o k response has a 5xx status code
func (o *GetUserSkillgroupsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get user skillgroups o k response a status code equal to that given
func (o *GetUserSkillgroupsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetUserSkillgroupsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/skillgroups][%d] getUserSkillgroupsOK  %+v", 200, o.Payload)
}

func (o *GetUserSkillgroupsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/skillgroups][%d] getUserSkillgroupsOK  %+v", 200, o.Payload)
}

func (o *GetUserSkillgroupsOK) GetPayload() *models.UserSkillGroupEntityListing {
	return o.Payload
}

func (o *GetUserSkillgroupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserSkillGroupEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserSkillgroupsBadRequest creates a GetUserSkillgroupsBadRequest with default headers values
func NewGetUserSkillgroupsBadRequest() *GetUserSkillgroupsBadRequest {
	return &GetUserSkillgroupsBadRequest{}
}

/*
GetUserSkillgroupsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetUserSkillgroupsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user skillgroups bad request response has a 2xx status code
func (o *GetUserSkillgroupsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user skillgroups bad request response has a 3xx status code
func (o *GetUserSkillgroupsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user skillgroups bad request response has a 4xx status code
func (o *GetUserSkillgroupsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user skillgroups bad request response has a 5xx status code
func (o *GetUserSkillgroupsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get user skillgroups bad request response a status code equal to that given
func (o *GetUserSkillgroupsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetUserSkillgroupsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/skillgroups][%d] getUserSkillgroupsBadRequest  %+v", 400, o.Payload)
}

func (o *GetUserSkillgroupsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/skillgroups][%d] getUserSkillgroupsBadRequest  %+v", 400, o.Payload)
}

func (o *GetUserSkillgroupsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserSkillgroupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserSkillgroupsUnauthorized creates a GetUserSkillgroupsUnauthorized with default headers values
func NewGetUserSkillgroupsUnauthorized() *GetUserSkillgroupsUnauthorized {
	return &GetUserSkillgroupsUnauthorized{}
}

/*
GetUserSkillgroupsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetUserSkillgroupsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user skillgroups unauthorized response has a 2xx status code
func (o *GetUserSkillgroupsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user skillgroups unauthorized response has a 3xx status code
func (o *GetUserSkillgroupsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user skillgroups unauthorized response has a 4xx status code
func (o *GetUserSkillgroupsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user skillgroups unauthorized response has a 5xx status code
func (o *GetUserSkillgroupsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get user skillgroups unauthorized response a status code equal to that given
func (o *GetUserSkillgroupsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetUserSkillgroupsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/skillgroups][%d] getUserSkillgroupsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUserSkillgroupsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/skillgroups][%d] getUserSkillgroupsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUserSkillgroupsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserSkillgroupsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserSkillgroupsForbidden creates a GetUserSkillgroupsForbidden with default headers values
func NewGetUserSkillgroupsForbidden() *GetUserSkillgroupsForbidden {
	return &GetUserSkillgroupsForbidden{}
}

/*
GetUserSkillgroupsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetUserSkillgroupsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user skillgroups forbidden response has a 2xx status code
func (o *GetUserSkillgroupsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user skillgroups forbidden response has a 3xx status code
func (o *GetUserSkillgroupsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user skillgroups forbidden response has a 4xx status code
func (o *GetUserSkillgroupsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user skillgroups forbidden response has a 5xx status code
func (o *GetUserSkillgroupsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get user skillgroups forbidden response a status code equal to that given
func (o *GetUserSkillgroupsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetUserSkillgroupsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/skillgroups][%d] getUserSkillgroupsForbidden  %+v", 403, o.Payload)
}

func (o *GetUserSkillgroupsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/skillgroups][%d] getUserSkillgroupsForbidden  %+v", 403, o.Payload)
}

func (o *GetUserSkillgroupsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserSkillgroupsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserSkillgroupsNotFound creates a GetUserSkillgroupsNotFound with default headers values
func NewGetUserSkillgroupsNotFound() *GetUserSkillgroupsNotFound {
	return &GetUserSkillgroupsNotFound{}
}

/*
GetUserSkillgroupsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetUserSkillgroupsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user skillgroups not found response has a 2xx status code
func (o *GetUserSkillgroupsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user skillgroups not found response has a 3xx status code
func (o *GetUserSkillgroupsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user skillgroups not found response has a 4xx status code
func (o *GetUserSkillgroupsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user skillgroups not found response has a 5xx status code
func (o *GetUserSkillgroupsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get user skillgroups not found response a status code equal to that given
func (o *GetUserSkillgroupsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetUserSkillgroupsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/skillgroups][%d] getUserSkillgroupsNotFound  %+v", 404, o.Payload)
}

func (o *GetUserSkillgroupsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/skillgroups][%d] getUserSkillgroupsNotFound  %+v", 404, o.Payload)
}

func (o *GetUserSkillgroupsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserSkillgroupsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserSkillgroupsRequestTimeout creates a GetUserSkillgroupsRequestTimeout with default headers values
func NewGetUserSkillgroupsRequestTimeout() *GetUserSkillgroupsRequestTimeout {
	return &GetUserSkillgroupsRequestTimeout{}
}

/*
GetUserSkillgroupsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetUserSkillgroupsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user skillgroups request timeout response has a 2xx status code
func (o *GetUserSkillgroupsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user skillgroups request timeout response has a 3xx status code
func (o *GetUserSkillgroupsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user skillgroups request timeout response has a 4xx status code
func (o *GetUserSkillgroupsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user skillgroups request timeout response has a 5xx status code
func (o *GetUserSkillgroupsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get user skillgroups request timeout response a status code equal to that given
func (o *GetUserSkillgroupsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetUserSkillgroupsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/skillgroups][%d] getUserSkillgroupsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetUserSkillgroupsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/skillgroups][%d] getUserSkillgroupsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetUserSkillgroupsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserSkillgroupsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserSkillgroupsRequestEntityTooLarge creates a GetUserSkillgroupsRequestEntityTooLarge with default headers values
func NewGetUserSkillgroupsRequestEntityTooLarge() *GetUserSkillgroupsRequestEntityTooLarge {
	return &GetUserSkillgroupsRequestEntityTooLarge{}
}

/*
GetUserSkillgroupsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetUserSkillgroupsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user skillgroups request entity too large response has a 2xx status code
func (o *GetUserSkillgroupsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user skillgroups request entity too large response has a 3xx status code
func (o *GetUserSkillgroupsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user skillgroups request entity too large response has a 4xx status code
func (o *GetUserSkillgroupsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user skillgroups request entity too large response has a 5xx status code
func (o *GetUserSkillgroupsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get user skillgroups request entity too large response a status code equal to that given
func (o *GetUserSkillgroupsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetUserSkillgroupsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/skillgroups][%d] getUserSkillgroupsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetUserSkillgroupsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/skillgroups][%d] getUserSkillgroupsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetUserSkillgroupsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserSkillgroupsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserSkillgroupsUnsupportedMediaType creates a GetUserSkillgroupsUnsupportedMediaType with default headers values
func NewGetUserSkillgroupsUnsupportedMediaType() *GetUserSkillgroupsUnsupportedMediaType {
	return &GetUserSkillgroupsUnsupportedMediaType{}
}

/*
GetUserSkillgroupsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetUserSkillgroupsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user skillgroups unsupported media type response has a 2xx status code
func (o *GetUserSkillgroupsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user skillgroups unsupported media type response has a 3xx status code
func (o *GetUserSkillgroupsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user skillgroups unsupported media type response has a 4xx status code
func (o *GetUserSkillgroupsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user skillgroups unsupported media type response has a 5xx status code
func (o *GetUserSkillgroupsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get user skillgroups unsupported media type response a status code equal to that given
func (o *GetUserSkillgroupsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetUserSkillgroupsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/skillgroups][%d] getUserSkillgroupsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetUserSkillgroupsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/skillgroups][%d] getUserSkillgroupsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetUserSkillgroupsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserSkillgroupsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserSkillgroupsTooManyRequests creates a GetUserSkillgroupsTooManyRequests with default headers values
func NewGetUserSkillgroupsTooManyRequests() *GetUserSkillgroupsTooManyRequests {
	return &GetUserSkillgroupsTooManyRequests{}
}

/*
GetUserSkillgroupsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetUserSkillgroupsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user skillgroups too many requests response has a 2xx status code
func (o *GetUserSkillgroupsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user skillgroups too many requests response has a 3xx status code
func (o *GetUserSkillgroupsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user skillgroups too many requests response has a 4xx status code
func (o *GetUserSkillgroupsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user skillgroups too many requests response has a 5xx status code
func (o *GetUserSkillgroupsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get user skillgroups too many requests response a status code equal to that given
func (o *GetUserSkillgroupsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetUserSkillgroupsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/skillgroups][%d] getUserSkillgroupsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetUserSkillgroupsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/skillgroups][%d] getUserSkillgroupsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetUserSkillgroupsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserSkillgroupsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserSkillgroupsInternalServerError creates a GetUserSkillgroupsInternalServerError with default headers values
func NewGetUserSkillgroupsInternalServerError() *GetUserSkillgroupsInternalServerError {
	return &GetUserSkillgroupsInternalServerError{}
}

/*
GetUserSkillgroupsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetUserSkillgroupsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user skillgroups internal server error response has a 2xx status code
func (o *GetUserSkillgroupsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user skillgroups internal server error response has a 3xx status code
func (o *GetUserSkillgroupsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user skillgroups internal server error response has a 4xx status code
func (o *GetUserSkillgroupsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user skillgroups internal server error response has a 5xx status code
func (o *GetUserSkillgroupsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get user skillgroups internal server error response a status code equal to that given
func (o *GetUserSkillgroupsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetUserSkillgroupsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/skillgroups][%d] getUserSkillgroupsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUserSkillgroupsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/skillgroups][%d] getUserSkillgroupsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUserSkillgroupsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserSkillgroupsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserSkillgroupsServiceUnavailable creates a GetUserSkillgroupsServiceUnavailable with default headers values
func NewGetUserSkillgroupsServiceUnavailable() *GetUserSkillgroupsServiceUnavailable {
	return &GetUserSkillgroupsServiceUnavailable{}
}

/*
GetUserSkillgroupsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetUserSkillgroupsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user skillgroups service unavailable response has a 2xx status code
func (o *GetUserSkillgroupsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user skillgroups service unavailable response has a 3xx status code
func (o *GetUserSkillgroupsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user skillgroups service unavailable response has a 4xx status code
func (o *GetUserSkillgroupsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user skillgroups service unavailable response has a 5xx status code
func (o *GetUserSkillgroupsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get user skillgroups service unavailable response a status code equal to that given
func (o *GetUserSkillgroupsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetUserSkillgroupsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/skillgroups][%d] getUserSkillgroupsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUserSkillgroupsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/skillgroups][%d] getUserSkillgroupsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUserSkillgroupsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserSkillgroupsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserSkillgroupsGatewayTimeout creates a GetUserSkillgroupsGatewayTimeout with default headers values
func NewGetUserSkillgroupsGatewayTimeout() *GetUserSkillgroupsGatewayTimeout {
	return &GetUserSkillgroupsGatewayTimeout{}
}

/*
GetUserSkillgroupsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetUserSkillgroupsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user skillgroups gateway timeout response has a 2xx status code
func (o *GetUserSkillgroupsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user skillgroups gateway timeout response has a 3xx status code
func (o *GetUserSkillgroupsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user skillgroups gateway timeout response has a 4xx status code
func (o *GetUserSkillgroupsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user skillgroups gateway timeout response has a 5xx status code
func (o *GetUserSkillgroupsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get user skillgroups gateway timeout response a status code equal to that given
func (o *GetUserSkillgroupsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetUserSkillgroupsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/skillgroups][%d] getUserSkillgroupsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUserSkillgroupsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/skillgroups][%d] getUserSkillgroupsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUserSkillgroupsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserSkillgroupsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
