// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostRoutingAssessmentsReader is a Reader for the PostRoutingAssessments structure.
type PostRoutingAssessmentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRoutingAssessmentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostRoutingAssessmentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewPostRoutingAssessmentsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostRoutingAssessmentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostRoutingAssessmentsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostRoutingAssessmentsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostRoutingAssessmentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostRoutingAssessmentsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostRoutingAssessmentsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostRoutingAssessmentsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostRoutingAssessmentsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostRoutingAssessmentsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostRoutingAssessmentsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostRoutingAssessmentsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostRoutingAssessmentsOK creates a PostRoutingAssessmentsOK with default headers values
func NewPostRoutingAssessmentsOK() *PostRoutingAssessmentsOK {
	return &PostRoutingAssessmentsOK{}
}

/*
PostRoutingAssessmentsOK describes a response with status code 200, with default header values.

successful operation
*/
type PostRoutingAssessmentsOK struct {
	Payload *models.BenefitAssessment
}

// IsSuccess returns true when this post routing assessments o k response has a 2xx status code
func (o *PostRoutingAssessmentsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post routing assessments o k response has a 3xx status code
func (o *PostRoutingAssessmentsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing assessments o k response has a 4xx status code
func (o *PostRoutingAssessmentsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing assessments o k response has a 5xx status code
func (o *PostRoutingAssessmentsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing assessments o k response a status code equal to that given
func (o *PostRoutingAssessmentsOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostRoutingAssessmentsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/assessments][%d] postRoutingAssessmentsOK  %+v", 200, o.Payload)
}

func (o *PostRoutingAssessmentsOK) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/assessments][%d] postRoutingAssessmentsOK  %+v", 200, o.Payload)
}

func (o *PostRoutingAssessmentsOK) GetPayload() *models.BenefitAssessment {
	return o.Payload
}

func (o *PostRoutingAssessmentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BenefitAssessment)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingAssessmentsCreated creates a PostRoutingAssessmentsCreated with default headers values
func NewPostRoutingAssessmentsCreated() *PostRoutingAssessmentsCreated {
	return &PostRoutingAssessmentsCreated{}
}

/*
PostRoutingAssessmentsCreated describes a response with status code 201, with default header values.

Benefit Assessment created.
*/
type PostRoutingAssessmentsCreated struct {
	Payload *models.BenefitAssessment
}

// IsSuccess returns true when this post routing assessments created response has a 2xx status code
func (o *PostRoutingAssessmentsCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post routing assessments created response has a 3xx status code
func (o *PostRoutingAssessmentsCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing assessments created response has a 4xx status code
func (o *PostRoutingAssessmentsCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing assessments created response has a 5xx status code
func (o *PostRoutingAssessmentsCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing assessments created response a status code equal to that given
func (o *PostRoutingAssessmentsCreated) IsCode(code int) bool {
	return code == 201
}

func (o *PostRoutingAssessmentsCreated) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/assessments][%d] postRoutingAssessmentsCreated  %+v", 201, o.Payload)
}

func (o *PostRoutingAssessmentsCreated) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/assessments][%d] postRoutingAssessmentsCreated  %+v", 201, o.Payload)
}

func (o *PostRoutingAssessmentsCreated) GetPayload() *models.BenefitAssessment {
	return o.Payload
}

func (o *PostRoutingAssessmentsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BenefitAssessment)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingAssessmentsBadRequest creates a PostRoutingAssessmentsBadRequest with default headers values
func NewPostRoutingAssessmentsBadRequest() *PostRoutingAssessmentsBadRequest {
	return &PostRoutingAssessmentsBadRequest{}
}

/*
PostRoutingAssessmentsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostRoutingAssessmentsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing assessments bad request response has a 2xx status code
func (o *PostRoutingAssessmentsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing assessments bad request response has a 3xx status code
func (o *PostRoutingAssessmentsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing assessments bad request response has a 4xx status code
func (o *PostRoutingAssessmentsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing assessments bad request response has a 5xx status code
func (o *PostRoutingAssessmentsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing assessments bad request response a status code equal to that given
func (o *PostRoutingAssessmentsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostRoutingAssessmentsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/assessments][%d] postRoutingAssessmentsBadRequest  %+v", 400, o.Payload)
}

func (o *PostRoutingAssessmentsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/assessments][%d] postRoutingAssessmentsBadRequest  %+v", 400, o.Payload)
}

func (o *PostRoutingAssessmentsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingAssessmentsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingAssessmentsUnauthorized creates a PostRoutingAssessmentsUnauthorized with default headers values
func NewPostRoutingAssessmentsUnauthorized() *PostRoutingAssessmentsUnauthorized {
	return &PostRoutingAssessmentsUnauthorized{}
}

/*
PostRoutingAssessmentsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostRoutingAssessmentsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing assessments unauthorized response has a 2xx status code
func (o *PostRoutingAssessmentsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing assessments unauthorized response has a 3xx status code
func (o *PostRoutingAssessmentsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing assessments unauthorized response has a 4xx status code
func (o *PostRoutingAssessmentsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing assessments unauthorized response has a 5xx status code
func (o *PostRoutingAssessmentsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing assessments unauthorized response a status code equal to that given
func (o *PostRoutingAssessmentsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostRoutingAssessmentsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/assessments][%d] postRoutingAssessmentsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostRoutingAssessmentsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/assessments][%d] postRoutingAssessmentsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostRoutingAssessmentsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingAssessmentsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingAssessmentsForbidden creates a PostRoutingAssessmentsForbidden with default headers values
func NewPostRoutingAssessmentsForbidden() *PostRoutingAssessmentsForbidden {
	return &PostRoutingAssessmentsForbidden{}
}

/*
PostRoutingAssessmentsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostRoutingAssessmentsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing assessments forbidden response has a 2xx status code
func (o *PostRoutingAssessmentsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing assessments forbidden response has a 3xx status code
func (o *PostRoutingAssessmentsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing assessments forbidden response has a 4xx status code
func (o *PostRoutingAssessmentsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing assessments forbidden response has a 5xx status code
func (o *PostRoutingAssessmentsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing assessments forbidden response a status code equal to that given
func (o *PostRoutingAssessmentsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostRoutingAssessmentsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/assessments][%d] postRoutingAssessmentsForbidden  %+v", 403, o.Payload)
}

func (o *PostRoutingAssessmentsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/assessments][%d] postRoutingAssessmentsForbidden  %+v", 403, o.Payload)
}

func (o *PostRoutingAssessmentsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingAssessmentsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingAssessmentsNotFound creates a PostRoutingAssessmentsNotFound with default headers values
func NewPostRoutingAssessmentsNotFound() *PostRoutingAssessmentsNotFound {
	return &PostRoutingAssessmentsNotFound{}
}

/*
PostRoutingAssessmentsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostRoutingAssessmentsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing assessments not found response has a 2xx status code
func (o *PostRoutingAssessmentsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing assessments not found response has a 3xx status code
func (o *PostRoutingAssessmentsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing assessments not found response has a 4xx status code
func (o *PostRoutingAssessmentsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing assessments not found response has a 5xx status code
func (o *PostRoutingAssessmentsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing assessments not found response a status code equal to that given
func (o *PostRoutingAssessmentsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostRoutingAssessmentsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/assessments][%d] postRoutingAssessmentsNotFound  %+v", 404, o.Payload)
}

func (o *PostRoutingAssessmentsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/assessments][%d] postRoutingAssessmentsNotFound  %+v", 404, o.Payload)
}

func (o *PostRoutingAssessmentsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingAssessmentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingAssessmentsRequestTimeout creates a PostRoutingAssessmentsRequestTimeout with default headers values
func NewPostRoutingAssessmentsRequestTimeout() *PostRoutingAssessmentsRequestTimeout {
	return &PostRoutingAssessmentsRequestTimeout{}
}

/*
PostRoutingAssessmentsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostRoutingAssessmentsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing assessments request timeout response has a 2xx status code
func (o *PostRoutingAssessmentsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing assessments request timeout response has a 3xx status code
func (o *PostRoutingAssessmentsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing assessments request timeout response has a 4xx status code
func (o *PostRoutingAssessmentsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing assessments request timeout response has a 5xx status code
func (o *PostRoutingAssessmentsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing assessments request timeout response a status code equal to that given
func (o *PostRoutingAssessmentsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostRoutingAssessmentsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/assessments][%d] postRoutingAssessmentsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostRoutingAssessmentsRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/assessments][%d] postRoutingAssessmentsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostRoutingAssessmentsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingAssessmentsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingAssessmentsRequestEntityTooLarge creates a PostRoutingAssessmentsRequestEntityTooLarge with default headers values
func NewPostRoutingAssessmentsRequestEntityTooLarge() *PostRoutingAssessmentsRequestEntityTooLarge {
	return &PostRoutingAssessmentsRequestEntityTooLarge{}
}

/*
PostRoutingAssessmentsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostRoutingAssessmentsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing assessments request entity too large response has a 2xx status code
func (o *PostRoutingAssessmentsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing assessments request entity too large response has a 3xx status code
func (o *PostRoutingAssessmentsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing assessments request entity too large response has a 4xx status code
func (o *PostRoutingAssessmentsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing assessments request entity too large response has a 5xx status code
func (o *PostRoutingAssessmentsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing assessments request entity too large response a status code equal to that given
func (o *PostRoutingAssessmentsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostRoutingAssessmentsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/assessments][%d] postRoutingAssessmentsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostRoutingAssessmentsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/assessments][%d] postRoutingAssessmentsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostRoutingAssessmentsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingAssessmentsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingAssessmentsUnsupportedMediaType creates a PostRoutingAssessmentsUnsupportedMediaType with default headers values
func NewPostRoutingAssessmentsUnsupportedMediaType() *PostRoutingAssessmentsUnsupportedMediaType {
	return &PostRoutingAssessmentsUnsupportedMediaType{}
}

/*
PostRoutingAssessmentsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostRoutingAssessmentsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing assessments unsupported media type response has a 2xx status code
func (o *PostRoutingAssessmentsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing assessments unsupported media type response has a 3xx status code
func (o *PostRoutingAssessmentsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing assessments unsupported media type response has a 4xx status code
func (o *PostRoutingAssessmentsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing assessments unsupported media type response has a 5xx status code
func (o *PostRoutingAssessmentsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing assessments unsupported media type response a status code equal to that given
func (o *PostRoutingAssessmentsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostRoutingAssessmentsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/assessments][%d] postRoutingAssessmentsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostRoutingAssessmentsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/assessments][%d] postRoutingAssessmentsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostRoutingAssessmentsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingAssessmentsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingAssessmentsTooManyRequests creates a PostRoutingAssessmentsTooManyRequests with default headers values
func NewPostRoutingAssessmentsTooManyRequests() *PostRoutingAssessmentsTooManyRequests {
	return &PostRoutingAssessmentsTooManyRequests{}
}

/*
PostRoutingAssessmentsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostRoutingAssessmentsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing assessments too many requests response has a 2xx status code
func (o *PostRoutingAssessmentsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing assessments too many requests response has a 3xx status code
func (o *PostRoutingAssessmentsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing assessments too many requests response has a 4xx status code
func (o *PostRoutingAssessmentsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing assessments too many requests response has a 5xx status code
func (o *PostRoutingAssessmentsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing assessments too many requests response a status code equal to that given
func (o *PostRoutingAssessmentsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostRoutingAssessmentsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/assessments][%d] postRoutingAssessmentsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostRoutingAssessmentsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/assessments][%d] postRoutingAssessmentsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostRoutingAssessmentsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingAssessmentsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingAssessmentsInternalServerError creates a PostRoutingAssessmentsInternalServerError with default headers values
func NewPostRoutingAssessmentsInternalServerError() *PostRoutingAssessmentsInternalServerError {
	return &PostRoutingAssessmentsInternalServerError{}
}

/*
PostRoutingAssessmentsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostRoutingAssessmentsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing assessments internal server error response has a 2xx status code
func (o *PostRoutingAssessmentsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing assessments internal server error response has a 3xx status code
func (o *PostRoutingAssessmentsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing assessments internal server error response has a 4xx status code
func (o *PostRoutingAssessmentsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing assessments internal server error response has a 5xx status code
func (o *PostRoutingAssessmentsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post routing assessments internal server error response a status code equal to that given
func (o *PostRoutingAssessmentsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostRoutingAssessmentsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/assessments][%d] postRoutingAssessmentsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostRoutingAssessmentsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/assessments][%d] postRoutingAssessmentsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostRoutingAssessmentsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingAssessmentsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingAssessmentsServiceUnavailable creates a PostRoutingAssessmentsServiceUnavailable with default headers values
func NewPostRoutingAssessmentsServiceUnavailable() *PostRoutingAssessmentsServiceUnavailable {
	return &PostRoutingAssessmentsServiceUnavailable{}
}

/*
PostRoutingAssessmentsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostRoutingAssessmentsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing assessments service unavailable response has a 2xx status code
func (o *PostRoutingAssessmentsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing assessments service unavailable response has a 3xx status code
func (o *PostRoutingAssessmentsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing assessments service unavailable response has a 4xx status code
func (o *PostRoutingAssessmentsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing assessments service unavailable response has a 5xx status code
func (o *PostRoutingAssessmentsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post routing assessments service unavailable response a status code equal to that given
func (o *PostRoutingAssessmentsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostRoutingAssessmentsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/assessments][%d] postRoutingAssessmentsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostRoutingAssessmentsServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/assessments][%d] postRoutingAssessmentsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostRoutingAssessmentsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingAssessmentsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingAssessmentsGatewayTimeout creates a PostRoutingAssessmentsGatewayTimeout with default headers values
func NewPostRoutingAssessmentsGatewayTimeout() *PostRoutingAssessmentsGatewayTimeout {
	return &PostRoutingAssessmentsGatewayTimeout{}
}

/*
PostRoutingAssessmentsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostRoutingAssessmentsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing assessments gateway timeout response has a 2xx status code
func (o *PostRoutingAssessmentsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing assessments gateway timeout response has a 3xx status code
func (o *PostRoutingAssessmentsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing assessments gateway timeout response has a 4xx status code
func (o *PostRoutingAssessmentsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing assessments gateway timeout response has a 5xx status code
func (o *PostRoutingAssessmentsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post routing assessments gateway timeout response a status code equal to that given
func (o *PostRoutingAssessmentsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostRoutingAssessmentsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/assessments][%d] postRoutingAssessmentsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostRoutingAssessmentsGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/assessments][%d] postRoutingAssessmentsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostRoutingAssessmentsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingAssessmentsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
