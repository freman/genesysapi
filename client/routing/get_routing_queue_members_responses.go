// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetRoutingQueueMembersReader is a Reader for the GetRoutingQueueMembers structure.
type GetRoutingQueueMembersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRoutingQueueMembersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRoutingQueueMembersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRoutingQueueMembersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRoutingQueueMembersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRoutingQueueMembersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRoutingQueueMembersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetRoutingQueueMembersRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetRoutingQueueMembersRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetRoutingQueueMembersUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetRoutingQueueMembersTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRoutingQueueMembersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetRoutingQueueMembersServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetRoutingQueueMembersGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRoutingQueueMembersOK creates a GetRoutingQueueMembersOK with default headers values
func NewGetRoutingQueueMembersOK() *GetRoutingQueueMembersOK {
	return &GetRoutingQueueMembersOK{}
}

/*
GetRoutingQueueMembersOK describes a response with status code 200, with default header values.

successful operation
*/
type GetRoutingQueueMembersOK struct {
	Payload *models.QueueMemberEntityListing
}

// IsSuccess returns true when this get routing queue members o k response has a 2xx status code
func (o *GetRoutingQueueMembersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get routing queue members o k response has a 3xx status code
func (o *GetRoutingQueueMembersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing queue members o k response has a 4xx status code
func (o *GetRoutingQueueMembersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing queue members o k response has a 5xx status code
func (o *GetRoutingQueueMembersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing queue members o k response a status code equal to that given
func (o *GetRoutingQueueMembersOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetRoutingQueueMembersOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/members][%d] getRoutingQueueMembersOK  %+v", 200, o.Payload)
}

func (o *GetRoutingQueueMembersOK) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/members][%d] getRoutingQueueMembersOK  %+v", 200, o.Payload)
}

func (o *GetRoutingQueueMembersOK) GetPayload() *models.QueueMemberEntityListing {
	return o.Payload
}

func (o *GetRoutingQueueMembersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.QueueMemberEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueMembersBadRequest creates a GetRoutingQueueMembersBadRequest with default headers values
func NewGetRoutingQueueMembersBadRequest() *GetRoutingQueueMembersBadRequest {
	return &GetRoutingQueueMembersBadRequest{}
}

/*
GetRoutingQueueMembersBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetRoutingQueueMembersBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing queue members bad request response has a 2xx status code
func (o *GetRoutingQueueMembersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing queue members bad request response has a 3xx status code
func (o *GetRoutingQueueMembersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing queue members bad request response has a 4xx status code
func (o *GetRoutingQueueMembersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing queue members bad request response has a 5xx status code
func (o *GetRoutingQueueMembersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing queue members bad request response a status code equal to that given
func (o *GetRoutingQueueMembersBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetRoutingQueueMembersBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/members][%d] getRoutingQueueMembersBadRequest  %+v", 400, o.Payload)
}

func (o *GetRoutingQueueMembersBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/members][%d] getRoutingQueueMembersBadRequest  %+v", 400, o.Payload)
}

func (o *GetRoutingQueueMembersBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueMembersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueMembersUnauthorized creates a GetRoutingQueueMembersUnauthorized with default headers values
func NewGetRoutingQueueMembersUnauthorized() *GetRoutingQueueMembersUnauthorized {
	return &GetRoutingQueueMembersUnauthorized{}
}

/*
GetRoutingQueueMembersUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetRoutingQueueMembersUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing queue members unauthorized response has a 2xx status code
func (o *GetRoutingQueueMembersUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing queue members unauthorized response has a 3xx status code
func (o *GetRoutingQueueMembersUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing queue members unauthorized response has a 4xx status code
func (o *GetRoutingQueueMembersUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing queue members unauthorized response has a 5xx status code
func (o *GetRoutingQueueMembersUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing queue members unauthorized response a status code equal to that given
func (o *GetRoutingQueueMembersUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetRoutingQueueMembersUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/members][%d] getRoutingQueueMembersUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRoutingQueueMembersUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/members][%d] getRoutingQueueMembersUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRoutingQueueMembersUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueMembersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueMembersForbidden creates a GetRoutingQueueMembersForbidden with default headers values
func NewGetRoutingQueueMembersForbidden() *GetRoutingQueueMembersForbidden {
	return &GetRoutingQueueMembersForbidden{}
}

/*
GetRoutingQueueMembersForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetRoutingQueueMembersForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing queue members forbidden response has a 2xx status code
func (o *GetRoutingQueueMembersForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing queue members forbidden response has a 3xx status code
func (o *GetRoutingQueueMembersForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing queue members forbidden response has a 4xx status code
func (o *GetRoutingQueueMembersForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing queue members forbidden response has a 5xx status code
func (o *GetRoutingQueueMembersForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing queue members forbidden response a status code equal to that given
func (o *GetRoutingQueueMembersForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetRoutingQueueMembersForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/members][%d] getRoutingQueueMembersForbidden  %+v", 403, o.Payload)
}

func (o *GetRoutingQueueMembersForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/members][%d] getRoutingQueueMembersForbidden  %+v", 403, o.Payload)
}

func (o *GetRoutingQueueMembersForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueMembersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueMembersNotFound creates a GetRoutingQueueMembersNotFound with default headers values
func NewGetRoutingQueueMembersNotFound() *GetRoutingQueueMembersNotFound {
	return &GetRoutingQueueMembersNotFound{}
}

/*
GetRoutingQueueMembersNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetRoutingQueueMembersNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing queue members not found response has a 2xx status code
func (o *GetRoutingQueueMembersNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing queue members not found response has a 3xx status code
func (o *GetRoutingQueueMembersNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing queue members not found response has a 4xx status code
func (o *GetRoutingQueueMembersNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing queue members not found response has a 5xx status code
func (o *GetRoutingQueueMembersNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing queue members not found response a status code equal to that given
func (o *GetRoutingQueueMembersNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetRoutingQueueMembersNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/members][%d] getRoutingQueueMembersNotFound  %+v", 404, o.Payload)
}

func (o *GetRoutingQueueMembersNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/members][%d] getRoutingQueueMembersNotFound  %+v", 404, o.Payload)
}

func (o *GetRoutingQueueMembersNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueMembersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueMembersRequestTimeout creates a GetRoutingQueueMembersRequestTimeout with default headers values
func NewGetRoutingQueueMembersRequestTimeout() *GetRoutingQueueMembersRequestTimeout {
	return &GetRoutingQueueMembersRequestTimeout{}
}

/*
GetRoutingQueueMembersRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetRoutingQueueMembersRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing queue members request timeout response has a 2xx status code
func (o *GetRoutingQueueMembersRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing queue members request timeout response has a 3xx status code
func (o *GetRoutingQueueMembersRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing queue members request timeout response has a 4xx status code
func (o *GetRoutingQueueMembersRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing queue members request timeout response has a 5xx status code
func (o *GetRoutingQueueMembersRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing queue members request timeout response a status code equal to that given
func (o *GetRoutingQueueMembersRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetRoutingQueueMembersRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/members][%d] getRoutingQueueMembersRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetRoutingQueueMembersRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/members][%d] getRoutingQueueMembersRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetRoutingQueueMembersRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueMembersRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueMembersRequestEntityTooLarge creates a GetRoutingQueueMembersRequestEntityTooLarge with default headers values
func NewGetRoutingQueueMembersRequestEntityTooLarge() *GetRoutingQueueMembersRequestEntityTooLarge {
	return &GetRoutingQueueMembersRequestEntityTooLarge{}
}

/*
GetRoutingQueueMembersRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetRoutingQueueMembersRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing queue members request entity too large response has a 2xx status code
func (o *GetRoutingQueueMembersRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing queue members request entity too large response has a 3xx status code
func (o *GetRoutingQueueMembersRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing queue members request entity too large response has a 4xx status code
func (o *GetRoutingQueueMembersRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing queue members request entity too large response has a 5xx status code
func (o *GetRoutingQueueMembersRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing queue members request entity too large response a status code equal to that given
func (o *GetRoutingQueueMembersRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetRoutingQueueMembersRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/members][%d] getRoutingQueueMembersRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetRoutingQueueMembersRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/members][%d] getRoutingQueueMembersRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetRoutingQueueMembersRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueMembersRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueMembersUnsupportedMediaType creates a GetRoutingQueueMembersUnsupportedMediaType with default headers values
func NewGetRoutingQueueMembersUnsupportedMediaType() *GetRoutingQueueMembersUnsupportedMediaType {
	return &GetRoutingQueueMembersUnsupportedMediaType{}
}

/*
GetRoutingQueueMembersUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetRoutingQueueMembersUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing queue members unsupported media type response has a 2xx status code
func (o *GetRoutingQueueMembersUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing queue members unsupported media type response has a 3xx status code
func (o *GetRoutingQueueMembersUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing queue members unsupported media type response has a 4xx status code
func (o *GetRoutingQueueMembersUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing queue members unsupported media type response has a 5xx status code
func (o *GetRoutingQueueMembersUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing queue members unsupported media type response a status code equal to that given
func (o *GetRoutingQueueMembersUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetRoutingQueueMembersUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/members][%d] getRoutingQueueMembersUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetRoutingQueueMembersUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/members][%d] getRoutingQueueMembersUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetRoutingQueueMembersUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueMembersUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueMembersTooManyRequests creates a GetRoutingQueueMembersTooManyRequests with default headers values
func NewGetRoutingQueueMembersTooManyRequests() *GetRoutingQueueMembersTooManyRequests {
	return &GetRoutingQueueMembersTooManyRequests{}
}

/*
GetRoutingQueueMembersTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetRoutingQueueMembersTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing queue members too many requests response has a 2xx status code
func (o *GetRoutingQueueMembersTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing queue members too many requests response has a 3xx status code
func (o *GetRoutingQueueMembersTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing queue members too many requests response has a 4xx status code
func (o *GetRoutingQueueMembersTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing queue members too many requests response has a 5xx status code
func (o *GetRoutingQueueMembersTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing queue members too many requests response a status code equal to that given
func (o *GetRoutingQueueMembersTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetRoutingQueueMembersTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/members][%d] getRoutingQueueMembersTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRoutingQueueMembersTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/members][%d] getRoutingQueueMembersTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRoutingQueueMembersTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueMembersTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueMembersInternalServerError creates a GetRoutingQueueMembersInternalServerError with default headers values
func NewGetRoutingQueueMembersInternalServerError() *GetRoutingQueueMembersInternalServerError {
	return &GetRoutingQueueMembersInternalServerError{}
}

/*
GetRoutingQueueMembersInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetRoutingQueueMembersInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing queue members internal server error response has a 2xx status code
func (o *GetRoutingQueueMembersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing queue members internal server error response has a 3xx status code
func (o *GetRoutingQueueMembersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing queue members internal server error response has a 4xx status code
func (o *GetRoutingQueueMembersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing queue members internal server error response has a 5xx status code
func (o *GetRoutingQueueMembersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get routing queue members internal server error response a status code equal to that given
func (o *GetRoutingQueueMembersInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetRoutingQueueMembersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/members][%d] getRoutingQueueMembersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRoutingQueueMembersInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/members][%d] getRoutingQueueMembersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRoutingQueueMembersInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueMembersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueMembersServiceUnavailable creates a GetRoutingQueueMembersServiceUnavailable with default headers values
func NewGetRoutingQueueMembersServiceUnavailable() *GetRoutingQueueMembersServiceUnavailable {
	return &GetRoutingQueueMembersServiceUnavailable{}
}

/*
GetRoutingQueueMembersServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetRoutingQueueMembersServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing queue members service unavailable response has a 2xx status code
func (o *GetRoutingQueueMembersServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing queue members service unavailable response has a 3xx status code
func (o *GetRoutingQueueMembersServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing queue members service unavailable response has a 4xx status code
func (o *GetRoutingQueueMembersServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing queue members service unavailable response has a 5xx status code
func (o *GetRoutingQueueMembersServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get routing queue members service unavailable response a status code equal to that given
func (o *GetRoutingQueueMembersServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetRoutingQueueMembersServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/members][%d] getRoutingQueueMembersServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetRoutingQueueMembersServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/members][%d] getRoutingQueueMembersServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetRoutingQueueMembersServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueMembersServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueMembersGatewayTimeout creates a GetRoutingQueueMembersGatewayTimeout with default headers values
func NewGetRoutingQueueMembersGatewayTimeout() *GetRoutingQueueMembersGatewayTimeout {
	return &GetRoutingQueueMembersGatewayTimeout{}
}

/*
GetRoutingQueueMembersGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetRoutingQueueMembersGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing queue members gateway timeout response has a 2xx status code
func (o *GetRoutingQueueMembersGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing queue members gateway timeout response has a 3xx status code
func (o *GetRoutingQueueMembersGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing queue members gateway timeout response has a 4xx status code
func (o *GetRoutingQueueMembersGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing queue members gateway timeout response has a 5xx status code
func (o *GetRoutingQueueMembersGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get routing queue members gateway timeout response a status code equal to that given
func (o *GetRoutingQueueMembersGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetRoutingQueueMembersGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/members][%d] getRoutingQueueMembersGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetRoutingQueueMembersGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/members][%d] getRoutingQueueMembersGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetRoutingQueueMembersGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueMembersGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
