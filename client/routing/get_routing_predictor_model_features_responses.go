// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetRoutingPredictorModelFeaturesReader is a Reader for the GetRoutingPredictorModelFeatures structure.
type GetRoutingPredictorModelFeaturesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRoutingPredictorModelFeaturesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRoutingPredictorModelFeaturesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRoutingPredictorModelFeaturesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRoutingPredictorModelFeaturesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRoutingPredictorModelFeaturesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRoutingPredictorModelFeaturesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetRoutingPredictorModelFeaturesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetRoutingPredictorModelFeaturesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetRoutingPredictorModelFeaturesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetRoutingPredictorModelFeaturesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRoutingPredictorModelFeaturesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetRoutingPredictorModelFeaturesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetRoutingPredictorModelFeaturesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRoutingPredictorModelFeaturesOK creates a GetRoutingPredictorModelFeaturesOK with default headers values
func NewGetRoutingPredictorModelFeaturesOK() *GetRoutingPredictorModelFeaturesOK {
	return &GetRoutingPredictorModelFeaturesOK{}
}

/*
GetRoutingPredictorModelFeaturesOK describes a response with status code 200, with default header values.

successful operation
*/
type GetRoutingPredictorModelFeaturesOK struct {
	Payload *models.PredictorModelFeatureListing
}

// IsSuccess returns true when this get routing predictor model features o k response has a 2xx status code
func (o *GetRoutingPredictorModelFeaturesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get routing predictor model features o k response has a 3xx status code
func (o *GetRoutingPredictorModelFeaturesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing predictor model features o k response has a 4xx status code
func (o *GetRoutingPredictorModelFeaturesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing predictor model features o k response has a 5xx status code
func (o *GetRoutingPredictorModelFeaturesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing predictor model features o k response a status code equal to that given
func (o *GetRoutingPredictorModelFeaturesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetRoutingPredictorModelFeaturesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors/{predictorId}/models/{modelId}/features][%d] getRoutingPredictorModelFeaturesOK  %+v", 200, o.Payload)
}

func (o *GetRoutingPredictorModelFeaturesOK) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors/{predictorId}/models/{modelId}/features][%d] getRoutingPredictorModelFeaturesOK  %+v", 200, o.Payload)
}

func (o *GetRoutingPredictorModelFeaturesOK) GetPayload() *models.PredictorModelFeatureListing {
	return o.Payload
}

func (o *GetRoutingPredictorModelFeaturesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PredictorModelFeatureListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingPredictorModelFeaturesBadRequest creates a GetRoutingPredictorModelFeaturesBadRequest with default headers values
func NewGetRoutingPredictorModelFeaturesBadRequest() *GetRoutingPredictorModelFeaturesBadRequest {
	return &GetRoutingPredictorModelFeaturesBadRequest{}
}

/*
GetRoutingPredictorModelFeaturesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetRoutingPredictorModelFeaturesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing predictor model features bad request response has a 2xx status code
func (o *GetRoutingPredictorModelFeaturesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing predictor model features bad request response has a 3xx status code
func (o *GetRoutingPredictorModelFeaturesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing predictor model features bad request response has a 4xx status code
func (o *GetRoutingPredictorModelFeaturesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing predictor model features bad request response has a 5xx status code
func (o *GetRoutingPredictorModelFeaturesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing predictor model features bad request response a status code equal to that given
func (o *GetRoutingPredictorModelFeaturesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetRoutingPredictorModelFeaturesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors/{predictorId}/models/{modelId}/features][%d] getRoutingPredictorModelFeaturesBadRequest  %+v", 400, o.Payload)
}

func (o *GetRoutingPredictorModelFeaturesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors/{predictorId}/models/{modelId}/features][%d] getRoutingPredictorModelFeaturesBadRequest  %+v", 400, o.Payload)
}

func (o *GetRoutingPredictorModelFeaturesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingPredictorModelFeaturesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingPredictorModelFeaturesUnauthorized creates a GetRoutingPredictorModelFeaturesUnauthorized with default headers values
func NewGetRoutingPredictorModelFeaturesUnauthorized() *GetRoutingPredictorModelFeaturesUnauthorized {
	return &GetRoutingPredictorModelFeaturesUnauthorized{}
}

/*
GetRoutingPredictorModelFeaturesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetRoutingPredictorModelFeaturesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing predictor model features unauthorized response has a 2xx status code
func (o *GetRoutingPredictorModelFeaturesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing predictor model features unauthorized response has a 3xx status code
func (o *GetRoutingPredictorModelFeaturesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing predictor model features unauthorized response has a 4xx status code
func (o *GetRoutingPredictorModelFeaturesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing predictor model features unauthorized response has a 5xx status code
func (o *GetRoutingPredictorModelFeaturesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing predictor model features unauthorized response a status code equal to that given
func (o *GetRoutingPredictorModelFeaturesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetRoutingPredictorModelFeaturesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors/{predictorId}/models/{modelId}/features][%d] getRoutingPredictorModelFeaturesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRoutingPredictorModelFeaturesUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors/{predictorId}/models/{modelId}/features][%d] getRoutingPredictorModelFeaturesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRoutingPredictorModelFeaturesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingPredictorModelFeaturesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingPredictorModelFeaturesForbidden creates a GetRoutingPredictorModelFeaturesForbidden with default headers values
func NewGetRoutingPredictorModelFeaturesForbidden() *GetRoutingPredictorModelFeaturesForbidden {
	return &GetRoutingPredictorModelFeaturesForbidden{}
}

/*
GetRoutingPredictorModelFeaturesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetRoutingPredictorModelFeaturesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing predictor model features forbidden response has a 2xx status code
func (o *GetRoutingPredictorModelFeaturesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing predictor model features forbidden response has a 3xx status code
func (o *GetRoutingPredictorModelFeaturesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing predictor model features forbidden response has a 4xx status code
func (o *GetRoutingPredictorModelFeaturesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing predictor model features forbidden response has a 5xx status code
func (o *GetRoutingPredictorModelFeaturesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing predictor model features forbidden response a status code equal to that given
func (o *GetRoutingPredictorModelFeaturesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetRoutingPredictorModelFeaturesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors/{predictorId}/models/{modelId}/features][%d] getRoutingPredictorModelFeaturesForbidden  %+v", 403, o.Payload)
}

func (o *GetRoutingPredictorModelFeaturesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors/{predictorId}/models/{modelId}/features][%d] getRoutingPredictorModelFeaturesForbidden  %+v", 403, o.Payload)
}

func (o *GetRoutingPredictorModelFeaturesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingPredictorModelFeaturesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingPredictorModelFeaturesNotFound creates a GetRoutingPredictorModelFeaturesNotFound with default headers values
func NewGetRoutingPredictorModelFeaturesNotFound() *GetRoutingPredictorModelFeaturesNotFound {
	return &GetRoutingPredictorModelFeaturesNotFound{}
}

/*
GetRoutingPredictorModelFeaturesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetRoutingPredictorModelFeaturesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing predictor model features not found response has a 2xx status code
func (o *GetRoutingPredictorModelFeaturesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing predictor model features not found response has a 3xx status code
func (o *GetRoutingPredictorModelFeaturesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing predictor model features not found response has a 4xx status code
func (o *GetRoutingPredictorModelFeaturesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing predictor model features not found response has a 5xx status code
func (o *GetRoutingPredictorModelFeaturesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing predictor model features not found response a status code equal to that given
func (o *GetRoutingPredictorModelFeaturesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetRoutingPredictorModelFeaturesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors/{predictorId}/models/{modelId}/features][%d] getRoutingPredictorModelFeaturesNotFound  %+v", 404, o.Payload)
}

func (o *GetRoutingPredictorModelFeaturesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors/{predictorId}/models/{modelId}/features][%d] getRoutingPredictorModelFeaturesNotFound  %+v", 404, o.Payload)
}

func (o *GetRoutingPredictorModelFeaturesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingPredictorModelFeaturesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingPredictorModelFeaturesRequestTimeout creates a GetRoutingPredictorModelFeaturesRequestTimeout with default headers values
func NewGetRoutingPredictorModelFeaturesRequestTimeout() *GetRoutingPredictorModelFeaturesRequestTimeout {
	return &GetRoutingPredictorModelFeaturesRequestTimeout{}
}

/*
GetRoutingPredictorModelFeaturesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetRoutingPredictorModelFeaturesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing predictor model features request timeout response has a 2xx status code
func (o *GetRoutingPredictorModelFeaturesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing predictor model features request timeout response has a 3xx status code
func (o *GetRoutingPredictorModelFeaturesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing predictor model features request timeout response has a 4xx status code
func (o *GetRoutingPredictorModelFeaturesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing predictor model features request timeout response has a 5xx status code
func (o *GetRoutingPredictorModelFeaturesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing predictor model features request timeout response a status code equal to that given
func (o *GetRoutingPredictorModelFeaturesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetRoutingPredictorModelFeaturesRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors/{predictorId}/models/{modelId}/features][%d] getRoutingPredictorModelFeaturesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetRoutingPredictorModelFeaturesRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors/{predictorId}/models/{modelId}/features][%d] getRoutingPredictorModelFeaturesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetRoutingPredictorModelFeaturesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingPredictorModelFeaturesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingPredictorModelFeaturesRequestEntityTooLarge creates a GetRoutingPredictorModelFeaturesRequestEntityTooLarge with default headers values
func NewGetRoutingPredictorModelFeaturesRequestEntityTooLarge() *GetRoutingPredictorModelFeaturesRequestEntityTooLarge {
	return &GetRoutingPredictorModelFeaturesRequestEntityTooLarge{}
}

/*
GetRoutingPredictorModelFeaturesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetRoutingPredictorModelFeaturesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing predictor model features request entity too large response has a 2xx status code
func (o *GetRoutingPredictorModelFeaturesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing predictor model features request entity too large response has a 3xx status code
func (o *GetRoutingPredictorModelFeaturesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing predictor model features request entity too large response has a 4xx status code
func (o *GetRoutingPredictorModelFeaturesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing predictor model features request entity too large response has a 5xx status code
func (o *GetRoutingPredictorModelFeaturesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing predictor model features request entity too large response a status code equal to that given
func (o *GetRoutingPredictorModelFeaturesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetRoutingPredictorModelFeaturesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors/{predictorId}/models/{modelId}/features][%d] getRoutingPredictorModelFeaturesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetRoutingPredictorModelFeaturesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors/{predictorId}/models/{modelId}/features][%d] getRoutingPredictorModelFeaturesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetRoutingPredictorModelFeaturesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingPredictorModelFeaturesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingPredictorModelFeaturesUnsupportedMediaType creates a GetRoutingPredictorModelFeaturesUnsupportedMediaType with default headers values
func NewGetRoutingPredictorModelFeaturesUnsupportedMediaType() *GetRoutingPredictorModelFeaturesUnsupportedMediaType {
	return &GetRoutingPredictorModelFeaturesUnsupportedMediaType{}
}

/*
GetRoutingPredictorModelFeaturesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetRoutingPredictorModelFeaturesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing predictor model features unsupported media type response has a 2xx status code
func (o *GetRoutingPredictorModelFeaturesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing predictor model features unsupported media type response has a 3xx status code
func (o *GetRoutingPredictorModelFeaturesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing predictor model features unsupported media type response has a 4xx status code
func (o *GetRoutingPredictorModelFeaturesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing predictor model features unsupported media type response has a 5xx status code
func (o *GetRoutingPredictorModelFeaturesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing predictor model features unsupported media type response a status code equal to that given
func (o *GetRoutingPredictorModelFeaturesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetRoutingPredictorModelFeaturesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors/{predictorId}/models/{modelId}/features][%d] getRoutingPredictorModelFeaturesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetRoutingPredictorModelFeaturesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors/{predictorId}/models/{modelId}/features][%d] getRoutingPredictorModelFeaturesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetRoutingPredictorModelFeaturesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingPredictorModelFeaturesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingPredictorModelFeaturesTooManyRequests creates a GetRoutingPredictorModelFeaturesTooManyRequests with default headers values
func NewGetRoutingPredictorModelFeaturesTooManyRequests() *GetRoutingPredictorModelFeaturesTooManyRequests {
	return &GetRoutingPredictorModelFeaturesTooManyRequests{}
}

/*
GetRoutingPredictorModelFeaturesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetRoutingPredictorModelFeaturesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing predictor model features too many requests response has a 2xx status code
func (o *GetRoutingPredictorModelFeaturesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing predictor model features too many requests response has a 3xx status code
func (o *GetRoutingPredictorModelFeaturesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing predictor model features too many requests response has a 4xx status code
func (o *GetRoutingPredictorModelFeaturesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing predictor model features too many requests response has a 5xx status code
func (o *GetRoutingPredictorModelFeaturesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing predictor model features too many requests response a status code equal to that given
func (o *GetRoutingPredictorModelFeaturesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetRoutingPredictorModelFeaturesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors/{predictorId}/models/{modelId}/features][%d] getRoutingPredictorModelFeaturesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRoutingPredictorModelFeaturesTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors/{predictorId}/models/{modelId}/features][%d] getRoutingPredictorModelFeaturesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRoutingPredictorModelFeaturesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingPredictorModelFeaturesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingPredictorModelFeaturesInternalServerError creates a GetRoutingPredictorModelFeaturesInternalServerError with default headers values
func NewGetRoutingPredictorModelFeaturesInternalServerError() *GetRoutingPredictorModelFeaturesInternalServerError {
	return &GetRoutingPredictorModelFeaturesInternalServerError{}
}

/*
GetRoutingPredictorModelFeaturesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetRoutingPredictorModelFeaturesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing predictor model features internal server error response has a 2xx status code
func (o *GetRoutingPredictorModelFeaturesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing predictor model features internal server error response has a 3xx status code
func (o *GetRoutingPredictorModelFeaturesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing predictor model features internal server error response has a 4xx status code
func (o *GetRoutingPredictorModelFeaturesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing predictor model features internal server error response has a 5xx status code
func (o *GetRoutingPredictorModelFeaturesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get routing predictor model features internal server error response a status code equal to that given
func (o *GetRoutingPredictorModelFeaturesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetRoutingPredictorModelFeaturesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors/{predictorId}/models/{modelId}/features][%d] getRoutingPredictorModelFeaturesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRoutingPredictorModelFeaturesInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors/{predictorId}/models/{modelId}/features][%d] getRoutingPredictorModelFeaturesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRoutingPredictorModelFeaturesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingPredictorModelFeaturesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingPredictorModelFeaturesServiceUnavailable creates a GetRoutingPredictorModelFeaturesServiceUnavailable with default headers values
func NewGetRoutingPredictorModelFeaturesServiceUnavailable() *GetRoutingPredictorModelFeaturesServiceUnavailable {
	return &GetRoutingPredictorModelFeaturesServiceUnavailable{}
}

/*
GetRoutingPredictorModelFeaturesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetRoutingPredictorModelFeaturesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing predictor model features service unavailable response has a 2xx status code
func (o *GetRoutingPredictorModelFeaturesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing predictor model features service unavailable response has a 3xx status code
func (o *GetRoutingPredictorModelFeaturesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing predictor model features service unavailable response has a 4xx status code
func (o *GetRoutingPredictorModelFeaturesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing predictor model features service unavailable response has a 5xx status code
func (o *GetRoutingPredictorModelFeaturesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get routing predictor model features service unavailable response a status code equal to that given
func (o *GetRoutingPredictorModelFeaturesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetRoutingPredictorModelFeaturesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors/{predictorId}/models/{modelId}/features][%d] getRoutingPredictorModelFeaturesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetRoutingPredictorModelFeaturesServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors/{predictorId}/models/{modelId}/features][%d] getRoutingPredictorModelFeaturesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetRoutingPredictorModelFeaturesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingPredictorModelFeaturesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingPredictorModelFeaturesGatewayTimeout creates a GetRoutingPredictorModelFeaturesGatewayTimeout with default headers values
func NewGetRoutingPredictorModelFeaturesGatewayTimeout() *GetRoutingPredictorModelFeaturesGatewayTimeout {
	return &GetRoutingPredictorModelFeaturesGatewayTimeout{}
}

/*
GetRoutingPredictorModelFeaturesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetRoutingPredictorModelFeaturesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing predictor model features gateway timeout response has a 2xx status code
func (o *GetRoutingPredictorModelFeaturesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing predictor model features gateway timeout response has a 3xx status code
func (o *GetRoutingPredictorModelFeaturesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing predictor model features gateway timeout response has a 4xx status code
func (o *GetRoutingPredictorModelFeaturesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing predictor model features gateway timeout response has a 5xx status code
func (o *GetRoutingPredictorModelFeaturesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get routing predictor model features gateway timeout response a status code equal to that given
func (o *GetRoutingPredictorModelFeaturesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetRoutingPredictorModelFeaturesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors/{predictorId}/models/{modelId}/features][%d] getRoutingPredictorModelFeaturesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetRoutingPredictorModelFeaturesGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/predictors/{predictorId}/models/{modelId}/features][%d] getRoutingPredictorModelFeaturesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetRoutingPredictorModelFeaturesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingPredictorModelFeaturesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
