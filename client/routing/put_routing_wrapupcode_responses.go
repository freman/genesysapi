// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutRoutingWrapupcodeReader is a Reader for the PutRoutingWrapupcode structure.
type PutRoutingWrapupcodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRoutingWrapupcodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutRoutingWrapupcodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutRoutingWrapupcodeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutRoutingWrapupcodeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutRoutingWrapupcodeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutRoutingWrapupcodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutRoutingWrapupcodeRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutRoutingWrapupcodeRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutRoutingWrapupcodeUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutRoutingWrapupcodeTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutRoutingWrapupcodeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutRoutingWrapupcodeServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutRoutingWrapupcodeGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutRoutingWrapupcodeOK creates a PutRoutingWrapupcodeOK with default headers values
func NewPutRoutingWrapupcodeOK() *PutRoutingWrapupcodeOK {
	return &PutRoutingWrapupcodeOK{}
}

/*PutRoutingWrapupcodeOK handles this case with default header values.

successful operation
*/
type PutRoutingWrapupcodeOK struct {
	Payload *models.WrapupCode
}

func (o *PutRoutingWrapupcodeOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/wrapupcodes/{codeId}][%d] putRoutingWrapupcodeOK  %+v", 200, o.Payload)
}

func (o *PutRoutingWrapupcodeOK) GetPayload() *models.WrapupCode {
	return o.Payload
}

func (o *PutRoutingWrapupcodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WrapupCode)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingWrapupcodeBadRequest creates a PutRoutingWrapupcodeBadRequest with default headers values
func NewPutRoutingWrapupcodeBadRequest() *PutRoutingWrapupcodeBadRequest {
	return &PutRoutingWrapupcodeBadRequest{}
}

/*PutRoutingWrapupcodeBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutRoutingWrapupcodeBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PutRoutingWrapupcodeBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/wrapupcodes/{codeId}][%d] putRoutingWrapupcodeBadRequest  %+v", 400, o.Payload)
}

func (o *PutRoutingWrapupcodeBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingWrapupcodeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingWrapupcodeUnauthorized creates a PutRoutingWrapupcodeUnauthorized with default headers values
func NewPutRoutingWrapupcodeUnauthorized() *PutRoutingWrapupcodeUnauthorized {
	return &PutRoutingWrapupcodeUnauthorized{}
}

/*PutRoutingWrapupcodeUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PutRoutingWrapupcodeUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PutRoutingWrapupcodeUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/wrapupcodes/{codeId}][%d] putRoutingWrapupcodeUnauthorized  %+v", 401, o.Payload)
}

func (o *PutRoutingWrapupcodeUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingWrapupcodeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingWrapupcodeForbidden creates a PutRoutingWrapupcodeForbidden with default headers values
func NewPutRoutingWrapupcodeForbidden() *PutRoutingWrapupcodeForbidden {
	return &PutRoutingWrapupcodeForbidden{}
}

/*PutRoutingWrapupcodeForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PutRoutingWrapupcodeForbidden struct {
	Payload *models.ErrorBody
}

func (o *PutRoutingWrapupcodeForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/wrapupcodes/{codeId}][%d] putRoutingWrapupcodeForbidden  %+v", 403, o.Payload)
}

func (o *PutRoutingWrapupcodeForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingWrapupcodeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingWrapupcodeNotFound creates a PutRoutingWrapupcodeNotFound with default headers values
func NewPutRoutingWrapupcodeNotFound() *PutRoutingWrapupcodeNotFound {
	return &PutRoutingWrapupcodeNotFound{}
}

/*PutRoutingWrapupcodeNotFound handles this case with default header values.

The requested resource was not found.
*/
type PutRoutingWrapupcodeNotFound struct {
	Payload *models.ErrorBody
}

func (o *PutRoutingWrapupcodeNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/wrapupcodes/{codeId}][%d] putRoutingWrapupcodeNotFound  %+v", 404, o.Payload)
}

func (o *PutRoutingWrapupcodeNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingWrapupcodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingWrapupcodeRequestTimeout creates a PutRoutingWrapupcodeRequestTimeout with default headers values
func NewPutRoutingWrapupcodeRequestTimeout() *PutRoutingWrapupcodeRequestTimeout {
	return &PutRoutingWrapupcodeRequestTimeout{}
}

/*PutRoutingWrapupcodeRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutRoutingWrapupcodeRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutRoutingWrapupcodeRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/wrapupcodes/{codeId}][%d] putRoutingWrapupcodeRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutRoutingWrapupcodeRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingWrapupcodeRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingWrapupcodeRequestEntityTooLarge creates a PutRoutingWrapupcodeRequestEntityTooLarge with default headers values
func NewPutRoutingWrapupcodeRequestEntityTooLarge() *PutRoutingWrapupcodeRequestEntityTooLarge {
	return &PutRoutingWrapupcodeRequestEntityTooLarge{}
}

/*PutRoutingWrapupcodeRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type PutRoutingWrapupcodeRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PutRoutingWrapupcodeRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/wrapupcodes/{codeId}][%d] putRoutingWrapupcodeRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutRoutingWrapupcodeRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingWrapupcodeRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingWrapupcodeUnsupportedMediaType creates a PutRoutingWrapupcodeUnsupportedMediaType with default headers values
func NewPutRoutingWrapupcodeUnsupportedMediaType() *PutRoutingWrapupcodeUnsupportedMediaType {
	return &PutRoutingWrapupcodeUnsupportedMediaType{}
}

/*PutRoutingWrapupcodeUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutRoutingWrapupcodeUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PutRoutingWrapupcodeUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/wrapupcodes/{codeId}][%d] putRoutingWrapupcodeUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutRoutingWrapupcodeUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingWrapupcodeUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingWrapupcodeTooManyRequests creates a PutRoutingWrapupcodeTooManyRequests with default headers values
func NewPutRoutingWrapupcodeTooManyRequests() *PutRoutingWrapupcodeTooManyRequests {
	return &PutRoutingWrapupcodeTooManyRequests{}
}

/*PutRoutingWrapupcodeTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutRoutingWrapupcodeTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PutRoutingWrapupcodeTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/wrapupcodes/{codeId}][%d] putRoutingWrapupcodeTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutRoutingWrapupcodeTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingWrapupcodeTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingWrapupcodeInternalServerError creates a PutRoutingWrapupcodeInternalServerError with default headers values
func NewPutRoutingWrapupcodeInternalServerError() *PutRoutingWrapupcodeInternalServerError {
	return &PutRoutingWrapupcodeInternalServerError{}
}

/*PutRoutingWrapupcodeInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutRoutingWrapupcodeInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PutRoutingWrapupcodeInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/wrapupcodes/{codeId}][%d] putRoutingWrapupcodeInternalServerError  %+v", 500, o.Payload)
}

func (o *PutRoutingWrapupcodeInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingWrapupcodeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingWrapupcodeServiceUnavailable creates a PutRoutingWrapupcodeServiceUnavailable with default headers values
func NewPutRoutingWrapupcodeServiceUnavailable() *PutRoutingWrapupcodeServiceUnavailable {
	return &PutRoutingWrapupcodeServiceUnavailable{}
}

/*PutRoutingWrapupcodeServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutRoutingWrapupcodeServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PutRoutingWrapupcodeServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/wrapupcodes/{codeId}][%d] putRoutingWrapupcodeServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutRoutingWrapupcodeServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingWrapupcodeServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingWrapupcodeGatewayTimeout creates a PutRoutingWrapupcodeGatewayTimeout with default headers values
func NewPutRoutingWrapupcodeGatewayTimeout() *PutRoutingWrapupcodeGatewayTimeout {
	return &PutRoutingWrapupcodeGatewayTimeout{}
}

/*PutRoutingWrapupcodeGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PutRoutingWrapupcodeGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutRoutingWrapupcodeGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/wrapupcodes/{codeId}][%d] putRoutingWrapupcodeGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutRoutingWrapupcodeGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingWrapupcodeGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
