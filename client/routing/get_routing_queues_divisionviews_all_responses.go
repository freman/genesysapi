// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetRoutingQueuesDivisionviewsAllReader is a Reader for the GetRoutingQueuesDivisionviewsAll structure.
type GetRoutingQueuesDivisionviewsAllReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRoutingQueuesDivisionviewsAllReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRoutingQueuesDivisionviewsAllOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRoutingQueuesDivisionviewsAllBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRoutingQueuesDivisionviewsAllUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRoutingQueuesDivisionviewsAllForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRoutingQueuesDivisionviewsAllNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetRoutingQueuesDivisionviewsAllRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetRoutingQueuesDivisionviewsAllRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetRoutingQueuesDivisionviewsAllUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetRoutingQueuesDivisionviewsAllTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRoutingQueuesDivisionviewsAllInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetRoutingQueuesDivisionviewsAllServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetRoutingQueuesDivisionviewsAllGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRoutingQueuesDivisionviewsAllOK creates a GetRoutingQueuesDivisionviewsAllOK with default headers values
func NewGetRoutingQueuesDivisionviewsAllOK() *GetRoutingQueuesDivisionviewsAllOK {
	return &GetRoutingQueuesDivisionviewsAllOK{}
}

/*GetRoutingQueuesDivisionviewsAllOK handles this case with default header values.

successful operation
*/
type GetRoutingQueuesDivisionviewsAllOK struct {
	Payload *models.QueueEntityListing
}

func (o *GetRoutingQueuesDivisionviewsAllOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/divisionviews/all][%d] getRoutingQueuesDivisionviewsAllOK  %+v", 200, o.Payload)
}

func (o *GetRoutingQueuesDivisionviewsAllOK) GetPayload() *models.QueueEntityListing {
	return o.Payload
}

func (o *GetRoutingQueuesDivisionviewsAllOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.QueueEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueuesDivisionviewsAllBadRequest creates a GetRoutingQueuesDivisionviewsAllBadRequest with default headers values
func NewGetRoutingQueuesDivisionviewsAllBadRequest() *GetRoutingQueuesDivisionviewsAllBadRequest {
	return &GetRoutingQueuesDivisionviewsAllBadRequest{}
}

/*GetRoutingQueuesDivisionviewsAllBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetRoutingQueuesDivisionviewsAllBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingQueuesDivisionviewsAllBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/divisionviews/all][%d] getRoutingQueuesDivisionviewsAllBadRequest  %+v", 400, o.Payload)
}

func (o *GetRoutingQueuesDivisionviewsAllBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueuesDivisionviewsAllBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueuesDivisionviewsAllUnauthorized creates a GetRoutingQueuesDivisionviewsAllUnauthorized with default headers values
func NewGetRoutingQueuesDivisionviewsAllUnauthorized() *GetRoutingQueuesDivisionviewsAllUnauthorized {
	return &GetRoutingQueuesDivisionviewsAllUnauthorized{}
}

/*GetRoutingQueuesDivisionviewsAllUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetRoutingQueuesDivisionviewsAllUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingQueuesDivisionviewsAllUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/divisionviews/all][%d] getRoutingQueuesDivisionviewsAllUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRoutingQueuesDivisionviewsAllUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueuesDivisionviewsAllUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueuesDivisionviewsAllForbidden creates a GetRoutingQueuesDivisionviewsAllForbidden with default headers values
func NewGetRoutingQueuesDivisionviewsAllForbidden() *GetRoutingQueuesDivisionviewsAllForbidden {
	return &GetRoutingQueuesDivisionviewsAllForbidden{}
}

/*GetRoutingQueuesDivisionviewsAllForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetRoutingQueuesDivisionviewsAllForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingQueuesDivisionviewsAllForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/divisionviews/all][%d] getRoutingQueuesDivisionviewsAllForbidden  %+v", 403, o.Payload)
}

func (o *GetRoutingQueuesDivisionviewsAllForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueuesDivisionviewsAllForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueuesDivisionviewsAllNotFound creates a GetRoutingQueuesDivisionviewsAllNotFound with default headers values
func NewGetRoutingQueuesDivisionviewsAllNotFound() *GetRoutingQueuesDivisionviewsAllNotFound {
	return &GetRoutingQueuesDivisionviewsAllNotFound{}
}

/*GetRoutingQueuesDivisionviewsAllNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetRoutingQueuesDivisionviewsAllNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingQueuesDivisionviewsAllNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/divisionviews/all][%d] getRoutingQueuesDivisionviewsAllNotFound  %+v", 404, o.Payload)
}

func (o *GetRoutingQueuesDivisionviewsAllNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueuesDivisionviewsAllNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueuesDivisionviewsAllRequestTimeout creates a GetRoutingQueuesDivisionviewsAllRequestTimeout with default headers values
func NewGetRoutingQueuesDivisionviewsAllRequestTimeout() *GetRoutingQueuesDivisionviewsAllRequestTimeout {
	return &GetRoutingQueuesDivisionviewsAllRequestTimeout{}
}

/*GetRoutingQueuesDivisionviewsAllRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetRoutingQueuesDivisionviewsAllRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingQueuesDivisionviewsAllRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/divisionviews/all][%d] getRoutingQueuesDivisionviewsAllRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetRoutingQueuesDivisionviewsAllRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueuesDivisionviewsAllRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueuesDivisionviewsAllRequestEntityTooLarge creates a GetRoutingQueuesDivisionviewsAllRequestEntityTooLarge with default headers values
func NewGetRoutingQueuesDivisionviewsAllRequestEntityTooLarge() *GetRoutingQueuesDivisionviewsAllRequestEntityTooLarge {
	return &GetRoutingQueuesDivisionviewsAllRequestEntityTooLarge{}
}

/*GetRoutingQueuesDivisionviewsAllRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetRoutingQueuesDivisionviewsAllRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingQueuesDivisionviewsAllRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/divisionviews/all][%d] getRoutingQueuesDivisionviewsAllRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetRoutingQueuesDivisionviewsAllRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueuesDivisionviewsAllRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueuesDivisionviewsAllUnsupportedMediaType creates a GetRoutingQueuesDivisionviewsAllUnsupportedMediaType with default headers values
func NewGetRoutingQueuesDivisionviewsAllUnsupportedMediaType() *GetRoutingQueuesDivisionviewsAllUnsupportedMediaType {
	return &GetRoutingQueuesDivisionviewsAllUnsupportedMediaType{}
}

/*GetRoutingQueuesDivisionviewsAllUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetRoutingQueuesDivisionviewsAllUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingQueuesDivisionviewsAllUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/divisionviews/all][%d] getRoutingQueuesDivisionviewsAllUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetRoutingQueuesDivisionviewsAllUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueuesDivisionviewsAllUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueuesDivisionviewsAllTooManyRequests creates a GetRoutingQueuesDivisionviewsAllTooManyRequests with default headers values
func NewGetRoutingQueuesDivisionviewsAllTooManyRequests() *GetRoutingQueuesDivisionviewsAllTooManyRequests {
	return &GetRoutingQueuesDivisionviewsAllTooManyRequests{}
}

/*GetRoutingQueuesDivisionviewsAllTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetRoutingQueuesDivisionviewsAllTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingQueuesDivisionviewsAllTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/divisionviews/all][%d] getRoutingQueuesDivisionviewsAllTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRoutingQueuesDivisionviewsAllTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueuesDivisionviewsAllTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueuesDivisionviewsAllInternalServerError creates a GetRoutingQueuesDivisionviewsAllInternalServerError with default headers values
func NewGetRoutingQueuesDivisionviewsAllInternalServerError() *GetRoutingQueuesDivisionviewsAllInternalServerError {
	return &GetRoutingQueuesDivisionviewsAllInternalServerError{}
}

/*GetRoutingQueuesDivisionviewsAllInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetRoutingQueuesDivisionviewsAllInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingQueuesDivisionviewsAllInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/divisionviews/all][%d] getRoutingQueuesDivisionviewsAllInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRoutingQueuesDivisionviewsAllInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueuesDivisionviewsAllInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueuesDivisionviewsAllServiceUnavailable creates a GetRoutingQueuesDivisionviewsAllServiceUnavailable with default headers values
func NewGetRoutingQueuesDivisionviewsAllServiceUnavailable() *GetRoutingQueuesDivisionviewsAllServiceUnavailable {
	return &GetRoutingQueuesDivisionviewsAllServiceUnavailable{}
}

/*GetRoutingQueuesDivisionviewsAllServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetRoutingQueuesDivisionviewsAllServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingQueuesDivisionviewsAllServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/divisionviews/all][%d] getRoutingQueuesDivisionviewsAllServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetRoutingQueuesDivisionviewsAllServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueuesDivisionviewsAllServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueuesDivisionviewsAllGatewayTimeout creates a GetRoutingQueuesDivisionviewsAllGatewayTimeout with default headers values
func NewGetRoutingQueuesDivisionviewsAllGatewayTimeout() *GetRoutingQueuesDivisionviewsAllGatewayTimeout {
	return &GetRoutingQueuesDivisionviewsAllGatewayTimeout{}
}

/*GetRoutingQueuesDivisionviewsAllGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetRoutingQueuesDivisionviewsAllGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingQueuesDivisionviewsAllGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/divisionviews/all][%d] getRoutingQueuesDivisionviewsAllGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetRoutingQueuesDivisionviewsAllGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueuesDivisionviewsAllGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
