// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetRoutingEmailSetupReader is a Reader for the GetRoutingEmailSetup structure.
type GetRoutingEmailSetupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRoutingEmailSetupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRoutingEmailSetupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRoutingEmailSetupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRoutingEmailSetupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRoutingEmailSetupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRoutingEmailSetupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetRoutingEmailSetupRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetRoutingEmailSetupRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetRoutingEmailSetupUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetRoutingEmailSetupTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRoutingEmailSetupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetRoutingEmailSetupServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetRoutingEmailSetupGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRoutingEmailSetupOK creates a GetRoutingEmailSetupOK with default headers values
func NewGetRoutingEmailSetupOK() *GetRoutingEmailSetupOK {
	return &GetRoutingEmailSetupOK{}
}

/*
GetRoutingEmailSetupOK describes a response with status code 200, with default header values.

successful operation
*/
type GetRoutingEmailSetupOK struct {
	Payload *models.EmailSetup
}

// IsSuccess returns true when this get routing email setup o k response has a 2xx status code
func (o *GetRoutingEmailSetupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get routing email setup o k response has a 3xx status code
func (o *GetRoutingEmailSetupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing email setup o k response has a 4xx status code
func (o *GetRoutingEmailSetupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing email setup o k response has a 5xx status code
func (o *GetRoutingEmailSetupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing email setup o k response a status code equal to that given
func (o *GetRoutingEmailSetupOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetRoutingEmailSetupOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/setup][%d] getRoutingEmailSetupOK  %+v", 200, o.Payload)
}

func (o *GetRoutingEmailSetupOK) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/setup][%d] getRoutingEmailSetupOK  %+v", 200, o.Payload)
}

func (o *GetRoutingEmailSetupOK) GetPayload() *models.EmailSetup {
	return o.Payload
}

func (o *GetRoutingEmailSetupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EmailSetup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailSetupBadRequest creates a GetRoutingEmailSetupBadRequest with default headers values
func NewGetRoutingEmailSetupBadRequest() *GetRoutingEmailSetupBadRequest {
	return &GetRoutingEmailSetupBadRequest{}
}

/*
GetRoutingEmailSetupBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetRoutingEmailSetupBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing email setup bad request response has a 2xx status code
func (o *GetRoutingEmailSetupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing email setup bad request response has a 3xx status code
func (o *GetRoutingEmailSetupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing email setup bad request response has a 4xx status code
func (o *GetRoutingEmailSetupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing email setup bad request response has a 5xx status code
func (o *GetRoutingEmailSetupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing email setup bad request response a status code equal to that given
func (o *GetRoutingEmailSetupBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetRoutingEmailSetupBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/setup][%d] getRoutingEmailSetupBadRequest  %+v", 400, o.Payload)
}

func (o *GetRoutingEmailSetupBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/setup][%d] getRoutingEmailSetupBadRequest  %+v", 400, o.Payload)
}

func (o *GetRoutingEmailSetupBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailSetupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailSetupUnauthorized creates a GetRoutingEmailSetupUnauthorized with default headers values
func NewGetRoutingEmailSetupUnauthorized() *GetRoutingEmailSetupUnauthorized {
	return &GetRoutingEmailSetupUnauthorized{}
}

/*
GetRoutingEmailSetupUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetRoutingEmailSetupUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing email setup unauthorized response has a 2xx status code
func (o *GetRoutingEmailSetupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing email setup unauthorized response has a 3xx status code
func (o *GetRoutingEmailSetupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing email setup unauthorized response has a 4xx status code
func (o *GetRoutingEmailSetupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing email setup unauthorized response has a 5xx status code
func (o *GetRoutingEmailSetupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing email setup unauthorized response a status code equal to that given
func (o *GetRoutingEmailSetupUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetRoutingEmailSetupUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/setup][%d] getRoutingEmailSetupUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRoutingEmailSetupUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/setup][%d] getRoutingEmailSetupUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRoutingEmailSetupUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailSetupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailSetupForbidden creates a GetRoutingEmailSetupForbidden with default headers values
func NewGetRoutingEmailSetupForbidden() *GetRoutingEmailSetupForbidden {
	return &GetRoutingEmailSetupForbidden{}
}

/*
GetRoutingEmailSetupForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetRoutingEmailSetupForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing email setup forbidden response has a 2xx status code
func (o *GetRoutingEmailSetupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing email setup forbidden response has a 3xx status code
func (o *GetRoutingEmailSetupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing email setup forbidden response has a 4xx status code
func (o *GetRoutingEmailSetupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing email setup forbidden response has a 5xx status code
func (o *GetRoutingEmailSetupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing email setup forbidden response a status code equal to that given
func (o *GetRoutingEmailSetupForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetRoutingEmailSetupForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/setup][%d] getRoutingEmailSetupForbidden  %+v", 403, o.Payload)
}

func (o *GetRoutingEmailSetupForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/setup][%d] getRoutingEmailSetupForbidden  %+v", 403, o.Payload)
}

func (o *GetRoutingEmailSetupForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailSetupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailSetupNotFound creates a GetRoutingEmailSetupNotFound with default headers values
func NewGetRoutingEmailSetupNotFound() *GetRoutingEmailSetupNotFound {
	return &GetRoutingEmailSetupNotFound{}
}

/*
GetRoutingEmailSetupNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetRoutingEmailSetupNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing email setup not found response has a 2xx status code
func (o *GetRoutingEmailSetupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing email setup not found response has a 3xx status code
func (o *GetRoutingEmailSetupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing email setup not found response has a 4xx status code
func (o *GetRoutingEmailSetupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing email setup not found response has a 5xx status code
func (o *GetRoutingEmailSetupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing email setup not found response a status code equal to that given
func (o *GetRoutingEmailSetupNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetRoutingEmailSetupNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/setup][%d] getRoutingEmailSetupNotFound  %+v", 404, o.Payload)
}

func (o *GetRoutingEmailSetupNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/setup][%d] getRoutingEmailSetupNotFound  %+v", 404, o.Payload)
}

func (o *GetRoutingEmailSetupNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailSetupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailSetupRequestTimeout creates a GetRoutingEmailSetupRequestTimeout with default headers values
func NewGetRoutingEmailSetupRequestTimeout() *GetRoutingEmailSetupRequestTimeout {
	return &GetRoutingEmailSetupRequestTimeout{}
}

/*
GetRoutingEmailSetupRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetRoutingEmailSetupRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing email setup request timeout response has a 2xx status code
func (o *GetRoutingEmailSetupRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing email setup request timeout response has a 3xx status code
func (o *GetRoutingEmailSetupRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing email setup request timeout response has a 4xx status code
func (o *GetRoutingEmailSetupRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing email setup request timeout response has a 5xx status code
func (o *GetRoutingEmailSetupRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing email setup request timeout response a status code equal to that given
func (o *GetRoutingEmailSetupRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetRoutingEmailSetupRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/setup][%d] getRoutingEmailSetupRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetRoutingEmailSetupRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/setup][%d] getRoutingEmailSetupRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetRoutingEmailSetupRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailSetupRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailSetupRequestEntityTooLarge creates a GetRoutingEmailSetupRequestEntityTooLarge with default headers values
func NewGetRoutingEmailSetupRequestEntityTooLarge() *GetRoutingEmailSetupRequestEntityTooLarge {
	return &GetRoutingEmailSetupRequestEntityTooLarge{}
}

/*
GetRoutingEmailSetupRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetRoutingEmailSetupRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing email setup request entity too large response has a 2xx status code
func (o *GetRoutingEmailSetupRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing email setup request entity too large response has a 3xx status code
func (o *GetRoutingEmailSetupRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing email setup request entity too large response has a 4xx status code
func (o *GetRoutingEmailSetupRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing email setup request entity too large response has a 5xx status code
func (o *GetRoutingEmailSetupRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing email setup request entity too large response a status code equal to that given
func (o *GetRoutingEmailSetupRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetRoutingEmailSetupRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/setup][%d] getRoutingEmailSetupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetRoutingEmailSetupRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/setup][%d] getRoutingEmailSetupRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetRoutingEmailSetupRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailSetupRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailSetupUnsupportedMediaType creates a GetRoutingEmailSetupUnsupportedMediaType with default headers values
func NewGetRoutingEmailSetupUnsupportedMediaType() *GetRoutingEmailSetupUnsupportedMediaType {
	return &GetRoutingEmailSetupUnsupportedMediaType{}
}

/*
GetRoutingEmailSetupUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetRoutingEmailSetupUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing email setup unsupported media type response has a 2xx status code
func (o *GetRoutingEmailSetupUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing email setup unsupported media type response has a 3xx status code
func (o *GetRoutingEmailSetupUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing email setup unsupported media type response has a 4xx status code
func (o *GetRoutingEmailSetupUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing email setup unsupported media type response has a 5xx status code
func (o *GetRoutingEmailSetupUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing email setup unsupported media type response a status code equal to that given
func (o *GetRoutingEmailSetupUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetRoutingEmailSetupUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/setup][%d] getRoutingEmailSetupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetRoutingEmailSetupUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/setup][%d] getRoutingEmailSetupUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetRoutingEmailSetupUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailSetupUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailSetupTooManyRequests creates a GetRoutingEmailSetupTooManyRequests with default headers values
func NewGetRoutingEmailSetupTooManyRequests() *GetRoutingEmailSetupTooManyRequests {
	return &GetRoutingEmailSetupTooManyRequests{}
}

/*
GetRoutingEmailSetupTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetRoutingEmailSetupTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing email setup too many requests response has a 2xx status code
func (o *GetRoutingEmailSetupTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing email setup too many requests response has a 3xx status code
func (o *GetRoutingEmailSetupTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing email setup too many requests response has a 4xx status code
func (o *GetRoutingEmailSetupTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing email setup too many requests response has a 5xx status code
func (o *GetRoutingEmailSetupTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing email setup too many requests response a status code equal to that given
func (o *GetRoutingEmailSetupTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetRoutingEmailSetupTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/setup][%d] getRoutingEmailSetupTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRoutingEmailSetupTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/setup][%d] getRoutingEmailSetupTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRoutingEmailSetupTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailSetupTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailSetupInternalServerError creates a GetRoutingEmailSetupInternalServerError with default headers values
func NewGetRoutingEmailSetupInternalServerError() *GetRoutingEmailSetupInternalServerError {
	return &GetRoutingEmailSetupInternalServerError{}
}

/*
GetRoutingEmailSetupInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetRoutingEmailSetupInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing email setup internal server error response has a 2xx status code
func (o *GetRoutingEmailSetupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing email setup internal server error response has a 3xx status code
func (o *GetRoutingEmailSetupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing email setup internal server error response has a 4xx status code
func (o *GetRoutingEmailSetupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing email setup internal server error response has a 5xx status code
func (o *GetRoutingEmailSetupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get routing email setup internal server error response a status code equal to that given
func (o *GetRoutingEmailSetupInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetRoutingEmailSetupInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/setup][%d] getRoutingEmailSetupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRoutingEmailSetupInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/setup][%d] getRoutingEmailSetupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRoutingEmailSetupInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailSetupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailSetupServiceUnavailable creates a GetRoutingEmailSetupServiceUnavailable with default headers values
func NewGetRoutingEmailSetupServiceUnavailable() *GetRoutingEmailSetupServiceUnavailable {
	return &GetRoutingEmailSetupServiceUnavailable{}
}

/*
GetRoutingEmailSetupServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetRoutingEmailSetupServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing email setup service unavailable response has a 2xx status code
func (o *GetRoutingEmailSetupServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing email setup service unavailable response has a 3xx status code
func (o *GetRoutingEmailSetupServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing email setup service unavailable response has a 4xx status code
func (o *GetRoutingEmailSetupServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing email setup service unavailable response has a 5xx status code
func (o *GetRoutingEmailSetupServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get routing email setup service unavailable response a status code equal to that given
func (o *GetRoutingEmailSetupServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetRoutingEmailSetupServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/setup][%d] getRoutingEmailSetupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetRoutingEmailSetupServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/setup][%d] getRoutingEmailSetupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetRoutingEmailSetupServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailSetupServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailSetupGatewayTimeout creates a GetRoutingEmailSetupGatewayTimeout with default headers values
func NewGetRoutingEmailSetupGatewayTimeout() *GetRoutingEmailSetupGatewayTimeout {
	return &GetRoutingEmailSetupGatewayTimeout{}
}

/*
GetRoutingEmailSetupGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetRoutingEmailSetupGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing email setup gateway timeout response has a 2xx status code
func (o *GetRoutingEmailSetupGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing email setup gateway timeout response has a 3xx status code
func (o *GetRoutingEmailSetupGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing email setup gateway timeout response has a 4xx status code
func (o *GetRoutingEmailSetupGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing email setup gateway timeout response has a 5xx status code
func (o *GetRoutingEmailSetupGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get routing email setup gateway timeout response a status code equal to that given
func (o *GetRoutingEmailSetupGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetRoutingEmailSetupGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/setup][%d] getRoutingEmailSetupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetRoutingEmailSetupGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/setup][%d] getRoutingEmailSetupGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetRoutingEmailSetupGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailSetupGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
