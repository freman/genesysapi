// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostRoutingSkillsReader is a Reader for the PostRoutingSkills structure.
type PostRoutingSkillsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRoutingSkillsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostRoutingSkillsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostRoutingSkillsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostRoutingSkillsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostRoutingSkillsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostRoutingSkillsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostRoutingSkillsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostRoutingSkillsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostRoutingSkillsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostRoutingSkillsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostRoutingSkillsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostRoutingSkillsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostRoutingSkillsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostRoutingSkillsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostRoutingSkillsOK creates a PostRoutingSkillsOK with default headers values
func NewPostRoutingSkillsOK() *PostRoutingSkillsOK {
	return &PostRoutingSkillsOK{}
}

/*
PostRoutingSkillsOK describes a response with status code 200, with default header values.

successful operation
*/
type PostRoutingSkillsOK struct {
	Payload *models.RoutingSkill
}

// IsSuccess returns true when this post routing skills o k response has a 2xx status code
func (o *PostRoutingSkillsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post routing skills o k response has a 3xx status code
func (o *PostRoutingSkillsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing skills o k response has a 4xx status code
func (o *PostRoutingSkillsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing skills o k response has a 5xx status code
func (o *PostRoutingSkillsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing skills o k response a status code equal to that given
func (o *PostRoutingSkillsOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostRoutingSkillsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/skills][%d] postRoutingSkillsOK  %+v", 200, o.Payload)
}

func (o *PostRoutingSkillsOK) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/skills][%d] postRoutingSkillsOK  %+v", 200, o.Payload)
}

func (o *PostRoutingSkillsOK) GetPayload() *models.RoutingSkill {
	return o.Payload
}

func (o *PostRoutingSkillsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RoutingSkill)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSkillsBadRequest creates a PostRoutingSkillsBadRequest with default headers values
func NewPostRoutingSkillsBadRequest() *PostRoutingSkillsBadRequest {
	return &PostRoutingSkillsBadRequest{}
}

/*
PostRoutingSkillsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostRoutingSkillsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing skills bad request response has a 2xx status code
func (o *PostRoutingSkillsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing skills bad request response has a 3xx status code
func (o *PostRoutingSkillsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing skills bad request response has a 4xx status code
func (o *PostRoutingSkillsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing skills bad request response has a 5xx status code
func (o *PostRoutingSkillsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing skills bad request response a status code equal to that given
func (o *PostRoutingSkillsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostRoutingSkillsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/skills][%d] postRoutingSkillsBadRequest  %+v", 400, o.Payload)
}

func (o *PostRoutingSkillsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/skills][%d] postRoutingSkillsBadRequest  %+v", 400, o.Payload)
}

func (o *PostRoutingSkillsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSkillsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSkillsUnauthorized creates a PostRoutingSkillsUnauthorized with default headers values
func NewPostRoutingSkillsUnauthorized() *PostRoutingSkillsUnauthorized {
	return &PostRoutingSkillsUnauthorized{}
}

/*
PostRoutingSkillsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostRoutingSkillsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing skills unauthorized response has a 2xx status code
func (o *PostRoutingSkillsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing skills unauthorized response has a 3xx status code
func (o *PostRoutingSkillsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing skills unauthorized response has a 4xx status code
func (o *PostRoutingSkillsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing skills unauthorized response has a 5xx status code
func (o *PostRoutingSkillsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing skills unauthorized response a status code equal to that given
func (o *PostRoutingSkillsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostRoutingSkillsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/skills][%d] postRoutingSkillsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostRoutingSkillsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/skills][%d] postRoutingSkillsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostRoutingSkillsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSkillsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSkillsForbidden creates a PostRoutingSkillsForbidden with default headers values
func NewPostRoutingSkillsForbidden() *PostRoutingSkillsForbidden {
	return &PostRoutingSkillsForbidden{}
}

/*
PostRoutingSkillsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostRoutingSkillsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing skills forbidden response has a 2xx status code
func (o *PostRoutingSkillsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing skills forbidden response has a 3xx status code
func (o *PostRoutingSkillsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing skills forbidden response has a 4xx status code
func (o *PostRoutingSkillsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing skills forbidden response has a 5xx status code
func (o *PostRoutingSkillsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing skills forbidden response a status code equal to that given
func (o *PostRoutingSkillsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostRoutingSkillsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/skills][%d] postRoutingSkillsForbidden  %+v", 403, o.Payload)
}

func (o *PostRoutingSkillsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/skills][%d] postRoutingSkillsForbidden  %+v", 403, o.Payload)
}

func (o *PostRoutingSkillsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSkillsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSkillsNotFound creates a PostRoutingSkillsNotFound with default headers values
func NewPostRoutingSkillsNotFound() *PostRoutingSkillsNotFound {
	return &PostRoutingSkillsNotFound{}
}

/*
PostRoutingSkillsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostRoutingSkillsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing skills not found response has a 2xx status code
func (o *PostRoutingSkillsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing skills not found response has a 3xx status code
func (o *PostRoutingSkillsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing skills not found response has a 4xx status code
func (o *PostRoutingSkillsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing skills not found response has a 5xx status code
func (o *PostRoutingSkillsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing skills not found response a status code equal to that given
func (o *PostRoutingSkillsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostRoutingSkillsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/skills][%d] postRoutingSkillsNotFound  %+v", 404, o.Payload)
}

func (o *PostRoutingSkillsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/skills][%d] postRoutingSkillsNotFound  %+v", 404, o.Payload)
}

func (o *PostRoutingSkillsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSkillsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSkillsRequestTimeout creates a PostRoutingSkillsRequestTimeout with default headers values
func NewPostRoutingSkillsRequestTimeout() *PostRoutingSkillsRequestTimeout {
	return &PostRoutingSkillsRequestTimeout{}
}

/*
PostRoutingSkillsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostRoutingSkillsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing skills request timeout response has a 2xx status code
func (o *PostRoutingSkillsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing skills request timeout response has a 3xx status code
func (o *PostRoutingSkillsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing skills request timeout response has a 4xx status code
func (o *PostRoutingSkillsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing skills request timeout response has a 5xx status code
func (o *PostRoutingSkillsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing skills request timeout response a status code equal to that given
func (o *PostRoutingSkillsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostRoutingSkillsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/skills][%d] postRoutingSkillsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostRoutingSkillsRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/skills][%d] postRoutingSkillsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostRoutingSkillsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSkillsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSkillsConflict creates a PostRoutingSkillsConflict with default headers values
func NewPostRoutingSkillsConflict() *PostRoutingSkillsConflict {
	return &PostRoutingSkillsConflict{}
}

/*
PostRoutingSkillsConflict describes a response with status code 409, with default header values.

Conflict
*/
type PostRoutingSkillsConflict struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing skills conflict response has a 2xx status code
func (o *PostRoutingSkillsConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing skills conflict response has a 3xx status code
func (o *PostRoutingSkillsConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing skills conflict response has a 4xx status code
func (o *PostRoutingSkillsConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing skills conflict response has a 5xx status code
func (o *PostRoutingSkillsConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing skills conflict response a status code equal to that given
func (o *PostRoutingSkillsConflict) IsCode(code int) bool {
	return code == 409
}

func (o *PostRoutingSkillsConflict) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/skills][%d] postRoutingSkillsConflict  %+v", 409, o.Payload)
}

func (o *PostRoutingSkillsConflict) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/skills][%d] postRoutingSkillsConflict  %+v", 409, o.Payload)
}

func (o *PostRoutingSkillsConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSkillsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSkillsRequestEntityTooLarge creates a PostRoutingSkillsRequestEntityTooLarge with default headers values
func NewPostRoutingSkillsRequestEntityTooLarge() *PostRoutingSkillsRequestEntityTooLarge {
	return &PostRoutingSkillsRequestEntityTooLarge{}
}

/*
PostRoutingSkillsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostRoutingSkillsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing skills request entity too large response has a 2xx status code
func (o *PostRoutingSkillsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing skills request entity too large response has a 3xx status code
func (o *PostRoutingSkillsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing skills request entity too large response has a 4xx status code
func (o *PostRoutingSkillsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing skills request entity too large response has a 5xx status code
func (o *PostRoutingSkillsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing skills request entity too large response a status code equal to that given
func (o *PostRoutingSkillsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostRoutingSkillsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/skills][%d] postRoutingSkillsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostRoutingSkillsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/skills][%d] postRoutingSkillsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostRoutingSkillsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSkillsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSkillsUnsupportedMediaType creates a PostRoutingSkillsUnsupportedMediaType with default headers values
func NewPostRoutingSkillsUnsupportedMediaType() *PostRoutingSkillsUnsupportedMediaType {
	return &PostRoutingSkillsUnsupportedMediaType{}
}

/*
PostRoutingSkillsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostRoutingSkillsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing skills unsupported media type response has a 2xx status code
func (o *PostRoutingSkillsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing skills unsupported media type response has a 3xx status code
func (o *PostRoutingSkillsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing skills unsupported media type response has a 4xx status code
func (o *PostRoutingSkillsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing skills unsupported media type response has a 5xx status code
func (o *PostRoutingSkillsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing skills unsupported media type response a status code equal to that given
func (o *PostRoutingSkillsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostRoutingSkillsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/skills][%d] postRoutingSkillsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostRoutingSkillsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/skills][%d] postRoutingSkillsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostRoutingSkillsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSkillsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSkillsTooManyRequests creates a PostRoutingSkillsTooManyRequests with default headers values
func NewPostRoutingSkillsTooManyRequests() *PostRoutingSkillsTooManyRequests {
	return &PostRoutingSkillsTooManyRequests{}
}

/*
PostRoutingSkillsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostRoutingSkillsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing skills too many requests response has a 2xx status code
func (o *PostRoutingSkillsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing skills too many requests response has a 3xx status code
func (o *PostRoutingSkillsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing skills too many requests response has a 4xx status code
func (o *PostRoutingSkillsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing skills too many requests response has a 5xx status code
func (o *PostRoutingSkillsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing skills too many requests response a status code equal to that given
func (o *PostRoutingSkillsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostRoutingSkillsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/skills][%d] postRoutingSkillsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostRoutingSkillsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/skills][%d] postRoutingSkillsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostRoutingSkillsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSkillsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSkillsInternalServerError creates a PostRoutingSkillsInternalServerError with default headers values
func NewPostRoutingSkillsInternalServerError() *PostRoutingSkillsInternalServerError {
	return &PostRoutingSkillsInternalServerError{}
}

/*
PostRoutingSkillsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostRoutingSkillsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing skills internal server error response has a 2xx status code
func (o *PostRoutingSkillsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing skills internal server error response has a 3xx status code
func (o *PostRoutingSkillsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing skills internal server error response has a 4xx status code
func (o *PostRoutingSkillsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing skills internal server error response has a 5xx status code
func (o *PostRoutingSkillsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post routing skills internal server error response a status code equal to that given
func (o *PostRoutingSkillsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostRoutingSkillsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/skills][%d] postRoutingSkillsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostRoutingSkillsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/skills][%d] postRoutingSkillsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostRoutingSkillsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSkillsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSkillsServiceUnavailable creates a PostRoutingSkillsServiceUnavailable with default headers values
func NewPostRoutingSkillsServiceUnavailable() *PostRoutingSkillsServiceUnavailable {
	return &PostRoutingSkillsServiceUnavailable{}
}

/*
PostRoutingSkillsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostRoutingSkillsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing skills service unavailable response has a 2xx status code
func (o *PostRoutingSkillsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing skills service unavailable response has a 3xx status code
func (o *PostRoutingSkillsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing skills service unavailable response has a 4xx status code
func (o *PostRoutingSkillsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing skills service unavailable response has a 5xx status code
func (o *PostRoutingSkillsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post routing skills service unavailable response a status code equal to that given
func (o *PostRoutingSkillsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostRoutingSkillsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/skills][%d] postRoutingSkillsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostRoutingSkillsServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/skills][%d] postRoutingSkillsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostRoutingSkillsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSkillsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSkillsGatewayTimeout creates a PostRoutingSkillsGatewayTimeout with default headers values
func NewPostRoutingSkillsGatewayTimeout() *PostRoutingSkillsGatewayTimeout {
	return &PostRoutingSkillsGatewayTimeout{}
}

/*
PostRoutingSkillsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostRoutingSkillsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing skills gateway timeout response has a 2xx status code
func (o *PostRoutingSkillsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing skills gateway timeout response has a 3xx status code
func (o *PostRoutingSkillsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing skills gateway timeout response has a 4xx status code
func (o *PostRoutingSkillsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing skills gateway timeout response has a 5xx status code
func (o *PostRoutingSkillsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post routing skills gateway timeout response a status code equal to that given
func (o *PostRoutingSkillsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostRoutingSkillsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/skills][%d] postRoutingSkillsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostRoutingSkillsGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/skills][%d] postRoutingSkillsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostRoutingSkillsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSkillsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
