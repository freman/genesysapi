// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetRoutingQueueComparisonperiodsReader is a Reader for the GetRoutingQueueComparisonperiods structure.
type GetRoutingQueueComparisonperiodsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRoutingQueueComparisonperiodsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRoutingQueueComparisonperiodsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRoutingQueueComparisonperiodsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRoutingQueueComparisonperiodsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRoutingQueueComparisonperiodsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRoutingQueueComparisonperiodsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetRoutingQueueComparisonperiodsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetRoutingQueueComparisonperiodsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetRoutingQueueComparisonperiodsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetRoutingQueueComparisonperiodsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRoutingQueueComparisonperiodsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetRoutingQueueComparisonperiodsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetRoutingQueueComparisonperiodsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRoutingQueueComparisonperiodsOK creates a GetRoutingQueueComparisonperiodsOK with default headers values
func NewGetRoutingQueueComparisonperiodsOK() *GetRoutingQueueComparisonperiodsOK {
	return &GetRoutingQueueComparisonperiodsOK{}
}

/*
GetRoutingQueueComparisonperiodsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetRoutingQueueComparisonperiodsOK struct {
	Payload *models.ComparisonPeriodListing
}

// IsSuccess returns true when this get routing queue comparisonperiods o k response has a 2xx status code
func (o *GetRoutingQueueComparisonperiodsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get routing queue comparisonperiods o k response has a 3xx status code
func (o *GetRoutingQueueComparisonperiodsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing queue comparisonperiods o k response has a 4xx status code
func (o *GetRoutingQueueComparisonperiodsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing queue comparisonperiods o k response has a 5xx status code
func (o *GetRoutingQueueComparisonperiodsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing queue comparisonperiods o k response a status code equal to that given
func (o *GetRoutingQueueComparisonperiodsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetRoutingQueueComparisonperiodsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods][%d] getRoutingQueueComparisonperiodsOK  %+v", 200, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods][%d] getRoutingQueueComparisonperiodsOK  %+v", 200, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodsOK) GetPayload() *models.ComparisonPeriodListing {
	return o.Payload
}

func (o *GetRoutingQueueComparisonperiodsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ComparisonPeriodListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueComparisonperiodsBadRequest creates a GetRoutingQueueComparisonperiodsBadRequest with default headers values
func NewGetRoutingQueueComparisonperiodsBadRequest() *GetRoutingQueueComparisonperiodsBadRequest {
	return &GetRoutingQueueComparisonperiodsBadRequest{}
}

/*
GetRoutingQueueComparisonperiodsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetRoutingQueueComparisonperiodsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing queue comparisonperiods bad request response has a 2xx status code
func (o *GetRoutingQueueComparisonperiodsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing queue comparisonperiods bad request response has a 3xx status code
func (o *GetRoutingQueueComparisonperiodsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing queue comparisonperiods bad request response has a 4xx status code
func (o *GetRoutingQueueComparisonperiodsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing queue comparisonperiods bad request response has a 5xx status code
func (o *GetRoutingQueueComparisonperiodsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing queue comparisonperiods bad request response a status code equal to that given
func (o *GetRoutingQueueComparisonperiodsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetRoutingQueueComparisonperiodsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods][%d] getRoutingQueueComparisonperiodsBadRequest  %+v", 400, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods][%d] getRoutingQueueComparisonperiodsBadRequest  %+v", 400, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueComparisonperiodsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueComparisonperiodsUnauthorized creates a GetRoutingQueueComparisonperiodsUnauthorized with default headers values
func NewGetRoutingQueueComparisonperiodsUnauthorized() *GetRoutingQueueComparisonperiodsUnauthorized {
	return &GetRoutingQueueComparisonperiodsUnauthorized{}
}

/*
GetRoutingQueueComparisonperiodsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetRoutingQueueComparisonperiodsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing queue comparisonperiods unauthorized response has a 2xx status code
func (o *GetRoutingQueueComparisonperiodsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing queue comparisonperiods unauthorized response has a 3xx status code
func (o *GetRoutingQueueComparisonperiodsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing queue comparisonperiods unauthorized response has a 4xx status code
func (o *GetRoutingQueueComparisonperiodsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing queue comparisonperiods unauthorized response has a 5xx status code
func (o *GetRoutingQueueComparisonperiodsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing queue comparisonperiods unauthorized response a status code equal to that given
func (o *GetRoutingQueueComparisonperiodsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetRoutingQueueComparisonperiodsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods][%d] getRoutingQueueComparisonperiodsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods][%d] getRoutingQueueComparisonperiodsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueComparisonperiodsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueComparisonperiodsForbidden creates a GetRoutingQueueComparisonperiodsForbidden with default headers values
func NewGetRoutingQueueComparisonperiodsForbidden() *GetRoutingQueueComparisonperiodsForbidden {
	return &GetRoutingQueueComparisonperiodsForbidden{}
}

/*
GetRoutingQueueComparisonperiodsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetRoutingQueueComparisonperiodsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing queue comparisonperiods forbidden response has a 2xx status code
func (o *GetRoutingQueueComparisonperiodsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing queue comparisonperiods forbidden response has a 3xx status code
func (o *GetRoutingQueueComparisonperiodsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing queue comparisonperiods forbidden response has a 4xx status code
func (o *GetRoutingQueueComparisonperiodsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing queue comparisonperiods forbidden response has a 5xx status code
func (o *GetRoutingQueueComparisonperiodsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing queue comparisonperiods forbidden response a status code equal to that given
func (o *GetRoutingQueueComparisonperiodsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetRoutingQueueComparisonperiodsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods][%d] getRoutingQueueComparisonperiodsForbidden  %+v", 403, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods][%d] getRoutingQueueComparisonperiodsForbidden  %+v", 403, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueComparisonperiodsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueComparisonperiodsNotFound creates a GetRoutingQueueComparisonperiodsNotFound with default headers values
func NewGetRoutingQueueComparisonperiodsNotFound() *GetRoutingQueueComparisonperiodsNotFound {
	return &GetRoutingQueueComparisonperiodsNotFound{}
}

/*
GetRoutingQueueComparisonperiodsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetRoutingQueueComparisonperiodsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing queue comparisonperiods not found response has a 2xx status code
func (o *GetRoutingQueueComparisonperiodsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing queue comparisonperiods not found response has a 3xx status code
func (o *GetRoutingQueueComparisonperiodsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing queue comparisonperiods not found response has a 4xx status code
func (o *GetRoutingQueueComparisonperiodsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing queue comparisonperiods not found response has a 5xx status code
func (o *GetRoutingQueueComparisonperiodsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing queue comparisonperiods not found response a status code equal to that given
func (o *GetRoutingQueueComparisonperiodsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetRoutingQueueComparisonperiodsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods][%d] getRoutingQueueComparisonperiodsNotFound  %+v", 404, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods][%d] getRoutingQueueComparisonperiodsNotFound  %+v", 404, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueComparisonperiodsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueComparisonperiodsRequestTimeout creates a GetRoutingQueueComparisonperiodsRequestTimeout with default headers values
func NewGetRoutingQueueComparisonperiodsRequestTimeout() *GetRoutingQueueComparisonperiodsRequestTimeout {
	return &GetRoutingQueueComparisonperiodsRequestTimeout{}
}

/*
GetRoutingQueueComparisonperiodsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetRoutingQueueComparisonperiodsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing queue comparisonperiods request timeout response has a 2xx status code
func (o *GetRoutingQueueComparisonperiodsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing queue comparisonperiods request timeout response has a 3xx status code
func (o *GetRoutingQueueComparisonperiodsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing queue comparisonperiods request timeout response has a 4xx status code
func (o *GetRoutingQueueComparisonperiodsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing queue comparisonperiods request timeout response has a 5xx status code
func (o *GetRoutingQueueComparisonperiodsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing queue comparisonperiods request timeout response a status code equal to that given
func (o *GetRoutingQueueComparisonperiodsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetRoutingQueueComparisonperiodsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods][%d] getRoutingQueueComparisonperiodsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods][%d] getRoutingQueueComparisonperiodsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueComparisonperiodsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueComparisonperiodsRequestEntityTooLarge creates a GetRoutingQueueComparisonperiodsRequestEntityTooLarge with default headers values
func NewGetRoutingQueueComparisonperiodsRequestEntityTooLarge() *GetRoutingQueueComparisonperiodsRequestEntityTooLarge {
	return &GetRoutingQueueComparisonperiodsRequestEntityTooLarge{}
}

/*
GetRoutingQueueComparisonperiodsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetRoutingQueueComparisonperiodsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing queue comparisonperiods request entity too large response has a 2xx status code
func (o *GetRoutingQueueComparisonperiodsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing queue comparisonperiods request entity too large response has a 3xx status code
func (o *GetRoutingQueueComparisonperiodsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing queue comparisonperiods request entity too large response has a 4xx status code
func (o *GetRoutingQueueComparisonperiodsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing queue comparisonperiods request entity too large response has a 5xx status code
func (o *GetRoutingQueueComparisonperiodsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing queue comparisonperiods request entity too large response a status code equal to that given
func (o *GetRoutingQueueComparisonperiodsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetRoutingQueueComparisonperiodsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods][%d] getRoutingQueueComparisonperiodsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods][%d] getRoutingQueueComparisonperiodsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueComparisonperiodsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueComparisonperiodsUnsupportedMediaType creates a GetRoutingQueueComparisonperiodsUnsupportedMediaType with default headers values
func NewGetRoutingQueueComparisonperiodsUnsupportedMediaType() *GetRoutingQueueComparisonperiodsUnsupportedMediaType {
	return &GetRoutingQueueComparisonperiodsUnsupportedMediaType{}
}

/*
GetRoutingQueueComparisonperiodsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetRoutingQueueComparisonperiodsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing queue comparisonperiods unsupported media type response has a 2xx status code
func (o *GetRoutingQueueComparisonperiodsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing queue comparisonperiods unsupported media type response has a 3xx status code
func (o *GetRoutingQueueComparisonperiodsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing queue comparisonperiods unsupported media type response has a 4xx status code
func (o *GetRoutingQueueComparisonperiodsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing queue comparisonperiods unsupported media type response has a 5xx status code
func (o *GetRoutingQueueComparisonperiodsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing queue comparisonperiods unsupported media type response a status code equal to that given
func (o *GetRoutingQueueComparisonperiodsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetRoutingQueueComparisonperiodsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods][%d] getRoutingQueueComparisonperiodsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods][%d] getRoutingQueueComparisonperiodsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueComparisonperiodsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueComparisonperiodsTooManyRequests creates a GetRoutingQueueComparisonperiodsTooManyRequests with default headers values
func NewGetRoutingQueueComparisonperiodsTooManyRequests() *GetRoutingQueueComparisonperiodsTooManyRequests {
	return &GetRoutingQueueComparisonperiodsTooManyRequests{}
}

/*
GetRoutingQueueComparisonperiodsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetRoutingQueueComparisonperiodsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing queue comparisonperiods too many requests response has a 2xx status code
func (o *GetRoutingQueueComparisonperiodsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing queue comparisonperiods too many requests response has a 3xx status code
func (o *GetRoutingQueueComparisonperiodsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing queue comparisonperiods too many requests response has a 4xx status code
func (o *GetRoutingQueueComparisonperiodsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing queue comparisonperiods too many requests response has a 5xx status code
func (o *GetRoutingQueueComparisonperiodsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing queue comparisonperiods too many requests response a status code equal to that given
func (o *GetRoutingQueueComparisonperiodsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetRoutingQueueComparisonperiodsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods][%d] getRoutingQueueComparisonperiodsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods][%d] getRoutingQueueComparisonperiodsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueComparisonperiodsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueComparisonperiodsInternalServerError creates a GetRoutingQueueComparisonperiodsInternalServerError with default headers values
func NewGetRoutingQueueComparisonperiodsInternalServerError() *GetRoutingQueueComparisonperiodsInternalServerError {
	return &GetRoutingQueueComparisonperiodsInternalServerError{}
}

/*
GetRoutingQueueComparisonperiodsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetRoutingQueueComparisonperiodsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing queue comparisonperiods internal server error response has a 2xx status code
func (o *GetRoutingQueueComparisonperiodsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing queue comparisonperiods internal server error response has a 3xx status code
func (o *GetRoutingQueueComparisonperiodsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing queue comparisonperiods internal server error response has a 4xx status code
func (o *GetRoutingQueueComparisonperiodsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing queue comparisonperiods internal server error response has a 5xx status code
func (o *GetRoutingQueueComparisonperiodsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get routing queue comparisonperiods internal server error response a status code equal to that given
func (o *GetRoutingQueueComparisonperiodsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetRoutingQueueComparisonperiodsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods][%d] getRoutingQueueComparisonperiodsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods][%d] getRoutingQueueComparisonperiodsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueComparisonperiodsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueComparisonperiodsServiceUnavailable creates a GetRoutingQueueComparisonperiodsServiceUnavailable with default headers values
func NewGetRoutingQueueComparisonperiodsServiceUnavailable() *GetRoutingQueueComparisonperiodsServiceUnavailable {
	return &GetRoutingQueueComparisonperiodsServiceUnavailable{}
}

/*
GetRoutingQueueComparisonperiodsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetRoutingQueueComparisonperiodsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing queue comparisonperiods service unavailable response has a 2xx status code
func (o *GetRoutingQueueComparisonperiodsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing queue comparisonperiods service unavailable response has a 3xx status code
func (o *GetRoutingQueueComparisonperiodsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing queue comparisonperiods service unavailable response has a 4xx status code
func (o *GetRoutingQueueComparisonperiodsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing queue comparisonperiods service unavailable response has a 5xx status code
func (o *GetRoutingQueueComparisonperiodsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get routing queue comparisonperiods service unavailable response a status code equal to that given
func (o *GetRoutingQueueComparisonperiodsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetRoutingQueueComparisonperiodsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods][%d] getRoutingQueueComparisonperiodsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods][%d] getRoutingQueueComparisonperiodsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueComparisonperiodsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueComparisonperiodsGatewayTimeout creates a GetRoutingQueueComparisonperiodsGatewayTimeout with default headers values
func NewGetRoutingQueueComparisonperiodsGatewayTimeout() *GetRoutingQueueComparisonperiodsGatewayTimeout {
	return &GetRoutingQueueComparisonperiodsGatewayTimeout{}
}

/*
GetRoutingQueueComparisonperiodsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetRoutingQueueComparisonperiodsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing queue comparisonperiods gateway timeout response has a 2xx status code
func (o *GetRoutingQueueComparisonperiodsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing queue comparisonperiods gateway timeout response has a 3xx status code
func (o *GetRoutingQueueComparisonperiodsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing queue comparisonperiods gateway timeout response has a 4xx status code
func (o *GetRoutingQueueComparisonperiodsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing queue comparisonperiods gateway timeout response has a 5xx status code
func (o *GetRoutingQueueComparisonperiodsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get routing queue comparisonperiods gateway timeout response a status code equal to that given
func (o *GetRoutingQueueComparisonperiodsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetRoutingQueueComparisonperiodsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods][%d] getRoutingQueueComparisonperiodsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods][%d] getRoutingQueueComparisonperiodsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueComparisonperiodsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
