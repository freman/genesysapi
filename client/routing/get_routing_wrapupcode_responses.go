// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetRoutingWrapupcodeReader is a Reader for the GetRoutingWrapupcode structure.
type GetRoutingWrapupcodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRoutingWrapupcodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRoutingWrapupcodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRoutingWrapupcodeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRoutingWrapupcodeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRoutingWrapupcodeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRoutingWrapupcodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetRoutingWrapupcodeRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetRoutingWrapupcodeRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetRoutingWrapupcodeUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetRoutingWrapupcodeTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRoutingWrapupcodeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetRoutingWrapupcodeServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetRoutingWrapupcodeGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRoutingWrapupcodeOK creates a GetRoutingWrapupcodeOK with default headers values
func NewGetRoutingWrapupcodeOK() *GetRoutingWrapupcodeOK {
	return &GetRoutingWrapupcodeOK{}
}

/*GetRoutingWrapupcodeOK handles this case with default header values.

successful operation
*/
type GetRoutingWrapupcodeOK struct {
	Payload *models.WrapupCode
}

func (o *GetRoutingWrapupcodeOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/wrapupcodes/{codeId}][%d] getRoutingWrapupcodeOK  %+v", 200, o.Payload)
}

func (o *GetRoutingWrapupcodeOK) GetPayload() *models.WrapupCode {
	return o.Payload
}

func (o *GetRoutingWrapupcodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WrapupCode)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingWrapupcodeBadRequest creates a GetRoutingWrapupcodeBadRequest with default headers values
func NewGetRoutingWrapupcodeBadRequest() *GetRoutingWrapupcodeBadRequest {
	return &GetRoutingWrapupcodeBadRequest{}
}

/*GetRoutingWrapupcodeBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetRoutingWrapupcodeBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingWrapupcodeBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/wrapupcodes/{codeId}][%d] getRoutingWrapupcodeBadRequest  %+v", 400, o.Payload)
}

func (o *GetRoutingWrapupcodeBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingWrapupcodeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingWrapupcodeUnauthorized creates a GetRoutingWrapupcodeUnauthorized with default headers values
func NewGetRoutingWrapupcodeUnauthorized() *GetRoutingWrapupcodeUnauthorized {
	return &GetRoutingWrapupcodeUnauthorized{}
}

/*GetRoutingWrapupcodeUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetRoutingWrapupcodeUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingWrapupcodeUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/wrapupcodes/{codeId}][%d] getRoutingWrapupcodeUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRoutingWrapupcodeUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingWrapupcodeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingWrapupcodeForbidden creates a GetRoutingWrapupcodeForbidden with default headers values
func NewGetRoutingWrapupcodeForbidden() *GetRoutingWrapupcodeForbidden {
	return &GetRoutingWrapupcodeForbidden{}
}

/*GetRoutingWrapupcodeForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetRoutingWrapupcodeForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingWrapupcodeForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/wrapupcodes/{codeId}][%d] getRoutingWrapupcodeForbidden  %+v", 403, o.Payload)
}

func (o *GetRoutingWrapupcodeForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingWrapupcodeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingWrapupcodeNotFound creates a GetRoutingWrapupcodeNotFound with default headers values
func NewGetRoutingWrapupcodeNotFound() *GetRoutingWrapupcodeNotFound {
	return &GetRoutingWrapupcodeNotFound{}
}

/*GetRoutingWrapupcodeNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetRoutingWrapupcodeNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingWrapupcodeNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/wrapupcodes/{codeId}][%d] getRoutingWrapupcodeNotFound  %+v", 404, o.Payload)
}

func (o *GetRoutingWrapupcodeNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingWrapupcodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingWrapupcodeRequestTimeout creates a GetRoutingWrapupcodeRequestTimeout with default headers values
func NewGetRoutingWrapupcodeRequestTimeout() *GetRoutingWrapupcodeRequestTimeout {
	return &GetRoutingWrapupcodeRequestTimeout{}
}

/*GetRoutingWrapupcodeRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetRoutingWrapupcodeRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingWrapupcodeRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/wrapupcodes/{codeId}][%d] getRoutingWrapupcodeRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetRoutingWrapupcodeRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingWrapupcodeRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingWrapupcodeRequestEntityTooLarge creates a GetRoutingWrapupcodeRequestEntityTooLarge with default headers values
func NewGetRoutingWrapupcodeRequestEntityTooLarge() *GetRoutingWrapupcodeRequestEntityTooLarge {
	return &GetRoutingWrapupcodeRequestEntityTooLarge{}
}

/*GetRoutingWrapupcodeRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetRoutingWrapupcodeRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingWrapupcodeRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/wrapupcodes/{codeId}][%d] getRoutingWrapupcodeRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetRoutingWrapupcodeRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingWrapupcodeRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingWrapupcodeUnsupportedMediaType creates a GetRoutingWrapupcodeUnsupportedMediaType with default headers values
func NewGetRoutingWrapupcodeUnsupportedMediaType() *GetRoutingWrapupcodeUnsupportedMediaType {
	return &GetRoutingWrapupcodeUnsupportedMediaType{}
}

/*GetRoutingWrapupcodeUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetRoutingWrapupcodeUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingWrapupcodeUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/wrapupcodes/{codeId}][%d] getRoutingWrapupcodeUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetRoutingWrapupcodeUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingWrapupcodeUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingWrapupcodeTooManyRequests creates a GetRoutingWrapupcodeTooManyRequests with default headers values
func NewGetRoutingWrapupcodeTooManyRequests() *GetRoutingWrapupcodeTooManyRequests {
	return &GetRoutingWrapupcodeTooManyRequests{}
}

/*GetRoutingWrapupcodeTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetRoutingWrapupcodeTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingWrapupcodeTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/wrapupcodes/{codeId}][%d] getRoutingWrapupcodeTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRoutingWrapupcodeTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingWrapupcodeTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingWrapupcodeInternalServerError creates a GetRoutingWrapupcodeInternalServerError with default headers values
func NewGetRoutingWrapupcodeInternalServerError() *GetRoutingWrapupcodeInternalServerError {
	return &GetRoutingWrapupcodeInternalServerError{}
}

/*GetRoutingWrapupcodeInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetRoutingWrapupcodeInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingWrapupcodeInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/wrapupcodes/{codeId}][%d] getRoutingWrapupcodeInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRoutingWrapupcodeInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingWrapupcodeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingWrapupcodeServiceUnavailable creates a GetRoutingWrapupcodeServiceUnavailable with default headers values
func NewGetRoutingWrapupcodeServiceUnavailable() *GetRoutingWrapupcodeServiceUnavailable {
	return &GetRoutingWrapupcodeServiceUnavailable{}
}

/*GetRoutingWrapupcodeServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetRoutingWrapupcodeServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingWrapupcodeServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/wrapupcodes/{codeId}][%d] getRoutingWrapupcodeServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetRoutingWrapupcodeServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingWrapupcodeServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingWrapupcodeGatewayTimeout creates a GetRoutingWrapupcodeGatewayTimeout with default headers values
func NewGetRoutingWrapupcodeGatewayTimeout() *GetRoutingWrapupcodeGatewayTimeout {
	return &GetRoutingWrapupcodeGatewayTimeout{}
}

/*GetRoutingWrapupcodeGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetRoutingWrapupcodeGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingWrapupcodeGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/wrapupcodes/{codeId}][%d] getRoutingWrapupcodeGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetRoutingWrapupcodeGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingWrapupcodeGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
