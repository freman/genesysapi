// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetRoutingEmailOutboundDomainActivationReader is a Reader for the GetRoutingEmailOutboundDomainActivation structure.
type GetRoutingEmailOutboundDomainActivationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRoutingEmailOutboundDomainActivationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRoutingEmailOutboundDomainActivationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRoutingEmailOutboundDomainActivationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRoutingEmailOutboundDomainActivationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRoutingEmailOutboundDomainActivationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRoutingEmailOutboundDomainActivationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetRoutingEmailOutboundDomainActivationRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetRoutingEmailOutboundDomainActivationRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetRoutingEmailOutboundDomainActivationUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetRoutingEmailOutboundDomainActivationTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRoutingEmailOutboundDomainActivationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetRoutingEmailOutboundDomainActivationServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetRoutingEmailOutboundDomainActivationGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRoutingEmailOutboundDomainActivationOK creates a GetRoutingEmailOutboundDomainActivationOK with default headers values
func NewGetRoutingEmailOutboundDomainActivationOK() *GetRoutingEmailOutboundDomainActivationOK {
	return &GetRoutingEmailOutboundDomainActivationOK{}
}

/*
GetRoutingEmailOutboundDomainActivationOK describes a response with status code 200, with default header values.

successful operation
*/
type GetRoutingEmailOutboundDomainActivationOK struct {
	Payload *models.EmailOutboundDomainResult
}

// IsSuccess returns true when this get routing email outbound domain activation o k response has a 2xx status code
func (o *GetRoutingEmailOutboundDomainActivationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get routing email outbound domain activation o k response has a 3xx status code
func (o *GetRoutingEmailOutboundDomainActivationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing email outbound domain activation o k response has a 4xx status code
func (o *GetRoutingEmailOutboundDomainActivationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing email outbound domain activation o k response has a 5xx status code
func (o *GetRoutingEmailOutboundDomainActivationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing email outbound domain activation o k response a status code equal to that given
func (o *GetRoutingEmailOutboundDomainActivationOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetRoutingEmailOutboundDomainActivationOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] getRoutingEmailOutboundDomainActivationOK  %+v", 200, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainActivationOK) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] getRoutingEmailOutboundDomainActivationOK  %+v", 200, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainActivationOK) GetPayload() *models.EmailOutboundDomainResult {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainActivationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EmailOutboundDomainResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainActivationBadRequest creates a GetRoutingEmailOutboundDomainActivationBadRequest with default headers values
func NewGetRoutingEmailOutboundDomainActivationBadRequest() *GetRoutingEmailOutboundDomainActivationBadRequest {
	return &GetRoutingEmailOutboundDomainActivationBadRequest{}
}

/*
GetRoutingEmailOutboundDomainActivationBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetRoutingEmailOutboundDomainActivationBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing email outbound domain activation bad request response has a 2xx status code
func (o *GetRoutingEmailOutboundDomainActivationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing email outbound domain activation bad request response has a 3xx status code
func (o *GetRoutingEmailOutboundDomainActivationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing email outbound domain activation bad request response has a 4xx status code
func (o *GetRoutingEmailOutboundDomainActivationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing email outbound domain activation bad request response has a 5xx status code
func (o *GetRoutingEmailOutboundDomainActivationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing email outbound domain activation bad request response a status code equal to that given
func (o *GetRoutingEmailOutboundDomainActivationBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetRoutingEmailOutboundDomainActivationBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] getRoutingEmailOutboundDomainActivationBadRequest  %+v", 400, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainActivationBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] getRoutingEmailOutboundDomainActivationBadRequest  %+v", 400, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainActivationBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainActivationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainActivationUnauthorized creates a GetRoutingEmailOutboundDomainActivationUnauthorized with default headers values
func NewGetRoutingEmailOutboundDomainActivationUnauthorized() *GetRoutingEmailOutboundDomainActivationUnauthorized {
	return &GetRoutingEmailOutboundDomainActivationUnauthorized{}
}

/*
GetRoutingEmailOutboundDomainActivationUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetRoutingEmailOutboundDomainActivationUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing email outbound domain activation unauthorized response has a 2xx status code
func (o *GetRoutingEmailOutboundDomainActivationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing email outbound domain activation unauthorized response has a 3xx status code
func (o *GetRoutingEmailOutboundDomainActivationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing email outbound domain activation unauthorized response has a 4xx status code
func (o *GetRoutingEmailOutboundDomainActivationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing email outbound domain activation unauthorized response has a 5xx status code
func (o *GetRoutingEmailOutboundDomainActivationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing email outbound domain activation unauthorized response a status code equal to that given
func (o *GetRoutingEmailOutboundDomainActivationUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetRoutingEmailOutboundDomainActivationUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] getRoutingEmailOutboundDomainActivationUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainActivationUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] getRoutingEmailOutboundDomainActivationUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainActivationUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainActivationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainActivationForbidden creates a GetRoutingEmailOutboundDomainActivationForbidden with default headers values
func NewGetRoutingEmailOutboundDomainActivationForbidden() *GetRoutingEmailOutboundDomainActivationForbidden {
	return &GetRoutingEmailOutboundDomainActivationForbidden{}
}

/*
GetRoutingEmailOutboundDomainActivationForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetRoutingEmailOutboundDomainActivationForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing email outbound domain activation forbidden response has a 2xx status code
func (o *GetRoutingEmailOutboundDomainActivationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing email outbound domain activation forbidden response has a 3xx status code
func (o *GetRoutingEmailOutboundDomainActivationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing email outbound domain activation forbidden response has a 4xx status code
func (o *GetRoutingEmailOutboundDomainActivationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing email outbound domain activation forbidden response has a 5xx status code
func (o *GetRoutingEmailOutboundDomainActivationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing email outbound domain activation forbidden response a status code equal to that given
func (o *GetRoutingEmailOutboundDomainActivationForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetRoutingEmailOutboundDomainActivationForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] getRoutingEmailOutboundDomainActivationForbidden  %+v", 403, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainActivationForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] getRoutingEmailOutboundDomainActivationForbidden  %+v", 403, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainActivationForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainActivationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainActivationNotFound creates a GetRoutingEmailOutboundDomainActivationNotFound with default headers values
func NewGetRoutingEmailOutboundDomainActivationNotFound() *GetRoutingEmailOutboundDomainActivationNotFound {
	return &GetRoutingEmailOutboundDomainActivationNotFound{}
}

/*
GetRoutingEmailOutboundDomainActivationNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetRoutingEmailOutboundDomainActivationNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing email outbound domain activation not found response has a 2xx status code
func (o *GetRoutingEmailOutboundDomainActivationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing email outbound domain activation not found response has a 3xx status code
func (o *GetRoutingEmailOutboundDomainActivationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing email outbound domain activation not found response has a 4xx status code
func (o *GetRoutingEmailOutboundDomainActivationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing email outbound domain activation not found response has a 5xx status code
func (o *GetRoutingEmailOutboundDomainActivationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing email outbound domain activation not found response a status code equal to that given
func (o *GetRoutingEmailOutboundDomainActivationNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetRoutingEmailOutboundDomainActivationNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] getRoutingEmailOutboundDomainActivationNotFound  %+v", 404, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainActivationNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] getRoutingEmailOutboundDomainActivationNotFound  %+v", 404, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainActivationNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainActivationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainActivationRequestTimeout creates a GetRoutingEmailOutboundDomainActivationRequestTimeout with default headers values
func NewGetRoutingEmailOutboundDomainActivationRequestTimeout() *GetRoutingEmailOutboundDomainActivationRequestTimeout {
	return &GetRoutingEmailOutboundDomainActivationRequestTimeout{}
}

/*
GetRoutingEmailOutboundDomainActivationRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetRoutingEmailOutboundDomainActivationRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing email outbound domain activation request timeout response has a 2xx status code
func (o *GetRoutingEmailOutboundDomainActivationRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing email outbound domain activation request timeout response has a 3xx status code
func (o *GetRoutingEmailOutboundDomainActivationRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing email outbound domain activation request timeout response has a 4xx status code
func (o *GetRoutingEmailOutboundDomainActivationRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing email outbound domain activation request timeout response has a 5xx status code
func (o *GetRoutingEmailOutboundDomainActivationRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing email outbound domain activation request timeout response a status code equal to that given
func (o *GetRoutingEmailOutboundDomainActivationRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetRoutingEmailOutboundDomainActivationRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] getRoutingEmailOutboundDomainActivationRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainActivationRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] getRoutingEmailOutboundDomainActivationRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainActivationRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainActivationRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainActivationRequestEntityTooLarge creates a GetRoutingEmailOutboundDomainActivationRequestEntityTooLarge with default headers values
func NewGetRoutingEmailOutboundDomainActivationRequestEntityTooLarge() *GetRoutingEmailOutboundDomainActivationRequestEntityTooLarge {
	return &GetRoutingEmailOutboundDomainActivationRequestEntityTooLarge{}
}

/*
GetRoutingEmailOutboundDomainActivationRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetRoutingEmailOutboundDomainActivationRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing email outbound domain activation request entity too large response has a 2xx status code
func (o *GetRoutingEmailOutboundDomainActivationRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing email outbound domain activation request entity too large response has a 3xx status code
func (o *GetRoutingEmailOutboundDomainActivationRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing email outbound domain activation request entity too large response has a 4xx status code
func (o *GetRoutingEmailOutboundDomainActivationRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing email outbound domain activation request entity too large response has a 5xx status code
func (o *GetRoutingEmailOutboundDomainActivationRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing email outbound domain activation request entity too large response a status code equal to that given
func (o *GetRoutingEmailOutboundDomainActivationRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetRoutingEmailOutboundDomainActivationRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] getRoutingEmailOutboundDomainActivationRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainActivationRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] getRoutingEmailOutboundDomainActivationRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainActivationRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainActivationRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainActivationUnsupportedMediaType creates a GetRoutingEmailOutboundDomainActivationUnsupportedMediaType with default headers values
func NewGetRoutingEmailOutboundDomainActivationUnsupportedMediaType() *GetRoutingEmailOutboundDomainActivationUnsupportedMediaType {
	return &GetRoutingEmailOutboundDomainActivationUnsupportedMediaType{}
}

/*
GetRoutingEmailOutboundDomainActivationUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetRoutingEmailOutboundDomainActivationUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing email outbound domain activation unsupported media type response has a 2xx status code
func (o *GetRoutingEmailOutboundDomainActivationUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing email outbound domain activation unsupported media type response has a 3xx status code
func (o *GetRoutingEmailOutboundDomainActivationUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing email outbound domain activation unsupported media type response has a 4xx status code
func (o *GetRoutingEmailOutboundDomainActivationUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing email outbound domain activation unsupported media type response has a 5xx status code
func (o *GetRoutingEmailOutboundDomainActivationUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing email outbound domain activation unsupported media type response a status code equal to that given
func (o *GetRoutingEmailOutboundDomainActivationUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetRoutingEmailOutboundDomainActivationUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] getRoutingEmailOutboundDomainActivationUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainActivationUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] getRoutingEmailOutboundDomainActivationUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainActivationUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainActivationUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainActivationTooManyRequests creates a GetRoutingEmailOutboundDomainActivationTooManyRequests with default headers values
func NewGetRoutingEmailOutboundDomainActivationTooManyRequests() *GetRoutingEmailOutboundDomainActivationTooManyRequests {
	return &GetRoutingEmailOutboundDomainActivationTooManyRequests{}
}

/*
GetRoutingEmailOutboundDomainActivationTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetRoutingEmailOutboundDomainActivationTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing email outbound domain activation too many requests response has a 2xx status code
func (o *GetRoutingEmailOutboundDomainActivationTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing email outbound domain activation too many requests response has a 3xx status code
func (o *GetRoutingEmailOutboundDomainActivationTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing email outbound domain activation too many requests response has a 4xx status code
func (o *GetRoutingEmailOutboundDomainActivationTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get routing email outbound domain activation too many requests response has a 5xx status code
func (o *GetRoutingEmailOutboundDomainActivationTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get routing email outbound domain activation too many requests response a status code equal to that given
func (o *GetRoutingEmailOutboundDomainActivationTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetRoutingEmailOutboundDomainActivationTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] getRoutingEmailOutboundDomainActivationTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainActivationTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] getRoutingEmailOutboundDomainActivationTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainActivationTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainActivationTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainActivationInternalServerError creates a GetRoutingEmailOutboundDomainActivationInternalServerError with default headers values
func NewGetRoutingEmailOutboundDomainActivationInternalServerError() *GetRoutingEmailOutboundDomainActivationInternalServerError {
	return &GetRoutingEmailOutboundDomainActivationInternalServerError{}
}

/*
GetRoutingEmailOutboundDomainActivationInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetRoutingEmailOutboundDomainActivationInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing email outbound domain activation internal server error response has a 2xx status code
func (o *GetRoutingEmailOutboundDomainActivationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing email outbound domain activation internal server error response has a 3xx status code
func (o *GetRoutingEmailOutboundDomainActivationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing email outbound domain activation internal server error response has a 4xx status code
func (o *GetRoutingEmailOutboundDomainActivationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing email outbound domain activation internal server error response has a 5xx status code
func (o *GetRoutingEmailOutboundDomainActivationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get routing email outbound domain activation internal server error response a status code equal to that given
func (o *GetRoutingEmailOutboundDomainActivationInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetRoutingEmailOutboundDomainActivationInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] getRoutingEmailOutboundDomainActivationInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainActivationInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] getRoutingEmailOutboundDomainActivationInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainActivationInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainActivationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainActivationServiceUnavailable creates a GetRoutingEmailOutboundDomainActivationServiceUnavailable with default headers values
func NewGetRoutingEmailOutboundDomainActivationServiceUnavailable() *GetRoutingEmailOutboundDomainActivationServiceUnavailable {
	return &GetRoutingEmailOutboundDomainActivationServiceUnavailable{}
}

/*
GetRoutingEmailOutboundDomainActivationServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetRoutingEmailOutboundDomainActivationServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing email outbound domain activation service unavailable response has a 2xx status code
func (o *GetRoutingEmailOutboundDomainActivationServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing email outbound domain activation service unavailable response has a 3xx status code
func (o *GetRoutingEmailOutboundDomainActivationServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing email outbound domain activation service unavailable response has a 4xx status code
func (o *GetRoutingEmailOutboundDomainActivationServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing email outbound domain activation service unavailable response has a 5xx status code
func (o *GetRoutingEmailOutboundDomainActivationServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get routing email outbound domain activation service unavailable response a status code equal to that given
func (o *GetRoutingEmailOutboundDomainActivationServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetRoutingEmailOutboundDomainActivationServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] getRoutingEmailOutboundDomainActivationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainActivationServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] getRoutingEmailOutboundDomainActivationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainActivationServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainActivationServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingEmailOutboundDomainActivationGatewayTimeout creates a GetRoutingEmailOutboundDomainActivationGatewayTimeout with default headers values
func NewGetRoutingEmailOutboundDomainActivationGatewayTimeout() *GetRoutingEmailOutboundDomainActivationGatewayTimeout {
	return &GetRoutingEmailOutboundDomainActivationGatewayTimeout{}
}

/*
GetRoutingEmailOutboundDomainActivationGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetRoutingEmailOutboundDomainActivationGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get routing email outbound domain activation gateway timeout response has a 2xx status code
func (o *GetRoutingEmailOutboundDomainActivationGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get routing email outbound domain activation gateway timeout response has a 3xx status code
func (o *GetRoutingEmailOutboundDomainActivationGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get routing email outbound domain activation gateway timeout response has a 4xx status code
func (o *GetRoutingEmailOutboundDomainActivationGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get routing email outbound domain activation gateway timeout response has a 5xx status code
func (o *GetRoutingEmailOutboundDomainActivationGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get routing email outbound domain activation gateway timeout response a status code equal to that given
func (o *GetRoutingEmailOutboundDomainActivationGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetRoutingEmailOutboundDomainActivationGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] getRoutingEmailOutboundDomainActivationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainActivationGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/routing/email/outbound/domains/{domainId}/activation][%d] getRoutingEmailOutboundDomainActivationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetRoutingEmailOutboundDomainActivationGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingEmailOutboundDomainActivationGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
