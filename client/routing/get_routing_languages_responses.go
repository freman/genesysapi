// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetRoutingLanguagesReader is a Reader for the GetRoutingLanguages structure.
type GetRoutingLanguagesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRoutingLanguagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRoutingLanguagesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRoutingLanguagesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRoutingLanguagesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRoutingLanguagesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRoutingLanguagesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetRoutingLanguagesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetRoutingLanguagesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetRoutingLanguagesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetRoutingLanguagesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRoutingLanguagesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetRoutingLanguagesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetRoutingLanguagesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRoutingLanguagesOK creates a GetRoutingLanguagesOK with default headers values
func NewGetRoutingLanguagesOK() *GetRoutingLanguagesOK {
	return &GetRoutingLanguagesOK{}
}

/*GetRoutingLanguagesOK handles this case with default header values.

successful operation
*/
type GetRoutingLanguagesOK struct {
	Payload *models.LanguageEntityListing
}

func (o *GetRoutingLanguagesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/languages][%d] getRoutingLanguagesOK  %+v", 200, o.Payload)
}

func (o *GetRoutingLanguagesOK) GetPayload() *models.LanguageEntityListing {
	return o.Payload
}

func (o *GetRoutingLanguagesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LanguageEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingLanguagesBadRequest creates a GetRoutingLanguagesBadRequest with default headers values
func NewGetRoutingLanguagesBadRequest() *GetRoutingLanguagesBadRequest {
	return &GetRoutingLanguagesBadRequest{}
}

/*GetRoutingLanguagesBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetRoutingLanguagesBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingLanguagesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/languages][%d] getRoutingLanguagesBadRequest  %+v", 400, o.Payload)
}

func (o *GetRoutingLanguagesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingLanguagesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingLanguagesUnauthorized creates a GetRoutingLanguagesUnauthorized with default headers values
func NewGetRoutingLanguagesUnauthorized() *GetRoutingLanguagesUnauthorized {
	return &GetRoutingLanguagesUnauthorized{}
}

/*GetRoutingLanguagesUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetRoutingLanguagesUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingLanguagesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/languages][%d] getRoutingLanguagesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRoutingLanguagesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingLanguagesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingLanguagesForbidden creates a GetRoutingLanguagesForbidden with default headers values
func NewGetRoutingLanguagesForbidden() *GetRoutingLanguagesForbidden {
	return &GetRoutingLanguagesForbidden{}
}

/*GetRoutingLanguagesForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetRoutingLanguagesForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingLanguagesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/languages][%d] getRoutingLanguagesForbidden  %+v", 403, o.Payload)
}

func (o *GetRoutingLanguagesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingLanguagesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingLanguagesNotFound creates a GetRoutingLanguagesNotFound with default headers values
func NewGetRoutingLanguagesNotFound() *GetRoutingLanguagesNotFound {
	return &GetRoutingLanguagesNotFound{}
}

/*GetRoutingLanguagesNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetRoutingLanguagesNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingLanguagesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/languages][%d] getRoutingLanguagesNotFound  %+v", 404, o.Payload)
}

func (o *GetRoutingLanguagesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingLanguagesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingLanguagesRequestTimeout creates a GetRoutingLanguagesRequestTimeout with default headers values
func NewGetRoutingLanguagesRequestTimeout() *GetRoutingLanguagesRequestTimeout {
	return &GetRoutingLanguagesRequestTimeout{}
}

/*GetRoutingLanguagesRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetRoutingLanguagesRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingLanguagesRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/languages][%d] getRoutingLanguagesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetRoutingLanguagesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingLanguagesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingLanguagesRequestEntityTooLarge creates a GetRoutingLanguagesRequestEntityTooLarge with default headers values
func NewGetRoutingLanguagesRequestEntityTooLarge() *GetRoutingLanguagesRequestEntityTooLarge {
	return &GetRoutingLanguagesRequestEntityTooLarge{}
}

/*GetRoutingLanguagesRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetRoutingLanguagesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingLanguagesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/languages][%d] getRoutingLanguagesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetRoutingLanguagesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingLanguagesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingLanguagesUnsupportedMediaType creates a GetRoutingLanguagesUnsupportedMediaType with default headers values
func NewGetRoutingLanguagesUnsupportedMediaType() *GetRoutingLanguagesUnsupportedMediaType {
	return &GetRoutingLanguagesUnsupportedMediaType{}
}

/*GetRoutingLanguagesUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetRoutingLanguagesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingLanguagesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/languages][%d] getRoutingLanguagesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetRoutingLanguagesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingLanguagesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingLanguagesTooManyRequests creates a GetRoutingLanguagesTooManyRequests with default headers values
func NewGetRoutingLanguagesTooManyRequests() *GetRoutingLanguagesTooManyRequests {
	return &GetRoutingLanguagesTooManyRequests{}
}

/*GetRoutingLanguagesTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetRoutingLanguagesTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingLanguagesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/languages][%d] getRoutingLanguagesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRoutingLanguagesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingLanguagesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingLanguagesInternalServerError creates a GetRoutingLanguagesInternalServerError with default headers values
func NewGetRoutingLanguagesInternalServerError() *GetRoutingLanguagesInternalServerError {
	return &GetRoutingLanguagesInternalServerError{}
}

/*GetRoutingLanguagesInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetRoutingLanguagesInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingLanguagesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/languages][%d] getRoutingLanguagesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRoutingLanguagesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingLanguagesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingLanguagesServiceUnavailable creates a GetRoutingLanguagesServiceUnavailable with default headers values
func NewGetRoutingLanguagesServiceUnavailable() *GetRoutingLanguagesServiceUnavailable {
	return &GetRoutingLanguagesServiceUnavailable{}
}

/*GetRoutingLanguagesServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetRoutingLanguagesServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingLanguagesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/languages][%d] getRoutingLanguagesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetRoutingLanguagesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingLanguagesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingLanguagesGatewayTimeout creates a GetRoutingLanguagesGatewayTimeout with default headers values
func NewGetRoutingLanguagesGatewayTimeout() *GetRoutingLanguagesGatewayTimeout {
	return &GetRoutingLanguagesGatewayTimeout{}
}

/*GetRoutingLanguagesGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetRoutingLanguagesGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingLanguagesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/languages][%d] getRoutingLanguagesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetRoutingLanguagesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingLanguagesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
