// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetRoutingSkillReader is a Reader for the GetRoutingSkill structure.
type GetRoutingSkillReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRoutingSkillReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRoutingSkillOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRoutingSkillBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRoutingSkillUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRoutingSkillForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRoutingSkillNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetRoutingSkillRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetRoutingSkillUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetRoutingSkillTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRoutingSkillInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetRoutingSkillServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetRoutingSkillGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRoutingSkillOK creates a GetRoutingSkillOK with default headers values
func NewGetRoutingSkillOK() *GetRoutingSkillOK {
	return &GetRoutingSkillOK{}
}

/*GetRoutingSkillOK handles this case with default header values.

successful operation
*/
type GetRoutingSkillOK struct {
	Payload *models.RoutingSkill
}

func (o *GetRoutingSkillOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/skills/{skillId}][%d] getRoutingSkillOK  %+v", 200, o.Payload)
}

func (o *GetRoutingSkillOK) GetPayload() *models.RoutingSkill {
	return o.Payload
}

func (o *GetRoutingSkillOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RoutingSkill)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingSkillBadRequest creates a GetRoutingSkillBadRequest with default headers values
func NewGetRoutingSkillBadRequest() *GetRoutingSkillBadRequest {
	return &GetRoutingSkillBadRequest{}
}

/*GetRoutingSkillBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetRoutingSkillBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingSkillBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/skills/{skillId}][%d] getRoutingSkillBadRequest  %+v", 400, o.Payload)
}

func (o *GetRoutingSkillBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingSkillBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingSkillUnauthorized creates a GetRoutingSkillUnauthorized with default headers values
func NewGetRoutingSkillUnauthorized() *GetRoutingSkillUnauthorized {
	return &GetRoutingSkillUnauthorized{}
}

/*GetRoutingSkillUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetRoutingSkillUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingSkillUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/skills/{skillId}][%d] getRoutingSkillUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRoutingSkillUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingSkillUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingSkillForbidden creates a GetRoutingSkillForbidden with default headers values
func NewGetRoutingSkillForbidden() *GetRoutingSkillForbidden {
	return &GetRoutingSkillForbidden{}
}

/*GetRoutingSkillForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetRoutingSkillForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingSkillForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/skills/{skillId}][%d] getRoutingSkillForbidden  %+v", 403, o.Payload)
}

func (o *GetRoutingSkillForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingSkillForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingSkillNotFound creates a GetRoutingSkillNotFound with default headers values
func NewGetRoutingSkillNotFound() *GetRoutingSkillNotFound {
	return &GetRoutingSkillNotFound{}
}

/*GetRoutingSkillNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetRoutingSkillNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingSkillNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/skills/{skillId}][%d] getRoutingSkillNotFound  %+v", 404, o.Payload)
}

func (o *GetRoutingSkillNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingSkillNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingSkillRequestEntityTooLarge creates a GetRoutingSkillRequestEntityTooLarge with default headers values
func NewGetRoutingSkillRequestEntityTooLarge() *GetRoutingSkillRequestEntityTooLarge {
	return &GetRoutingSkillRequestEntityTooLarge{}
}

/*GetRoutingSkillRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetRoutingSkillRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingSkillRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/skills/{skillId}][%d] getRoutingSkillRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetRoutingSkillRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingSkillRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingSkillUnsupportedMediaType creates a GetRoutingSkillUnsupportedMediaType with default headers values
func NewGetRoutingSkillUnsupportedMediaType() *GetRoutingSkillUnsupportedMediaType {
	return &GetRoutingSkillUnsupportedMediaType{}
}

/*GetRoutingSkillUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetRoutingSkillUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingSkillUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/skills/{skillId}][%d] getRoutingSkillUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetRoutingSkillUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingSkillUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingSkillTooManyRequests creates a GetRoutingSkillTooManyRequests with default headers values
func NewGetRoutingSkillTooManyRequests() *GetRoutingSkillTooManyRequests {
	return &GetRoutingSkillTooManyRequests{}
}

/*GetRoutingSkillTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type GetRoutingSkillTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingSkillTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/skills/{skillId}][%d] getRoutingSkillTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRoutingSkillTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingSkillTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingSkillInternalServerError creates a GetRoutingSkillInternalServerError with default headers values
func NewGetRoutingSkillInternalServerError() *GetRoutingSkillInternalServerError {
	return &GetRoutingSkillInternalServerError{}
}

/*GetRoutingSkillInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetRoutingSkillInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingSkillInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/skills/{skillId}][%d] getRoutingSkillInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRoutingSkillInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingSkillInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingSkillServiceUnavailable creates a GetRoutingSkillServiceUnavailable with default headers values
func NewGetRoutingSkillServiceUnavailable() *GetRoutingSkillServiceUnavailable {
	return &GetRoutingSkillServiceUnavailable{}
}

/*GetRoutingSkillServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetRoutingSkillServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingSkillServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/skills/{skillId}][%d] getRoutingSkillServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetRoutingSkillServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingSkillServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingSkillGatewayTimeout creates a GetRoutingSkillGatewayTimeout with default headers values
func NewGetRoutingSkillGatewayTimeout() *GetRoutingSkillGatewayTimeout {
	return &GetRoutingSkillGatewayTimeout{}
}

/*GetRoutingSkillGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetRoutingSkillGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingSkillGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/skills/{skillId}][%d] getRoutingSkillGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetRoutingSkillGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingSkillGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
