// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostRoutingEmailDomainsReader is a Reader for the PostRoutingEmailDomains structure.
type PostRoutingEmailDomainsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRoutingEmailDomainsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostRoutingEmailDomainsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostRoutingEmailDomainsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostRoutingEmailDomainsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostRoutingEmailDomainsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostRoutingEmailDomainsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostRoutingEmailDomainsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostRoutingEmailDomainsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostRoutingEmailDomainsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostRoutingEmailDomainsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostRoutingEmailDomainsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostRoutingEmailDomainsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostRoutingEmailDomainsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostRoutingEmailDomainsOK creates a PostRoutingEmailDomainsOK with default headers values
func NewPostRoutingEmailDomainsOK() *PostRoutingEmailDomainsOK {
	return &PostRoutingEmailDomainsOK{}
}

/*
PostRoutingEmailDomainsOK describes a response with status code 200, with default header values.

successful operation
*/
type PostRoutingEmailDomainsOK struct {
	Payload *models.InboundDomain
}

// IsSuccess returns true when this post routing email domains o k response has a 2xx status code
func (o *PostRoutingEmailDomainsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post routing email domains o k response has a 3xx status code
func (o *PostRoutingEmailDomainsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email domains o k response has a 4xx status code
func (o *PostRoutingEmailDomainsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing email domains o k response has a 5xx status code
func (o *PostRoutingEmailDomainsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing email domains o k response a status code equal to that given
func (o *PostRoutingEmailDomainsOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostRoutingEmailDomainsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains][%d] postRoutingEmailDomainsOK  %+v", 200, o.Payload)
}

func (o *PostRoutingEmailDomainsOK) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains][%d] postRoutingEmailDomainsOK  %+v", 200, o.Payload)
}

func (o *PostRoutingEmailDomainsOK) GetPayload() *models.InboundDomain {
	return o.Payload
}

func (o *PostRoutingEmailDomainsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InboundDomain)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailDomainsBadRequest creates a PostRoutingEmailDomainsBadRequest with default headers values
func NewPostRoutingEmailDomainsBadRequest() *PostRoutingEmailDomainsBadRequest {
	return &PostRoutingEmailDomainsBadRequest{}
}

/*
PostRoutingEmailDomainsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostRoutingEmailDomainsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email domains bad request response has a 2xx status code
func (o *PostRoutingEmailDomainsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email domains bad request response has a 3xx status code
func (o *PostRoutingEmailDomainsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email domains bad request response has a 4xx status code
func (o *PostRoutingEmailDomainsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing email domains bad request response has a 5xx status code
func (o *PostRoutingEmailDomainsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing email domains bad request response a status code equal to that given
func (o *PostRoutingEmailDomainsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostRoutingEmailDomainsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains][%d] postRoutingEmailDomainsBadRequest  %+v", 400, o.Payload)
}

func (o *PostRoutingEmailDomainsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains][%d] postRoutingEmailDomainsBadRequest  %+v", 400, o.Payload)
}

func (o *PostRoutingEmailDomainsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailDomainsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailDomainsUnauthorized creates a PostRoutingEmailDomainsUnauthorized with default headers values
func NewPostRoutingEmailDomainsUnauthorized() *PostRoutingEmailDomainsUnauthorized {
	return &PostRoutingEmailDomainsUnauthorized{}
}

/*
PostRoutingEmailDomainsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostRoutingEmailDomainsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email domains unauthorized response has a 2xx status code
func (o *PostRoutingEmailDomainsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email domains unauthorized response has a 3xx status code
func (o *PostRoutingEmailDomainsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email domains unauthorized response has a 4xx status code
func (o *PostRoutingEmailDomainsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing email domains unauthorized response has a 5xx status code
func (o *PostRoutingEmailDomainsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing email domains unauthorized response a status code equal to that given
func (o *PostRoutingEmailDomainsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostRoutingEmailDomainsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains][%d] postRoutingEmailDomainsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostRoutingEmailDomainsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains][%d] postRoutingEmailDomainsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostRoutingEmailDomainsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailDomainsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailDomainsForbidden creates a PostRoutingEmailDomainsForbidden with default headers values
func NewPostRoutingEmailDomainsForbidden() *PostRoutingEmailDomainsForbidden {
	return &PostRoutingEmailDomainsForbidden{}
}

/*
PostRoutingEmailDomainsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostRoutingEmailDomainsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email domains forbidden response has a 2xx status code
func (o *PostRoutingEmailDomainsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email domains forbidden response has a 3xx status code
func (o *PostRoutingEmailDomainsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email domains forbidden response has a 4xx status code
func (o *PostRoutingEmailDomainsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing email domains forbidden response has a 5xx status code
func (o *PostRoutingEmailDomainsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing email domains forbidden response a status code equal to that given
func (o *PostRoutingEmailDomainsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostRoutingEmailDomainsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains][%d] postRoutingEmailDomainsForbidden  %+v", 403, o.Payload)
}

func (o *PostRoutingEmailDomainsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains][%d] postRoutingEmailDomainsForbidden  %+v", 403, o.Payload)
}

func (o *PostRoutingEmailDomainsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailDomainsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailDomainsNotFound creates a PostRoutingEmailDomainsNotFound with default headers values
func NewPostRoutingEmailDomainsNotFound() *PostRoutingEmailDomainsNotFound {
	return &PostRoutingEmailDomainsNotFound{}
}

/*
PostRoutingEmailDomainsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostRoutingEmailDomainsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email domains not found response has a 2xx status code
func (o *PostRoutingEmailDomainsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email domains not found response has a 3xx status code
func (o *PostRoutingEmailDomainsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email domains not found response has a 4xx status code
func (o *PostRoutingEmailDomainsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing email domains not found response has a 5xx status code
func (o *PostRoutingEmailDomainsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing email domains not found response a status code equal to that given
func (o *PostRoutingEmailDomainsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostRoutingEmailDomainsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains][%d] postRoutingEmailDomainsNotFound  %+v", 404, o.Payload)
}

func (o *PostRoutingEmailDomainsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains][%d] postRoutingEmailDomainsNotFound  %+v", 404, o.Payload)
}

func (o *PostRoutingEmailDomainsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailDomainsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailDomainsRequestTimeout creates a PostRoutingEmailDomainsRequestTimeout with default headers values
func NewPostRoutingEmailDomainsRequestTimeout() *PostRoutingEmailDomainsRequestTimeout {
	return &PostRoutingEmailDomainsRequestTimeout{}
}

/*
PostRoutingEmailDomainsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostRoutingEmailDomainsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email domains request timeout response has a 2xx status code
func (o *PostRoutingEmailDomainsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email domains request timeout response has a 3xx status code
func (o *PostRoutingEmailDomainsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email domains request timeout response has a 4xx status code
func (o *PostRoutingEmailDomainsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing email domains request timeout response has a 5xx status code
func (o *PostRoutingEmailDomainsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing email domains request timeout response a status code equal to that given
func (o *PostRoutingEmailDomainsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostRoutingEmailDomainsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains][%d] postRoutingEmailDomainsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostRoutingEmailDomainsRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains][%d] postRoutingEmailDomainsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostRoutingEmailDomainsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailDomainsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailDomainsRequestEntityTooLarge creates a PostRoutingEmailDomainsRequestEntityTooLarge with default headers values
func NewPostRoutingEmailDomainsRequestEntityTooLarge() *PostRoutingEmailDomainsRequestEntityTooLarge {
	return &PostRoutingEmailDomainsRequestEntityTooLarge{}
}

/*
PostRoutingEmailDomainsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostRoutingEmailDomainsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email domains request entity too large response has a 2xx status code
func (o *PostRoutingEmailDomainsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email domains request entity too large response has a 3xx status code
func (o *PostRoutingEmailDomainsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email domains request entity too large response has a 4xx status code
func (o *PostRoutingEmailDomainsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing email domains request entity too large response has a 5xx status code
func (o *PostRoutingEmailDomainsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing email domains request entity too large response a status code equal to that given
func (o *PostRoutingEmailDomainsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostRoutingEmailDomainsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains][%d] postRoutingEmailDomainsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostRoutingEmailDomainsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains][%d] postRoutingEmailDomainsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostRoutingEmailDomainsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailDomainsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailDomainsUnsupportedMediaType creates a PostRoutingEmailDomainsUnsupportedMediaType with default headers values
func NewPostRoutingEmailDomainsUnsupportedMediaType() *PostRoutingEmailDomainsUnsupportedMediaType {
	return &PostRoutingEmailDomainsUnsupportedMediaType{}
}

/*
PostRoutingEmailDomainsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostRoutingEmailDomainsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email domains unsupported media type response has a 2xx status code
func (o *PostRoutingEmailDomainsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email domains unsupported media type response has a 3xx status code
func (o *PostRoutingEmailDomainsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email domains unsupported media type response has a 4xx status code
func (o *PostRoutingEmailDomainsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing email domains unsupported media type response has a 5xx status code
func (o *PostRoutingEmailDomainsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing email domains unsupported media type response a status code equal to that given
func (o *PostRoutingEmailDomainsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostRoutingEmailDomainsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains][%d] postRoutingEmailDomainsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostRoutingEmailDomainsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains][%d] postRoutingEmailDomainsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostRoutingEmailDomainsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailDomainsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailDomainsTooManyRequests creates a PostRoutingEmailDomainsTooManyRequests with default headers values
func NewPostRoutingEmailDomainsTooManyRequests() *PostRoutingEmailDomainsTooManyRequests {
	return &PostRoutingEmailDomainsTooManyRequests{}
}

/*
PostRoutingEmailDomainsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostRoutingEmailDomainsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email domains too many requests response has a 2xx status code
func (o *PostRoutingEmailDomainsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email domains too many requests response has a 3xx status code
func (o *PostRoutingEmailDomainsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email domains too many requests response has a 4xx status code
func (o *PostRoutingEmailDomainsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing email domains too many requests response has a 5xx status code
func (o *PostRoutingEmailDomainsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing email domains too many requests response a status code equal to that given
func (o *PostRoutingEmailDomainsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostRoutingEmailDomainsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains][%d] postRoutingEmailDomainsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostRoutingEmailDomainsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains][%d] postRoutingEmailDomainsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostRoutingEmailDomainsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailDomainsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailDomainsInternalServerError creates a PostRoutingEmailDomainsInternalServerError with default headers values
func NewPostRoutingEmailDomainsInternalServerError() *PostRoutingEmailDomainsInternalServerError {
	return &PostRoutingEmailDomainsInternalServerError{}
}

/*
PostRoutingEmailDomainsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostRoutingEmailDomainsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email domains internal server error response has a 2xx status code
func (o *PostRoutingEmailDomainsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email domains internal server error response has a 3xx status code
func (o *PostRoutingEmailDomainsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email domains internal server error response has a 4xx status code
func (o *PostRoutingEmailDomainsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing email domains internal server error response has a 5xx status code
func (o *PostRoutingEmailDomainsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post routing email domains internal server error response a status code equal to that given
func (o *PostRoutingEmailDomainsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostRoutingEmailDomainsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains][%d] postRoutingEmailDomainsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostRoutingEmailDomainsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains][%d] postRoutingEmailDomainsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostRoutingEmailDomainsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailDomainsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailDomainsServiceUnavailable creates a PostRoutingEmailDomainsServiceUnavailable with default headers values
func NewPostRoutingEmailDomainsServiceUnavailable() *PostRoutingEmailDomainsServiceUnavailable {
	return &PostRoutingEmailDomainsServiceUnavailable{}
}

/*
PostRoutingEmailDomainsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostRoutingEmailDomainsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email domains service unavailable response has a 2xx status code
func (o *PostRoutingEmailDomainsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email domains service unavailable response has a 3xx status code
func (o *PostRoutingEmailDomainsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email domains service unavailable response has a 4xx status code
func (o *PostRoutingEmailDomainsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing email domains service unavailable response has a 5xx status code
func (o *PostRoutingEmailDomainsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post routing email domains service unavailable response a status code equal to that given
func (o *PostRoutingEmailDomainsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostRoutingEmailDomainsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains][%d] postRoutingEmailDomainsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostRoutingEmailDomainsServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains][%d] postRoutingEmailDomainsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostRoutingEmailDomainsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailDomainsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailDomainsGatewayTimeout creates a PostRoutingEmailDomainsGatewayTimeout with default headers values
func NewPostRoutingEmailDomainsGatewayTimeout() *PostRoutingEmailDomainsGatewayTimeout {
	return &PostRoutingEmailDomainsGatewayTimeout{}
}

/*
PostRoutingEmailDomainsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostRoutingEmailDomainsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email domains gateway timeout response has a 2xx status code
func (o *PostRoutingEmailDomainsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email domains gateway timeout response has a 3xx status code
func (o *PostRoutingEmailDomainsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email domains gateway timeout response has a 4xx status code
func (o *PostRoutingEmailDomainsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing email domains gateway timeout response has a 5xx status code
func (o *PostRoutingEmailDomainsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post routing email domains gateway timeout response a status code equal to that given
func (o *PostRoutingEmailDomainsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostRoutingEmailDomainsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains][%d] postRoutingEmailDomainsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostRoutingEmailDomainsGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/domains][%d] postRoutingEmailDomainsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostRoutingEmailDomainsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailDomainsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
