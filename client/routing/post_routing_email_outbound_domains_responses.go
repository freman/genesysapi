// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostRoutingEmailOutboundDomainsReader is a Reader for the PostRoutingEmailOutboundDomains structure.
type PostRoutingEmailOutboundDomainsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRoutingEmailOutboundDomainsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewPostRoutingEmailOutboundDomainsAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostRoutingEmailOutboundDomainsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostRoutingEmailOutboundDomainsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostRoutingEmailOutboundDomainsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostRoutingEmailOutboundDomainsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostRoutingEmailOutboundDomainsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostRoutingEmailOutboundDomainsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostRoutingEmailOutboundDomainsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostRoutingEmailOutboundDomainsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostRoutingEmailOutboundDomainsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostRoutingEmailOutboundDomainsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostRoutingEmailOutboundDomainsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostRoutingEmailOutboundDomainsAccepted creates a PostRoutingEmailOutboundDomainsAccepted with default headers values
func NewPostRoutingEmailOutboundDomainsAccepted() *PostRoutingEmailOutboundDomainsAccepted {
	return &PostRoutingEmailOutboundDomainsAccepted{}
}

/*
PostRoutingEmailOutboundDomainsAccepted describes a response with status code 202, with default header values.

Creation request was successful. Need to wait for creation to complete
*/
type PostRoutingEmailOutboundDomainsAccepted struct {
	Payload *models.EmailOutboundDomainResult
}

// IsSuccess returns true when this post routing email outbound domains accepted response has a 2xx status code
func (o *PostRoutingEmailOutboundDomainsAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post routing email outbound domains accepted response has a 3xx status code
func (o *PostRoutingEmailOutboundDomainsAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email outbound domains accepted response has a 4xx status code
func (o *PostRoutingEmailOutboundDomainsAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing email outbound domains accepted response has a 5xx status code
func (o *PostRoutingEmailOutboundDomainsAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing email outbound domains accepted response a status code equal to that given
func (o *PostRoutingEmailOutboundDomainsAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *PostRoutingEmailOutboundDomainsAccepted) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/outbound/domains][%d] postRoutingEmailOutboundDomainsAccepted  %+v", 202, o.Payload)
}

func (o *PostRoutingEmailOutboundDomainsAccepted) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/outbound/domains][%d] postRoutingEmailOutboundDomainsAccepted  %+v", 202, o.Payload)
}

func (o *PostRoutingEmailOutboundDomainsAccepted) GetPayload() *models.EmailOutboundDomainResult {
	return o.Payload
}

func (o *PostRoutingEmailOutboundDomainsAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EmailOutboundDomainResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailOutboundDomainsBadRequest creates a PostRoutingEmailOutboundDomainsBadRequest with default headers values
func NewPostRoutingEmailOutboundDomainsBadRequest() *PostRoutingEmailOutboundDomainsBadRequest {
	return &PostRoutingEmailOutboundDomainsBadRequest{}
}

/*
PostRoutingEmailOutboundDomainsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostRoutingEmailOutboundDomainsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email outbound domains bad request response has a 2xx status code
func (o *PostRoutingEmailOutboundDomainsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email outbound domains bad request response has a 3xx status code
func (o *PostRoutingEmailOutboundDomainsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email outbound domains bad request response has a 4xx status code
func (o *PostRoutingEmailOutboundDomainsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing email outbound domains bad request response has a 5xx status code
func (o *PostRoutingEmailOutboundDomainsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing email outbound domains bad request response a status code equal to that given
func (o *PostRoutingEmailOutboundDomainsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostRoutingEmailOutboundDomainsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/outbound/domains][%d] postRoutingEmailOutboundDomainsBadRequest  %+v", 400, o.Payload)
}

func (o *PostRoutingEmailOutboundDomainsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/outbound/domains][%d] postRoutingEmailOutboundDomainsBadRequest  %+v", 400, o.Payload)
}

func (o *PostRoutingEmailOutboundDomainsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailOutboundDomainsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailOutboundDomainsUnauthorized creates a PostRoutingEmailOutboundDomainsUnauthorized with default headers values
func NewPostRoutingEmailOutboundDomainsUnauthorized() *PostRoutingEmailOutboundDomainsUnauthorized {
	return &PostRoutingEmailOutboundDomainsUnauthorized{}
}

/*
PostRoutingEmailOutboundDomainsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostRoutingEmailOutboundDomainsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email outbound domains unauthorized response has a 2xx status code
func (o *PostRoutingEmailOutboundDomainsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email outbound domains unauthorized response has a 3xx status code
func (o *PostRoutingEmailOutboundDomainsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email outbound domains unauthorized response has a 4xx status code
func (o *PostRoutingEmailOutboundDomainsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing email outbound domains unauthorized response has a 5xx status code
func (o *PostRoutingEmailOutboundDomainsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing email outbound domains unauthorized response a status code equal to that given
func (o *PostRoutingEmailOutboundDomainsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostRoutingEmailOutboundDomainsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/outbound/domains][%d] postRoutingEmailOutboundDomainsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostRoutingEmailOutboundDomainsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/outbound/domains][%d] postRoutingEmailOutboundDomainsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostRoutingEmailOutboundDomainsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailOutboundDomainsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailOutboundDomainsForbidden creates a PostRoutingEmailOutboundDomainsForbidden with default headers values
func NewPostRoutingEmailOutboundDomainsForbidden() *PostRoutingEmailOutboundDomainsForbidden {
	return &PostRoutingEmailOutboundDomainsForbidden{}
}

/*
PostRoutingEmailOutboundDomainsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostRoutingEmailOutboundDomainsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email outbound domains forbidden response has a 2xx status code
func (o *PostRoutingEmailOutboundDomainsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email outbound domains forbidden response has a 3xx status code
func (o *PostRoutingEmailOutboundDomainsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email outbound domains forbidden response has a 4xx status code
func (o *PostRoutingEmailOutboundDomainsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing email outbound domains forbidden response has a 5xx status code
func (o *PostRoutingEmailOutboundDomainsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing email outbound domains forbidden response a status code equal to that given
func (o *PostRoutingEmailOutboundDomainsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostRoutingEmailOutboundDomainsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/outbound/domains][%d] postRoutingEmailOutboundDomainsForbidden  %+v", 403, o.Payload)
}

func (o *PostRoutingEmailOutboundDomainsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/outbound/domains][%d] postRoutingEmailOutboundDomainsForbidden  %+v", 403, o.Payload)
}

func (o *PostRoutingEmailOutboundDomainsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailOutboundDomainsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailOutboundDomainsNotFound creates a PostRoutingEmailOutboundDomainsNotFound with default headers values
func NewPostRoutingEmailOutboundDomainsNotFound() *PostRoutingEmailOutboundDomainsNotFound {
	return &PostRoutingEmailOutboundDomainsNotFound{}
}

/*
PostRoutingEmailOutboundDomainsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostRoutingEmailOutboundDomainsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email outbound domains not found response has a 2xx status code
func (o *PostRoutingEmailOutboundDomainsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email outbound domains not found response has a 3xx status code
func (o *PostRoutingEmailOutboundDomainsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email outbound domains not found response has a 4xx status code
func (o *PostRoutingEmailOutboundDomainsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing email outbound domains not found response has a 5xx status code
func (o *PostRoutingEmailOutboundDomainsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing email outbound domains not found response a status code equal to that given
func (o *PostRoutingEmailOutboundDomainsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostRoutingEmailOutboundDomainsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/outbound/domains][%d] postRoutingEmailOutboundDomainsNotFound  %+v", 404, o.Payload)
}

func (o *PostRoutingEmailOutboundDomainsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/outbound/domains][%d] postRoutingEmailOutboundDomainsNotFound  %+v", 404, o.Payload)
}

func (o *PostRoutingEmailOutboundDomainsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailOutboundDomainsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailOutboundDomainsRequestTimeout creates a PostRoutingEmailOutboundDomainsRequestTimeout with default headers values
func NewPostRoutingEmailOutboundDomainsRequestTimeout() *PostRoutingEmailOutboundDomainsRequestTimeout {
	return &PostRoutingEmailOutboundDomainsRequestTimeout{}
}

/*
PostRoutingEmailOutboundDomainsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostRoutingEmailOutboundDomainsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email outbound domains request timeout response has a 2xx status code
func (o *PostRoutingEmailOutboundDomainsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email outbound domains request timeout response has a 3xx status code
func (o *PostRoutingEmailOutboundDomainsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email outbound domains request timeout response has a 4xx status code
func (o *PostRoutingEmailOutboundDomainsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing email outbound domains request timeout response has a 5xx status code
func (o *PostRoutingEmailOutboundDomainsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing email outbound domains request timeout response a status code equal to that given
func (o *PostRoutingEmailOutboundDomainsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostRoutingEmailOutboundDomainsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/outbound/domains][%d] postRoutingEmailOutboundDomainsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostRoutingEmailOutboundDomainsRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/outbound/domains][%d] postRoutingEmailOutboundDomainsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostRoutingEmailOutboundDomainsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailOutboundDomainsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailOutboundDomainsRequestEntityTooLarge creates a PostRoutingEmailOutboundDomainsRequestEntityTooLarge with default headers values
func NewPostRoutingEmailOutboundDomainsRequestEntityTooLarge() *PostRoutingEmailOutboundDomainsRequestEntityTooLarge {
	return &PostRoutingEmailOutboundDomainsRequestEntityTooLarge{}
}

/*
PostRoutingEmailOutboundDomainsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostRoutingEmailOutboundDomainsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email outbound domains request entity too large response has a 2xx status code
func (o *PostRoutingEmailOutboundDomainsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email outbound domains request entity too large response has a 3xx status code
func (o *PostRoutingEmailOutboundDomainsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email outbound domains request entity too large response has a 4xx status code
func (o *PostRoutingEmailOutboundDomainsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing email outbound domains request entity too large response has a 5xx status code
func (o *PostRoutingEmailOutboundDomainsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing email outbound domains request entity too large response a status code equal to that given
func (o *PostRoutingEmailOutboundDomainsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostRoutingEmailOutboundDomainsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/outbound/domains][%d] postRoutingEmailOutboundDomainsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostRoutingEmailOutboundDomainsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/outbound/domains][%d] postRoutingEmailOutboundDomainsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostRoutingEmailOutboundDomainsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailOutboundDomainsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailOutboundDomainsUnsupportedMediaType creates a PostRoutingEmailOutboundDomainsUnsupportedMediaType with default headers values
func NewPostRoutingEmailOutboundDomainsUnsupportedMediaType() *PostRoutingEmailOutboundDomainsUnsupportedMediaType {
	return &PostRoutingEmailOutboundDomainsUnsupportedMediaType{}
}

/*
PostRoutingEmailOutboundDomainsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostRoutingEmailOutboundDomainsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email outbound domains unsupported media type response has a 2xx status code
func (o *PostRoutingEmailOutboundDomainsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email outbound domains unsupported media type response has a 3xx status code
func (o *PostRoutingEmailOutboundDomainsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email outbound domains unsupported media type response has a 4xx status code
func (o *PostRoutingEmailOutboundDomainsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing email outbound domains unsupported media type response has a 5xx status code
func (o *PostRoutingEmailOutboundDomainsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing email outbound domains unsupported media type response a status code equal to that given
func (o *PostRoutingEmailOutboundDomainsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostRoutingEmailOutboundDomainsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/outbound/domains][%d] postRoutingEmailOutboundDomainsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostRoutingEmailOutboundDomainsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/outbound/domains][%d] postRoutingEmailOutboundDomainsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostRoutingEmailOutboundDomainsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailOutboundDomainsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailOutboundDomainsTooManyRequests creates a PostRoutingEmailOutboundDomainsTooManyRequests with default headers values
func NewPostRoutingEmailOutboundDomainsTooManyRequests() *PostRoutingEmailOutboundDomainsTooManyRequests {
	return &PostRoutingEmailOutboundDomainsTooManyRequests{}
}

/*
PostRoutingEmailOutboundDomainsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostRoutingEmailOutboundDomainsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email outbound domains too many requests response has a 2xx status code
func (o *PostRoutingEmailOutboundDomainsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email outbound domains too many requests response has a 3xx status code
func (o *PostRoutingEmailOutboundDomainsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email outbound domains too many requests response has a 4xx status code
func (o *PostRoutingEmailOutboundDomainsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing email outbound domains too many requests response has a 5xx status code
func (o *PostRoutingEmailOutboundDomainsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing email outbound domains too many requests response a status code equal to that given
func (o *PostRoutingEmailOutboundDomainsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostRoutingEmailOutboundDomainsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/outbound/domains][%d] postRoutingEmailOutboundDomainsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostRoutingEmailOutboundDomainsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/outbound/domains][%d] postRoutingEmailOutboundDomainsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostRoutingEmailOutboundDomainsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailOutboundDomainsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailOutboundDomainsInternalServerError creates a PostRoutingEmailOutboundDomainsInternalServerError with default headers values
func NewPostRoutingEmailOutboundDomainsInternalServerError() *PostRoutingEmailOutboundDomainsInternalServerError {
	return &PostRoutingEmailOutboundDomainsInternalServerError{}
}

/*
PostRoutingEmailOutboundDomainsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostRoutingEmailOutboundDomainsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email outbound domains internal server error response has a 2xx status code
func (o *PostRoutingEmailOutboundDomainsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email outbound domains internal server error response has a 3xx status code
func (o *PostRoutingEmailOutboundDomainsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email outbound domains internal server error response has a 4xx status code
func (o *PostRoutingEmailOutboundDomainsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing email outbound domains internal server error response has a 5xx status code
func (o *PostRoutingEmailOutboundDomainsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post routing email outbound domains internal server error response a status code equal to that given
func (o *PostRoutingEmailOutboundDomainsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostRoutingEmailOutboundDomainsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/outbound/domains][%d] postRoutingEmailOutboundDomainsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostRoutingEmailOutboundDomainsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/outbound/domains][%d] postRoutingEmailOutboundDomainsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostRoutingEmailOutboundDomainsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailOutboundDomainsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailOutboundDomainsServiceUnavailable creates a PostRoutingEmailOutboundDomainsServiceUnavailable with default headers values
func NewPostRoutingEmailOutboundDomainsServiceUnavailable() *PostRoutingEmailOutboundDomainsServiceUnavailable {
	return &PostRoutingEmailOutboundDomainsServiceUnavailable{}
}

/*
PostRoutingEmailOutboundDomainsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostRoutingEmailOutboundDomainsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email outbound domains service unavailable response has a 2xx status code
func (o *PostRoutingEmailOutboundDomainsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email outbound domains service unavailable response has a 3xx status code
func (o *PostRoutingEmailOutboundDomainsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email outbound domains service unavailable response has a 4xx status code
func (o *PostRoutingEmailOutboundDomainsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing email outbound domains service unavailable response has a 5xx status code
func (o *PostRoutingEmailOutboundDomainsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post routing email outbound domains service unavailable response a status code equal to that given
func (o *PostRoutingEmailOutboundDomainsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostRoutingEmailOutboundDomainsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/outbound/domains][%d] postRoutingEmailOutboundDomainsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostRoutingEmailOutboundDomainsServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/outbound/domains][%d] postRoutingEmailOutboundDomainsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostRoutingEmailOutboundDomainsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailOutboundDomainsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingEmailOutboundDomainsGatewayTimeout creates a PostRoutingEmailOutboundDomainsGatewayTimeout with default headers values
func NewPostRoutingEmailOutboundDomainsGatewayTimeout() *PostRoutingEmailOutboundDomainsGatewayTimeout {
	return &PostRoutingEmailOutboundDomainsGatewayTimeout{}
}

/*
PostRoutingEmailOutboundDomainsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostRoutingEmailOutboundDomainsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing email outbound domains gateway timeout response has a 2xx status code
func (o *PostRoutingEmailOutboundDomainsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing email outbound domains gateway timeout response has a 3xx status code
func (o *PostRoutingEmailOutboundDomainsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing email outbound domains gateway timeout response has a 4xx status code
func (o *PostRoutingEmailOutboundDomainsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing email outbound domains gateway timeout response has a 5xx status code
func (o *PostRoutingEmailOutboundDomainsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post routing email outbound domains gateway timeout response a status code equal to that given
func (o *PostRoutingEmailOutboundDomainsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostRoutingEmailOutboundDomainsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/outbound/domains][%d] postRoutingEmailOutboundDomainsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostRoutingEmailOutboundDomainsGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/email/outbound/domains][%d] postRoutingEmailOutboundDomainsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostRoutingEmailOutboundDomainsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingEmailOutboundDomainsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
