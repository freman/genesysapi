// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutRoutingSmsPhonenumberReader is a Reader for the PutRoutingSmsPhonenumber structure.
type PutRoutingSmsPhonenumberReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRoutingSmsPhonenumberReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutRoutingSmsPhonenumberOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewPutRoutingSmsPhonenumberAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutRoutingSmsPhonenumberBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutRoutingSmsPhonenumberUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutRoutingSmsPhonenumberForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutRoutingSmsPhonenumberNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutRoutingSmsPhonenumberRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPutRoutingSmsPhonenumberConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutRoutingSmsPhonenumberRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutRoutingSmsPhonenumberUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutRoutingSmsPhonenumberTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutRoutingSmsPhonenumberInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutRoutingSmsPhonenumberServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutRoutingSmsPhonenumberGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutRoutingSmsPhonenumberOK creates a PutRoutingSmsPhonenumberOK with default headers values
func NewPutRoutingSmsPhonenumberOK() *PutRoutingSmsPhonenumberOK {
	return &PutRoutingSmsPhonenumberOK{}
}

/*
PutRoutingSmsPhonenumberOK describes a response with status code 200, with default header values.

successful operation
*/
type PutRoutingSmsPhonenumberOK struct {
	Payload *models.SmsPhoneNumber
}

// IsSuccess returns true when this put routing sms phonenumber o k response has a 2xx status code
func (o *PutRoutingSmsPhonenumberOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put routing sms phonenumber o k response has a 3xx status code
func (o *PutRoutingSmsPhonenumberOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing sms phonenumber o k response has a 4xx status code
func (o *PutRoutingSmsPhonenumberOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put routing sms phonenumber o k response has a 5xx status code
func (o *PutRoutingSmsPhonenumberOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing sms phonenumber o k response a status code equal to that given
func (o *PutRoutingSmsPhonenumberOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutRoutingSmsPhonenumberOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/sms/phonenumbers/{addressId}][%d] putRoutingSmsPhonenumberOK  %+v", 200, o.Payload)
}

func (o *PutRoutingSmsPhonenumberOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/sms/phonenumbers/{addressId}][%d] putRoutingSmsPhonenumberOK  %+v", 200, o.Payload)
}

func (o *PutRoutingSmsPhonenumberOK) GetPayload() *models.SmsPhoneNumber {
	return o.Payload
}

func (o *PutRoutingSmsPhonenumberOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SmsPhoneNumber)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSmsPhonenumberAccepted creates a PutRoutingSmsPhonenumberAccepted with default headers values
func NewPutRoutingSmsPhonenumberAccepted() *PutRoutingSmsPhonenumberAccepted {
	return &PutRoutingSmsPhonenumberAccepted{}
}

/*
PutRoutingSmsPhonenumberAccepted describes a response with status code 202, with default header values.

Accepted - The phone number update is in progress.
*/
type PutRoutingSmsPhonenumberAccepted struct {
	Payload *models.SmsPhoneNumber
}

// IsSuccess returns true when this put routing sms phonenumber accepted response has a 2xx status code
func (o *PutRoutingSmsPhonenumberAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put routing sms phonenumber accepted response has a 3xx status code
func (o *PutRoutingSmsPhonenumberAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing sms phonenumber accepted response has a 4xx status code
func (o *PutRoutingSmsPhonenumberAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this put routing sms phonenumber accepted response has a 5xx status code
func (o *PutRoutingSmsPhonenumberAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing sms phonenumber accepted response a status code equal to that given
func (o *PutRoutingSmsPhonenumberAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *PutRoutingSmsPhonenumberAccepted) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/sms/phonenumbers/{addressId}][%d] putRoutingSmsPhonenumberAccepted  %+v", 202, o.Payload)
}

func (o *PutRoutingSmsPhonenumberAccepted) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/sms/phonenumbers/{addressId}][%d] putRoutingSmsPhonenumberAccepted  %+v", 202, o.Payload)
}

func (o *PutRoutingSmsPhonenumberAccepted) GetPayload() *models.SmsPhoneNumber {
	return o.Payload
}

func (o *PutRoutingSmsPhonenumberAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SmsPhoneNumber)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSmsPhonenumberBadRequest creates a PutRoutingSmsPhonenumberBadRequest with default headers values
func NewPutRoutingSmsPhonenumberBadRequest() *PutRoutingSmsPhonenumberBadRequest {
	return &PutRoutingSmsPhonenumberBadRequest{}
}

/*
PutRoutingSmsPhonenumberBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutRoutingSmsPhonenumberBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing sms phonenumber bad request response has a 2xx status code
func (o *PutRoutingSmsPhonenumberBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing sms phonenumber bad request response has a 3xx status code
func (o *PutRoutingSmsPhonenumberBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing sms phonenumber bad request response has a 4xx status code
func (o *PutRoutingSmsPhonenumberBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put routing sms phonenumber bad request response has a 5xx status code
func (o *PutRoutingSmsPhonenumberBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing sms phonenumber bad request response a status code equal to that given
func (o *PutRoutingSmsPhonenumberBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutRoutingSmsPhonenumberBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/sms/phonenumbers/{addressId}][%d] putRoutingSmsPhonenumberBadRequest  %+v", 400, o.Payload)
}

func (o *PutRoutingSmsPhonenumberBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/sms/phonenumbers/{addressId}][%d] putRoutingSmsPhonenumberBadRequest  %+v", 400, o.Payload)
}

func (o *PutRoutingSmsPhonenumberBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSmsPhonenumberBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSmsPhonenumberUnauthorized creates a PutRoutingSmsPhonenumberUnauthorized with default headers values
func NewPutRoutingSmsPhonenumberUnauthorized() *PutRoutingSmsPhonenumberUnauthorized {
	return &PutRoutingSmsPhonenumberUnauthorized{}
}

/*
PutRoutingSmsPhonenumberUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutRoutingSmsPhonenumberUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing sms phonenumber unauthorized response has a 2xx status code
func (o *PutRoutingSmsPhonenumberUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing sms phonenumber unauthorized response has a 3xx status code
func (o *PutRoutingSmsPhonenumberUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing sms phonenumber unauthorized response has a 4xx status code
func (o *PutRoutingSmsPhonenumberUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put routing sms phonenumber unauthorized response has a 5xx status code
func (o *PutRoutingSmsPhonenumberUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing sms phonenumber unauthorized response a status code equal to that given
func (o *PutRoutingSmsPhonenumberUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutRoutingSmsPhonenumberUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/sms/phonenumbers/{addressId}][%d] putRoutingSmsPhonenumberUnauthorized  %+v", 401, o.Payload)
}

func (o *PutRoutingSmsPhonenumberUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/sms/phonenumbers/{addressId}][%d] putRoutingSmsPhonenumberUnauthorized  %+v", 401, o.Payload)
}

func (o *PutRoutingSmsPhonenumberUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSmsPhonenumberUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSmsPhonenumberForbidden creates a PutRoutingSmsPhonenumberForbidden with default headers values
func NewPutRoutingSmsPhonenumberForbidden() *PutRoutingSmsPhonenumberForbidden {
	return &PutRoutingSmsPhonenumberForbidden{}
}

/*
PutRoutingSmsPhonenumberForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutRoutingSmsPhonenumberForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing sms phonenumber forbidden response has a 2xx status code
func (o *PutRoutingSmsPhonenumberForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing sms phonenumber forbidden response has a 3xx status code
func (o *PutRoutingSmsPhonenumberForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing sms phonenumber forbidden response has a 4xx status code
func (o *PutRoutingSmsPhonenumberForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put routing sms phonenumber forbidden response has a 5xx status code
func (o *PutRoutingSmsPhonenumberForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing sms phonenumber forbidden response a status code equal to that given
func (o *PutRoutingSmsPhonenumberForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutRoutingSmsPhonenumberForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/sms/phonenumbers/{addressId}][%d] putRoutingSmsPhonenumberForbidden  %+v", 403, o.Payload)
}

func (o *PutRoutingSmsPhonenumberForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/sms/phonenumbers/{addressId}][%d] putRoutingSmsPhonenumberForbidden  %+v", 403, o.Payload)
}

func (o *PutRoutingSmsPhonenumberForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSmsPhonenumberForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSmsPhonenumberNotFound creates a PutRoutingSmsPhonenumberNotFound with default headers values
func NewPutRoutingSmsPhonenumberNotFound() *PutRoutingSmsPhonenumberNotFound {
	return &PutRoutingSmsPhonenumberNotFound{}
}

/*
PutRoutingSmsPhonenumberNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutRoutingSmsPhonenumberNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing sms phonenumber not found response has a 2xx status code
func (o *PutRoutingSmsPhonenumberNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing sms phonenumber not found response has a 3xx status code
func (o *PutRoutingSmsPhonenumberNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing sms phonenumber not found response has a 4xx status code
func (o *PutRoutingSmsPhonenumberNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put routing sms phonenumber not found response has a 5xx status code
func (o *PutRoutingSmsPhonenumberNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing sms phonenumber not found response a status code equal to that given
func (o *PutRoutingSmsPhonenumberNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutRoutingSmsPhonenumberNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/sms/phonenumbers/{addressId}][%d] putRoutingSmsPhonenumberNotFound  %+v", 404, o.Payload)
}

func (o *PutRoutingSmsPhonenumberNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/sms/phonenumbers/{addressId}][%d] putRoutingSmsPhonenumberNotFound  %+v", 404, o.Payload)
}

func (o *PutRoutingSmsPhonenumberNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSmsPhonenumberNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSmsPhonenumberRequestTimeout creates a PutRoutingSmsPhonenumberRequestTimeout with default headers values
func NewPutRoutingSmsPhonenumberRequestTimeout() *PutRoutingSmsPhonenumberRequestTimeout {
	return &PutRoutingSmsPhonenumberRequestTimeout{}
}

/*
PutRoutingSmsPhonenumberRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutRoutingSmsPhonenumberRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing sms phonenumber request timeout response has a 2xx status code
func (o *PutRoutingSmsPhonenumberRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing sms phonenumber request timeout response has a 3xx status code
func (o *PutRoutingSmsPhonenumberRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing sms phonenumber request timeout response has a 4xx status code
func (o *PutRoutingSmsPhonenumberRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put routing sms phonenumber request timeout response has a 5xx status code
func (o *PutRoutingSmsPhonenumberRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing sms phonenumber request timeout response a status code equal to that given
func (o *PutRoutingSmsPhonenumberRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutRoutingSmsPhonenumberRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/sms/phonenumbers/{addressId}][%d] putRoutingSmsPhonenumberRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutRoutingSmsPhonenumberRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/sms/phonenumbers/{addressId}][%d] putRoutingSmsPhonenumberRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutRoutingSmsPhonenumberRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSmsPhonenumberRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSmsPhonenumberConflict creates a PutRoutingSmsPhonenumberConflict with default headers values
func NewPutRoutingSmsPhonenumberConflict() *PutRoutingSmsPhonenumberConflict {
	return &PutRoutingSmsPhonenumberConflict{}
}

/*
PutRoutingSmsPhonenumberConflict describes a response with status code 409, with default header values.

Conflict
*/
type PutRoutingSmsPhonenumberConflict struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing sms phonenumber conflict response has a 2xx status code
func (o *PutRoutingSmsPhonenumberConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing sms phonenumber conflict response has a 3xx status code
func (o *PutRoutingSmsPhonenumberConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing sms phonenumber conflict response has a 4xx status code
func (o *PutRoutingSmsPhonenumberConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this put routing sms phonenumber conflict response has a 5xx status code
func (o *PutRoutingSmsPhonenumberConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing sms phonenumber conflict response a status code equal to that given
func (o *PutRoutingSmsPhonenumberConflict) IsCode(code int) bool {
	return code == 409
}

func (o *PutRoutingSmsPhonenumberConflict) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/sms/phonenumbers/{addressId}][%d] putRoutingSmsPhonenumberConflict  %+v", 409, o.Payload)
}

func (o *PutRoutingSmsPhonenumberConflict) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/sms/phonenumbers/{addressId}][%d] putRoutingSmsPhonenumberConflict  %+v", 409, o.Payload)
}

func (o *PutRoutingSmsPhonenumberConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSmsPhonenumberConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSmsPhonenumberRequestEntityTooLarge creates a PutRoutingSmsPhonenumberRequestEntityTooLarge with default headers values
func NewPutRoutingSmsPhonenumberRequestEntityTooLarge() *PutRoutingSmsPhonenumberRequestEntityTooLarge {
	return &PutRoutingSmsPhonenumberRequestEntityTooLarge{}
}

/*
PutRoutingSmsPhonenumberRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PutRoutingSmsPhonenumberRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing sms phonenumber request entity too large response has a 2xx status code
func (o *PutRoutingSmsPhonenumberRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing sms phonenumber request entity too large response has a 3xx status code
func (o *PutRoutingSmsPhonenumberRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing sms phonenumber request entity too large response has a 4xx status code
func (o *PutRoutingSmsPhonenumberRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put routing sms phonenumber request entity too large response has a 5xx status code
func (o *PutRoutingSmsPhonenumberRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing sms phonenumber request entity too large response a status code equal to that given
func (o *PutRoutingSmsPhonenumberRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutRoutingSmsPhonenumberRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/sms/phonenumbers/{addressId}][%d] putRoutingSmsPhonenumberRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutRoutingSmsPhonenumberRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/sms/phonenumbers/{addressId}][%d] putRoutingSmsPhonenumberRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutRoutingSmsPhonenumberRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSmsPhonenumberRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSmsPhonenumberUnsupportedMediaType creates a PutRoutingSmsPhonenumberUnsupportedMediaType with default headers values
func NewPutRoutingSmsPhonenumberUnsupportedMediaType() *PutRoutingSmsPhonenumberUnsupportedMediaType {
	return &PutRoutingSmsPhonenumberUnsupportedMediaType{}
}

/*
PutRoutingSmsPhonenumberUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutRoutingSmsPhonenumberUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing sms phonenumber unsupported media type response has a 2xx status code
func (o *PutRoutingSmsPhonenumberUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing sms phonenumber unsupported media type response has a 3xx status code
func (o *PutRoutingSmsPhonenumberUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing sms phonenumber unsupported media type response has a 4xx status code
func (o *PutRoutingSmsPhonenumberUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put routing sms phonenumber unsupported media type response has a 5xx status code
func (o *PutRoutingSmsPhonenumberUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing sms phonenumber unsupported media type response a status code equal to that given
func (o *PutRoutingSmsPhonenumberUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutRoutingSmsPhonenumberUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/sms/phonenumbers/{addressId}][%d] putRoutingSmsPhonenumberUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutRoutingSmsPhonenumberUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/sms/phonenumbers/{addressId}][%d] putRoutingSmsPhonenumberUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutRoutingSmsPhonenumberUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSmsPhonenumberUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSmsPhonenumberTooManyRequests creates a PutRoutingSmsPhonenumberTooManyRequests with default headers values
func NewPutRoutingSmsPhonenumberTooManyRequests() *PutRoutingSmsPhonenumberTooManyRequests {
	return &PutRoutingSmsPhonenumberTooManyRequests{}
}

/*
PutRoutingSmsPhonenumberTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutRoutingSmsPhonenumberTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing sms phonenumber too many requests response has a 2xx status code
func (o *PutRoutingSmsPhonenumberTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing sms phonenumber too many requests response has a 3xx status code
func (o *PutRoutingSmsPhonenumberTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing sms phonenumber too many requests response has a 4xx status code
func (o *PutRoutingSmsPhonenumberTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put routing sms phonenumber too many requests response has a 5xx status code
func (o *PutRoutingSmsPhonenumberTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put routing sms phonenumber too many requests response a status code equal to that given
func (o *PutRoutingSmsPhonenumberTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutRoutingSmsPhonenumberTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/sms/phonenumbers/{addressId}][%d] putRoutingSmsPhonenumberTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutRoutingSmsPhonenumberTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/sms/phonenumbers/{addressId}][%d] putRoutingSmsPhonenumberTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutRoutingSmsPhonenumberTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSmsPhonenumberTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSmsPhonenumberInternalServerError creates a PutRoutingSmsPhonenumberInternalServerError with default headers values
func NewPutRoutingSmsPhonenumberInternalServerError() *PutRoutingSmsPhonenumberInternalServerError {
	return &PutRoutingSmsPhonenumberInternalServerError{}
}

/*
PutRoutingSmsPhonenumberInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutRoutingSmsPhonenumberInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing sms phonenumber internal server error response has a 2xx status code
func (o *PutRoutingSmsPhonenumberInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing sms phonenumber internal server error response has a 3xx status code
func (o *PutRoutingSmsPhonenumberInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing sms phonenumber internal server error response has a 4xx status code
func (o *PutRoutingSmsPhonenumberInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put routing sms phonenumber internal server error response has a 5xx status code
func (o *PutRoutingSmsPhonenumberInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put routing sms phonenumber internal server error response a status code equal to that given
func (o *PutRoutingSmsPhonenumberInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutRoutingSmsPhonenumberInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/sms/phonenumbers/{addressId}][%d] putRoutingSmsPhonenumberInternalServerError  %+v", 500, o.Payload)
}

func (o *PutRoutingSmsPhonenumberInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/sms/phonenumbers/{addressId}][%d] putRoutingSmsPhonenumberInternalServerError  %+v", 500, o.Payload)
}

func (o *PutRoutingSmsPhonenumberInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSmsPhonenumberInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSmsPhonenumberServiceUnavailable creates a PutRoutingSmsPhonenumberServiceUnavailable with default headers values
func NewPutRoutingSmsPhonenumberServiceUnavailable() *PutRoutingSmsPhonenumberServiceUnavailable {
	return &PutRoutingSmsPhonenumberServiceUnavailable{}
}

/*
PutRoutingSmsPhonenumberServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutRoutingSmsPhonenumberServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing sms phonenumber service unavailable response has a 2xx status code
func (o *PutRoutingSmsPhonenumberServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing sms phonenumber service unavailable response has a 3xx status code
func (o *PutRoutingSmsPhonenumberServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing sms phonenumber service unavailable response has a 4xx status code
func (o *PutRoutingSmsPhonenumberServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put routing sms phonenumber service unavailable response has a 5xx status code
func (o *PutRoutingSmsPhonenumberServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put routing sms phonenumber service unavailable response a status code equal to that given
func (o *PutRoutingSmsPhonenumberServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutRoutingSmsPhonenumberServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/sms/phonenumbers/{addressId}][%d] putRoutingSmsPhonenumberServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutRoutingSmsPhonenumberServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/sms/phonenumbers/{addressId}][%d] putRoutingSmsPhonenumberServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutRoutingSmsPhonenumberServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSmsPhonenumberServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRoutingSmsPhonenumberGatewayTimeout creates a PutRoutingSmsPhonenumberGatewayTimeout with default headers values
func NewPutRoutingSmsPhonenumberGatewayTimeout() *PutRoutingSmsPhonenumberGatewayTimeout {
	return &PutRoutingSmsPhonenumberGatewayTimeout{}
}

/*
PutRoutingSmsPhonenumberGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutRoutingSmsPhonenumberGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put routing sms phonenumber gateway timeout response has a 2xx status code
func (o *PutRoutingSmsPhonenumberGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put routing sms phonenumber gateway timeout response has a 3xx status code
func (o *PutRoutingSmsPhonenumberGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put routing sms phonenumber gateway timeout response has a 4xx status code
func (o *PutRoutingSmsPhonenumberGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put routing sms phonenumber gateway timeout response has a 5xx status code
func (o *PutRoutingSmsPhonenumberGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put routing sms phonenumber gateway timeout response a status code equal to that given
func (o *PutRoutingSmsPhonenumberGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutRoutingSmsPhonenumberGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/routing/sms/phonenumbers/{addressId}][%d] putRoutingSmsPhonenumberGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutRoutingSmsPhonenumberGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/routing/sms/phonenumbers/{addressId}][%d] putRoutingSmsPhonenumberGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutRoutingSmsPhonenumberGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutRoutingSmsPhonenumberGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
