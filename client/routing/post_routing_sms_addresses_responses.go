// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostRoutingSmsAddressesReader is a Reader for the PostRoutingSmsAddresses structure.
type PostRoutingSmsAddressesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRoutingSmsAddressesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostRoutingSmsAddressesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostRoutingSmsAddressesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostRoutingSmsAddressesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostRoutingSmsAddressesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostRoutingSmsAddressesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostRoutingSmsAddressesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostRoutingSmsAddressesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostRoutingSmsAddressesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostRoutingSmsAddressesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostRoutingSmsAddressesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostRoutingSmsAddressesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostRoutingSmsAddressesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostRoutingSmsAddressesOK creates a PostRoutingSmsAddressesOK with default headers values
func NewPostRoutingSmsAddressesOK() *PostRoutingSmsAddressesOK {
	return &PostRoutingSmsAddressesOK{}
}

/*
PostRoutingSmsAddressesOK describes a response with status code 200, with default header values.

successful operation
*/
type PostRoutingSmsAddressesOK struct {
	Payload *models.SmsAddress
}

// IsSuccess returns true when this post routing sms addresses o k response has a 2xx status code
func (o *PostRoutingSmsAddressesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post routing sms addresses o k response has a 3xx status code
func (o *PostRoutingSmsAddressesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing sms addresses o k response has a 4xx status code
func (o *PostRoutingSmsAddressesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing sms addresses o k response has a 5xx status code
func (o *PostRoutingSmsAddressesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing sms addresses o k response a status code equal to that given
func (o *PostRoutingSmsAddressesOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostRoutingSmsAddressesOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesOK  %+v", 200, o.Payload)
}

func (o *PostRoutingSmsAddressesOK) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesOK  %+v", 200, o.Payload)
}

func (o *PostRoutingSmsAddressesOK) GetPayload() *models.SmsAddress {
	return o.Payload
}

func (o *PostRoutingSmsAddressesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SmsAddress)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSmsAddressesBadRequest creates a PostRoutingSmsAddressesBadRequest with default headers values
func NewPostRoutingSmsAddressesBadRequest() *PostRoutingSmsAddressesBadRequest {
	return &PostRoutingSmsAddressesBadRequest{}
}

/*
PostRoutingSmsAddressesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostRoutingSmsAddressesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing sms addresses bad request response has a 2xx status code
func (o *PostRoutingSmsAddressesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing sms addresses bad request response has a 3xx status code
func (o *PostRoutingSmsAddressesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing sms addresses bad request response has a 4xx status code
func (o *PostRoutingSmsAddressesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing sms addresses bad request response has a 5xx status code
func (o *PostRoutingSmsAddressesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing sms addresses bad request response a status code equal to that given
func (o *PostRoutingSmsAddressesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostRoutingSmsAddressesBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesBadRequest  %+v", 400, o.Payload)
}

func (o *PostRoutingSmsAddressesBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesBadRequest  %+v", 400, o.Payload)
}

func (o *PostRoutingSmsAddressesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSmsAddressesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSmsAddressesUnauthorized creates a PostRoutingSmsAddressesUnauthorized with default headers values
func NewPostRoutingSmsAddressesUnauthorized() *PostRoutingSmsAddressesUnauthorized {
	return &PostRoutingSmsAddressesUnauthorized{}
}

/*
PostRoutingSmsAddressesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostRoutingSmsAddressesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing sms addresses unauthorized response has a 2xx status code
func (o *PostRoutingSmsAddressesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing sms addresses unauthorized response has a 3xx status code
func (o *PostRoutingSmsAddressesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing sms addresses unauthorized response has a 4xx status code
func (o *PostRoutingSmsAddressesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing sms addresses unauthorized response has a 5xx status code
func (o *PostRoutingSmsAddressesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing sms addresses unauthorized response a status code equal to that given
func (o *PostRoutingSmsAddressesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostRoutingSmsAddressesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesUnauthorized  %+v", 401, o.Payload)
}

func (o *PostRoutingSmsAddressesUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesUnauthorized  %+v", 401, o.Payload)
}

func (o *PostRoutingSmsAddressesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSmsAddressesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSmsAddressesForbidden creates a PostRoutingSmsAddressesForbidden with default headers values
func NewPostRoutingSmsAddressesForbidden() *PostRoutingSmsAddressesForbidden {
	return &PostRoutingSmsAddressesForbidden{}
}

/*
PostRoutingSmsAddressesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostRoutingSmsAddressesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing sms addresses forbidden response has a 2xx status code
func (o *PostRoutingSmsAddressesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing sms addresses forbidden response has a 3xx status code
func (o *PostRoutingSmsAddressesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing sms addresses forbidden response has a 4xx status code
func (o *PostRoutingSmsAddressesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing sms addresses forbidden response has a 5xx status code
func (o *PostRoutingSmsAddressesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing sms addresses forbidden response a status code equal to that given
func (o *PostRoutingSmsAddressesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostRoutingSmsAddressesForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesForbidden  %+v", 403, o.Payload)
}

func (o *PostRoutingSmsAddressesForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesForbidden  %+v", 403, o.Payload)
}

func (o *PostRoutingSmsAddressesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSmsAddressesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSmsAddressesNotFound creates a PostRoutingSmsAddressesNotFound with default headers values
func NewPostRoutingSmsAddressesNotFound() *PostRoutingSmsAddressesNotFound {
	return &PostRoutingSmsAddressesNotFound{}
}

/*
PostRoutingSmsAddressesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostRoutingSmsAddressesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing sms addresses not found response has a 2xx status code
func (o *PostRoutingSmsAddressesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing sms addresses not found response has a 3xx status code
func (o *PostRoutingSmsAddressesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing sms addresses not found response has a 4xx status code
func (o *PostRoutingSmsAddressesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing sms addresses not found response has a 5xx status code
func (o *PostRoutingSmsAddressesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing sms addresses not found response a status code equal to that given
func (o *PostRoutingSmsAddressesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostRoutingSmsAddressesNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesNotFound  %+v", 404, o.Payload)
}

func (o *PostRoutingSmsAddressesNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesNotFound  %+v", 404, o.Payload)
}

func (o *PostRoutingSmsAddressesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSmsAddressesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSmsAddressesRequestTimeout creates a PostRoutingSmsAddressesRequestTimeout with default headers values
func NewPostRoutingSmsAddressesRequestTimeout() *PostRoutingSmsAddressesRequestTimeout {
	return &PostRoutingSmsAddressesRequestTimeout{}
}

/*
PostRoutingSmsAddressesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostRoutingSmsAddressesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing sms addresses request timeout response has a 2xx status code
func (o *PostRoutingSmsAddressesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing sms addresses request timeout response has a 3xx status code
func (o *PostRoutingSmsAddressesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing sms addresses request timeout response has a 4xx status code
func (o *PostRoutingSmsAddressesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing sms addresses request timeout response has a 5xx status code
func (o *PostRoutingSmsAddressesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing sms addresses request timeout response a status code equal to that given
func (o *PostRoutingSmsAddressesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostRoutingSmsAddressesRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostRoutingSmsAddressesRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostRoutingSmsAddressesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSmsAddressesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSmsAddressesRequestEntityTooLarge creates a PostRoutingSmsAddressesRequestEntityTooLarge with default headers values
func NewPostRoutingSmsAddressesRequestEntityTooLarge() *PostRoutingSmsAddressesRequestEntityTooLarge {
	return &PostRoutingSmsAddressesRequestEntityTooLarge{}
}

/*
PostRoutingSmsAddressesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostRoutingSmsAddressesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing sms addresses request entity too large response has a 2xx status code
func (o *PostRoutingSmsAddressesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing sms addresses request entity too large response has a 3xx status code
func (o *PostRoutingSmsAddressesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing sms addresses request entity too large response has a 4xx status code
func (o *PostRoutingSmsAddressesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing sms addresses request entity too large response has a 5xx status code
func (o *PostRoutingSmsAddressesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing sms addresses request entity too large response a status code equal to that given
func (o *PostRoutingSmsAddressesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostRoutingSmsAddressesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostRoutingSmsAddressesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostRoutingSmsAddressesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSmsAddressesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSmsAddressesUnsupportedMediaType creates a PostRoutingSmsAddressesUnsupportedMediaType with default headers values
func NewPostRoutingSmsAddressesUnsupportedMediaType() *PostRoutingSmsAddressesUnsupportedMediaType {
	return &PostRoutingSmsAddressesUnsupportedMediaType{}
}

/*
PostRoutingSmsAddressesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostRoutingSmsAddressesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing sms addresses unsupported media type response has a 2xx status code
func (o *PostRoutingSmsAddressesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing sms addresses unsupported media type response has a 3xx status code
func (o *PostRoutingSmsAddressesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing sms addresses unsupported media type response has a 4xx status code
func (o *PostRoutingSmsAddressesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing sms addresses unsupported media type response has a 5xx status code
func (o *PostRoutingSmsAddressesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing sms addresses unsupported media type response a status code equal to that given
func (o *PostRoutingSmsAddressesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostRoutingSmsAddressesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostRoutingSmsAddressesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostRoutingSmsAddressesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSmsAddressesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSmsAddressesTooManyRequests creates a PostRoutingSmsAddressesTooManyRequests with default headers values
func NewPostRoutingSmsAddressesTooManyRequests() *PostRoutingSmsAddressesTooManyRequests {
	return &PostRoutingSmsAddressesTooManyRequests{}
}

/*
PostRoutingSmsAddressesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostRoutingSmsAddressesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing sms addresses too many requests response has a 2xx status code
func (o *PostRoutingSmsAddressesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing sms addresses too many requests response has a 3xx status code
func (o *PostRoutingSmsAddressesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing sms addresses too many requests response has a 4xx status code
func (o *PostRoutingSmsAddressesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post routing sms addresses too many requests response has a 5xx status code
func (o *PostRoutingSmsAddressesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post routing sms addresses too many requests response a status code equal to that given
func (o *PostRoutingSmsAddressesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostRoutingSmsAddressesTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostRoutingSmsAddressesTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostRoutingSmsAddressesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSmsAddressesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSmsAddressesInternalServerError creates a PostRoutingSmsAddressesInternalServerError with default headers values
func NewPostRoutingSmsAddressesInternalServerError() *PostRoutingSmsAddressesInternalServerError {
	return &PostRoutingSmsAddressesInternalServerError{}
}

/*
PostRoutingSmsAddressesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostRoutingSmsAddressesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing sms addresses internal server error response has a 2xx status code
func (o *PostRoutingSmsAddressesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing sms addresses internal server error response has a 3xx status code
func (o *PostRoutingSmsAddressesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing sms addresses internal server error response has a 4xx status code
func (o *PostRoutingSmsAddressesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing sms addresses internal server error response has a 5xx status code
func (o *PostRoutingSmsAddressesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post routing sms addresses internal server error response a status code equal to that given
func (o *PostRoutingSmsAddressesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostRoutingSmsAddressesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesInternalServerError  %+v", 500, o.Payload)
}

func (o *PostRoutingSmsAddressesInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesInternalServerError  %+v", 500, o.Payload)
}

func (o *PostRoutingSmsAddressesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSmsAddressesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSmsAddressesServiceUnavailable creates a PostRoutingSmsAddressesServiceUnavailable with default headers values
func NewPostRoutingSmsAddressesServiceUnavailable() *PostRoutingSmsAddressesServiceUnavailable {
	return &PostRoutingSmsAddressesServiceUnavailable{}
}

/*
PostRoutingSmsAddressesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostRoutingSmsAddressesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing sms addresses service unavailable response has a 2xx status code
func (o *PostRoutingSmsAddressesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing sms addresses service unavailable response has a 3xx status code
func (o *PostRoutingSmsAddressesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing sms addresses service unavailable response has a 4xx status code
func (o *PostRoutingSmsAddressesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing sms addresses service unavailable response has a 5xx status code
func (o *PostRoutingSmsAddressesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post routing sms addresses service unavailable response a status code equal to that given
func (o *PostRoutingSmsAddressesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostRoutingSmsAddressesServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostRoutingSmsAddressesServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostRoutingSmsAddressesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSmsAddressesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSmsAddressesGatewayTimeout creates a PostRoutingSmsAddressesGatewayTimeout with default headers values
func NewPostRoutingSmsAddressesGatewayTimeout() *PostRoutingSmsAddressesGatewayTimeout {
	return &PostRoutingSmsAddressesGatewayTimeout{}
}

/*
PostRoutingSmsAddressesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostRoutingSmsAddressesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post routing sms addresses gateway timeout response has a 2xx status code
func (o *PostRoutingSmsAddressesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post routing sms addresses gateway timeout response has a 3xx status code
func (o *PostRoutingSmsAddressesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post routing sms addresses gateway timeout response has a 4xx status code
func (o *PostRoutingSmsAddressesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post routing sms addresses gateway timeout response has a 5xx status code
func (o *PostRoutingSmsAddressesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post routing sms addresses gateway timeout response a status code equal to that given
func (o *PostRoutingSmsAddressesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostRoutingSmsAddressesGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostRoutingSmsAddressesGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostRoutingSmsAddressesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSmsAddressesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
