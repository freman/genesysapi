// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostRoutingSmsAddressesReader is a Reader for the PostRoutingSmsAddresses structure.
type PostRoutingSmsAddressesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRoutingSmsAddressesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostRoutingSmsAddressesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostRoutingSmsAddressesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostRoutingSmsAddressesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostRoutingSmsAddressesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostRoutingSmsAddressesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostRoutingSmsAddressesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostRoutingSmsAddressesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostRoutingSmsAddressesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostRoutingSmsAddressesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostRoutingSmsAddressesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostRoutingSmsAddressesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostRoutingSmsAddressesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostRoutingSmsAddressesOK creates a PostRoutingSmsAddressesOK with default headers values
func NewPostRoutingSmsAddressesOK() *PostRoutingSmsAddressesOK {
	return &PostRoutingSmsAddressesOK{}
}

/*PostRoutingSmsAddressesOK handles this case with default header values.

successful operation
*/
type PostRoutingSmsAddressesOK struct {
	Payload *models.SmsAddress
}

func (o *PostRoutingSmsAddressesOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesOK  %+v", 200, o.Payload)
}

func (o *PostRoutingSmsAddressesOK) GetPayload() *models.SmsAddress {
	return o.Payload
}

func (o *PostRoutingSmsAddressesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SmsAddress)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSmsAddressesBadRequest creates a PostRoutingSmsAddressesBadRequest with default headers values
func NewPostRoutingSmsAddressesBadRequest() *PostRoutingSmsAddressesBadRequest {
	return &PostRoutingSmsAddressesBadRequest{}
}

/*PostRoutingSmsAddressesBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostRoutingSmsAddressesBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PostRoutingSmsAddressesBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesBadRequest  %+v", 400, o.Payload)
}

func (o *PostRoutingSmsAddressesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSmsAddressesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSmsAddressesUnauthorized creates a PostRoutingSmsAddressesUnauthorized with default headers values
func NewPostRoutingSmsAddressesUnauthorized() *PostRoutingSmsAddressesUnauthorized {
	return &PostRoutingSmsAddressesUnauthorized{}
}

/*PostRoutingSmsAddressesUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PostRoutingSmsAddressesUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PostRoutingSmsAddressesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesUnauthorized  %+v", 401, o.Payload)
}

func (o *PostRoutingSmsAddressesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSmsAddressesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSmsAddressesForbidden creates a PostRoutingSmsAddressesForbidden with default headers values
func NewPostRoutingSmsAddressesForbidden() *PostRoutingSmsAddressesForbidden {
	return &PostRoutingSmsAddressesForbidden{}
}

/*PostRoutingSmsAddressesForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PostRoutingSmsAddressesForbidden struct {
	Payload *models.ErrorBody
}

func (o *PostRoutingSmsAddressesForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesForbidden  %+v", 403, o.Payload)
}

func (o *PostRoutingSmsAddressesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSmsAddressesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSmsAddressesNotFound creates a PostRoutingSmsAddressesNotFound with default headers values
func NewPostRoutingSmsAddressesNotFound() *PostRoutingSmsAddressesNotFound {
	return &PostRoutingSmsAddressesNotFound{}
}

/*PostRoutingSmsAddressesNotFound handles this case with default header values.

The requested resource was not found.
*/
type PostRoutingSmsAddressesNotFound struct {
	Payload *models.ErrorBody
}

func (o *PostRoutingSmsAddressesNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesNotFound  %+v", 404, o.Payload)
}

func (o *PostRoutingSmsAddressesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSmsAddressesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSmsAddressesRequestTimeout creates a PostRoutingSmsAddressesRequestTimeout with default headers values
func NewPostRoutingSmsAddressesRequestTimeout() *PostRoutingSmsAddressesRequestTimeout {
	return &PostRoutingSmsAddressesRequestTimeout{}
}

/*PostRoutingSmsAddressesRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostRoutingSmsAddressesRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostRoutingSmsAddressesRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostRoutingSmsAddressesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSmsAddressesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSmsAddressesRequestEntityTooLarge creates a PostRoutingSmsAddressesRequestEntityTooLarge with default headers values
func NewPostRoutingSmsAddressesRequestEntityTooLarge() *PostRoutingSmsAddressesRequestEntityTooLarge {
	return &PostRoutingSmsAddressesRequestEntityTooLarge{}
}

/*PostRoutingSmsAddressesRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostRoutingSmsAddressesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PostRoutingSmsAddressesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostRoutingSmsAddressesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSmsAddressesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSmsAddressesUnsupportedMediaType creates a PostRoutingSmsAddressesUnsupportedMediaType with default headers values
func NewPostRoutingSmsAddressesUnsupportedMediaType() *PostRoutingSmsAddressesUnsupportedMediaType {
	return &PostRoutingSmsAddressesUnsupportedMediaType{}
}

/*PostRoutingSmsAddressesUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostRoutingSmsAddressesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PostRoutingSmsAddressesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostRoutingSmsAddressesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSmsAddressesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSmsAddressesTooManyRequests creates a PostRoutingSmsAddressesTooManyRequests with default headers values
func NewPostRoutingSmsAddressesTooManyRequests() *PostRoutingSmsAddressesTooManyRequests {
	return &PostRoutingSmsAddressesTooManyRequests{}
}

/*PostRoutingSmsAddressesTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostRoutingSmsAddressesTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PostRoutingSmsAddressesTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostRoutingSmsAddressesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSmsAddressesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSmsAddressesInternalServerError creates a PostRoutingSmsAddressesInternalServerError with default headers values
func NewPostRoutingSmsAddressesInternalServerError() *PostRoutingSmsAddressesInternalServerError {
	return &PostRoutingSmsAddressesInternalServerError{}
}

/*PostRoutingSmsAddressesInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostRoutingSmsAddressesInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PostRoutingSmsAddressesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesInternalServerError  %+v", 500, o.Payload)
}

func (o *PostRoutingSmsAddressesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSmsAddressesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSmsAddressesServiceUnavailable creates a PostRoutingSmsAddressesServiceUnavailable with default headers values
func NewPostRoutingSmsAddressesServiceUnavailable() *PostRoutingSmsAddressesServiceUnavailable {
	return &PostRoutingSmsAddressesServiceUnavailable{}
}

/*PostRoutingSmsAddressesServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostRoutingSmsAddressesServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PostRoutingSmsAddressesServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostRoutingSmsAddressesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSmsAddressesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRoutingSmsAddressesGatewayTimeout creates a PostRoutingSmsAddressesGatewayTimeout with default headers values
func NewPostRoutingSmsAddressesGatewayTimeout() *PostRoutingSmsAddressesGatewayTimeout {
	return &PostRoutingSmsAddressesGatewayTimeout{}
}

/*PostRoutingSmsAddressesGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PostRoutingSmsAddressesGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostRoutingSmsAddressesGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/routing/sms/addresses][%d] postRoutingSmsAddressesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostRoutingSmsAddressesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostRoutingSmsAddressesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
