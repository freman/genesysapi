// Code generated by go-swagger; DO NOT EDIT.

package routing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetRoutingQueueComparisonperiodReader is a Reader for the GetRoutingQueueComparisonperiod structure.
type GetRoutingQueueComparisonperiodReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRoutingQueueComparisonperiodReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRoutingQueueComparisonperiodOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRoutingQueueComparisonperiodBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRoutingQueueComparisonperiodUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRoutingQueueComparisonperiodForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRoutingQueueComparisonperiodNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetRoutingQueueComparisonperiodRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetRoutingQueueComparisonperiodRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetRoutingQueueComparisonperiodUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetRoutingQueueComparisonperiodTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRoutingQueueComparisonperiodInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetRoutingQueueComparisonperiodServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetRoutingQueueComparisonperiodGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRoutingQueueComparisonperiodOK creates a GetRoutingQueueComparisonperiodOK with default headers values
func NewGetRoutingQueueComparisonperiodOK() *GetRoutingQueueComparisonperiodOK {
	return &GetRoutingQueueComparisonperiodOK{}
}

/*GetRoutingQueueComparisonperiodOK handles this case with default header values.

successful operation
*/
type GetRoutingQueueComparisonperiodOK struct {
	Payload *models.ComparisonPeriod
}

func (o *GetRoutingQueueComparisonperiodOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods/{comparisonPeriodId}][%d] getRoutingQueueComparisonperiodOK  %+v", 200, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodOK) GetPayload() *models.ComparisonPeriod {
	return o.Payload
}

func (o *GetRoutingQueueComparisonperiodOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ComparisonPeriod)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueComparisonperiodBadRequest creates a GetRoutingQueueComparisonperiodBadRequest with default headers values
func NewGetRoutingQueueComparisonperiodBadRequest() *GetRoutingQueueComparisonperiodBadRequest {
	return &GetRoutingQueueComparisonperiodBadRequest{}
}

/*GetRoutingQueueComparisonperiodBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetRoutingQueueComparisonperiodBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingQueueComparisonperiodBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods/{comparisonPeriodId}][%d] getRoutingQueueComparisonperiodBadRequest  %+v", 400, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueComparisonperiodBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueComparisonperiodUnauthorized creates a GetRoutingQueueComparisonperiodUnauthorized with default headers values
func NewGetRoutingQueueComparisonperiodUnauthorized() *GetRoutingQueueComparisonperiodUnauthorized {
	return &GetRoutingQueueComparisonperiodUnauthorized{}
}

/*GetRoutingQueueComparisonperiodUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetRoutingQueueComparisonperiodUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingQueueComparisonperiodUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods/{comparisonPeriodId}][%d] getRoutingQueueComparisonperiodUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueComparisonperiodUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueComparisonperiodForbidden creates a GetRoutingQueueComparisonperiodForbidden with default headers values
func NewGetRoutingQueueComparisonperiodForbidden() *GetRoutingQueueComparisonperiodForbidden {
	return &GetRoutingQueueComparisonperiodForbidden{}
}

/*GetRoutingQueueComparisonperiodForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetRoutingQueueComparisonperiodForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingQueueComparisonperiodForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods/{comparisonPeriodId}][%d] getRoutingQueueComparisonperiodForbidden  %+v", 403, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueComparisonperiodForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueComparisonperiodNotFound creates a GetRoutingQueueComparisonperiodNotFound with default headers values
func NewGetRoutingQueueComparisonperiodNotFound() *GetRoutingQueueComparisonperiodNotFound {
	return &GetRoutingQueueComparisonperiodNotFound{}
}

/*GetRoutingQueueComparisonperiodNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetRoutingQueueComparisonperiodNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingQueueComparisonperiodNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods/{comparisonPeriodId}][%d] getRoutingQueueComparisonperiodNotFound  %+v", 404, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueComparisonperiodNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueComparisonperiodRequestTimeout creates a GetRoutingQueueComparisonperiodRequestTimeout with default headers values
func NewGetRoutingQueueComparisonperiodRequestTimeout() *GetRoutingQueueComparisonperiodRequestTimeout {
	return &GetRoutingQueueComparisonperiodRequestTimeout{}
}

/*GetRoutingQueueComparisonperiodRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetRoutingQueueComparisonperiodRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingQueueComparisonperiodRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods/{comparisonPeriodId}][%d] getRoutingQueueComparisonperiodRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueComparisonperiodRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueComparisonperiodRequestEntityTooLarge creates a GetRoutingQueueComparisonperiodRequestEntityTooLarge with default headers values
func NewGetRoutingQueueComparisonperiodRequestEntityTooLarge() *GetRoutingQueueComparisonperiodRequestEntityTooLarge {
	return &GetRoutingQueueComparisonperiodRequestEntityTooLarge{}
}

/*GetRoutingQueueComparisonperiodRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetRoutingQueueComparisonperiodRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingQueueComparisonperiodRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods/{comparisonPeriodId}][%d] getRoutingQueueComparisonperiodRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueComparisonperiodRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueComparisonperiodUnsupportedMediaType creates a GetRoutingQueueComparisonperiodUnsupportedMediaType with default headers values
func NewGetRoutingQueueComparisonperiodUnsupportedMediaType() *GetRoutingQueueComparisonperiodUnsupportedMediaType {
	return &GetRoutingQueueComparisonperiodUnsupportedMediaType{}
}

/*GetRoutingQueueComparisonperiodUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetRoutingQueueComparisonperiodUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingQueueComparisonperiodUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods/{comparisonPeriodId}][%d] getRoutingQueueComparisonperiodUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueComparisonperiodUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueComparisonperiodTooManyRequests creates a GetRoutingQueueComparisonperiodTooManyRequests with default headers values
func NewGetRoutingQueueComparisonperiodTooManyRequests() *GetRoutingQueueComparisonperiodTooManyRequests {
	return &GetRoutingQueueComparisonperiodTooManyRequests{}
}

/*GetRoutingQueueComparisonperiodTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetRoutingQueueComparisonperiodTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingQueueComparisonperiodTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods/{comparisonPeriodId}][%d] getRoutingQueueComparisonperiodTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueComparisonperiodTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueComparisonperiodInternalServerError creates a GetRoutingQueueComparisonperiodInternalServerError with default headers values
func NewGetRoutingQueueComparisonperiodInternalServerError() *GetRoutingQueueComparisonperiodInternalServerError {
	return &GetRoutingQueueComparisonperiodInternalServerError{}
}

/*GetRoutingQueueComparisonperiodInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetRoutingQueueComparisonperiodInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingQueueComparisonperiodInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods/{comparisonPeriodId}][%d] getRoutingQueueComparisonperiodInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueComparisonperiodInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueComparisonperiodServiceUnavailable creates a GetRoutingQueueComparisonperiodServiceUnavailable with default headers values
func NewGetRoutingQueueComparisonperiodServiceUnavailable() *GetRoutingQueueComparisonperiodServiceUnavailable {
	return &GetRoutingQueueComparisonperiodServiceUnavailable{}
}

/*GetRoutingQueueComparisonperiodServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetRoutingQueueComparisonperiodServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingQueueComparisonperiodServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods/{comparisonPeriodId}][%d] getRoutingQueueComparisonperiodServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueComparisonperiodServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoutingQueueComparisonperiodGatewayTimeout creates a GetRoutingQueueComparisonperiodGatewayTimeout with default headers values
func NewGetRoutingQueueComparisonperiodGatewayTimeout() *GetRoutingQueueComparisonperiodGatewayTimeout {
	return &GetRoutingQueueComparisonperiodGatewayTimeout{}
}

/*GetRoutingQueueComparisonperiodGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetRoutingQueueComparisonperiodGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetRoutingQueueComparisonperiodGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/routing/queues/{queueId}/comparisonperiods/{comparisonPeriodId}][%d] getRoutingQueueComparisonperiodGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetRoutingQueueComparisonperiodGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetRoutingQueueComparisonperiodGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
