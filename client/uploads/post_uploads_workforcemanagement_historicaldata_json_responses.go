// Code generated by go-swagger; DO NOT EDIT.

package uploads

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostUploadsWorkforcemanagementHistoricaldataJSONReader is a Reader for the PostUploadsWorkforcemanagementHistoricaldataJSON structure.
type PostUploadsWorkforcemanagementHistoricaldataJSONReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostUploadsWorkforcemanagementHistoricaldataJSONReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostUploadsWorkforcemanagementHistoricaldataJSONOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostUploadsWorkforcemanagementHistoricaldataJSONBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostUploadsWorkforcemanagementHistoricaldataJSONUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostUploadsWorkforcemanagementHistoricaldataJSONForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostUploadsWorkforcemanagementHistoricaldataJSONNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostUploadsWorkforcemanagementHistoricaldataJSONRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostUploadsWorkforcemanagementHistoricaldataJSONUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostUploadsWorkforcemanagementHistoricaldataJSONTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostUploadsWorkforcemanagementHistoricaldataJSONInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostUploadsWorkforcemanagementHistoricaldataJSONServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostUploadsWorkforcemanagementHistoricaldataJSONGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostUploadsWorkforcemanagementHistoricaldataJSONOK creates a PostUploadsWorkforcemanagementHistoricaldataJSONOK with default headers values
func NewPostUploadsWorkforcemanagementHistoricaldataJSONOK() *PostUploadsWorkforcemanagementHistoricaldataJSONOK {
	return &PostUploadsWorkforcemanagementHistoricaldataJSONOK{}
}

/*PostUploadsWorkforcemanagementHistoricaldataJSONOK handles this case with default header values.

Presigned url successfully created.
*/
type PostUploadsWorkforcemanagementHistoricaldataJSONOK struct {
	Payload *models.UploadURLResponse
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/workforcemanagement/historicaldata/json][%d] postUploadsWorkforcemanagementHistoricaldataJsonOK  %+v", 200, o.Payload)
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONOK) GetPayload() *models.UploadURLResponse {
	return o.Payload
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UploadURLResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsWorkforcemanagementHistoricaldataJSONBadRequest creates a PostUploadsWorkforcemanagementHistoricaldataJSONBadRequest with default headers values
func NewPostUploadsWorkforcemanagementHistoricaldataJSONBadRequest() *PostUploadsWorkforcemanagementHistoricaldataJSONBadRequest {
	return &PostUploadsWorkforcemanagementHistoricaldataJSONBadRequest{}
}

/*PostUploadsWorkforcemanagementHistoricaldataJSONBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostUploadsWorkforcemanagementHistoricaldataJSONBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/workforcemanagement/historicaldata/json][%d] postUploadsWorkforcemanagementHistoricaldataJsonBadRequest  %+v", 400, o.Payload)
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsWorkforcemanagementHistoricaldataJSONUnauthorized creates a PostUploadsWorkforcemanagementHistoricaldataJSONUnauthorized with default headers values
func NewPostUploadsWorkforcemanagementHistoricaldataJSONUnauthorized() *PostUploadsWorkforcemanagementHistoricaldataJSONUnauthorized {
	return &PostUploadsWorkforcemanagementHistoricaldataJSONUnauthorized{}
}

/*PostUploadsWorkforcemanagementHistoricaldataJSONUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PostUploadsWorkforcemanagementHistoricaldataJSONUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/workforcemanagement/historicaldata/json][%d] postUploadsWorkforcemanagementHistoricaldataJsonUnauthorized  %+v", 401, o.Payload)
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsWorkforcemanagementHistoricaldataJSONForbidden creates a PostUploadsWorkforcemanagementHistoricaldataJSONForbidden with default headers values
func NewPostUploadsWorkforcemanagementHistoricaldataJSONForbidden() *PostUploadsWorkforcemanagementHistoricaldataJSONForbidden {
	return &PostUploadsWorkforcemanagementHistoricaldataJSONForbidden{}
}

/*PostUploadsWorkforcemanagementHistoricaldataJSONForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PostUploadsWorkforcemanagementHistoricaldataJSONForbidden struct {
	Payload *models.ErrorBody
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/workforcemanagement/historicaldata/json][%d] postUploadsWorkforcemanagementHistoricaldataJsonForbidden  %+v", 403, o.Payload)
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsWorkforcemanagementHistoricaldataJSONNotFound creates a PostUploadsWorkforcemanagementHistoricaldataJSONNotFound with default headers values
func NewPostUploadsWorkforcemanagementHistoricaldataJSONNotFound() *PostUploadsWorkforcemanagementHistoricaldataJSONNotFound {
	return &PostUploadsWorkforcemanagementHistoricaldataJSONNotFound{}
}

/*PostUploadsWorkforcemanagementHistoricaldataJSONNotFound handles this case with default header values.

The requested resource was not found.
*/
type PostUploadsWorkforcemanagementHistoricaldataJSONNotFound struct {
	Payload *models.ErrorBody
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/workforcemanagement/historicaldata/json][%d] postUploadsWorkforcemanagementHistoricaldataJsonNotFound  %+v", 404, o.Payload)
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsWorkforcemanagementHistoricaldataJSONRequestEntityTooLarge creates a PostUploadsWorkforcemanagementHistoricaldataJSONRequestEntityTooLarge with default headers values
func NewPostUploadsWorkforcemanagementHistoricaldataJSONRequestEntityTooLarge() *PostUploadsWorkforcemanagementHistoricaldataJSONRequestEntityTooLarge {
	return &PostUploadsWorkforcemanagementHistoricaldataJSONRequestEntityTooLarge{}
}

/*PostUploadsWorkforcemanagementHistoricaldataJSONRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type PostUploadsWorkforcemanagementHistoricaldataJSONRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/workforcemanagement/historicaldata/json][%d] postUploadsWorkforcemanagementHistoricaldataJsonRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsWorkforcemanagementHistoricaldataJSONUnsupportedMediaType creates a PostUploadsWorkforcemanagementHistoricaldataJSONUnsupportedMediaType with default headers values
func NewPostUploadsWorkforcemanagementHistoricaldataJSONUnsupportedMediaType() *PostUploadsWorkforcemanagementHistoricaldataJSONUnsupportedMediaType {
	return &PostUploadsWorkforcemanagementHistoricaldataJSONUnsupportedMediaType{}
}

/*PostUploadsWorkforcemanagementHistoricaldataJSONUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostUploadsWorkforcemanagementHistoricaldataJSONUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/workforcemanagement/historicaldata/json][%d] postUploadsWorkforcemanagementHistoricaldataJsonUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsWorkforcemanagementHistoricaldataJSONTooManyRequests creates a PostUploadsWorkforcemanagementHistoricaldataJSONTooManyRequests with default headers values
func NewPostUploadsWorkforcemanagementHistoricaldataJSONTooManyRequests() *PostUploadsWorkforcemanagementHistoricaldataJSONTooManyRequests {
	return &PostUploadsWorkforcemanagementHistoricaldataJSONTooManyRequests{}
}

/*PostUploadsWorkforcemanagementHistoricaldataJSONTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type PostUploadsWorkforcemanagementHistoricaldataJSONTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/workforcemanagement/historicaldata/json][%d] postUploadsWorkforcemanagementHistoricaldataJsonTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsWorkforcemanagementHistoricaldataJSONInternalServerError creates a PostUploadsWorkforcemanagementHistoricaldataJSONInternalServerError with default headers values
func NewPostUploadsWorkforcemanagementHistoricaldataJSONInternalServerError() *PostUploadsWorkforcemanagementHistoricaldataJSONInternalServerError {
	return &PostUploadsWorkforcemanagementHistoricaldataJSONInternalServerError{}
}

/*PostUploadsWorkforcemanagementHistoricaldataJSONInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostUploadsWorkforcemanagementHistoricaldataJSONInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/workforcemanagement/historicaldata/json][%d] postUploadsWorkforcemanagementHistoricaldataJsonInternalServerError  %+v", 500, o.Payload)
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsWorkforcemanagementHistoricaldataJSONServiceUnavailable creates a PostUploadsWorkforcemanagementHistoricaldataJSONServiceUnavailable with default headers values
func NewPostUploadsWorkforcemanagementHistoricaldataJSONServiceUnavailable() *PostUploadsWorkforcemanagementHistoricaldataJSONServiceUnavailable {
	return &PostUploadsWorkforcemanagementHistoricaldataJSONServiceUnavailable{}
}

/*PostUploadsWorkforcemanagementHistoricaldataJSONServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostUploadsWorkforcemanagementHistoricaldataJSONServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/workforcemanagement/historicaldata/json][%d] postUploadsWorkforcemanagementHistoricaldataJsonServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsWorkforcemanagementHistoricaldataJSONGatewayTimeout creates a PostUploadsWorkforcemanagementHistoricaldataJSONGatewayTimeout with default headers values
func NewPostUploadsWorkforcemanagementHistoricaldataJSONGatewayTimeout() *PostUploadsWorkforcemanagementHistoricaldataJSONGatewayTimeout {
	return &PostUploadsWorkforcemanagementHistoricaldataJSONGatewayTimeout{}
}

/*PostUploadsWorkforcemanagementHistoricaldataJSONGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PostUploadsWorkforcemanagementHistoricaldataJSONGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/workforcemanagement/historicaldata/json][%d] postUploadsWorkforcemanagementHistoricaldataJsonGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsWorkforcemanagementHistoricaldataJSONGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
