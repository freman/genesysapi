// Code generated by go-swagger; DO NOT EDIT.

package uploads

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostLanguageunderstandingMinerUploadsReader is a Reader for the PostLanguageunderstandingMinerUploads structure.
type PostLanguageunderstandingMinerUploadsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostLanguageunderstandingMinerUploadsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostLanguageunderstandingMinerUploadsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostLanguageunderstandingMinerUploadsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostLanguageunderstandingMinerUploadsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostLanguageunderstandingMinerUploadsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostLanguageunderstandingMinerUploadsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostLanguageunderstandingMinerUploadsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostLanguageunderstandingMinerUploadsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostLanguageunderstandingMinerUploadsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostLanguageunderstandingMinerUploadsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostLanguageunderstandingMinerUploadsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostLanguageunderstandingMinerUploadsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostLanguageunderstandingMinerUploadsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostLanguageunderstandingMinerUploadsOK creates a PostLanguageunderstandingMinerUploadsOK with default headers values
func NewPostLanguageunderstandingMinerUploadsOK() *PostLanguageunderstandingMinerUploadsOK {
	return &PostLanguageunderstandingMinerUploadsOK{}
}

/*
PostLanguageunderstandingMinerUploadsOK describes a response with status code 200, with default header values.

Presigned URL successfully created.
*/
type PostLanguageunderstandingMinerUploadsOK struct {
	Payload *models.UploadURLResponse
}

// IsSuccess returns true when this post languageunderstanding miner uploads o k response has a 2xx status code
func (o *PostLanguageunderstandingMinerUploadsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post languageunderstanding miner uploads o k response has a 3xx status code
func (o *PostLanguageunderstandingMinerUploadsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding miner uploads o k response has a 4xx status code
func (o *PostLanguageunderstandingMinerUploadsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post languageunderstanding miner uploads o k response has a 5xx status code
func (o *PostLanguageunderstandingMinerUploadsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post languageunderstanding miner uploads o k response a status code equal to that given
func (o *PostLanguageunderstandingMinerUploadsOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostLanguageunderstandingMinerUploadsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/uploads][%d] postLanguageunderstandingMinerUploadsOK  %+v", 200, o.Payload)
}

func (o *PostLanguageunderstandingMinerUploadsOK) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/uploads][%d] postLanguageunderstandingMinerUploadsOK  %+v", 200, o.Payload)
}

func (o *PostLanguageunderstandingMinerUploadsOK) GetPayload() *models.UploadURLResponse {
	return o.Payload
}

func (o *PostLanguageunderstandingMinerUploadsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UploadURLResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingMinerUploadsBadRequest creates a PostLanguageunderstandingMinerUploadsBadRequest with default headers values
func NewPostLanguageunderstandingMinerUploadsBadRequest() *PostLanguageunderstandingMinerUploadsBadRequest {
	return &PostLanguageunderstandingMinerUploadsBadRequest{}
}

/*
PostLanguageunderstandingMinerUploadsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostLanguageunderstandingMinerUploadsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding miner uploads bad request response has a 2xx status code
func (o *PostLanguageunderstandingMinerUploadsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding miner uploads bad request response has a 3xx status code
func (o *PostLanguageunderstandingMinerUploadsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding miner uploads bad request response has a 4xx status code
func (o *PostLanguageunderstandingMinerUploadsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post languageunderstanding miner uploads bad request response has a 5xx status code
func (o *PostLanguageunderstandingMinerUploadsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post languageunderstanding miner uploads bad request response a status code equal to that given
func (o *PostLanguageunderstandingMinerUploadsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostLanguageunderstandingMinerUploadsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/uploads][%d] postLanguageunderstandingMinerUploadsBadRequest  %+v", 400, o.Payload)
}

func (o *PostLanguageunderstandingMinerUploadsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/uploads][%d] postLanguageunderstandingMinerUploadsBadRequest  %+v", 400, o.Payload)
}

func (o *PostLanguageunderstandingMinerUploadsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingMinerUploadsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingMinerUploadsUnauthorized creates a PostLanguageunderstandingMinerUploadsUnauthorized with default headers values
func NewPostLanguageunderstandingMinerUploadsUnauthorized() *PostLanguageunderstandingMinerUploadsUnauthorized {
	return &PostLanguageunderstandingMinerUploadsUnauthorized{}
}

/*
PostLanguageunderstandingMinerUploadsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostLanguageunderstandingMinerUploadsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding miner uploads unauthorized response has a 2xx status code
func (o *PostLanguageunderstandingMinerUploadsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding miner uploads unauthorized response has a 3xx status code
func (o *PostLanguageunderstandingMinerUploadsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding miner uploads unauthorized response has a 4xx status code
func (o *PostLanguageunderstandingMinerUploadsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post languageunderstanding miner uploads unauthorized response has a 5xx status code
func (o *PostLanguageunderstandingMinerUploadsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post languageunderstanding miner uploads unauthorized response a status code equal to that given
func (o *PostLanguageunderstandingMinerUploadsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostLanguageunderstandingMinerUploadsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/uploads][%d] postLanguageunderstandingMinerUploadsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostLanguageunderstandingMinerUploadsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/uploads][%d] postLanguageunderstandingMinerUploadsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostLanguageunderstandingMinerUploadsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingMinerUploadsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingMinerUploadsForbidden creates a PostLanguageunderstandingMinerUploadsForbidden with default headers values
func NewPostLanguageunderstandingMinerUploadsForbidden() *PostLanguageunderstandingMinerUploadsForbidden {
	return &PostLanguageunderstandingMinerUploadsForbidden{}
}

/*
PostLanguageunderstandingMinerUploadsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostLanguageunderstandingMinerUploadsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding miner uploads forbidden response has a 2xx status code
func (o *PostLanguageunderstandingMinerUploadsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding miner uploads forbidden response has a 3xx status code
func (o *PostLanguageunderstandingMinerUploadsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding miner uploads forbidden response has a 4xx status code
func (o *PostLanguageunderstandingMinerUploadsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post languageunderstanding miner uploads forbidden response has a 5xx status code
func (o *PostLanguageunderstandingMinerUploadsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post languageunderstanding miner uploads forbidden response a status code equal to that given
func (o *PostLanguageunderstandingMinerUploadsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostLanguageunderstandingMinerUploadsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/uploads][%d] postLanguageunderstandingMinerUploadsForbidden  %+v", 403, o.Payload)
}

func (o *PostLanguageunderstandingMinerUploadsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/uploads][%d] postLanguageunderstandingMinerUploadsForbidden  %+v", 403, o.Payload)
}

func (o *PostLanguageunderstandingMinerUploadsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingMinerUploadsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingMinerUploadsNotFound creates a PostLanguageunderstandingMinerUploadsNotFound with default headers values
func NewPostLanguageunderstandingMinerUploadsNotFound() *PostLanguageunderstandingMinerUploadsNotFound {
	return &PostLanguageunderstandingMinerUploadsNotFound{}
}

/*
PostLanguageunderstandingMinerUploadsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostLanguageunderstandingMinerUploadsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding miner uploads not found response has a 2xx status code
func (o *PostLanguageunderstandingMinerUploadsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding miner uploads not found response has a 3xx status code
func (o *PostLanguageunderstandingMinerUploadsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding miner uploads not found response has a 4xx status code
func (o *PostLanguageunderstandingMinerUploadsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post languageunderstanding miner uploads not found response has a 5xx status code
func (o *PostLanguageunderstandingMinerUploadsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post languageunderstanding miner uploads not found response a status code equal to that given
func (o *PostLanguageunderstandingMinerUploadsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostLanguageunderstandingMinerUploadsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/uploads][%d] postLanguageunderstandingMinerUploadsNotFound  %+v", 404, o.Payload)
}

func (o *PostLanguageunderstandingMinerUploadsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/uploads][%d] postLanguageunderstandingMinerUploadsNotFound  %+v", 404, o.Payload)
}

func (o *PostLanguageunderstandingMinerUploadsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingMinerUploadsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingMinerUploadsRequestTimeout creates a PostLanguageunderstandingMinerUploadsRequestTimeout with default headers values
func NewPostLanguageunderstandingMinerUploadsRequestTimeout() *PostLanguageunderstandingMinerUploadsRequestTimeout {
	return &PostLanguageunderstandingMinerUploadsRequestTimeout{}
}

/*
PostLanguageunderstandingMinerUploadsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostLanguageunderstandingMinerUploadsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding miner uploads request timeout response has a 2xx status code
func (o *PostLanguageunderstandingMinerUploadsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding miner uploads request timeout response has a 3xx status code
func (o *PostLanguageunderstandingMinerUploadsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding miner uploads request timeout response has a 4xx status code
func (o *PostLanguageunderstandingMinerUploadsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post languageunderstanding miner uploads request timeout response has a 5xx status code
func (o *PostLanguageunderstandingMinerUploadsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post languageunderstanding miner uploads request timeout response a status code equal to that given
func (o *PostLanguageunderstandingMinerUploadsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostLanguageunderstandingMinerUploadsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/uploads][%d] postLanguageunderstandingMinerUploadsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostLanguageunderstandingMinerUploadsRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/uploads][%d] postLanguageunderstandingMinerUploadsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostLanguageunderstandingMinerUploadsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingMinerUploadsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingMinerUploadsRequestEntityTooLarge creates a PostLanguageunderstandingMinerUploadsRequestEntityTooLarge with default headers values
func NewPostLanguageunderstandingMinerUploadsRequestEntityTooLarge() *PostLanguageunderstandingMinerUploadsRequestEntityTooLarge {
	return &PostLanguageunderstandingMinerUploadsRequestEntityTooLarge{}
}

/*
PostLanguageunderstandingMinerUploadsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostLanguageunderstandingMinerUploadsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding miner uploads request entity too large response has a 2xx status code
func (o *PostLanguageunderstandingMinerUploadsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding miner uploads request entity too large response has a 3xx status code
func (o *PostLanguageunderstandingMinerUploadsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding miner uploads request entity too large response has a 4xx status code
func (o *PostLanguageunderstandingMinerUploadsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post languageunderstanding miner uploads request entity too large response has a 5xx status code
func (o *PostLanguageunderstandingMinerUploadsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post languageunderstanding miner uploads request entity too large response a status code equal to that given
func (o *PostLanguageunderstandingMinerUploadsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostLanguageunderstandingMinerUploadsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/uploads][%d] postLanguageunderstandingMinerUploadsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostLanguageunderstandingMinerUploadsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/uploads][%d] postLanguageunderstandingMinerUploadsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostLanguageunderstandingMinerUploadsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingMinerUploadsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingMinerUploadsUnsupportedMediaType creates a PostLanguageunderstandingMinerUploadsUnsupportedMediaType with default headers values
func NewPostLanguageunderstandingMinerUploadsUnsupportedMediaType() *PostLanguageunderstandingMinerUploadsUnsupportedMediaType {
	return &PostLanguageunderstandingMinerUploadsUnsupportedMediaType{}
}

/*
PostLanguageunderstandingMinerUploadsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostLanguageunderstandingMinerUploadsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding miner uploads unsupported media type response has a 2xx status code
func (o *PostLanguageunderstandingMinerUploadsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding miner uploads unsupported media type response has a 3xx status code
func (o *PostLanguageunderstandingMinerUploadsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding miner uploads unsupported media type response has a 4xx status code
func (o *PostLanguageunderstandingMinerUploadsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post languageunderstanding miner uploads unsupported media type response has a 5xx status code
func (o *PostLanguageunderstandingMinerUploadsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post languageunderstanding miner uploads unsupported media type response a status code equal to that given
func (o *PostLanguageunderstandingMinerUploadsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostLanguageunderstandingMinerUploadsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/uploads][%d] postLanguageunderstandingMinerUploadsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostLanguageunderstandingMinerUploadsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/uploads][%d] postLanguageunderstandingMinerUploadsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostLanguageunderstandingMinerUploadsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingMinerUploadsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingMinerUploadsTooManyRequests creates a PostLanguageunderstandingMinerUploadsTooManyRequests with default headers values
func NewPostLanguageunderstandingMinerUploadsTooManyRequests() *PostLanguageunderstandingMinerUploadsTooManyRequests {
	return &PostLanguageunderstandingMinerUploadsTooManyRequests{}
}

/*
PostLanguageunderstandingMinerUploadsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostLanguageunderstandingMinerUploadsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding miner uploads too many requests response has a 2xx status code
func (o *PostLanguageunderstandingMinerUploadsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding miner uploads too many requests response has a 3xx status code
func (o *PostLanguageunderstandingMinerUploadsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding miner uploads too many requests response has a 4xx status code
func (o *PostLanguageunderstandingMinerUploadsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post languageunderstanding miner uploads too many requests response has a 5xx status code
func (o *PostLanguageunderstandingMinerUploadsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post languageunderstanding miner uploads too many requests response a status code equal to that given
func (o *PostLanguageunderstandingMinerUploadsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostLanguageunderstandingMinerUploadsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/uploads][%d] postLanguageunderstandingMinerUploadsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostLanguageunderstandingMinerUploadsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/uploads][%d] postLanguageunderstandingMinerUploadsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostLanguageunderstandingMinerUploadsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingMinerUploadsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingMinerUploadsInternalServerError creates a PostLanguageunderstandingMinerUploadsInternalServerError with default headers values
func NewPostLanguageunderstandingMinerUploadsInternalServerError() *PostLanguageunderstandingMinerUploadsInternalServerError {
	return &PostLanguageunderstandingMinerUploadsInternalServerError{}
}

/*
PostLanguageunderstandingMinerUploadsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostLanguageunderstandingMinerUploadsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding miner uploads internal server error response has a 2xx status code
func (o *PostLanguageunderstandingMinerUploadsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding miner uploads internal server error response has a 3xx status code
func (o *PostLanguageunderstandingMinerUploadsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding miner uploads internal server error response has a 4xx status code
func (o *PostLanguageunderstandingMinerUploadsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post languageunderstanding miner uploads internal server error response has a 5xx status code
func (o *PostLanguageunderstandingMinerUploadsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post languageunderstanding miner uploads internal server error response a status code equal to that given
func (o *PostLanguageunderstandingMinerUploadsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostLanguageunderstandingMinerUploadsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/uploads][%d] postLanguageunderstandingMinerUploadsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostLanguageunderstandingMinerUploadsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/uploads][%d] postLanguageunderstandingMinerUploadsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostLanguageunderstandingMinerUploadsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingMinerUploadsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingMinerUploadsServiceUnavailable creates a PostLanguageunderstandingMinerUploadsServiceUnavailable with default headers values
func NewPostLanguageunderstandingMinerUploadsServiceUnavailable() *PostLanguageunderstandingMinerUploadsServiceUnavailable {
	return &PostLanguageunderstandingMinerUploadsServiceUnavailable{}
}

/*
PostLanguageunderstandingMinerUploadsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostLanguageunderstandingMinerUploadsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding miner uploads service unavailable response has a 2xx status code
func (o *PostLanguageunderstandingMinerUploadsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding miner uploads service unavailable response has a 3xx status code
func (o *PostLanguageunderstandingMinerUploadsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding miner uploads service unavailable response has a 4xx status code
func (o *PostLanguageunderstandingMinerUploadsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post languageunderstanding miner uploads service unavailable response has a 5xx status code
func (o *PostLanguageunderstandingMinerUploadsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post languageunderstanding miner uploads service unavailable response a status code equal to that given
func (o *PostLanguageunderstandingMinerUploadsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostLanguageunderstandingMinerUploadsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/uploads][%d] postLanguageunderstandingMinerUploadsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostLanguageunderstandingMinerUploadsServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/uploads][%d] postLanguageunderstandingMinerUploadsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostLanguageunderstandingMinerUploadsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingMinerUploadsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLanguageunderstandingMinerUploadsGatewayTimeout creates a PostLanguageunderstandingMinerUploadsGatewayTimeout with default headers values
func NewPostLanguageunderstandingMinerUploadsGatewayTimeout() *PostLanguageunderstandingMinerUploadsGatewayTimeout {
	return &PostLanguageunderstandingMinerUploadsGatewayTimeout{}
}

/*
PostLanguageunderstandingMinerUploadsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostLanguageunderstandingMinerUploadsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post languageunderstanding miner uploads gateway timeout response has a 2xx status code
func (o *PostLanguageunderstandingMinerUploadsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post languageunderstanding miner uploads gateway timeout response has a 3xx status code
func (o *PostLanguageunderstandingMinerUploadsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post languageunderstanding miner uploads gateway timeout response has a 4xx status code
func (o *PostLanguageunderstandingMinerUploadsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post languageunderstanding miner uploads gateway timeout response has a 5xx status code
func (o *PostLanguageunderstandingMinerUploadsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post languageunderstanding miner uploads gateway timeout response a status code equal to that given
func (o *PostLanguageunderstandingMinerUploadsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostLanguageunderstandingMinerUploadsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/uploads][%d] postLanguageunderstandingMinerUploadsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostLanguageunderstandingMinerUploadsGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/languageunderstanding/miners/{minerId}/uploads][%d] postLanguageunderstandingMinerUploadsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostLanguageunderstandingMinerUploadsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostLanguageunderstandingMinerUploadsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
