// Code generated by go-swagger; DO NOT EDIT.

package uploads

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostUploadsWorkforcemanagementHistoricaldataCsvReader is a Reader for the PostUploadsWorkforcemanagementHistoricaldataCsv structure.
type PostUploadsWorkforcemanagementHistoricaldataCsvReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostUploadsWorkforcemanagementHistoricaldataCsvReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostUploadsWorkforcemanagementHistoricaldataCsvOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostUploadsWorkforcemanagementHistoricaldataCsvBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostUploadsWorkforcemanagementHistoricaldataCsvUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostUploadsWorkforcemanagementHistoricaldataCsvForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostUploadsWorkforcemanagementHistoricaldataCsvNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostUploadsWorkforcemanagementHistoricaldataCsvRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostUploadsWorkforcemanagementHistoricaldataCsvUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostUploadsWorkforcemanagementHistoricaldataCsvTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostUploadsWorkforcemanagementHistoricaldataCsvInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostUploadsWorkforcemanagementHistoricaldataCsvServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostUploadsWorkforcemanagementHistoricaldataCsvGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostUploadsWorkforcemanagementHistoricaldataCsvOK creates a PostUploadsWorkforcemanagementHistoricaldataCsvOK with default headers values
func NewPostUploadsWorkforcemanagementHistoricaldataCsvOK() *PostUploadsWorkforcemanagementHistoricaldataCsvOK {
	return &PostUploadsWorkforcemanagementHistoricaldataCsvOK{}
}

/*PostUploadsWorkforcemanagementHistoricaldataCsvOK handles this case with default header values.

Presigned url successfully created.
*/
type PostUploadsWorkforcemanagementHistoricaldataCsvOK struct {
	Payload *models.UploadURLResponse
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/workforcemanagement/historicaldata/csv][%d] postUploadsWorkforcemanagementHistoricaldataCsvOK  %+v", 200, o.Payload)
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvOK) GetPayload() *models.UploadURLResponse {
	return o.Payload
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UploadURLResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsWorkforcemanagementHistoricaldataCsvBadRequest creates a PostUploadsWorkforcemanagementHistoricaldataCsvBadRequest with default headers values
func NewPostUploadsWorkforcemanagementHistoricaldataCsvBadRequest() *PostUploadsWorkforcemanagementHistoricaldataCsvBadRequest {
	return &PostUploadsWorkforcemanagementHistoricaldataCsvBadRequest{}
}

/*PostUploadsWorkforcemanagementHistoricaldataCsvBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostUploadsWorkforcemanagementHistoricaldataCsvBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/workforcemanagement/historicaldata/csv][%d] postUploadsWorkforcemanagementHistoricaldataCsvBadRequest  %+v", 400, o.Payload)
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsWorkforcemanagementHistoricaldataCsvUnauthorized creates a PostUploadsWorkforcemanagementHistoricaldataCsvUnauthorized with default headers values
func NewPostUploadsWorkforcemanagementHistoricaldataCsvUnauthorized() *PostUploadsWorkforcemanagementHistoricaldataCsvUnauthorized {
	return &PostUploadsWorkforcemanagementHistoricaldataCsvUnauthorized{}
}

/*PostUploadsWorkforcemanagementHistoricaldataCsvUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PostUploadsWorkforcemanagementHistoricaldataCsvUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/workforcemanagement/historicaldata/csv][%d] postUploadsWorkforcemanagementHistoricaldataCsvUnauthorized  %+v", 401, o.Payload)
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsWorkforcemanagementHistoricaldataCsvForbidden creates a PostUploadsWorkforcemanagementHistoricaldataCsvForbidden with default headers values
func NewPostUploadsWorkforcemanagementHistoricaldataCsvForbidden() *PostUploadsWorkforcemanagementHistoricaldataCsvForbidden {
	return &PostUploadsWorkforcemanagementHistoricaldataCsvForbidden{}
}

/*PostUploadsWorkforcemanagementHistoricaldataCsvForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PostUploadsWorkforcemanagementHistoricaldataCsvForbidden struct {
	Payload *models.ErrorBody
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/workforcemanagement/historicaldata/csv][%d] postUploadsWorkforcemanagementHistoricaldataCsvForbidden  %+v", 403, o.Payload)
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsWorkforcemanagementHistoricaldataCsvNotFound creates a PostUploadsWorkforcemanagementHistoricaldataCsvNotFound with default headers values
func NewPostUploadsWorkforcemanagementHistoricaldataCsvNotFound() *PostUploadsWorkforcemanagementHistoricaldataCsvNotFound {
	return &PostUploadsWorkforcemanagementHistoricaldataCsvNotFound{}
}

/*PostUploadsWorkforcemanagementHistoricaldataCsvNotFound handles this case with default header values.

The requested resource was not found.
*/
type PostUploadsWorkforcemanagementHistoricaldataCsvNotFound struct {
	Payload *models.ErrorBody
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/workforcemanagement/historicaldata/csv][%d] postUploadsWorkforcemanagementHistoricaldataCsvNotFound  %+v", 404, o.Payload)
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsWorkforcemanagementHistoricaldataCsvRequestEntityTooLarge creates a PostUploadsWorkforcemanagementHistoricaldataCsvRequestEntityTooLarge with default headers values
func NewPostUploadsWorkforcemanagementHistoricaldataCsvRequestEntityTooLarge() *PostUploadsWorkforcemanagementHistoricaldataCsvRequestEntityTooLarge {
	return &PostUploadsWorkforcemanagementHistoricaldataCsvRequestEntityTooLarge{}
}

/*PostUploadsWorkforcemanagementHistoricaldataCsvRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type PostUploadsWorkforcemanagementHistoricaldataCsvRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/workforcemanagement/historicaldata/csv][%d] postUploadsWorkforcemanagementHistoricaldataCsvRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsWorkforcemanagementHistoricaldataCsvUnsupportedMediaType creates a PostUploadsWorkforcemanagementHistoricaldataCsvUnsupportedMediaType with default headers values
func NewPostUploadsWorkforcemanagementHistoricaldataCsvUnsupportedMediaType() *PostUploadsWorkforcemanagementHistoricaldataCsvUnsupportedMediaType {
	return &PostUploadsWorkforcemanagementHistoricaldataCsvUnsupportedMediaType{}
}

/*PostUploadsWorkforcemanagementHistoricaldataCsvUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostUploadsWorkforcemanagementHistoricaldataCsvUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/workforcemanagement/historicaldata/csv][%d] postUploadsWorkforcemanagementHistoricaldataCsvUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsWorkforcemanagementHistoricaldataCsvTooManyRequests creates a PostUploadsWorkforcemanagementHistoricaldataCsvTooManyRequests with default headers values
func NewPostUploadsWorkforcemanagementHistoricaldataCsvTooManyRequests() *PostUploadsWorkforcemanagementHistoricaldataCsvTooManyRequests {
	return &PostUploadsWorkforcemanagementHistoricaldataCsvTooManyRequests{}
}

/*PostUploadsWorkforcemanagementHistoricaldataCsvTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type PostUploadsWorkforcemanagementHistoricaldataCsvTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/workforcemanagement/historicaldata/csv][%d] postUploadsWorkforcemanagementHistoricaldataCsvTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsWorkforcemanagementHistoricaldataCsvInternalServerError creates a PostUploadsWorkforcemanagementHistoricaldataCsvInternalServerError with default headers values
func NewPostUploadsWorkforcemanagementHistoricaldataCsvInternalServerError() *PostUploadsWorkforcemanagementHistoricaldataCsvInternalServerError {
	return &PostUploadsWorkforcemanagementHistoricaldataCsvInternalServerError{}
}

/*PostUploadsWorkforcemanagementHistoricaldataCsvInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostUploadsWorkforcemanagementHistoricaldataCsvInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/workforcemanagement/historicaldata/csv][%d] postUploadsWorkforcemanagementHistoricaldataCsvInternalServerError  %+v", 500, o.Payload)
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsWorkforcemanagementHistoricaldataCsvServiceUnavailable creates a PostUploadsWorkforcemanagementHistoricaldataCsvServiceUnavailable with default headers values
func NewPostUploadsWorkforcemanagementHistoricaldataCsvServiceUnavailable() *PostUploadsWorkforcemanagementHistoricaldataCsvServiceUnavailable {
	return &PostUploadsWorkforcemanagementHistoricaldataCsvServiceUnavailable{}
}

/*PostUploadsWorkforcemanagementHistoricaldataCsvServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostUploadsWorkforcemanagementHistoricaldataCsvServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/workforcemanagement/historicaldata/csv][%d] postUploadsWorkforcemanagementHistoricaldataCsvServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsWorkforcemanagementHistoricaldataCsvGatewayTimeout creates a PostUploadsWorkforcemanagementHistoricaldataCsvGatewayTimeout with default headers values
func NewPostUploadsWorkforcemanagementHistoricaldataCsvGatewayTimeout() *PostUploadsWorkforcemanagementHistoricaldataCsvGatewayTimeout {
	return &PostUploadsWorkforcemanagementHistoricaldataCsvGatewayTimeout{}
}

/*PostUploadsWorkforcemanagementHistoricaldataCsvGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PostUploadsWorkforcemanagementHistoricaldataCsvGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/workforcemanagement/historicaldata/csv][%d] postUploadsWorkforcemanagementHistoricaldataCsvGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsWorkforcemanagementHistoricaldataCsvGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
