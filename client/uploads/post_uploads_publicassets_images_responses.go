// Code generated by go-swagger; DO NOT EDIT.

package uploads

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostUploadsPublicassetsImagesReader is a Reader for the PostUploadsPublicassetsImages structure.
type PostUploadsPublicassetsImagesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostUploadsPublicassetsImagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostUploadsPublicassetsImagesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostUploadsPublicassetsImagesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostUploadsPublicassetsImagesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostUploadsPublicassetsImagesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostUploadsPublicassetsImagesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostUploadsPublicassetsImagesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostUploadsPublicassetsImagesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostUploadsPublicassetsImagesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostUploadsPublicassetsImagesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostUploadsPublicassetsImagesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostUploadsPublicassetsImagesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostUploadsPublicassetsImagesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostUploadsPublicassetsImagesOK creates a PostUploadsPublicassetsImagesOK with default headers values
func NewPostUploadsPublicassetsImagesOK() *PostUploadsPublicassetsImagesOK {
	return &PostUploadsPublicassetsImagesOK{}
}

/*
PostUploadsPublicassetsImagesOK describes a response with status code 200, with default header values.

Presigned url successfully created.
*/
type PostUploadsPublicassetsImagesOK struct {
	Payload *models.UploadURLResponse
}

// IsSuccess returns true when this post uploads publicassets images o k response has a 2xx status code
func (o *PostUploadsPublicassetsImagesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post uploads publicassets images o k response has a 3xx status code
func (o *PostUploadsPublicassetsImagesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post uploads publicassets images o k response has a 4xx status code
func (o *PostUploadsPublicassetsImagesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post uploads publicassets images o k response has a 5xx status code
func (o *PostUploadsPublicassetsImagesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post uploads publicassets images o k response a status code equal to that given
func (o *PostUploadsPublicassetsImagesOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostUploadsPublicassetsImagesOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/publicassets/images][%d] postUploadsPublicassetsImagesOK  %+v", 200, o.Payload)
}

func (o *PostUploadsPublicassetsImagesOK) String() string {
	return fmt.Sprintf("[POST /api/v2/uploads/publicassets/images][%d] postUploadsPublicassetsImagesOK  %+v", 200, o.Payload)
}

func (o *PostUploadsPublicassetsImagesOK) GetPayload() *models.UploadURLResponse {
	return o.Payload
}

func (o *PostUploadsPublicassetsImagesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UploadURLResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsPublicassetsImagesBadRequest creates a PostUploadsPublicassetsImagesBadRequest with default headers values
func NewPostUploadsPublicassetsImagesBadRequest() *PostUploadsPublicassetsImagesBadRequest {
	return &PostUploadsPublicassetsImagesBadRequest{}
}

/*
PostUploadsPublicassetsImagesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostUploadsPublicassetsImagesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post uploads publicassets images bad request response has a 2xx status code
func (o *PostUploadsPublicassetsImagesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post uploads publicassets images bad request response has a 3xx status code
func (o *PostUploadsPublicassetsImagesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post uploads publicassets images bad request response has a 4xx status code
func (o *PostUploadsPublicassetsImagesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post uploads publicassets images bad request response has a 5xx status code
func (o *PostUploadsPublicassetsImagesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post uploads publicassets images bad request response a status code equal to that given
func (o *PostUploadsPublicassetsImagesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostUploadsPublicassetsImagesBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/publicassets/images][%d] postUploadsPublicassetsImagesBadRequest  %+v", 400, o.Payload)
}

func (o *PostUploadsPublicassetsImagesBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/uploads/publicassets/images][%d] postUploadsPublicassetsImagesBadRequest  %+v", 400, o.Payload)
}

func (o *PostUploadsPublicassetsImagesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsPublicassetsImagesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsPublicassetsImagesUnauthorized creates a PostUploadsPublicassetsImagesUnauthorized with default headers values
func NewPostUploadsPublicassetsImagesUnauthorized() *PostUploadsPublicassetsImagesUnauthorized {
	return &PostUploadsPublicassetsImagesUnauthorized{}
}

/*
PostUploadsPublicassetsImagesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostUploadsPublicassetsImagesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post uploads publicassets images unauthorized response has a 2xx status code
func (o *PostUploadsPublicassetsImagesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post uploads publicassets images unauthorized response has a 3xx status code
func (o *PostUploadsPublicassetsImagesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post uploads publicassets images unauthorized response has a 4xx status code
func (o *PostUploadsPublicassetsImagesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post uploads publicassets images unauthorized response has a 5xx status code
func (o *PostUploadsPublicassetsImagesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post uploads publicassets images unauthorized response a status code equal to that given
func (o *PostUploadsPublicassetsImagesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostUploadsPublicassetsImagesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/publicassets/images][%d] postUploadsPublicassetsImagesUnauthorized  %+v", 401, o.Payload)
}

func (o *PostUploadsPublicassetsImagesUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/uploads/publicassets/images][%d] postUploadsPublicassetsImagesUnauthorized  %+v", 401, o.Payload)
}

func (o *PostUploadsPublicassetsImagesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsPublicassetsImagesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsPublicassetsImagesForbidden creates a PostUploadsPublicassetsImagesForbidden with default headers values
func NewPostUploadsPublicassetsImagesForbidden() *PostUploadsPublicassetsImagesForbidden {
	return &PostUploadsPublicassetsImagesForbidden{}
}

/*
PostUploadsPublicassetsImagesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostUploadsPublicassetsImagesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post uploads publicassets images forbidden response has a 2xx status code
func (o *PostUploadsPublicassetsImagesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post uploads publicassets images forbidden response has a 3xx status code
func (o *PostUploadsPublicassetsImagesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post uploads publicassets images forbidden response has a 4xx status code
func (o *PostUploadsPublicassetsImagesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post uploads publicassets images forbidden response has a 5xx status code
func (o *PostUploadsPublicassetsImagesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post uploads publicassets images forbidden response a status code equal to that given
func (o *PostUploadsPublicassetsImagesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostUploadsPublicassetsImagesForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/publicassets/images][%d] postUploadsPublicassetsImagesForbidden  %+v", 403, o.Payload)
}

func (o *PostUploadsPublicassetsImagesForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/uploads/publicassets/images][%d] postUploadsPublicassetsImagesForbidden  %+v", 403, o.Payload)
}

func (o *PostUploadsPublicassetsImagesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsPublicassetsImagesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsPublicassetsImagesNotFound creates a PostUploadsPublicassetsImagesNotFound with default headers values
func NewPostUploadsPublicassetsImagesNotFound() *PostUploadsPublicassetsImagesNotFound {
	return &PostUploadsPublicassetsImagesNotFound{}
}

/*
PostUploadsPublicassetsImagesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostUploadsPublicassetsImagesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post uploads publicassets images not found response has a 2xx status code
func (o *PostUploadsPublicassetsImagesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post uploads publicassets images not found response has a 3xx status code
func (o *PostUploadsPublicassetsImagesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post uploads publicassets images not found response has a 4xx status code
func (o *PostUploadsPublicassetsImagesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post uploads publicassets images not found response has a 5xx status code
func (o *PostUploadsPublicassetsImagesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post uploads publicassets images not found response a status code equal to that given
func (o *PostUploadsPublicassetsImagesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostUploadsPublicassetsImagesNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/publicassets/images][%d] postUploadsPublicassetsImagesNotFound  %+v", 404, o.Payload)
}

func (o *PostUploadsPublicassetsImagesNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/uploads/publicassets/images][%d] postUploadsPublicassetsImagesNotFound  %+v", 404, o.Payload)
}

func (o *PostUploadsPublicassetsImagesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsPublicassetsImagesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsPublicassetsImagesRequestTimeout creates a PostUploadsPublicassetsImagesRequestTimeout with default headers values
func NewPostUploadsPublicassetsImagesRequestTimeout() *PostUploadsPublicassetsImagesRequestTimeout {
	return &PostUploadsPublicassetsImagesRequestTimeout{}
}

/*
PostUploadsPublicassetsImagesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostUploadsPublicassetsImagesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post uploads publicassets images request timeout response has a 2xx status code
func (o *PostUploadsPublicassetsImagesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post uploads publicassets images request timeout response has a 3xx status code
func (o *PostUploadsPublicassetsImagesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post uploads publicassets images request timeout response has a 4xx status code
func (o *PostUploadsPublicassetsImagesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post uploads publicassets images request timeout response has a 5xx status code
func (o *PostUploadsPublicassetsImagesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post uploads publicassets images request timeout response a status code equal to that given
func (o *PostUploadsPublicassetsImagesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostUploadsPublicassetsImagesRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/publicassets/images][%d] postUploadsPublicassetsImagesRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostUploadsPublicassetsImagesRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/uploads/publicassets/images][%d] postUploadsPublicassetsImagesRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostUploadsPublicassetsImagesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsPublicassetsImagesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsPublicassetsImagesRequestEntityTooLarge creates a PostUploadsPublicassetsImagesRequestEntityTooLarge with default headers values
func NewPostUploadsPublicassetsImagesRequestEntityTooLarge() *PostUploadsPublicassetsImagesRequestEntityTooLarge {
	return &PostUploadsPublicassetsImagesRequestEntityTooLarge{}
}

/*
PostUploadsPublicassetsImagesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostUploadsPublicassetsImagesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post uploads publicassets images request entity too large response has a 2xx status code
func (o *PostUploadsPublicassetsImagesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post uploads publicassets images request entity too large response has a 3xx status code
func (o *PostUploadsPublicassetsImagesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post uploads publicassets images request entity too large response has a 4xx status code
func (o *PostUploadsPublicassetsImagesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post uploads publicassets images request entity too large response has a 5xx status code
func (o *PostUploadsPublicassetsImagesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post uploads publicassets images request entity too large response a status code equal to that given
func (o *PostUploadsPublicassetsImagesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostUploadsPublicassetsImagesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/publicassets/images][%d] postUploadsPublicassetsImagesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostUploadsPublicassetsImagesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/uploads/publicassets/images][%d] postUploadsPublicassetsImagesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostUploadsPublicassetsImagesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsPublicassetsImagesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsPublicassetsImagesUnsupportedMediaType creates a PostUploadsPublicassetsImagesUnsupportedMediaType with default headers values
func NewPostUploadsPublicassetsImagesUnsupportedMediaType() *PostUploadsPublicassetsImagesUnsupportedMediaType {
	return &PostUploadsPublicassetsImagesUnsupportedMediaType{}
}

/*
PostUploadsPublicassetsImagesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostUploadsPublicassetsImagesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post uploads publicassets images unsupported media type response has a 2xx status code
func (o *PostUploadsPublicassetsImagesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post uploads publicassets images unsupported media type response has a 3xx status code
func (o *PostUploadsPublicassetsImagesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post uploads publicassets images unsupported media type response has a 4xx status code
func (o *PostUploadsPublicassetsImagesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post uploads publicassets images unsupported media type response has a 5xx status code
func (o *PostUploadsPublicassetsImagesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post uploads publicassets images unsupported media type response a status code equal to that given
func (o *PostUploadsPublicassetsImagesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostUploadsPublicassetsImagesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/publicassets/images][%d] postUploadsPublicassetsImagesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostUploadsPublicassetsImagesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/uploads/publicassets/images][%d] postUploadsPublicassetsImagesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostUploadsPublicassetsImagesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsPublicassetsImagesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsPublicassetsImagesTooManyRequests creates a PostUploadsPublicassetsImagesTooManyRequests with default headers values
func NewPostUploadsPublicassetsImagesTooManyRequests() *PostUploadsPublicassetsImagesTooManyRequests {
	return &PostUploadsPublicassetsImagesTooManyRequests{}
}

/*
PostUploadsPublicassetsImagesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostUploadsPublicassetsImagesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post uploads publicassets images too many requests response has a 2xx status code
func (o *PostUploadsPublicassetsImagesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post uploads publicassets images too many requests response has a 3xx status code
func (o *PostUploadsPublicassetsImagesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post uploads publicassets images too many requests response has a 4xx status code
func (o *PostUploadsPublicassetsImagesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post uploads publicassets images too many requests response has a 5xx status code
func (o *PostUploadsPublicassetsImagesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post uploads publicassets images too many requests response a status code equal to that given
func (o *PostUploadsPublicassetsImagesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostUploadsPublicassetsImagesTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/publicassets/images][%d] postUploadsPublicassetsImagesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostUploadsPublicassetsImagesTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/uploads/publicassets/images][%d] postUploadsPublicassetsImagesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostUploadsPublicassetsImagesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsPublicassetsImagesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsPublicassetsImagesInternalServerError creates a PostUploadsPublicassetsImagesInternalServerError with default headers values
func NewPostUploadsPublicassetsImagesInternalServerError() *PostUploadsPublicassetsImagesInternalServerError {
	return &PostUploadsPublicassetsImagesInternalServerError{}
}

/*
PostUploadsPublicassetsImagesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostUploadsPublicassetsImagesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post uploads publicassets images internal server error response has a 2xx status code
func (o *PostUploadsPublicassetsImagesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post uploads publicassets images internal server error response has a 3xx status code
func (o *PostUploadsPublicassetsImagesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post uploads publicassets images internal server error response has a 4xx status code
func (o *PostUploadsPublicassetsImagesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post uploads publicassets images internal server error response has a 5xx status code
func (o *PostUploadsPublicassetsImagesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post uploads publicassets images internal server error response a status code equal to that given
func (o *PostUploadsPublicassetsImagesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostUploadsPublicassetsImagesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/publicassets/images][%d] postUploadsPublicassetsImagesInternalServerError  %+v", 500, o.Payload)
}

func (o *PostUploadsPublicassetsImagesInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/uploads/publicassets/images][%d] postUploadsPublicassetsImagesInternalServerError  %+v", 500, o.Payload)
}

func (o *PostUploadsPublicassetsImagesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsPublicassetsImagesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsPublicassetsImagesServiceUnavailable creates a PostUploadsPublicassetsImagesServiceUnavailable with default headers values
func NewPostUploadsPublicassetsImagesServiceUnavailable() *PostUploadsPublicassetsImagesServiceUnavailable {
	return &PostUploadsPublicassetsImagesServiceUnavailable{}
}

/*
PostUploadsPublicassetsImagesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostUploadsPublicassetsImagesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post uploads publicassets images service unavailable response has a 2xx status code
func (o *PostUploadsPublicassetsImagesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post uploads publicassets images service unavailable response has a 3xx status code
func (o *PostUploadsPublicassetsImagesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post uploads publicassets images service unavailable response has a 4xx status code
func (o *PostUploadsPublicassetsImagesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post uploads publicassets images service unavailable response has a 5xx status code
func (o *PostUploadsPublicassetsImagesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post uploads publicassets images service unavailable response a status code equal to that given
func (o *PostUploadsPublicassetsImagesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostUploadsPublicassetsImagesServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/publicassets/images][%d] postUploadsPublicassetsImagesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostUploadsPublicassetsImagesServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/uploads/publicassets/images][%d] postUploadsPublicassetsImagesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostUploadsPublicassetsImagesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsPublicassetsImagesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsPublicassetsImagesGatewayTimeout creates a PostUploadsPublicassetsImagesGatewayTimeout with default headers values
func NewPostUploadsPublicassetsImagesGatewayTimeout() *PostUploadsPublicassetsImagesGatewayTimeout {
	return &PostUploadsPublicassetsImagesGatewayTimeout{}
}

/*
PostUploadsPublicassetsImagesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostUploadsPublicassetsImagesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post uploads publicassets images gateway timeout response has a 2xx status code
func (o *PostUploadsPublicassetsImagesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post uploads publicassets images gateway timeout response has a 3xx status code
func (o *PostUploadsPublicassetsImagesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post uploads publicassets images gateway timeout response has a 4xx status code
func (o *PostUploadsPublicassetsImagesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post uploads publicassets images gateway timeout response has a 5xx status code
func (o *PostUploadsPublicassetsImagesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post uploads publicassets images gateway timeout response a status code equal to that given
func (o *PostUploadsPublicassetsImagesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostUploadsPublicassetsImagesGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/publicassets/images][%d] postUploadsPublicassetsImagesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostUploadsPublicassetsImagesGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/uploads/publicassets/images][%d] postUploadsPublicassetsImagesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostUploadsPublicassetsImagesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsPublicassetsImagesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
