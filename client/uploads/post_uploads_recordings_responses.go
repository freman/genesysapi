// Code generated by go-swagger; DO NOT EDIT.

package uploads

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostUploadsRecordingsReader is a Reader for the PostUploadsRecordings structure.
type PostUploadsRecordingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostUploadsRecordingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostUploadsRecordingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostUploadsRecordingsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostUploadsRecordingsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostUploadsRecordingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostUploadsRecordingsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostUploadsRecordingsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostUploadsRecordingsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostUploadsRecordingsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostUploadsRecordingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostUploadsRecordingsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostUploadsRecordingsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostUploadsRecordingsOK creates a PostUploadsRecordingsOK with default headers values
func NewPostUploadsRecordingsOK() *PostUploadsRecordingsOK {
	return &PostUploadsRecordingsOK{}
}

/*PostUploadsRecordingsOK handles this case with default header values.

Presigned url successfully created.
*/
type PostUploadsRecordingsOK struct {
	Payload *models.UploadURLResponse
}

func (o *PostUploadsRecordingsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/recordings][%d] postUploadsRecordingsOK  %+v", 200, o.Payload)
}

func (o *PostUploadsRecordingsOK) GetPayload() *models.UploadURLResponse {
	return o.Payload
}

func (o *PostUploadsRecordingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UploadURLResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsRecordingsBadRequest creates a PostUploadsRecordingsBadRequest with default headers values
func NewPostUploadsRecordingsBadRequest() *PostUploadsRecordingsBadRequest {
	return &PostUploadsRecordingsBadRequest{}
}

/*PostUploadsRecordingsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostUploadsRecordingsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PostUploadsRecordingsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/recordings][%d] postUploadsRecordingsBadRequest  %+v", 400, o.Payload)
}

func (o *PostUploadsRecordingsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsRecordingsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsRecordingsUnauthorized creates a PostUploadsRecordingsUnauthorized with default headers values
func NewPostUploadsRecordingsUnauthorized() *PostUploadsRecordingsUnauthorized {
	return &PostUploadsRecordingsUnauthorized{}
}

/*PostUploadsRecordingsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PostUploadsRecordingsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PostUploadsRecordingsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/recordings][%d] postUploadsRecordingsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostUploadsRecordingsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsRecordingsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsRecordingsForbidden creates a PostUploadsRecordingsForbidden with default headers values
func NewPostUploadsRecordingsForbidden() *PostUploadsRecordingsForbidden {
	return &PostUploadsRecordingsForbidden{}
}

/*PostUploadsRecordingsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PostUploadsRecordingsForbidden struct {
	Payload *models.ErrorBody
}

func (o *PostUploadsRecordingsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/recordings][%d] postUploadsRecordingsForbidden  %+v", 403, o.Payload)
}

func (o *PostUploadsRecordingsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsRecordingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsRecordingsNotFound creates a PostUploadsRecordingsNotFound with default headers values
func NewPostUploadsRecordingsNotFound() *PostUploadsRecordingsNotFound {
	return &PostUploadsRecordingsNotFound{}
}

/*PostUploadsRecordingsNotFound handles this case with default header values.

The requested resource was not found.
*/
type PostUploadsRecordingsNotFound struct {
	Payload *models.ErrorBody
}

func (o *PostUploadsRecordingsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/recordings][%d] postUploadsRecordingsNotFound  %+v", 404, o.Payload)
}

func (o *PostUploadsRecordingsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsRecordingsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsRecordingsRequestEntityTooLarge creates a PostUploadsRecordingsRequestEntityTooLarge with default headers values
func NewPostUploadsRecordingsRequestEntityTooLarge() *PostUploadsRecordingsRequestEntityTooLarge {
	return &PostUploadsRecordingsRequestEntityTooLarge{}
}

/*PostUploadsRecordingsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type PostUploadsRecordingsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PostUploadsRecordingsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/recordings][%d] postUploadsRecordingsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostUploadsRecordingsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsRecordingsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsRecordingsUnsupportedMediaType creates a PostUploadsRecordingsUnsupportedMediaType with default headers values
func NewPostUploadsRecordingsUnsupportedMediaType() *PostUploadsRecordingsUnsupportedMediaType {
	return &PostUploadsRecordingsUnsupportedMediaType{}
}

/*PostUploadsRecordingsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostUploadsRecordingsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PostUploadsRecordingsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/recordings][%d] postUploadsRecordingsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostUploadsRecordingsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsRecordingsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsRecordingsTooManyRequests creates a PostUploadsRecordingsTooManyRequests with default headers values
func NewPostUploadsRecordingsTooManyRequests() *PostUploadsRecordingsTooManyRequests {
	return &PostUploadsRecordingsTooManyRequests{}
}

/*PostUploadsRecordingsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type PostUploadsRecordingsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PostUploadsRecordingsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/recordings][%d] postUploadsRecordingsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostUploadsRecordingsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsRecordingsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsRecordingsInternalServerError creates a PostUploadsRecordingsInternalServerError with default headers values
func NewPostUploadsRecordingsInternalServerError() *PostUploadsRecordingsInternalServerError {
	return &PostUploadsRecordingsInternalServerError{}
}

/*PostUploadsRecordingsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostUploadsRecordingsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PostUploadsRecordingsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/recordings][%d] postUploadsRecordingsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostUploadsRecordingsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsRecordingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsRecordingsServiceUnavailable creates a PostUploadsRecordingsServiceUnavailable with default headers values
func NewPostUploadsRecordingsServiceUnavailable() *PostUploadsRecordingsServiceUnavailable {
	return &PostUploadsRecordingsServiceUnavailable{}
}

/*PostUploadsRecordingsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostUploadsRecordingsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PostUploadsRecordingsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/recordings][%d] postUploadsRecordingsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostUploadsRecordingsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsRecordingsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadsRecordingsGatewayTimeout creates a PostUploadsRecordingsGatewayTimeout with default headers values
func NewPostUploadsRecordingsGatewayTimeout() *PostUploadsRecordingsGatewayTimeout {
	return &PostUploadsRecordingsGatewayTimeout{}
}

/*PostUploadsRecordingsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PostUploadsRecordingsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostUploadsRecordingsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/uploads/recordings][%d] postUploadsRecordingsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostUploadsRecordingsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUploadsRecordingsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
