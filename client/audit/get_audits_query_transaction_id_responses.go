// Code generated by go-swagger; DO NOT EDIT.

package audit

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetAuditsQueryTransactionIDReader is a Reader for the GetAuditsQueryTransactionID structure.
type GetAuditsQueryTransactionIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAuditsQueryTransactionIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAuditsQueryTransactionIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewGetAuditsQueryTransactionIDAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAuditsQueryTransactionIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAuditsQueryTransactionIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAuditsQueryTransactionIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAuditsQueryTransactionIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetAuditsQueryTransactionIDRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetAuditsQueryTransactionIDRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetAuditsQueryTransactionIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetAuditsQueryTransactionIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAuditsQueryTransactionIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetAuditsQueryTransactionIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetAuditsQueryTransactionIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAuditsQueryTransactionIDOK creates a GetAuditsQueryTransactionIDOK with default headers values
func NewGetAuditsQueryTransactionIDOK() *GetAuditsQueryTransactionIDOK {
	return &GetAuditsQueryTransactionIDOK{}
}

/*
GetAuditsQueryTransactionIDOK describes a response with status code 200, with default header values.

successful operation
*/
type GetAuditsQueryTransactionIDOK struct {
	Payload *models.AuditQueryExecutionStatusResponse
}

// IsSuccess returns true when this get audits query transaction Id o k response has a 2xx status code
func (o *GetAuditsQueryTransactionIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get audits query transaction Id o k response has a 3xx status code
func (o *GetAuditsQueryTransactionIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get audits query transaction Id o k response has a 4xx status code
func (o *GetAuditsQueryTransactionIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get audits query transaction Id o k response has a 5xx status code
func (o *GetAuditsQueryTransactionIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get audits query transaction Id o k response a status code equal to that given
func (o *GetAuditsQueryTransactionIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetAuditsQueryTransactionIDOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/{transactionId}][%d] getAuditsQueryTransactionIdOK  %+v", 200, o.Payload)
}

func (o *GetAuditsQueryTransactionIDOK) String() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/{transactionId}][%d] getAuditsQueryTransactionIdOK  %+v", 200, o.Payload)
}

func (o *GetAuditsQueryTransactionIDOK) GetPayload() *models.AuditQueryExecutionStatusResponse {
	return o.Payload
}

func (o *GetAuditsQueryTransactionIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuditQueryExecutionStatusResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuditsQueryTransactionIDAccepted creates a GetAuditsQueryTransactionIDAccepted with default headers values
func NewGetAuditsQueryTransactionIDAccepted() *GetAuditsQueryTransactionIDAccepted {
	return &GetAuditsQueryTransactionIDAccepted{}
}

/*
GetAuditsQueryTransactionIDAccepted describes a response with status code 202, with default header values.

In progress - Query execution is in progress.
*/
type GetAuditsQueryTransactionIDAccepted struct {
	Payload *models.AuditQueryExecutionStatusResponse
}

// IsSuccess returns true when this get audits query transaction Id accepted response has a 2xx status code
func (o *GetAuditsQueryTransactionIDAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get audits query transaction Id accepted response has a 3xx status code
func (o *GetAuditsQueryTransactionIDAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get audits query transaction Id accepted response has a 4xx status code
func (o *GetAuditsQueryTransactionIDAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this get audits query transaction Id accepted response has a 5xx status code
func (o *GetAuditsQueryTransactionIDAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this get audits query transaction Id accepted response a status code equal to that given
func (o *GetAuditsQueryTransactionIDAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *GetAuditsQueryTransactionIDAccepted) Error() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/{transactionId}][%d] getAuditsQueryTransactionIdAccepted  %+v", 202, o.Payload)
}

func (o *GetAuditsQueryTransactionIDAccepted) String() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/{transactionId}][%d] getAuditsQueryTransactionIdAccepted  %+v", 202, o.Payload)
}

func (o *GetAuditsQueryTransactionIDAccepted) GetPayload() *models.AuditQueryExecutionStatusResponse {
	return o.Payload
}

func (o *GetAuditsQueryTransactionIDAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuditQueryExecutionStatusResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuditsQueryTransactionIDBadRequest creates a GetAuditsQueryTransactionIDBadRequest with default headers values
func NewGetAuditsQueryTransactionIDBadRequest() *GetAuditsQueryTransactionIDBadRequest {
	return &GetAuditsQueryTransactionIDBadRequest{}
}

/*
GetAuditsQueryTransactionIDBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetAuditsQueryTransactionIDBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get audits query transaction Id bad request response has a 2xx status code
func (o *GetAuditsQueryTransactionIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get audits query transaction Id bad request response has a 3xx status code
func (o *GetAuditsQueryTransactionIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get audits query transaction Id bad request response has a 4xx status code
func (o *GetAuditsQueryTransactionIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get audits query transaction Id bad request response has a 5xx status code
func (o *GetAuditsQueryTransactionIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get audits query transaction Id bad request response a status code equal to that given
func (o *GetAuditsQueryTransactionIDBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetAuditsQueryTransactionIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/{transactionId}][%d] getAuditsQueryTransactionIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetAuditsQueryTransactionIDBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/{transactionId}][%d] getAuditsQueryTransactionIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetAuditsQueryTransactionIDBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuditsQueryTransactionIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuditsQueryTransactionIDUnauthorized creates a GetAuditsQueryTransactionIDUnauthorized with default headers values
func NewGetAuditsQueryTransactionIDUnauthorized() *GetAuditsQueryTransactionIDUnauthorized {
	return &GetAuditsQueryTransactionIDUnauthorized{}
}

/*
GetAuditsQueryTransactionIDUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetAuditsQueryTransactionIDUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get audits query transaction Id unauthorized response has a 2xx status code
func (o *GetAuditsQueryTransactionIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get audits query transaction Id unauthorized response has a 3xx status code
func (o *GetAuditsQueryTransactionIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get audits query transaction Id unauthorized response has a 4xx status code
func (o *GetAuditsQueryTransactionIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get audits query transaction Id unauthorized response has a 5xx status code
func (o *GetAuditsQueryTransactionIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get audits query transaction Id unauthorized response a status code equal to that given
func (o *GetAuditsQueryTransactionIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetAuditsQueryTransactionIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/{transactionId}][%d] getAuditsQueryTransactionIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAuditsQueryTransactionIDUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/{transactionId}][%d] getAuditsQueryTransactionIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAuditsQueryTransactionIDUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuditsQueryTransactionIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuditsQueryTransactionIDForbidden creates a GetAuditsQueryTransactionIDForbidden with default headers values
func NewGetAuditsQueryTransactionIDForbidden() *GetAuditsQueryTransactionIDForbidden {
	return &GetAuditsQueryTransactionIDForbidden{}
}

/*
GetAuditsQueryTransactionIDForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetAuditsQueryTransactionIDForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get audits query transaction Id forbidden response has a 2xx status code
func (o *GetAuditsQueryTransactionIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get audits query transaction Id forbidden response has a 3xx status code
func (o *GetAuditsQueryTransactionIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get audits query transaction Id forbidden response has a 4xx status code
func (o *GetAuditsQueryTransactionIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get audits query transaction Id forbidden response has a 5xx status code
func (o *GetAuditsQueryTransactionIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get audits query transaction Id forbidden response a status code equal to that given
func (o *GetAuditsQueryTransactionIDForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetAuditsQueryTransactionIDForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/{transactionId}][%d] getAuditsQueryTransactionIdForbidden  %+v", 403, o.Payload)
}

func (o *GetAuditsQueryTransactionIDForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/{transactionId}][%d] getAuditsQueryTransactionIdForbidden  %+v", 403, o.Payload)
}

func (o *GetAuditsQueryTransactionIDForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuditsQueryTransactionIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuditsQueryTransactionIDNotFound creates a GetAuditsQueryTransactionIDNotFound with default headers values
func NewGetAuditsQueryTransactionIDNotFound() *GetAuditsQueryTransactionIDNotFound {
	return &GetAuditsQueryTransactionIDNotFound{}
}

/*
GetAuditsQueryTransactionIDNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetAuditsQueryTransactionIDNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get audits query transaction Id not found response has a 2xx status code
func (o *GetAuditsQueryTransactionIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get audits query transaction Id not found response has a 3xx status code
func (o *GetAuditsQueryTransactionIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get audits query transaction Id not found response has a 4xx status code
func (o *GetAuditsQueryTransactionIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get audits query transaction Id not found response has a 5xx status code
func (o *GetAuditsQueryTransactionIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get audits query transaction Id not found response a status code equal to that given
func (o *GetAuditsQueryTransactionIDNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetAuditsQueryTransactionIDNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/{transactionId}][%d] getAuditsQueryTransactionIdNotFound  %+v", 404, o.Payload)
}

func (o *GetAuditsQueryTransactionIDNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/{transactionId}][%d] getAuditsQueryTransactionIdNotFound  %+v", 404, o.Payload)
}

func (o *GetAuditsQueryTransactionIDNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuditsQueryTransactionIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuditsQueryTransactionIDRequestTimeout creates a GetAuditsQueryTransactionIDRequestTimeout with default headers values
func NewGetAuditsQueryTransactionIDRequestTimeout() *GetAuditsQueryTransactionIDRequestTimeout {
	return &GetAuditsQueryTransactionIDRequestTimeout{}
}

/*
GetAuditsQueryTransactionIDRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetAuditsQueryTransactionIDRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get audits query transaction Id request timeout response has a 2xx status code
func (o *GetAuditsQueryTransactionIDRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get audits query transaction Id request timeout response has a 3xx status code
func (o *GetAuditsQueryTransactionIDRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get audits query transaction Id request timeout response has a 4xx status code
func (o *GetAuditsQueryTransactionIDRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get audits query transaction Id request timeout response has a 5xx status code
func (o *GetAuditsQueryTransactionIDRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get audits query transaction Id request timeout response a status code equal to that given
func (o *GetAuditsQueryTransactionIDRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetAuditsQueryTransactionIDRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/{transactionId}][%d] getAuditsQueryTransactionIdRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetAuditsQueryTransactionIDRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/{transactionId}][%d] getAuditsQueryTransactionIdRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetAuditsQueryTransactionIDRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuditsQueryTransactionIDRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuditsQueryTransactionIDRequestEntityTooLarge creates a GetAuditsQueryTransactionIDRequestEntityTooLarge with default headers values
func NewGetAuditsQueryTransactionIDRequestEntityTooLarge() *GetAuditsQueryTransactionIDRequestEntityTooLarge {
	return &GetAuditsQueryTransactionIDRequestEntityTooLarge{}
}

/*
GetAuditsQueryTransactionIDRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetAuditsQueryTransactionIDRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get audits query transaction Id request entity too large response has a 2xx status code
func (o *GetAuditsQueryTransactionIDRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get audits query transaction Id request entity too large response has a 3xx status code
func (o *GetAuditsQueryTransactionIDRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get audits query transaction Id request entity too large response has a 4xx status code
func (o *GetAuditsQueryTransactionIDRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get audits query transaction Id request entity too large response has a 5xx status code
func (o *GetAuditsQueryTransactionIDRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get audits query transaction Id request entity too large response a status code equal to that given
func (o *GetAuditsQueryTransactionIDRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetAuditsQueryTransactionIDRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/{transactionId}][%d] getAuditsQueryTransactionIdRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetAuditsQueryTransactionIDRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/{transactionId}][%d] getAuditsQueryTransactionIdRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetAuditsQueryTransactionIDRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuditsQueryTransactionIDRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuditsQueryTransactionIDUnsupportedMediaType creates a GetAuditsQueryTransactionIDUnsupportedMediaType with default headers values
func NewGetAuditsQueryTransactionIDUnsupportedMediaType() *GetAuditsQueryTransactionIDUnsupportedMediaType {
	return &GetAuditsQueryTransactionIDUnsupportedMediaType{}
}

/*
GetAuditsQueryTransactionIDUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetAuditsQueryTransactionIDUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get audits query transaction Id unsupported media type response has a 2xx status code
func (o *GetAuditsQueryTransactionIDUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get audits query transaction Id unsupported media type response has a 3xx status code
func (o *GetAuditsQueryTransactionIDUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get audits query transaction Id unsupported media type response has a 4xx status code
func (o *GetAuditsQueryTransactionIDUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get audits query transaction Id unsupported media type response has a 5xx status code
func (o *GetAuditsQueryTransactionIDUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get audits query transaction Id unsupported media type response a status code equal to that given
func (o *GetAuditsQueryTransactionIDUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetAuditsQueryTransactionIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/{transactionId}][%d] getAuditsQueryTransactionIdUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetAuditsQueryTransactionIDUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/{transactionId}][%d] getAuditsQueryTransactionIdUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetAuditsQueryTransactionIDUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuditsQueryTransactionIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuditsQueryTransactionIDTooManyRequests creates a GetAuditsQueryTransactionIDTooManyRequests with default headers values
func NewGetAuditsQueryTransactionIDTooManyRequests() *GetAuditsQueryTransactionIDTooManyRequests {
	return &GetAuditsQueryTransactionIDTooManyRequests{}
}

/*
GetAuditsQueryTransactionIDTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetAuditsQueryTransactionIDTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get audits query transaction Id too many requests response has a 2xx status code
func (o *GetAuditsQueryTransactionIDTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get audits query transaction Id too many requests response has a 3xx status code
func (o *GetAuditsQueryTransactionIDTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get audits query transaction Id too many requests response has a 4xx status code
func (o *GetAuditsQueryTransactionIDTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get audits query transaction Id too many requests response has a 5xx status code
func (o *GetAuditsQueryTransactionIDTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get audits query transaction Id too many requests response a status code equal to that given
func (o *GetAuditsQueryTransactionIDTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetAuditsQueryTransactionIDTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/{transactionId}][%d] getAuditsQueryTransactionIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetAuditsQueryTransactionIDTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/{transactionId}][%d] getAuditsQueryTransactionIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetAuditsQueryTransactionIDTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuditsQueryTransactionIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuditsQueryTransactionIDInternalServerError creates a GetAuditsQueryTransactionIDInternalServerError with default headers values
func NewGetAuditsQueryTransactionIDInternalServerError() *GetAuditsQueryTransactionIDInternalServerError {
	return &GetAuditsQueryTransactionIDInternalServerError{}
}

/*
GetAuditsQueryTransactionIDInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetAuditsQueryTransactionIDInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get audits query transaction Id internal server error response has a 2xx status code
func (o *GetAuditsQueryTransactionIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get audits query transaction Id internal server error response has a 3xx status code
func (o *GetAuditsQueryTransactionIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get audits query transaction Id internal server error response has a 4xx status code
func (o *GetAuditsQueryTransactionIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get audits query transaction Id internal server error response has a 5xx status code
func (o *GetAuditsQueryTransactionIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get audits query transaction Id internal server error response a status code equal to that given
func (o *GetAuditsQueryTransactionIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetAuditsQueryTransactionIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/{transactionId}][%d] getAuditsQueryTransactionIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAuditsQueryTransactionIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/{transactionId}][%d] getAuditsQueryTransactionIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAuditsQueryTransactionIDInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuditsQueryTransactionIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuditsQueryTransactionIDServiceUnavailable creates a GetAuditsQueryTransactionIDServiceUnavailable with default headers values
func NewGetAuditsQueryTransactionIDServiceUnavailable() *GetAuditsQueryTransactionIDServiceUnavailable {
	return &GetAuditsQueryTransactionIDServiceUnavailable{}
}

/*
GetAuditsQueryTransactionIDServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetAuditsQueryTransactionIDServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get audits query transaction Id service unavailable response has a 2xx status code
func (o *GetAuditsQueryTransactionIDServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get audits query transaction Id service unavailable response has a 3xx status code
func (o *GetAuditsQueryTransactionIDServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get audits query transaction Id service unavailable response has a 4xx status code
func (o *GetAuditsQueryTransactionIDServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get audits query transaction Id service unavailable response has a 5xx status code
func (o *GetAuditsQueryTransactionIDServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get audits query transaction Id service unavailable response a status code equal to that given
func (o *GetAuditsQueryTransactionIDServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetAuditsQueryTransactionIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/{transactionId}][%d] getAuditsQueryTransactionIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetAuditsQueryTransactionIDServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/{transactionId}][%d] getAuditsQueryTransactionIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetAuditsQueryTransactionIDServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuditsQueryTransactionIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuditsQueryTransactionIDGatewayTimeout creates a GetAuditsQueryTransactionIDGatewayTimeout with default headers values
func NewGetAuditsQueryTransactionIDGatewayTimeout() *GetAuditsQueryTransactionIDGatewayTimeout {
	return &GetAuditsQueryTransactionIDGatewayTimeout{}
}

/*
GetAuditsQueryTransactionIDGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetAuditsQueryTransactionIDGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get audits query transaction Id gateway timeout response has a 2xx status code
func (o *GetAuditsQueryTransactionIDGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get audits query transaction Id gateway timeout response has a 3xx status code
func (o *GetAuditsQueryTransactionIDGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get audits query transaction Id gateway timeout response has a 4xx status code
func (o *GetAuditsQueryTransactionIDGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get audits query transaction Id gateway timeout response has a 5xx status code
func (o *GetAuditsQueryTransactionIDGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get audits query transaction Id gateway timeout response a status code equal to that given
func (o *GetAuditsQueryTransactionIDGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetAuditsQueryTransactionIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/{transactionId}][%d] getAuditsQueryTransactionIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetAuditsQueryTransactionIDGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/{transactionId}][%d] getAuditsQueryTransactionIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetAuditsQueryTransactionIDGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuditsQueryTransactionIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
