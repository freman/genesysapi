// Code generated by go-swagger; DO NOT EDIT.

package audit

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetAuditsQueryServicemappingReader is a Reader for the GetAuditsQueryServicemapping structure.
type GetAuditsQueryServicemappingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAuditsQueryServicemappingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAuditsQueryServicemappingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAuditsQueryServicemappingBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAuditsQueryServicemappingUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAuditsQueryServicemappingForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAuditsQueryServicemappingNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetAuditsQueryServicemappingRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetAuditsQueryServicemappingRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetAuditsQueryServicemappingUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetAuditsQueryServicemappingTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAuditsQueryServicemappingInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetAuditsQueryServicemappingServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetAuditsQueryServicemappingGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAuditsQueryServicemappingOK creates a GetAuditsQueryServicemappingOK with default headers values
func NewGetAuditsQueryServicemappingOK() *GetAuditsQueryServicemappingOK {
	return &GetAuditsQueryServicemappingOK{}
}

/*
GetAuditsQueryServicemappingOK describes a response with status code 200, with default header values.

successful operation
*/
type GetAuditsQueryServicemappingOK struct {
	Payload *models.AuditQueryServiceMapping
}

// IsSuccess returns true when this get audits query servicemapping o k response has a 2xx status code
func (o *GetAuditsQueryServicemappingOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get audits query servicemapping o k response has a 3xx status code
func (o *GetAuditsQueryServicemappingOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get audits query servicemapping o k response has a 4xx status code
func (o *GetAuditsQueryServicemappingOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get audits query servicemapping o k response has a 5xx status code
func (o *GetAuditsQueryServicemappingOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get audits query servicemapping o k response a status code equal to that given
func (o *GetAuditsQueryServicemappingOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetAuditsQueryServicemappingOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/servicemapping][%d] getAuditsQueryServicemappingOK  %+v", 200, o.Payload)
}

func (o *GetAuditsQueryServicemappingOK) String() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/servicemapping][%d] getAuditsQueryServicemappingOK  %+v", 200, o.Payload)
}

func (o *GetAuditsQueryServicemappingOK) GetPayload() *models.AuditQueryServiceMapping {
	return o.Payload
}

func (o *GetAuditsQueryServicemappingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuditQueryServiceMapping)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuditsQueryServicemappingBadRequest creates a GetAuditsQueryServicemappingBadRequest with default headers values
func NewGetAuditsQueryServicemappingBadRequest() *GetAuditsQueryServicemappingBadRequest {
	return &GetAuditsQueryServicemappingBadRequest{}
}

/*
GetAuditsQueryServicemappingBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetAuditsQueryServicemappingBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get audits query servicemapping bad request response has a 2xx status code
func (o *GetAuditsQueryServicemappingBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get audits query servicemapping bad request response has a 3xx status code
func (o *GetAuditsQueryServicemappingBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get audits query servicemapping bad request response has a 4xx status code
func (o *GetAuditsQueryServicemappingBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get audits query servicemapping bad request response has a 5xx status code
func (o *GetAuditsQueryServicemappingBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get audits query servicemapping bad request response a status code equal to that given
func (o *GetAuditsQueryServicemappingBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetAuditsQueryServicemappingBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/servicemapping][%d] getAuditsQueryServicemappingBadRequest  %+v", 400, o.Payload)
}

func (o *GetAuditsQueryServicemappingBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/servicemapping][%d] getAuditsQueryServicemappingBadRequest  %+v", 400, o.Payload)
}

func (o *GetAuditsQueryServicemappingBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuditsQueryServicemappingBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuditsQueryServicemappingUnauthorized creates a GetAuditsQueryServicemappingUnauthorized with default headers values
func NewGetAuditsQueryServicemappingUnauthorized() *GetAuditsQueryServicemappingUnauthorized {
	return &GetAuditsQueryServicemappingUnauthorized{}
}

/*
GetAuditsQueryServicemappingUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetAuditsQueryServicemappingUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get audits query servicemapping unauthorized response has a 2xx status code
func (o *GetAuditsQueryServicemappingUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get audits query servicemapping unauthorized response has a 3xx status code
func (o *GetAuditsQueryServicemappingUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get audits query servicemapping unauthorized response has a 4xx status code
func (o *GetAuditsQueryServicemappingUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get audits query servicemapping unauthorized response has a 5xx status code
func (o *GetAuditsQueryServicemappingUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get audits query servicemapping unauthorized response a status code equal to that given
func (o *GetAuditsQueryServicemappingUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetAuditsQueryServicemappingUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/servicemapping][%d] getAuditsQueryServicemappingUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAuditsQueryServicemappingUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/servicemapping][%d] getAuditsQueryServicemappingUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAuditsQueryServicemappingUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuditsQueryServicemappingUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuditsQueryServicemappingForbidden creates a GetAuditsQueryServicemappingForbidden with default headers values
func NewGetAuditsQueryServicemappingForbidden() *GetAuditsQueryServicemappingForbidden {
	return &GetAuditsQueryServicemappingForbidden{}
}

/*
GetAuditsQueryServicemappingForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetAuditsQueryServicemappingForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get audits query servicemapping forbidden response has a 2xx status code
func (o *GetAuditsQueryServicemappingForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get audits query servicemapping forbidden response has a 3xx status code
func (o *GetAuditsQueryServicemappingForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get audits query servicemapping forbidden response has a 4xx status code
func (o *GetAuditsQueryServicemappingForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get audits query servicemapping forbidden response has a 5xx status code
func (o *GetAuditsQueryServicemappingForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get audits query servicemapping forbidden response a status code equal to that given
func (o *GetAuditsQueryServicemappingForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetAuditsQueryServicemappingForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/servicemapping][%d] getAuditsQueryServicemappingForbidden  %+v", 403, o.Payload)
}

func (o *GetAuditsQueryServicemappingForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/servicemapping][%d] getAuditsQueryServicemappingForbidden  %+v", 403, o.Payload)
}

func (o *GetAuditsQueryServicemappingForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuditsQueryServicemappingForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuditsQueryServicemappingNotFound creates a GetAuditsQueryServicemappingNotFound with default headers values
func NewGetAuditsQueryServicemappingNotFound() *GetAuditsQueryServicemappingNotFound {
	return &GetAuditsQueryServicemappingNotFound{}
}

/*
GetAuditsQueryServicemappingNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetAuditsQueryServicemappingNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get audits query servicemapping not found response has a 2xx status code
func (o *GetAuditsQueryServicemappingNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get audits query servicemapping not found response has a 3xx status code
func (o *GetAuditsQueryServicemappingNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get audits query servicemapping not found response has a 4xx status code
func (o *GetAuditsQueryServicemappingNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get audits query servicemapping not found response has a 5xx status code
func (o *GetAuditsQueryServicemappingNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get audits query servicemapping not found response a status code equal to that given
func (o *GetAuditsQueryServicemappingNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetAuditsQueryServicemappingNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/servicemapping][%d] getAuditsQueryServicemappingNotFound  %+v", 404, o.Payload)
}

func (o *GetAuditsQueryServicemappingNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/servicemapping][%d] getAuditsQueryServicemappingNotFound  %+v", 404, o.Payload)
}

func (o *GetAuditsQueryServicemappingNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuditsQueryServicemappingNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuditsQueryServicemappingRequestTimeout creates a GetAuditsQueryServicemappingRequestTimeout with default headers values
func NewGetAuditsQueryServicemappingRequestTimeout() *GetAuditsQueryServicemappingRequestTimeout {
	return &GetAuditsQueryServicemappingRequestTimeout{}
}

/*
GetAuditsQueryServicemappingRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetAuditsQueryServicemappingRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get audits query servicemapping request timeout response has a 2xx status code
func (o *GetAuditsQueryServicemappingRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get audits query servicemapping request timeout response has a 3xx status code
func (o *GetAuditsQueryServicemappingRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get audits query servicemapping request timeout response has a 4xx status code
func (o *GetAuditsQueryServicemappingRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get audits query servicemapping request timeout response has a 5xx status code
func (o *GetAuditsQueryServicemappingRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get audits query servicemapping request timeout response a status code equal to that given
func (o *GetAuditsQueryServicemappingRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetAuditsQueryServicemappingRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/servicemapping][%d] getAuditsQueryServicemappingRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetAuditsQueryServicemappingRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/servicemapping][%d] getAuditsQueryServicemappingRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetAuditsQueryServicemappingRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuditsQueryServicemappingRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuditsQueryServicemappingRequestEntityTooLarge creates a GetAuditsQueryServicemappingRequestEntityTooLarge with default headers values
func NewGetAuditsQueryServicemappingRequestEntityTooLarge() *GetAuditsQueryServicemappingRequestEntityTooLarge {
	return &GetAuditsQueryServicemappingRequestEntityTooLarge{}
}

/*
GetAuditsQueryServicemappingRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetAuditsQueryServicemappingRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get audits query servicemapping request entity too large response has a 2xx status code
func (o *GetAuditsQueryServicemappingRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get audits query servicemapping request entity too large response has a 3xx status code
func (o *GetAuditsQueryServicemappingRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get audits query servicemapping request entity too large response has a 4xx status code
func (o *GetAuditsQueryServicemappingRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get audits query servicemapping request entity too large response has a 5xx status code
func (o *GetAuditsQueryServicemappingRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get audits query servicemapping request entity too large response a status code equal to that given
func (o *GetAuditsQueryServicemappingRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetAuditsQueryServicemappingRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/servicemapping][%d] getAuditsQueryServicemappingRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetAuditsQueryServicemappingRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/servicemapping][%d] getAuditsQueryServicemappingRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetAuditsQueryServicemappingRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuditsQueryServicemappingRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuditsQueryServicemappingUnsupportedMediaType creates a GetAuditsQueryServicemappingUnsupportedMediaType with default headers values
func NewGetAuditsQueryServicemappingUnsupportedMediaType() *GetAuditsQueryServicemappingUnsupportedMediaType {
	return &GetAuditsQueryServicemappingUnsupportedMediaType{}
}

/*
GetAuditsQueryServicemappingUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetAuditsQueryServicemappingUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get audits query servicemapping unsupported media type response has a 2xx status code
func (o *GetAuditsQueryServicemappingUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get audits query servicemapping unsupported media type response has a 3xx status code
func (o *GetAuditsQueryServicemappingUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get audits query servicemapping unsupported media type response has a 4xx status code
func (o *GetAuditsQueryServicemappingUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get audits query servicemapping unsupported media type response has a 5xx status code
func (o *GetAuditsQueryServicemappingUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get audits query servicemapping unsupported media type response a status code equal to that given
func (o *GetAuditsQueryServicemappingUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetAuditsQueryServicemappingUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/servicemapping][%d] getAuditsQueryServicemappingUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetAuditsQueryServicemappingUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/servicemapping][%d] getAuditsQueryServicemappingUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetAuditsQueryServicemappingUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuditsQueryServicemappingUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuditsQueryServicemappingTooManyRequests creates a GetAuditsQueryServicemappingTooManyRequests with default headers values
func NewGetAuditsQueryServicemappingTooManyRequests() *GetAuditsQueryServicemappingTooManyRequests {
	return &GetAuditsQueryServicemappingTooManyRequests{}
}

/*
GetAuditsQueryServicemappingTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetAuditsQueryServicemappingTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get audits query servicemapping too many requests response has a 2xx status code
func (o *GetAuditsQueryServicemappingTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get audits query servicemapping too many requests response has a 3xx status code
func (o *GetAuditsQueryServicemappingTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get audits query servicemapping too many requests response has a 4xx status code
func (o *GetAuditsQueryServicemappingTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get audits query servicemapping too many requests response has a 5xx status code
func (o *GetAuditsQueryServicemappingTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get audits query servicemapping too many requests response a status code equal to that given
func (o *GetAuditsQueryServicemappingTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetAuditsQueryServicemappingTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/servicemapping][%d] getAuditsQueryServicemappingTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetAuditsQueryServicemappingTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/servicemapping][%d] getAuditsQueryServicemappingTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetAuditsQueryServicemappingTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuditsQueryServicemappingTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuditsQueryServicemappingInternalServerError creates a GetAuditsQueryServicemappingInternalServerError with default headers values
func NewGetAuditsQueryServicemappingInternalServerError() *GetAuditsQueryServicemappingInternalServerError {
	return &GetAuditsQueryServicemappingInternalServerError{}
}

/*
GetAuditsQueryServicemappingInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetAuditsQueryServicemappingInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get audits query servicemapping internal server error response has a 2xx status code
func (o *GetAuditsQueryServicemappingInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get audits query servicemapping internal server error response has a 3xx status code
func (o *GetAuditsQueryServicemappingInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get audits query servicemapping internal server error response has a 4xx status code
func (o *GetAuditsQueryServicemappingInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get audits query servicemapping internal server error response has a 5xx status code
func (o *GetAuditsQueryServicemappingInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get audits query servicemapping internal server error response a status code equal to that given
func (o *GetAuditsQueryServicemappingInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetAuditsQueryServicemappingInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/servicemapping][%d] getAuditsQueryServicemappingInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAuditsQueryServicemappingInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/servicemapping][%d] getAuditsQueryServicemappingInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAuditsQueryServicemappingInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuditsQueryServicemappingInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuditsQueryServicemappingServiceUnavailable creates a GetAuditsQueryServicemappingServiceUnavailable with default headers values
func NewGetAuditsQueryServicemappingServiceUnavailable() *GetAuditsQueryServicemappingServiceUnavailable {
	return &GetAuditsQueryServicemappingServiceUnavailable{}
}

/*
GetAuditsQueryServicemappingServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetAuditsQueryServicemappingServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get audits query servicemapping service unavailable response has a 2xx status code
func (o *GetAuditsQueryServicemappingServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get audits query servicemapping service unavailable response has a 3xx status code
func (o *GetAuditsQueryServicemappingServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get audits query servicemapping service unavailable response has a 4xx status code
func (o *GetAuditsQueryServicemappingServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get audits query servicemapping service unavailable response has a 5xx status code
func (o *GetAuditsQueryServicemappingServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get audits query servicemapping service unavailable response a status code equal to that given
func (o *GetAuditsQueryServicemappingServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetAuditsQueryServicemappingServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/servicemapping][%d] getAuditsQueryServicemappingServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetAuditsQueryServicemappingServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/servicemapping][%d] getAuditsQueryServicemappingServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetAuditsQueryServicemappingServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuditsQueryServicemappingServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuditsQueryServicemappingGatewayTimeout creates a GetAuditsQueryServicemappingGatewayTimeout with default headers values
func NewGetAuditsQueryServicemappingGatewayTimeout() *GetAuditsQueryServicemappingGatewayTimeout {
	return &GetAuditsQueryServicemappingGatewayTimeout{}
}

/*
GetAuditsQueryServicemappingGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetAuditsQueryServicemappingGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get audits query servicemapping gateway timeout response has a 2xx status code
func (o *GetAuditsQueryServicemappingGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get audits query servicemapping gateway timeout response has a 3xx status code
func (o *GetAuditsQueryServicemappingGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get audits query servicemapping gateway timeout response has a 4xx status code
func (o *GetAuditsQueryServicemappingGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get audits query servicemapping gateway timeout response has a 5xx status code
func (o *GetAuditsQueryServicemappingGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get audits query servicemapping gateway timeout response a status code equal to that given
func (o *GetAuditsQueryServicemappingGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetAuditsQueryServicemappingGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/servicemapping][%d] getAuditsQueryServicemappingGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetAuditsQueryServicemappingGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/audits/query/servicemapping][%d] getAuditsQueryServicemappingGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetAuditsQueryServicemappingGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetAuditsQueryServicemappingGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
