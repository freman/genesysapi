// Code generated by go-swagger; DO NOT EDIT.

package response_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostResponsemanagementResponsesQueryReader is a Reader for the PostResponsemanagementResponsesQuery structure.
type PostResponsemanagementResponsesQueryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostResponsemanagementResponsesQueryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostResponsemanagementResponsesQueryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostResponsemanagementResponsesQueryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostResponsemanagementResponsesQueryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostResponsemanagementResponsesQueryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostResponsemanagementResponsesQueryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostResponsemanagementResponsesQueryRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostResponsemanagementResponsesQueryRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostResponsemanagementResponsesQueryUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostResponsemanagementResponsesQueryTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostResponsemanagementResponsesQueryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostResponsemanagementResponsesQueryServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostResponsemanagementResponsesQueryGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostResponsemanagementResponsesQueryOK creates a PostResponsemanagementResponsesQueryOK with default headers values
func NewPostResponsemanagementResponsesQueryOK() *PostResponsemanagementResponsesQueryOK {
	return &PostResponsemanagementResponsesQueryOK{}
}

/*
PostResponsemanagementResponsesQueryOK describes a response with status code 200, with default header values.

successful operation
*/
type PostResponsemanagementResponsesQueryOK struct {
	Payload *models.ResponseQueryResults
}

// IsSuccess returns true when this post responsemanagement responses query o k response has a 2xx status code
func (o *PostResponsemanagementResponsesQueryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post responsemanagement responses query o k response has a 3xx status code
func (o *PostResponsemanagementResponsesQueryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post responsemanagement responses query o k response has a 4xx status code
func (o *PostResponsemanagementResponsesQueryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post responsemanagement responses query o k response has a 5xx status code
func (o *PostResponsemanagementResponsesQueryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post responsemanagement responses query o k response a status code equal to that given
func (o *PostResponsemanagementResponsesQueryOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostResponsemanagementResponsesQueryOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryOK  %+v", 200, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryOK) String() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryOK  %+v", 200, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryOK) GetPayload() *models.ResponseQueryResults {
	return o.Payload
}

func (o *PostResponsemanagementResponsesQueryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseQueryResults)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponsesQueryBadRequest creates a PostResponsemanagementResponsesQueryBadRequest with default headers values
func NewPostResponsemanagementResponsesQueryBadRequest() *PostResponsemanagementResponsesQueryBadRequest {
	return &PostResponsemanagementResponsesQueryBadRequest{}
}

/*
PostResponsemanagementResponsesQueryBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostResponsemanagementResponsesQueryBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post responsemanagement responses query bad request response has a 2xx status code
func (o *PostResponsemanagementResponsesQueryBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post responsemanagement responses query bad request response has a 3xx status code
func (o *PostResponsemanagementResponsesQueryBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post responsemanagement responses query bad request response has a 4xx status code
func (o *PostResponsemanagementResponsesQueryBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post responsemanagement responses query bad request response has a 5xx status code
func (o *PostResponsemanagementResponsesQueryBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post responsemanagement responses query bad request response a status code equal to that given
func (o *PostResponsemanagementResponsesQueryBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostResponsemanagementResponsesQueryBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryBadRequest  %+v", 400, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryBadRequest  %+v", 400, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponsesQueryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponsesQueryUnauthorized creates a PostResponsemanagementResponsesQueryUnauthorized with default headers values
func NewPostResponsemanagementResponsesQueryUnauthorized() *PostResponsemanagementResponsesQueryUnauthorized {
	return &PostResponsemanagementResponsesQueryUnauthorized{}
}

/*
PostResponsemanagementResponsesQueryUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostResponsemanagementResponsesQueryUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post responsemanagement responses query unauthorized response has a 2xx status code
func (o *PostResponsemanagementResponsesQueryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post responsemanagement responses query unauthorized response has a 3xx status code
func (o *PostResponsemanagementResponsesQueryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post responsemanagement responses query unauthorized response has a 4xx status code
func (o *PostResponsemanagementResponsesQueryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post responsemanagement responses query unauthorized response has a 5xx status code
func (o *PostResponsemanagementResponsesQueryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post responsemanagement responses query unauthorized response a status code equal to that given
func (o *PostResponsemanagementResponsesQueryUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostResponsemanagementResponsesQueryUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryUnauthorized  %+v", 401, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryUnauthorized  %+v", 401, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponsesQueryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponsesQueryForbidden creates a PostResponsemanagementResponsesQueryForbidden with default headers values
func NewPostResponsemanagementResponsesQueryForbidden() *PostResponsemanagementResponsesQueryForbidden {
	return &PostResponsemanagementResponsesQueryForbidden{}
}

/*
PostResponsemanagementResponsesQueryForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostResponsemanagementResponsesQueryForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post responsemanagement responses query forbidden response has a 2xx status code
func (o *PostResponsemanagementResponsesQueryForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post responsemanagement responses query forbidden response has a 3xx status code
func (o *PostResponsemanagementResponsesQueryForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post responsemanagement responses query forbidden response has a 4xx status code
func (o *PostResponsemanagementResponsesQueryForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post responsemanagement responses query forbidden response has a 5xx status code
func (o *PostResponsemanagementResponsesQueryForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post responsemanagement responses query forbidden response a status code equal to that given
func (o *PostResponsemanagementResponsesQueryForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostResponsemanagementResponsesQueryForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryForbidden  %+v", 403, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryForbidden  %+v", 403, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponsesQueryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponsesQueryNotFound creates a PostResponsemanagementResponsesQueryNotFound with default headers values
func NewPostResponsemanagementResponsesQueryNotFound() *PostResponsemanagementResponsesQueryNotFound {
	return &PostResponsemanagementResponsesQueryNotFound{}
}

/*
PostResponsemanagementResponsesQueryNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostResponsemanagementResponsesQueryNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post responsemanagement responses query not found response has a 2xx status code
func (o *PostResponsemanagementResponsesQueryNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post responsemanagement responses query not found response has a 3xx status code
func (o *PostResponsemanagementResponsesQueryNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post responsemanagement responses query not found response has a 4xx status code
func (o *PostResponsemanagementResponsesQueryNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post responsemanagement responses query not found response has a 5xx status code
func (o *PostResponsemanagementResponsesQueryNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post responsemanagement responses query not found response a status code equal to that given
func (o *PostResponsemanagementResponsesQueryNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostResponsemanagementResponsesQueryNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryNotFound  %+v", 404, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryNotFound  %+v", 404, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponsesQueryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponsesQueryRequestTimeout creates a PostResponsemanagementResponsesQueryRequestTimeout with default headers values
func NewPostResponsemanagementResponsesQueryRequestTimeout() *PostResponsemanagementResponsesQueryRequestTimeout {
	return &PostResponsemanagementResponsesQueryRequestTimeout{}
}

/*
PostResponsemanagementResponsesQueryRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostResponsemanagementResponsesQueryRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post responsemanagement responses query request timeout response has a 2xx status code
func (o *PostResponsemanagementResponsesQueryRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post responsemanagement responses query request timeout response has a 3xx status code
func (o *PostResponsemanagementResponsesQueryRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post responsemanagement responses query request timeout response has a 4xx status code
func (o *PostResponsemanagementResponsesQueryRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post responsemanagement responses query request timeout response has a 5xx status code
func (o *PostResponsemanagementResponsesQueryRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post responsemanagement responses query request timeout response a status code equal to that given
func (o *PostResponsemanagementResponsesQueryRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostResponsemanagementResponsesQueryRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponsesQueryRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponsesQueryRequestEntityTooLarge creates a PostResponsemanagementResponsesQueryRequestEntityTooLarge with default headers values
func NewPostResponsemanagementResponsesQueryRequestEntityTooLarge() *PostResponsemanagementResponsesQueryRequestEntityTooLarge {
	return &PostResponsemanagementResponsesQueryRequestEntityTooLarge{}
}

/*
PostResponsemanagementResponsesQueryRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostResponsemanagementResponsesQueryRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post responsemanagement responses query request entity too large response has a 2xx status code
func (o *PostResponsemanagementResponsesQueryRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post responsemanagement responses query request entity too large response has a 3xx status code
func (o *PostResponsemanagementResponsesQueryRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post responsemanagement responses query request entity too large response has a 4xx status code
func (o *PostResponsemanagementResponsesQueryRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post responsemanagement responses query request entity too large response has a 5xx status code
func (o *PostResponsemanagementResponsesQueryRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post responsemanagement responses query request entity too large response a status code equal to that given
func (o *PostResponsemanagementResponsesQueryRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostResponsemanagementResponsesQueryRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponsesQueryRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponsesQueryUnsupportedMediaType creates a PostResponsemanagementResponsesQueryUnsupportedMediaType with default headers values
func NewPostResponsemanagementResponsesQueryUnsupportedMediaType() *PostResponsemanagementResponsesQueryUnsupportedMediaType {
	return &PostResponsemanagementResponsesQueryUnsupportedMediaType{}
}

/*
PostResponsemanagementResponsesQueryUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostResponsemanagementResponsesQueryUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post responsemanagement responses query unsupported media type response has a 2xx status code
func (o *PostResponsemanagementResponsesQueryUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post responsemanagement responses query unsupported media type response has a 3xx status code
func (o *PostResponsemanagementResponsesQueryUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post responsemanagement responses query unsupported media type response has a 4xx status code
func (o *PostResponsemanagementResponsesQueryUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post responsemanagement responses query unsupported media type response has a 5xx status code
func (o *PostResponsemanagementResponsesQueryUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post responsemanagement responses query unsupported media type response a status code equal to that given
func (o *PostResponsemanagementResponsesQueryUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostResponsemanagementResponsesQueryUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponsesQueryUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponsesQueryTooManyRequests creates a PostResponsemanagementResponsesQueryTooManyRequests with default headers values
func NewPostResponsemanagementResponsesQueryTooManyRequests() *PostResponsemanagementResponsesQueryTooManyRequests {
	return &PostResponsemanagementResponsesQueryTooManyRequests{}
}

/*
PostResponsemanagementResponsesQueryTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostResponsemanagementResponsesQueryTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post responsemanagement responses query too many requests response has a 2xx status code
func (o *PostResponsemanagementResponsesQueryTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post responsemanagement responses query too many requests response has a 3xx status code
func (o *PostResponsemanagementResponsesQueryTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post responsemanagement responses query too many requests response has a 4xx status code
func (o *PostResponsemanagementResponsesQueryTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post responsemanagement responses query too many requests response has a 5xx status code
func (o *PostResponsemanagementResponsesQueryTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post responsemanagement responses query too many requests response a status code equal to that given
func (o *PostResponsemanagementResponsesQueryTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostResponsemanagementResponsesQueryTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponsesQueryTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponsesQueryInternalServerError creates a PostResponsemanagementResponsesQueryInternalServerError with default headers values
func NewPostResponsemanagementResponsesQueryInternalServerError() *PostResponsemanagementResponsesQueryInternalServerError {
	return &PostResponsemanagementResponsesQueryInternalServerError{}
}

/*
PostResponsemanagementResponsesQueryInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostResponsemanagementResponsesQueryInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post responsemanagement responses query internal server error response has a 2xx status code
func (o *PostResponsemanagementResponsesQueryInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post responsemanagement responses query internal server error response has a 3xx status code
func (o *PostResponsemanagementResponsesQueryInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post responsemanagement responses query internal server error response has a 4xx status code
func (o *PostResponsemanagementResponsesQueryInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post responsemanagement responses query internal server error response has a 5xx status code
func (o *PostResponsemanagementResponsesQueryInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post responsemanagement responses query internal server error response a status code equal to that given
func (o *PostResponsemanagementResponsesQueryInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostResponsemanagementResponsesQueryInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryInternalServerError  %+v", 500, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryInternalServerError  %+v", 500, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponsesQueryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponsesQueryServiceUnavailable creates a PostResponsemanagementResponsesQueryServiceUnavailable with default headers values
func NewPostResponsemanagementResponsesQueryServiceUnavailable() *PostResponsemanagementResponsesQueryServiceUnavailable {
	return &PostResponsemanagementResponsesQueryServiceUnavailable{}
}

/*
PostResponsemanagementResponsesQueryServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostResponsemanagementResponsesQueryServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post responsemanagement responses query service unavailable response has a 2xx status code
func (o *PostResponsemanagementResponsesQueryServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post responsemanagement responses query service unavailable response has a 3xx status code
func (o *PostResponsemanagementResponsesQueryServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post responsemanagement responses query service unavailable response has a 4xx status code
func (o *PostResponsemanagementResponsesQueryServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post responsemanagement responses query service unavailable response has a 5xx status code
func (o *PostResponsemanagementResponsesQueryServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post responsemanagement responses query service unavailable response a status code equal to that given
func (o *PostResponsemanagementResponsesQueryServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostResponsemanagementResponsesQueryServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponsesQueryServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponsesQueryGatewayTimeout creates a PostResponsemanagementResponsesQueryGatewayTimeout with default headers values
func NewPostResponsemanagementResponsesQueryGatewayTimeout() *PostResponsemanagementResponsesQueryGatewayTimeout {
	return &PostResponsemanagementResponsesQueryGatewayTimeout{}
}

/*
PostResponsemanagementResponsesQueryGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostResponsemanagementResponsesQueryGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post responsemanagement responses query gateway timeout response has a 2xx status code
func (o *PostResponsemanagementResponsesQueryGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post responsemanagement responses query gateway timeout response has a 3xx status code
func (o *PostResponsemanagementResponsesQueryGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post responsemanagement responses query gateway timeout response has a 4xx status code
func (o *PostResponsemanagementResponsesQueryGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post responsemanagement responses query gateway timeout response has a 5xx status code
func (o *PostResponsemanagementResponsesQueryGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post responsemanagement responses query gateway timeout response a status code equal to that given
func (o *PostResponsemanagementResponsesQueryGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostResponsemanagementResponsesQueryGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponsesQueryGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
