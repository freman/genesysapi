// Code generated by go-swagger; DO NOT EDIT.

package response_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostResponsemanagementResponsesQueryReader is a Reader for the PostResponsemanagementResponsesQuery structure.
type PostResponsemanagementResponsesQueryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostResponsemanagementResponsesQueryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostResponsemanagementResponsesQueryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostResponsemanagementResponsesQueryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostResponsemanagementResponsesQueryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostResponsemanagementResponsesQueryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostResponsemanagementResponsesQueryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostResponsemanagementResponsesQueryRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostResponsemanagementResponsesQueryRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostResponsemanagementResponsesQueryUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostResponsemanagementResponsesQueryTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostResponsemanagementResponsesQueryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostResponsemanagementResponsesQueryServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostResponsemanagementResponsesQueryGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostResponsemanagementResponsesQueryOK creates a PostResponsemanagementResponsesQueryOK with default headers values
func NewPostResponsemanagementResponsesQueryOK() *PostResponsemanagementResponsesQueryOK {
	return &PostResponsemanagementResponsesQueryOK{}
}

/*PostResponsemanagementResponsesQueryOK handles this case with default header values.

successful operation
*/
type PostResponsemanagementResponsesQueryOK struct {
	Payload *models.ResponseQueryResults
}

func (o *PostResponsemanagementResponsesQueryOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryOK  %+v", 200, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryOK) GetPayload() *models.ResponseQueryResults {
	return o.Payload
}

func (o *PostResponsemanagementResponsesQueryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseQueryResults)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponsesQueryBadRequest creates a PostResponsemanagementResponsesQueryBadRequest with default headers values
func NewPostResponsemanagementResponsesQueryBadRequest() *PostResponsemanagementResponsesQueryBadRequest {
	return &PostResponsemanagementResponsesQueryBadRequest{}
}

/*PostResponsemanagementResponsesQueryBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostResponsemanagementResponsesQueryBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PostResponsemanagementResponsesQueryBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryBadRequest  %+v", 400, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponsesQueryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponsesQueryUnauthorized creates a PostResponsemanagementResponsesQueryUnauthorized with default headers values
func NewPostResponsemanagementResponsesQueryUnauthorized() *PostResponsemanagementResponsesQueryUnauthorized {
	return &PostResponsemanagementResponsesQueryUnauthorized{}
}

/*PostResponsemanagementResponsesQueryUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PostResponsemanagementResponsesQueryUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PostResponsemanagementResponsesQueryUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryUnauthorized  %+v", 401, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponsesQueryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponsesQueryForbidden creates a PostResponsemanagementResponsesQueryForbidden with default headers values
func NewPostResponsemanagementResponsesQueryForbidden() *PostResponsemanagementResponsesQueryForbidden {
	return &PostResponsemanagementResponsesQueryForbidden{}
}

/*PostResponsemanagementResponsesQueryForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PostResponsemanagementResponsesQueryForbidden struct {
	Payload *models.ErrorBody
}

func (o *PostResponsemanagementResponsesQueryForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryForbidden  %+v", 403, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponsesQueryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponsesQueryNotFound creates a PostResponsemanagementResponsesQueryNotFound with default headers values
func NewPostResponsemanagementResponsesQueryNotFound() *PostResponsemanagementResponsesQueryNotFound {
	return &PostResponsemanagementResponsesQueryNotFound{}
}

/*PostResponsemanagementResponsesQueryNotFound handles this case with default header values.

The requested resource was not found.
*/
type PostResponsemanagementResponsesQueryNotFound struct {
	Payload *models.ErrorBody
}

func (o *PostResponsemanagementResponsesQueryNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryNotFound  %+v", 404, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponsesQueryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponsesQueryRequestTimeout creates a PostResponsemanagementResponsesQueryRequestTimeout with default headers values
func NewPostResponsemanagementResponsesQueryRequestTimeout() *PostResponsemanagementResponsesQueryRequestTimeout {
	return &PostResponsemanagementResponsesQueryRequestTimeout{}
}

/*PostResponsemanagementResponsesQueryRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostResponsemanagementResponsesQueryRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostResponsemanagementResponsesQueryRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponsesQueryRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponsesQueryRequestEntityTooLarge creates a PostResponsemanagementResponsesQueryRequestEntityTooLarge with default headers values
func NewPostResponsemanagementResponsesQueryRequestEntityTooLarge() *PostResponsemanagementResponsesQueryRequestEntityTooLarge {
	return &PostResponsemanagementResponsesQueryRequestEntityTooLarge{}
}

/*PostResponsemanagementResponsesQueryRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostResponsemanagementResponsesQueryRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PostResponsemanagementResponsesQueryRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponsesQueryRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponsesQueryUnsupportedMediaType creates a PostResponsemanagementResponsesQueryUnsupportedMediaType with default headers values
func NewPostResponsemanagementResponsesQueryUnsupportedMediaType() *PostResponsemanagementResponsesQueryUnsupportedMediaType {
	return &PostResponsemanagementResponsesQueryUnsupportedMediaType{}
}

/*PostResponsemanagementResponsesQueryUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostResponsemanagementResponsesQueryUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PostResponsemanagementResponsesQueryUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponsesQueryUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponsesQueryTooManyRequests creates a PostResponsemanagementResponsesQueryTooManyRequests with default headers values
func NewPostResponsemanagementResponsesQueryTooManyRequests() *PostResponsemanagementResponsesQueryTooManyRequests {
	return &PostResponsemanagementResponsesQueryTooManyRequests{}
}

/*PostResponsemanagementResponsesQueryTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostResponsemanagementResponsesQueryTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PostResponsemanagementResponsesQueryTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponsesQueryTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponsesQueryInternalServerError creates a PostResponsemanagementResponsesQueryInternalServerError with default headers values
func NewPostResponsemanagementResponsesQueryInternalServerError() *PostResponsemanagementResponsesQueryInternalServerError {
	return &PostResponsemanagementResponsesQueryInternalServerError{}
}

/*PostResponsemanagementResponsesQueryInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostResponsemanagementResponsesQueryInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PostResponsemanagementResponsesQueryInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryInternalServerError  %+v", 500, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponsesQueryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponsesQueryServiceUnavailable creates a PostResponsemanagementResponsesQueryServiceUnavailable with default headers values
func NewPostResponsemanagementResponsesQueryServiceUnavailable() *PostResponsemanagementResponsesQueryServiceUnavailable {
	return &PostResponsemanagementResponsesQueryServiceUnavailable{}
}

/*PostResponsemanagementResponsesQueryServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostResponsemanagementResponsesQueryServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PostResponsemanagementResponsesQueryServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponsesQueryServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponsesQueryGatewayTimeout creates a PostResponsemanagementResponsesQueryGatewayTimeout with default headers values
func NewPostResponsemanagementResponsesQueryGatewayTimeout() *PostResponsemanagementResponsesQueryGatewayTimeout {
	return &PostResponsemanagementResponsesQueryGatewayTimeout{}
}

/*PostResponsemanagementResponsesQueryGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PostResponsemanagementResponsesQueryGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostResponsemanagementResponsesQueryGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responses/query][%d] postResponsemanagementResponsesQueryGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostResponsemanagementResponsesQueryGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponsesQueryGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
