// Code generated by go-swagger; DO NOT EDIT.

package response_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteResponsemanagementResponseReader is a Reader for the DeleteResponsemanagementResponse structure.
type DeleteResponsemanagementResponseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteResponsemanagementResponseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewDeleteResponsemanagementResponseBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteResponsemanagementResponseUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteResponsemanagementResponseForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteResponsemanagementResponseNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteResponsemanagementResponseRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteResponsemanagementResponseUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteResponsemanagementResponseTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteResponsemanagementResponseInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteResponsemanagementResponseServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteResponsemanagementResponseGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteResponsemanagementResponseDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteResponsemanagementResponseBadRequest creates a DeleteResponsemanagementResponseBadRequest with default headers values
func NewDeleteResponsemanagementResponseBadRequest() *DeleteResponsemanagementResponseBadRequest {
	return &DeleteResponsemanagementResponseBadRequest{}
}

/*DeleteResponsemanagementResponseBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteResponsemanagementResponseBadRequest struct {
	Payload *models.ErrorBody
}

func (o *DeleteResponsemanagementResponseBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/responsemanagement/responses/{responseId}][%d] deleteResponsemanagementResponseBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteResponsemanagementResponseBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteResponsemanagementResponseBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResponsemanagementResponseUnauthorized creates a DeleteResponsemanagementResponseUnauthorized with default headers values
func NewDeleteResponsemanagementResponseUnauthorized() *DeleteResponsemanagementResponseUnauthorized {
	return &DeleteResponsemanagementResponseUnauthorized{}
}

/*DeleteResponsemanagementResponseUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteResponsemanagementResponseUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *DeleteResponsemanagementResponseUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/responsemanagement/responses/{responseId}][%d] deleteResponsemanagementResponseUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteResponsemanagementResponseUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteResponsemanagementResponseUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResponsemanagementResponseForbidden creates a DeleteResponsemanagementResponseForbidden with default headers values
func NewDeleteResponsemanagementResponseForbidden() *DeleteResponsemanagementResponseForbidden {
	return &DeleteResponsemanagementResponseForbidden{}
}

/*DeleteResponsemanagementResponseForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type DeleteResponsemanagementResponseForbidden struct {
	Payload *models.ErrorBody
}

func (o *DeleteResponsemanagementResponseForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/responsemanagement/responses/{responseId}][%d] deleteResponsemanagementResponseForbidden  %+v", 403, o.Payload)
}

func (o *DeleteResponsemanagementResponseForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteResponsemanagementResponseForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResponsemanagementResponseNotFound creates a DeleteResponsemanagementResponseNotFound with default headers values
func NewDeleteResponsemanagementResponseNotFound() *DeleteResponsemanagementResponseNotFound {
	return &DeleteResponsemanagementResponseNotFound{}
}

/*DeleteResponsemanagementResponseNotFound handles this case with default header values.

The requested resource was not found.
*/
type DeleteResponsemanagementResponseNotFound struct {
	Payload *models.ErrorBody
}

func (o *DeleteResponsemanagementResponseNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/responsemanagement/responses/{responseId}][%d] deleteResponsemanagementResponseNotFound  %+v", 404, o.Payload)
}

func (o *DeleteResponsemanagementResponseNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteResponsemanagementResponseNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResponsemanagementResponseRequestEntityTooLarge creates a DeleteResponsemanagementResponseRequestEntityTooLarge with default headers values
func NewDeleteResponsemanagementResponseRequestEntityTooLarge() *DeleteResponsemanagementResponseRequestEntityTooLarge {
	return &DeleteResponsemanagementResponseRequestEntityTooLarge{}
}

/*DeleteResponsemanagementResponseRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type DeleteResponsemanagementResponseRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *DeleteResponsemanagementResponseRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/responsemanagement/responses/{responseId}][%d] deleteResponsemanagementResponseRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteResponsemanagementResponseRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteResponsemanagementResponseRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResponsemanagementResponseUnsupportedMediaType creates a DeleteResponsemanagementResponseUnsupportedMediaType with default headers values
func NewDeleteResponsemanagementResponseUnsupportedMediaType() *DeleteResponsemanagementResponseUnsupportedMediaType {
	return &DeleteResponsemanagementResponseUnsupportedMediaType{}
}

/*DeleteResponsemanagementResponseUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteResponsemanagementResponseUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *DeleteResponsemanagementResponseUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/responsemanagement/responses/{responseId}][%d] deleteResponsemanagementResponseUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteResponsemanagementResponseUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteResponsemanagementResponseUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResponsemanagementResponseTooManyRequests creates a DeleteResponsemanagementResponseTooManyRequests with default headers values
func NewDeleteResponsemanagementResponseTooManyRequests() *DeleteResponsemanagementResponseTooManyRequests {
	return &DeleteResponsemanagementResponseTooManyRequests{}
}

/*DeleteResponsemanagementResponseTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type DeleteResponsemanagementResponseTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *DeleteResponsemanagementResponseTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/responsemanagement/responses/{responseId}][%d] deleteResponsemanagementResponseTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteResponsemanagementResponseTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteResponsemanagementResponseTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResponsemanagementResponseInternalServerError creates a DeleteResponsemanagementResponseInternalServerError with default headers values
func NewDeleteResponsemanagementResponseInternalServerError() *DeleteResponsemanagementResponseInternalServerError {
	return &DeleteResponsemanagementResponseInternalServerError{}
}

/*DeleteResponsemanagementResponseInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteResponsemanagementResponseInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *DeleteResponsemanagementResponseInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/responsemanagement/responses/{responseId}][%d] deleteResponsemanagementResponseInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteResponsemanagementResponseInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteResponsemanagementResponseInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResponsemanagementResponseServiceUnavailable creates a DeleteResponsemanagementResponseServiceUnavailable with default headers values
func NewDeleteResponsemanagementResponseServiceUnavailable() *DeleteResponsemanagementResponseServiceUnavailable {
	return &DeleteResponsemanagementResponseServiceUnavailable{}
}

/*DeleteResponsemanagementResponseServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteResponsemanagementResponseServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *DeleteResponsemanagementResponseServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/responsemanagement/responses/{responseId}][%d] deleteResponsemanagementResponseServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteResponsemanagementResponseServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteResponsemanagementResponseServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResponsemanagementResponseGatewayTimeout creates a DeleteResponsemanagementResponseGatewayTimeout with default headers values
func NewDeleteResponsemanagementResponseGatewayTimeout() *DeleteResponsemanagementResponseGatewayTimeout {
	return &DeleteResponsemanagementResponseGatewayTimeout{}
}

/*DeleteResponsemanagementResponseGatewayTimeout handles this case with default header values.

The request timed out.
*/
type DeleteResponsemanagementResponseGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *DeleteResponsemanagementResponseGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/responsemanagement/responses/{responseId}][%d] deleteResponsemanagementResponseGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteResponsemanagementResponseGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteResponsemanagementResponseGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResponsemanagementResponseDefault creates a DeleteResponsemanagementResponseDefault with default headers values
func NewDeleteResponsemanagementResponseDefault(code int) *DeleteResponsemanagementResponseDefault {
	return &DeleteResponsemanagementResponseDefault{
		_statusCode: code,
	}
}

/*DeleteResponsemanagementResponseDefault handles this case with default header values.

successful operation
*/
type DeleteResponsemanagementResponseDefault struct {
	_statusCode int
}

// Code gets the status code for the delete responsemanagement response default response
func (o *DeleteResponsemanagementResponseDefault) Code() int {
	return o._statusCode
}

func (o *DeleteResponsemanagementResponseDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/responsemanagement/responses/{responseId}][%d] deleteResponsemanagementResponse default ", o._statusCode)
}

func (o *DeleteResponsemanagementResponseDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
