// Code generated by go-swagger; DO NOT EDIT.

package response_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteResponsemanagementLibraryReader is a Reader for the DeleteResponsemanagementLibrary structure.
type DeleteResponsemanagementLibraryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteResponsemanagementLibraryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewDeleteResponsemanagementLibraryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteResponsemanagementLibraryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteResponsemanagementLibraryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteResponsemanagementLibraryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteResponsemanagementLibraryRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteResponsemanagementLibraryRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteResponsemanagementLibraryUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteResponsemanagementLibraryTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteResponsemanagementLibraryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteResponsemanagementLibraryServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteResponsemanagementLibraryGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteResponsemanagementLibraryDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteResponsemanagementLibraryBadRequest creates a DeleteResponsemanagementLibraryBadRequest with default headers values
func NewDeleteResponsemanagementLibraryBadRequest() *DeleteResponsemanagementLibraryBadRequest {
	return &DeleteResponsemanagementLibraryBadRequest{}
}

/*DeleteResponsemanagementLibraryBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteResponsemanagementLibraryBadRequest struct {
	Payload *models.ErrorBody
}

func (o *DeleteResponsemanagementLibraryBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/responsemanagement/libraries/{libraryId}][%d] deleteResponsemanagementLibraryBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteResponsemanagementLibraryBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteResponsemanagementLibraryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResponsemanagementLibraryUnauthorized creates a DeleteResponsemanagementLibraryUnauthorized with default headers values
func NewDeleteResponsemanagementLibraryUnauthorized() *DeleteResponsemanagementLibraryUnauthorized {
	return &DeleteResponsemanagementLibraryUnauthorized{}
}

/*DeleteResponsemanagementLibraryUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteResponsemanagementLibraryUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *DeleteResponsemanagementLibraryUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/responsemanagement/libraries/{libraryId}][%d] deleteResponsemanagementLibraryUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteResponsemanagementLibraryUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteResponsemanagementLibraryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResponsemanagementLibraryForbidden creates a DeleteResponsemanagementLibraryForbidden with default headers values
func NewDeleteResponsemanagementLibraryForbidden() *DeleteResponsemanagementLibraryForbidden {
	return &DeleteResponsemanagementLibraryForbidden{}
}

/*DeleteResponsemanagementLibraryForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type DeleteResponsemanagementLibraryForbidden struct {
	Payload *models.ErrorBody
}

func (o *DeleteResponsemanagementLibraryForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/responsemanagement/libraries/{libraryId}][%d] deleteResponsemanagementLibraryForbidden  %+v", 403, o.Payload)
}

func (o *DeleteResponsemanagementLibraryForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteResponsemanagementLibraryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResponsemanagementLibraryNotFound creates a DeleteResponsemanagementLibraryNotFound with default headers values
func NewDeleteResponsemanagementLibraryNotFound() *DeleteResponsemanagementLibraryNotFound {
	return &DeleteResponsemanagementLibraryNotFound{}
}

/*DeleteResponsemanagementLibraryNotFound handles this case with default header values.

The requested resource was not found.
*/
type DeleteResponsemanagementLibraryNotFound struct {
	Payload *models.ErrorBody
}

func (o *DeleteResponsemanagementLibraryNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/responsemanagement/libraries/{libraryId}][%d] deleteResponsemanagementLibraryNotFound  %+v", 404, o.Payload)
}

func (o *DeleteResponsemanagementLibraryNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteResponsemanagementLibraryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResponsemanagementLibraryRequestTimeout creates a DeleteResponsemanagementLibraryRequestTimeout with default headers values
func NewDeleteResponsemanagementLibraryRequestTimeout() *DeleteResponsemanagementLibraryRequestTimeout {
	return &DeleteResponsemanagementLibraryRequestTimeout{}
}

/*DeleteResponsemanagementLibraryRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteResponsemanagementLibraryRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *DeleteResponsemanagementLibraryRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/responsemanagement/libraries/{libraryId}][%d] deleteResponsemanagementLibraryRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteResponsemanagementLibraryRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteResponsemanagementLibraryRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResponsemanagementLibraryRequestEntityTooLarge creates a DeleteResponsemanagementLibraryRequestEntityTooLarge with default headers values
func NewDeleteResponsemanagementLibraryRequestEntityTooLarge() *DeleteResponsemanagementLibraryRequestEntityTooLarge {
	return &DeleteResponsemanagementLibraryRequestEntityTooLarge{}
}

/*DeleteResponsemanagementLibraryRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type DeleteResponsemanagementLibraryRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *DeleteResponsemanagementLibraryRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/responsemanagement/libraries/{libraryId}][%d] deleteResponsemanagementLibraryRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteResponsemanagementLibraryRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteResponsemanagementLibraryRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResponsemanagementLibraryUnsupportedMediaType creates a DeleteResponsemanagementLibraryUnsupportedMediaType with default headers values
func NewDeleteResponsemanagementLibraryUnsupportedMediaType() *DeleteResponsemanagementLibraryUnsupportedMediaType {
	return &DeleteResponsemanagementLibraryUnsupportedMediaType{}
}

/*DeleteResponsemanagementLibraryUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteResponsemanagementLibraryUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *DeleteResponsemanagementLibraryUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/responsemanagement/libraries/{libraryId}][%d] deleteResponsemanagementLibraryUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteResponsemanagementLibraryUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteResponsemanagementLibraryUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResponsemanagementLibraryTooManyRequests creates a DeleteResponsemanagementLibraryTooManyRequests with default headers values
func NewDeleteResponsemanagementLibraryTooManyRequests() *DeleteResponsemanagementLibraryTooManyRequests {
	return &DeleteResponsemanagementLibraryTooManyRequests{}
}

/*DeleteResponsemanagementLibraryTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteResponsemanagementLibraryTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *DeleteResponsemanagementLibraryTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/responsemanagement/libraries/{libraryId}][%d] deleteResponsemanagementLibraryTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteResponsemanagementLibraryTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteResponsemanagementLibraryTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResponsemanagementLibraryInternalServerError creates a DeleteResponsemanagementLibraryInternalServerError with default headers values
func NewDeleteResponsemanagementLibraryInternalServerError() *DeleteResponsemanagementLibraryInternalServerError {
	return &DeleteResponsemanagementLibraryInternalServerError{}
}

/*DeleteResponsemanagementLibraryInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteResponsemanagementLibraryInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *DeleteResponsemanagementLibraryInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/responsemanagement/libraries/{libraryId}][%d] deleteResponsemanagementLibraryInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteResponsemanagementLibraryInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteResponsemanagementLibraryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResponsemanagementLibraryServiceUnavailable creates a DeleteResponsemanagementLibraryServiceUnavailable with default headers values
func NewDeleteResponsemanagementLibraryServiceUnavailable() *DeleteResponsemanagementLibraryServiceUnavailable {
	return &DeleteResponsemanagementLibraryServiceUnavailable{}
}

/*DeleteResponsemanagementLibraryServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteResponsemanagementLibraryServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *DeleteResponsemanagementLibraryServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/responsemanagement/libraries/{libraryId}][%d] deleteResponsemanagementLibraryServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteResponsemanagementLibraryServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteResponsemanagementLibraryServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResponsemanagementLibraryGatewayTimeout creates a DeleteResponsemanagementLibraryGatewayTimeout with default headers values
func NewDeleteResponsemanagementLibraryGatewayTimeout() *DeleteResponsemanagementLibraryGatewayTimeout {
	return &DeleteResponsemanagementLibraryGatewayTimeout{}
}

/*DeleteResponsemanagementLibraryGatewayTimeout handles this case with default header values.

The request timed out.
*/
type DeleteResponsemanagementLibraryGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *DeleteResponsemanagementLibraryGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/responsemanagement/libraries/{libraryId}][%d] deleteResponsemanagementLibraryGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteResponsemanagementLibraryGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteResponsemanagementLibraryGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResponsemanagementLibraryDefault creates a DeleteResponsemanagementLibraryDefault with default headers values
func NewDeleteResponsemanagementLibraryDefault(code int) *DeleteResponsemanagementLibraryDefault {
	return &DeleteResponsemanagementLibraryDefault{
		_statusCode: code,
	}
}

/*DeleteResponsemanagementLibraryDefault handles this case with default header values.

successful operation
*/
type DeleteResponsemanagementLibraryDefault struct {
	_statusCode int
}

// Code gets the status code for the delete responsemanagement library default response
func (o *DeleteResponsemanagementLibraryDefault) Code() int {
	return o._statusCode
}

func (o *DeleteResponsemanagementLibraryDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/responsemanagement/libraries/{libraryId}][%d] deleteResponsemanagementLibrary default ", o._statusCode)
}

func (o *DeleteResponsemanagementLibraryDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
