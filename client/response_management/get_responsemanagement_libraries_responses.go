// Code generated by go-swagger; DO NOT EDIT.

package response_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetResponsemanagementLibrariesReader is a Reader for the GetResponsemanagementLibraries structure.
type GetResponsemanagementLibrariesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResponsemanagementLibrariesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetResponsemanagementLibrariesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetResponsemanagementLibrariesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetResponsemanagementLibrariesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetResponsemanagementLibrariesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetResponsemanagementLibrariesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetResponsemanagementLibrariesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetResponsemanagementLibrariesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetResponsemanagementLibrariesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetResponsemanagementLibrariesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetResponsemanagementLibrariesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetResponsemanagementLibrariesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetResponsemanagementLibrariesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetResponsemanagementLibrariesOK creates a GetResponsemanagementLibrariesOK with default headers values
func NewGetResponsemanagementLibrariesOK() *GetResponsemanagementLibrariesOK {
	return &GetResponsemanagementLibrariesOK{}
}

/*
GetResponsemanagementLibrariesOK describes a response with status code 200, with default header values.

successful operation
*/
type GetResponsemanagementLibrariesOK struct {
	Payload *models.LibraryEntityListing
}

// IsSuccess returns true when this get responsemanagement libraries o k response has a 2xx status code
func (o *GetResponsemanagementLibrariesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get responsemanagement libraries o k response has a 3xx status code
func (o *GetResponsemanagementLibrariesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get responsemanagement libraries o k response has a 4xx status code
func (o *GetResponsemanagementLibrariesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get responsemanagement libraries o k response has a 5xx status code
func (o *GetResponsemanagementLibrariesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get responsemanagement libraries o k response a status code equal to that given
func (o *GetResponsemanagementLibrariesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetResponsemanagementLibrariesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/responsemanagement/libraries][%d] getResponsemanagementLibrariesOK  %+v", 200, o.Payload)
}

func (o *GetResponsemanagementLibrariesOK) String() string {
	return fmt.Sprintf("[GET /api/v2/responsemanagement/libraries][%d] getResponsemanagementLibrariesOK  %+v", 200, o.Payload)
}

func (o *GetResponsemanagementLibrariesOK) GetPayload() *models.LibraryEntityListing {
	return o.Payload
}

func (o *GetResponsemanagementLibrariesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LibraryEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResponsemanagementLibrariesBadRequest creates a GetResponsemanagementLibrariesBadRequest with default headers values
func NewGetResponsemanagementLibrariesBadRequest() *GetResponsemanagementLibrariesBadRequest {
	return &GetResponsemanagementLibrariesBadRequest{}
}

/*
GetResponsemanagementLibrariesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetResponsemanagementLibrariesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get responsemanagement libraries bad request response has a 2xx status code
func (o *GetResponsemanagementLibrariesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get responsemanagement libraries bad request response has a 3xx status code
func (o *GetResponsemanagementLibrariesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get responsemanagement libraries bad request response has a 4xx status code
func (o *GetResponsemanagementLibrariesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get responsemanagement libraries bad request response has a 5xx status code
func (o *GetResponsemanagementLibrariesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get responsemanagement libraries bad request response a status code equal to that given
func (o *GetResponsemanagementLibrariesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetResponsemanagementLibrariesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/responsemanagement/libraries][%d] getResponsemanagementLibrariesBadRequest  %+v", 400, o.Payload)
}

func (o *GetResponsemanagementLibrariesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/responsemanagement/libraries][%d] getResponsemanagementLibrariesBadRequest  %+v", 400, o.Payload)
}

func (o *GetResponsemanagementLibrariesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetResponsemanagementLibrariesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResponsemanagementLibrariesUnauthorized creates a GetResponsemanagementLibrariesUnauthorized with default headers values
func NewGetResponsemanagementLibrariesUnauthorized() *GetResponsemanagementLibrariesUnauthorized {
	return &GetResponsemanagementLibrariesUnauthorized{}
}

/*
GetResponsemanagementLibrariesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetResponsemanagementLibrariesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get responsemanagement libraries unauthorized response has a 2xx status code
func (o *GetResponsemanagementLibrariesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get responsemanagement libraries unauthorized response has a 3xx status code
func (o *GetResponsemanagementLibrariesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get responsemanagement libraries unauthorized response has a 4xx status code
func (o *GetResponsemanagementLibrariesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get responsemanagement libraries unauthorized response has a 5xx status code
func (o *GetResponsemanagementLibrariesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get responsemanagement libraries unauthorized response a status code equal to that given
func (o *GetResponsemanagementLibrariesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetResponsemanagementLibrariesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/responsemanagement/libraries][%d] getResponsemanagementLibrariesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetResponsemanagementLibrariesUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/responsemanagement/libraries][%d] getResponsemanagementLibrariesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetResponsemanagementLibrariesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetResponsemanagementLibrariesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResponsemanagementLibrariesForbidden creates a GetResponsemanagementLibrariesForbidden with default headers values
func NewGetResponsemanagementLibrariesForbidden() *GetResponsemanagementLibrariesForbidden {
	return &GetResponsemanagementLibrariesForbidden{}
}

/*
GetResponsemanagementLibrariesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetResponsemanagementLibrariesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get responsemanagement libraries forbidden response has a 2xx status code
func (o *GetResponsemanagementLibrariesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get responsemanagement libraries forbidden response has a 3xx status code
func (o *GetResponsemanagementLibrariesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get responsemanagement libraries forbidden response has a 4xx status code
func (o *GetResponsemanagementLibrariesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get responsemanagement libraries forbidden response has a 5xx status code
func (o *GetResponsemanagementLibrariesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get responsemanagement libraries forbidden response a status code equal to that given
func (o *GetResponsemanagementLibrariesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetResponsemanagementLibrariesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/responsemanagement/libraries][%d] getResponsemanagementLibrariesForbidden  %+v", 403, o.Payload)
}

func (o *GetResponsemanagementLibrariesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/responsemanagement/libraries][%d] getResponsemanagementLibrariesForbidden  %+v", 403, o.Payload)
}

func (o *GetResponsemanagementLibrariesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetResponsemanagementLibrariesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResponsemanagementLibrariesNotFound creates a GetResponsemanagementLibrariesNotFound with default headers values
func NewGetResponsemanagementLibrariesNotFound() *GetResponsemanagementLibrariesNotFound {
	return &GetResponsemanagementLibrariesNotFound{}
}

/*
GetResponsemanagementLibrariesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetResponsemanagementLibrariesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get responsemanagement libraries not found response has a 2xx status code
func (o *GetResponsemanagementLibrariesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get responsemanagement libraries not found response has a 3xx status code
func (o *GetResponsemanagementLibrariesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get responsemanagement libraries not found response has a 4xx status code
func (o *GetResponsemanagementLibrariesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get responsemanagement libraries not found response has a 5xx status code
func (o *GetResponsemanagementLibrariesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get responsemanagement libraries not found response a status code equal to that given
func (o *GetResponsemanagementLibrariesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetResponsemanagementLibrariesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/responsemanagement/libraries][%d] getResponsemanagementLibrariesNotFound  %+v", 404, o.Payload)
}

func (o *GetResponsemanagementLibrariesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/responsemanagement/libraries][%d] getResponsemanagementLibrariesNotFound  %+v", 404, o.Payload)
}

func (o *GetResponsemanagementLibrariesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetResponsemanagementLibrariesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResponsemanagementLibrariesRequestTimeout creates a GetResponsemanagementLibrariesRequestTimeout with default headers values
func NewGetResponsemanagementLibrariesRequestTimeout() *GetResponsemanagementLibrariesRequestTimeout {
	return &GetResponsemanagementLibrariesRequestTimeout{}
}

/*
GetResponsemanagementLibrariesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetResponsemanagementLibrariesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get responsemanagement libraries request timeout response has a 2xx status code
func (o *GetResponsemanagementLibrariesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get responsemanagement libraries request timeout response has a 3xx status code
func (o *GetResponsemanagementLibrariesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get responsemanagement libraries request timeout response has a 4xx status code
func (o *GetResponsemanagementLibrariesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get responsemanagement libraries request timeout response has a 5xx status code
func (o *GetResponsemanagementLibrariesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get responsemanagement libraries request timeout response a status code equal to that given
func (o *GetResponsemanagementLibrariesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetResponsemanagementLibrariesRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/responsemanagement/libraries][%d] getResponsemanagementLibrariesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetResponsemanagementLibrariesRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/responsemanagement/libraries][%d] getResponsemanagementLibrariesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetResponsemanagementLibrariesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetResponsemanagementLibrariesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResponsemanagementLibrariesRequestEntityTooLarge creates a GetResponsemanagementLibrariesRequestEntityTooLarge with default headers values
func NewGetResponsemanagementLibrariesRequestEntityTooLarge() *GetResponsemanagementLibrariesRequestEntityTooLarge {
	return &GetResponsemanagementLibrariesRequestEntityTooLarge{}
}

/*
GetResponsemanagementLibrariesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetResponsemanagementLibrariesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get responsemanagement libraries request entity too large response has a 2xx status code
func (o *GetResponsemanagementLibrariesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get responsemanagement libraries request entity too large response has a 3xx status code
func (o *GetResponsemanagementLibrariesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get responsemanagement libraries request entity too large response has a 4xx status code
func (o *GetResponsemanagementLibrariesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get responsemanagement libraries request entity too large response has a 5xx status code
func (o *GetResponsemanagementLibrariesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get responsemanagement libraries request entity too large response a status code equal to that given
func (o *GetResponsemanagementLibrariesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetResponsemanagementLibrariesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/responsemanagement/libraries][%d] getResponsemanagementLibrariesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetResponsemanagementLibrariesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/responsemanagement/libraries][%d] getResponsemanagementLibrariesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetResponsemanagementLibrariesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetResponsemanagementLibrariesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResponsemanagementLibrariesUnsupportedMediaType creates a GetResponsemanagementLibrariesUnsupportedMediaType with default headers values
func NewGetResponsemanagementLibrariesUnsupportedMediaType() *GetResponsemanagementLibrariesUnsupportedMediaType {
	return &GetResponsemanagementLibrariesUnsupportedMediaType{}
}

/*
GetResponsemanagementLibrariesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetResponsemanagementLibrariesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get responsemanagement libraries unsupported media type response has a 2xx status code
func (o *GetResponsemanagementLibrariesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get responsemanagement libraries unsupported media type response has a 3xx status code
func (o *GetResponsemanagementLibrariesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get responsemanagement libraries unsupported media type response has a 4xx status code
func (o *GetResponsemanagementLibrariesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get responsemanagement libraries unsupported media type response has a 5xx status code
func (o *GetResponsemanagementLibrariesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get responsemanagement libraries unsupported media type response a status code equal to that given
func (o *GetResponsemanagementLibrariesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetResponsemanagementLibrariesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/responsemanagement/libraries][%d] getResponsemanagementLibrariesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetResponsemanagementLibrariesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/responsemanagement/libraries][%d] getResponsemanagementLibrariesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetResponsemanagementLibrariesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetResponsemanagementLibrariesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResponsemanagementLibrariesTooManyRequests creates a GetResponsemanagementLibrariesTooManyRequests with default headers values
func NewGetResponsemanagementLibrariesTooManyRequests() *GetResponsemanagementLibrariesTooManyRequests {
	return &GetResponsemanagementLibrariesTooManyRequests{}
}

/*
GetResponsemanagementLibrariesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetResponsemanagementLibrariesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get responsemanagement libraries too many requests response has a 2xx status code
func (o *GetResponsemanagementLibrariesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get responsemanagement libraries too many requests response has a 3xx status code
func (o *GetResponsemanagementLibrariesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get responsemanagement libraries too many requests response has a 4xx status code
func (o *GetResponsemanagementLibrariesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get responsemanagement libraries too many requests response has a 5xx status code
func (o *GetResponsemanagementLibrariesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get responsemanagement libraries too many requests response a status code equal to that given
func (o *GetResponsemanagementLibrariesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetResponsemanagementLibrariesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/responsemanagement/libraries][%d] getResponsemanagementLibrariesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetResponsemanagementLibrariesTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/responsemanagement/libraries][%d] getResponsemanagementLibrariesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetResponsemanagementLibrariesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetResponsemanagementLibrariesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResponsemanagementLibrariesInternalServerError creates a GetResponsemanagementLibrariesInternalServerError with default headers values
func NewGetResponsemanagementLibrariesInternalServerError() *GetResponsemanagementLibrariesInternalServerError {
	return &GetResponsemanagementLibrariesInternalServerError{}
}

/*
GetResponsemanagementLibrariesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetResponsemanagementLibrariesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get responsemanagement libraries internal server error response has a 2xx status code
func (o *GetResponsemanagementLibrariesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get responsemanagement libraries internal server error response has a 3xx status code
func (o *GetResponsemanagementLibrariesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get responsemanagement libraries internal server error response has a 4xx status code
func (o *GetResponsemanagementLibrariesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get responsemanagement libraries internal server error response has a 5xx status code
func (o *GetResponsemanagementLibrariesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get responsemanagement libraries internal server error response a status code equal to that given
func (o *GetResponsemanagementLibrariesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetResponsemanagementLibrariesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/responsemanagement/libraries][%d] getResponsemanagementLibrariesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetResponsemanagementLibrariesInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/responsemanagement/libraries][%d] getResponsemanagementLibrariesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetResponsemanagementLibrariesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetResponsemanagementLibrariesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResponsemanagementLibrariesServiceUnavailable creates a GetResponsemanagementLibrariesServiceUnavailable with default headers values
func NewGetResponsemanagementLibrariesServiceUnavailable() *GetResponsemanagementLibrariesServiceUnavailable {
	return &GetResponsemanagementLibrariesServiceUnavailable{}
}

/*
GetResponsemanagementLibrariesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetResponsemanagementLibrariesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get responsemanagement libraries service unavailable response has a 2xx status code
func (o *GetResponsemanagementLibrariesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get responsemanagement libraries service unavailable response has a 3xx status code
func (o *GetResponsemanagementLibrariesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get responsemanagement libraries service unavailable response has a 4xx status code
func (o *GetResponsemanagementLibrariesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get responsemanagement libraries service unavailable response has a 5xx status code
func (o *GetResponsemanagementLibrariesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get responsemanagement libraries service unavailable response a status code equal to that given
func (o *GetResponsemanagementLibrariesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetResponsemanagementLibrariesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/responsemanagement/libraries][%d] getResponsemanagementLibrariesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetResponsemanagementLibrariesServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/responsemanagement/libraries][%d] getResponsemanagementLibrariesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetResponsemanagementLibrariesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetResponsemanagementLibrariesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResponsemanagementLibrariesGatewayTimeout creates a GetResponsemanagementLibrariesGatewayTimeout with default headers values
func NewGetResponsemanagementLibrariesGatewayTimeout() *GetResponsemanagementLibrariesGatewayTimeout {
	return &GetResponsemanagementLibrariesGatewayTimeout{}
}

/*
GetResponsemanagementLibrariesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetResponsemanagementLibrariesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get responsemanagement libraries gateway timeout response has a 2xx status code
func (o *GetResponsemanagementLibrariesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get responsemanagement libraries gateway timeout response has a 3xx status code
func (o *GetResponsemanagementLibrariesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get responsemanagement libraries gateway timeout response has a 4xx status code
func (o *GetResponsemanagementLibrariesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get responsemanagement libraries gateway timeout response has a 5xx status code
func (o *GetResponsemanagementLibrariesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get responsemanagement libraries gateway timeout response a status code equal to that given
func (o *GetResponsemanagementLibrariesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetResponsemanagementLibrariesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/responsemanagement/libraries][%d] getResponsemanagementLibrariesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetResponsemanagementLibrariesGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/responsemanagement/libraries][%d] getResponsemanagementLibrariesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetResponsemanagementLibrariesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetResponsemanagementLibrariesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
