// Code generated by go-swagger; DO NOT EDIT.

package response_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostResponsemanagementResponseassetsUploadsReader is a Reader for the PostResponsemanagementResponseassetsUploads structure.
type PostResponsemanagementResponseassetsUploadsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostResponsemanagementResponseassetsUploadsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostResponsemanagementResponseassetsUploadsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostResponsemanagementResponseassetsUploadsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostResponsemanagementResponseassetsUploadsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostResponsemanagementResponseassetsUploadsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostResponsemanagementResponseassetsUploadsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostResponsemanagementResponseassetsUploadsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostResponsemanagementResponseassetsUploadsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostResponsemanagementResponseassetsUploadsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostResponsemanagementResponseassetsUploadsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostResponsemanagementResponseassetsUploadsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostResponsemanagementResponseassetsUploadsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostResponsemanagementResponseassetsUploadsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostResponsemanagementResponseassetsUploadsOK creates a PostResponsemanagementResponseassetsUploadsOK with default headers values
func NewPostResponsemanagementResponseassetsUploadsOK() *PostResponsemanagementResponseassetsUploadsOK {
	return &PostResponsemanagementResponseassetsUploadsOK{}
}

/*PostResponsemanagementResponseassetsUploadsOK handles this case with default header values.

successful operation
*/
type PostResponsemanagementResponseassetsUploadsOK struct {
	Payload *models.CreateResponseAssetResponse
}

func (o *PostResponsemanagementResponseassetsUploadsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responseassets/uploads][%d] postResponsemanagementResponseassetsUploadsOK  %+v", 200, o.Payload)
}

func (o *PostResponsemanagementResponseassetsUploadsOK) GetPayload() *models.CreateResponseAssetResponse {
	return o.Payload
}

func (o *PostResponsemanagementResponseassetsUploadsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateResponseAssetResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponseassetsUploadsBadRequest creates a PostResponsemanagementResponseassetsUploadsBadRequest with default headers values
func NewPostResponsemanagementResponseassetsUploadsBadRequest() *PostResponsemanagementResponseassetsUploadsBadRequest {
	return &PostResponsemanagementResponseassetsUploadsBadRequest{}
}

/*PostResponsemanagementResponseassetsUploadsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostResponsemanagementResponseassetsUploadsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PostResponsemanagementResponseassetsUploadsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responseassets/uploads][%d] postResponsemanagementResponseassetsUploadsBadRequest  %+v", 400, o.Payload)
}

func (o *PostResponsemanagementResponseassetsUploadsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponseassetsUploadsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponseassetsUploadsUnauthorized creates a PostResponsemanagementResponseassetsUploadsUnauthorized with default headers values
func NewPostResponsemanagementResponseassetsUploadsUnauthorized() *PostResponsemanagementResponseassetsUploadsUnauthorized {
	return &PostResponsemanagementResponseassetsUploadsUnauthorized{}
}

/*PostResponsemanagementResponseassetsUploadsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PostResponsemanagementResponseassetsUploadsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PostResponsemanagementResponseassetsUploadsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responseassets/uploads][%d] postResponsemanagementResponseassetsUploadsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostResponsemanagementResponseassetsUploadsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponseassetsUploadsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponseassetsUploadsForbidden creates a PostResponsemanagementResponseassetsUploadsForbidden with default headers values
func NewPostResponsemanagementResponseassetsUploadsForbidden() *PostResponsemanagementResponseassetsUploadsForbidden {
	return &PostResponsemanagementResponseassetsUploadsForbidden{}
}

/*PostResponsemanagementResponseassetsUploadsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PostResponsemanagementResponseassetsUploadsForbidden struct {
	Payload *models.ErrorBody
}

func (o *PostResponsemanagementResponseassetsUploadsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responseassets/uploads][%d] postResponsemanagementResponseassetsUploadsForbidden  %+v", 403, o.Payload)
}

func (o *PostResponsemanagementResponseassetsUploadsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponseassetsUploadsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponseassetsUploadsNotFound creates a PostResponsemanagementResponseassetsUploadsNotFound with default headers values
func NewPostResponsemanagementResponseassetsUploadsNotFound() *PostResponsemanagementResponseassetsUploadsNotFound {
	return &PostResponsemanagementResponseassetsUploadsNotFound{}
}

/*PostResponsemanagementResponseassetsUploadsNotFound handles this case with default header values.

The requested resource was not found.
*/
type PostResponsemanagementResponseassetsUploadsNotFound struct {
	Payload *models.ErrorBody
}

func (o *PostResponsemanagementResponseassetsUploadsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responseassets/uploads][%d] postResponsemanagementResponseassetsUploadsNotFound  %+v", 404, o.Payload)
}

func (o *PostResponsemanagementResponseassetsUploadsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponseassetsUploadsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponseassetsUploadsRequestTimeout creates a PostResponsemanagementResponseassetsUploadsRequestTimeout with default headers values
func NewPostResponsemanagementResponseassetsUploadsRequestTimeout() *PostResponsemanagementResponseassetsUploadsRequestTimeout {
	return &PostResponsemanagementResponseassetsUploadsRequestTimeout{}
}

/*PostResponsemanagementResponseassetsUploadsRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostResponsemanagementResponseassetsUploadsRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostResponsemanagementResponseassetsUploadsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responseassets/uploads][%d] postResponsemanagementResponseassetsUploadsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostResponsemanagementResponseassetsUploadsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponseassetsUploadsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponseassetsUploadsRequestEntityTooLarge creates a PostResponsemanagementResponseassetsUploadsRequestEntityTooLarge with default headers values
func NewPostResponsemanagementResponseassetsUploadsRequestEntityTooLarge() *PostResponsemanagementResponseassetsUploadsRequestEntityTooLarge {
	return &PostResponsemanagementResponseassetsUploadsRequestEntityTooLarge{}
}

/*PostResponsemanagementResponseassetsUploadsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostResponsemanagementResponseassetsUploadsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PostResponsemanagementResponseassetsUploadsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responseassets/uploads][%d] postResponsemanagementResponseassetsUploadsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostResponsemanagementResponseassetsUploadsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponseassetsUploadsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponseassetsUploadsUnsupportedMediaType creates a PostResponsemanagementResponseassetsUploadsUnsupportedMediaType with default headers values
func NewPostResponsemanagementResponseassetsUploadsUnsupportedMediaType() *PostResponsemanagementResponseassetsUploadsUnsupportedMediaType {
	return &PostResponsemanagementResponseassetsUploadsUnsupportedMediaType{}
}

/*PostResponsemanagementResponseassetsUploadsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostResponsemanagementResponseassetsUploadsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PostResponsemanagementResponseassetsUploadsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responseassets/uploads][%d] postResponsemanagementResponseassetsUploadsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostResponsemanagementResponseassetsUploadsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponseassetsUploadsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponseassetsUploadsTooManyRequests creates a PostResponsemanagementResponseassetsUploadsTooManyRequests with default headers values
func NewPostResponsemanagementResponseassetsUploadsTooManyRequests() *PostResponsemanagementResponseassetsUploadsTooManyRequests {
	return &PostResponsemanagementResponseassetsUploadsTooManyRequests{}
}

/*PostResponsemanagementResponseassetsUploadsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostResponsemanagementResponseassetsUploadsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PostResponsemanagementResponseassetsUploadsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responseassets/uploads][%d] postResponsemanagementResponseassetsUploadsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostResponsemanagementResponseassetsUploadsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponseassetsUploadsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponseassetsUploadsInternalServerError creates a PostResponsemanagementResponseassetsUploadsInternalServerError with default headers values
func NewPostResponsemanagementResponseassetsUploadsInternalServerError() *PostResponsemanagementResponseassetsUploadsInternalServerError {
	return &PostResponsemanagementResponseassetsUploadsInternalServerError{}
}

/*PostResponsemanagementResponseassetsUploadsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostResponsemanagementResponseassetsUploadsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PostResponsemanagementResponseassetsUploadsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responseassets/uploads][%d] postResponsemanagementResponseassetsUploadsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostResponsemanagementResponseassetsUploadsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponseassetsUploadsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponseassetsUploadsServiceUnavailable creates a PostResponsemanagementResponseassetsUploadsServiceUnavailable with default headers values
func NewPostResponsemanagementResponseassetsUploadsServiceUnavailable() *PostResponsemanagementResponseassetsUploadsServiceUnavailable {
	return &PostResponsemanagementResponseassetsUploadsServiceUnavailable{}
}

/*PostResponsemanagementResponseassetsUploadsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostResponsemanagementResponseassetsUploadsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PostResponsemanagementResponseassetsUploadsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responseassets/uploads][%d] postResponsemanagementResponseassetsUploadsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostResponsemanagementResponseassetsUploadsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponseassetsUploadsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResponsemanagementResponseassetsUploadsGatewayTimeout creates a PostResponsemanagementResponseassetsUploadsGatewayTimeout with default headers values
func NewPostResponsemanagementResponseassetsUploadsGatewayTimeout() *PostResponsemanagementResponseassetsUploadsGatewayTimeout {
	return &PostResponsemanagementResponseassetsUploadsGatewayTimeout{}
}

/*PostResponsemanagementResponseassetsUploadsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PostResponsemanagementResponseassetsUploadsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostResponsemanagementResponseassetsUploadsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/responsemanagement/responseassets/uploads][%d] postResponsemanagementResponseassetsUploadsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostResponsemanagementResponseassetsUploadsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostResponsemanagementResponseassetsUploadsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
