// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetUsersSearchReader is a Reader for the GetUsersSearch structure.
type GetUsersSearchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUsersSearchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUsersSearchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUsersSearchBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetUsersSearchUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUsersSearchForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUsersSearchNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetUsersSearchRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetUsersSearchRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetUsersSearchUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetUsersSearchTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUsersSearchInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetUsersSearchServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetUsersSearchGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUsersSearchOK creates a GetUsersSearchOK with default headers values
func NewGetUsersSearchOK() *GetUsersSearchOK {
	return &GetUsersSearchOK{}
}

/*
GetUsersSearchOK describes a response with status code 200, with default header values.

successful operation
*/
type GetUsersSearchOK struct {
	Payload *models.UsersSearchResponse
}

// IsSuccess returns true when this get users search o k response has a 2xx status code
func (o *GetUsersSearchOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get users search o k response has a 3xx status code
func (o *GetUsersSearchOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users search o k response has a 4xx status code
func (o *GetUsersSearchOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get users search o k response has a 5xx status code
func (o *GetUsersSearchOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get users search o k response a status code equal to that given
func (o *GetUsersSearchOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetUsersSearchOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/search][%d] getUsersSearchOK  %+v", 200, o.Payload)
}

func (o *GetUsersSearchOK) String() string {
	return fmt.Sprintf("[GET /api/v2/users/search][%d] getUsersSearchOK  %+v", 200, o.Payload)
}

func (o *GetUsersSearchOK) GetPayload() *models.UsersSearchResponse {
	return o.Payload
}

func (o *GetUsersSearchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UsersSearchResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersSearchBadRequest creates a GetUsersSearchBadRequest with default headers values
func NewGetUsersSearchBadRequest() *GetUsersSearchBadRequest {
	return &GetUsersSearchBadRequest{}
}

/*
GetUsersSearchBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetUsersSearchBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get users search bad request response has a 2xx status code
func (o *GetUsersSearchBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users search bad request response has a 3xx status code
func (o *GetUsersSearchBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users search bad request response has a 4xx status code
func (o *GetUsersSearchBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get users search bad request response has a 5xx status code
func (o *GetUsersSearchBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get users search bad request response a status code equal to that given
func (o *GetUsersSearchBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetUsersSearchBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/search][%d] getUsersSearchBadRequest  %+v", 400, o.Payload)
}

func (o *GetUsersSearchBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/users/search][%d] getUsersSearchBadRequest  %+v", 400, o.Payload)
}

func (o *GetUsersSearchBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUsersSearchBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersSearchUnauthorized creates a GetUsersSearchUnauthorized with default headers values
func NewGetUsersSearchUnauthorized() *GetUsersSearchUnauthorized {
	return &GetUsersSearchUnauthorized{}
}

/*
GetUsersSearchUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetUsersSearchUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get users search unauthorized response has a 2xx status code
func (o *GetUsersSearchUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users search unauthorized response has a 3xx status code
func (o *GetUsersSearchUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users search unauthorized response has a 4xx status code
func (o *GetUsersSearchUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get users search unauthorized response has a 5xx status code
func (o *GetUsersSearchUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get users search unauthorized response a status code equal to that given
func (o *GetUsersSearchUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetUsersSearchUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/search][%d] getUsersSearchUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUsersSearchUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/users/search][%d] getUsersSearchUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUsersSearchUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUsersSearchUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersSearchForbidden creates a GetUsersSearchForbidden with default headers values
func NewGetUsersSearchForbidden() *GetUsersSearchForbidden {
	return &GetUsersSearchForbidden{}
}

/*
GetUsersSearchForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetUsersSearchForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get users search forbidden response has a 2xx status code
func (o *GetUsersSearchForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users search forbidden response has a 3xx status code
func (o *GetUsersSearchForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users search forbidden response has a 4xx status code
func (o *GetUsersSearchForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get users search forbidden response has a 5xx status code
func (o *GetUsersSearchForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get users search forbidden response a status code equal to that given
func (o *GetUsersSearchForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetUsersSearchForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/search][%d] getUsersSearchForbidden  %+v", 403, o.Payload)
}

func (o *GetUsersSearchForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/users/search][%d] getUsersSearchForbidden  %+v", 403, o.Payload)
}

func (o *GetUsersSearchForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUsersSearchForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersSearchNotFound creates a GetUsersSearchNotFound with default headers values
func NewGetUsersSearchNotFound() *GetUsersSearchNotFound {
	return &GetUsersSearchNotFound{}
}

/*
GetUsersSearchNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetUsersSearchNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get users search not found response has a 2xx status code
func (o *GetUsersSearchNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users search not found response has a 3xx status code
func (o *GetUsersSearchNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users search not found response has a 4xx status code
func (o *GetUsersSearchNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get users search not found response has a 5xx status code
func (o *GetUsersSearchNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get users search not found response a status code equal to that given
func (o *GetUsersSearchNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetUsersSearchNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/search][%d] getUsersSearchNotFound  %+v", 404, o.Payload)
}

func (o *GetUsersSearchNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/users/search][%d] getUsersSearchNotFound  %+v", 404, o.Payload)
}

func (o *GetUsersSearchNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUsersSearchNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersSearchRequestTimeout creates a GetUsersSearchRequestTimeout with default headers values
func NewGetUsersSearchRequestTimeout() *GetUsersSearchRequestTimeout {
	return &GetUsersSearchRequestTimeout{}
}

/*
GetUsersSearchRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetUsersSearchRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get users search request timeout response has a 2xx status code
func (o *GetUsersSearchRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users search request timeout response has a 3xx status code
func (o *GetUsersSearchRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users search request timeout response has a 4xx status code
func (o *GetUsersSearchRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get users search request timeout response has a 5xx status code
func (o *GetUsersSearchRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get users search request timeout response a status code equal to that given
func (o *GetUsersSearchRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetUsersSearchRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/search][%d] getUsersSearchRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetUsersSearchRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/users/search][%d] getUsersSearchRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetUsersSearchRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUsersSearchRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersSearchRequestEntityTooLarge creates a GetUsersSearchRequestEntityTooLarge with default headers values
func NewGetUsersSearchRequestEntityTooLarge() *GetUsersSearchRequestEntityTooLarge {
	return &GetUsersSearchRequestEntityTooLarge{}
}

/*
GetUsersSearchRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetUsersSearchRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get users search request entity too large response has a 2xx status code
func (o *GetUsersSearchRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users search request entity too large response has a 3xx status code
func (o *GetUsersSearchRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users search request entity too large response has a 4xx status code
func (o *GetUsersSearchRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get users search request entity too large response has a 5xx status code
func (o *GetUsersSearchRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get users search request entity too large response a status code equal to that given
func (o *GetUsersSearchRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetUsersSearchRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/search][%d] getUsersSearchRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetUsersSearchRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/users/search][%d] getUsersSearchRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetUsersSearchRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUsersSearchRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersSearchUnsupportedMediaType creates a GetUsersSearchUnsupportedMediaType with default headers values
func NewGetUsersSearchUnsupportedMediaType() *GetUsersSearchUnsupportedMediaType {
	return &GetUsersSearchUnsupportedMediaType{}
}

/*
GetUsersSearchUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetUsersSearchUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get users search unsupported media type response has a 2xx status code
func (o *GetUsersSearchUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users search unsupported media type response has a 3xx status code
func (o *GetUsersSearchUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users search unsupported media type response has a 4xx status code
func (o *GetUsersSearchUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get users search unsupported media type response has a 5xx status code
func (o *GetUsersSearchUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get users search unsupported media type response a status code equal to that given
func (o *GetUsersSearchUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetUsersSearchUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/search][%d] getUsersSearchUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetUsersSearchUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/users/search][%d] getUsersSearchUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetUsersSearchUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUsersSearchUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersSearchTooManyRequests creates a GetUsersSearchTooManyRequests with default headers values
func NewGetUsersSearchTooManyRequests() *GetUsersSearchTooManyRequests {
	return &GetUsersSearchTooManyRequests{}
}

/*
GetUsersSearchTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetUsersSearchTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get users search too many requests response has a 2xx status code
func (o *GetUsersSearchTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users search too many requests response has a 3xx status code
func (o *GetUsersSearchTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users search too many requests response has a 4xx status code
func (o *GetUsersSearchTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get users search too many requests response has a 5xx status code
func (o *GetUsersSearchTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get users search too many requests response a status code equal to that given
func (o *GetUsersSearchTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetUsersSearchTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/search][%d] getUsersSearchTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetUsersSearchTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/users/search][%d] getUsersSearchTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetUsersSearchTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUsersSearchTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersSearchInternalServerError creates a GetUsersSearchInternalServerError with default headers values
func NewGetUsersSearchInternalServerError() *GetUsersSearchInternalServerError {
	return &GetUsersSearchInternalServerError{}
}

/*
GetUsersSearchInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetUsersSearchInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get users search internal server error response has a 2xx status code
func (o *GetUsersSearchInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users search internal server error response has a 3xx status code
func (o *GetUsersSearchInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users search internal server error response has a 4xx status code
func (o *GetUsersSearchInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get users search internal server error response has a 5xx status code
func (o *GetUsersSearchInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get users search internal server error response a status code equal to that given
func (o *GetUsersSearchInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetUsersSearchInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/search][%d] getUsersSearchInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUsersSearchInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/users/search][%d] getUsersSearchInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUsersSearchInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUsersSearchInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersSearchServiceUnavailable creates a GetUsersSearchServiceUnavailable with default headers values
func NewGetUsersSearchServiceUnavailable() *GetUsersSearchServiceUnavailable {
	return &GetUsersSearchServiceUnavailable{}
}

/*
GetUsersSearchServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetUsersSearchServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get users search service unavailable response has a 2xx status code
func (o *GetUsersSearchServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users search service unavailable response has a 3xx status code
func (o *GetUsersSearchServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users search service unavailable response has a 4xx status code
func (o *GetUsersSearchServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get users search service unavailable response has a 5xx status code
func (o *GetUsersSearchServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get users search service unavailable response a status code equal to that given
func (o *GetUsersSearchServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetUsersSearchServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/search][%d] getUsersSearchServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUsersSearchServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/users/search][%d] getUsersSearchServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUsersSearchServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUsersSearchServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersSearchGatewayTimeout creates a GetUsersSearchGatewayTimeout with default headers values
func NewGetUsersSearchGatewayTimeout() *GetUsersSearchGatewayTimeout {
	return &GetUsersSearchGatewayTimeout{}
}

/*
GetUsersSearchGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetUsersSearchGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get users search gateway timeout response has a 2xx status code
func (o *GetUsersSearchGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users search gateway timeout response has a 3xx status code
func (o *GetUsersSearchGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users search gateway timeout response has a 4xx status code
func (o *GetUsersSearchGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get users search gateway timeout response has a 5xx status code
func (o *GetUsersSearchGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get users search gateway timeout response a status code equal to that given
func (o *GetUsersSearchGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetUsersSearchGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/search][%d] getUsersSearchGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUsersSearchGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/users/search][%d] getUsersSearchGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUsersSearchGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUsersSearchGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
