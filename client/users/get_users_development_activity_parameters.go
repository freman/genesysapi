// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetUsersDevelopmentActivityParams creates a new GetUsersDevelopmentActivityParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetUsersDevelopmentActivityParams() *GetUsersDevelopmentActivityParams {
	return &GetUsersDevelopmentActivityParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetUsersDevelopmentActivityParamsWithTimeout creates a new GetUsersDevelopmentActivityParams object
// with the ability to set a timeout on a request.
func NewGetUsersDevelopmentActivityParamsWithTimeout(timeout time.Duration) *GetUsersDevelopmentActivityParams {
	return &GetUsersDevelopmentActivityParams{
		timeout: timeout,
	}
}

// NewGetUsersDevelopmentActivityParamsWithContext creates a new GetUsersDevelopmentActivityParams object
// with the ability to set a context for a request.
func NewGetUsersDevelopmentActivityParamsWithContext(ctx context.Context) *GetUsersDevelopmentActivityParams {
	return &GetUsersDevelopmentActivityParams{
		Context: ctx,
	}
}

// NewGetUsersDevelopmentActivityParamsWithHTTPClient creates a new GetUsersDevelopmentActivityParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetUsersDevelopmentActivityParamsWithHTTPClient(client *http.Client) *GetUsersDevelopmentActivityParams {
	return &GetUsersDevelopmentActivityParams{
		HTTPClient: client,
	}
}

/*
GetUsersDevelopmentActivityParams contains all the parameters to send to the API endpoint

	for the get users development activity operation.

	Typically these are written to a http.Request.
*/
type GetUsersDevelopmentActivityParams struct {

	/* ActivityID.

	   Specifies the activity ID, maps to either assignment or appointment ID
	*/
	ActivityID string

	/* Type.

	   Specifies the activity type.
	*/
	Type string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get users development activity params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetUsersDevelopmentActivityParams) WithDefaults() *GetUsersDevelopmentActivityParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get users development activity params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetUsersDevelopmentActivityParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get users development activity params
func (o *GetUsersDevelopmentActivityParams) WithTimeout(timeout time.Duration) *GetUsersDevelopmentActivityParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get users development activity params
func (o *GetUsersDevelopmentActivityParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get users development activity params
func (o *GetUsersDevelopmentActivityParams) WithContext(ctx context.Context) *GetUsersDevelopmentActivityParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get users development activity params
func (o *GetUsersDevelopmentActivityParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get users development activity params
func (o *GetUsersDevelopmentActivityParams) WithHTTPClient(client *http.Client) *GetUsersDevelopmentActivityParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get users development activity params
func (o *GetUsersDevelopmentActivityParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithActivityID adds the activityID to the get users development activity params
func (o *GetUsersDevelopmentActivityParams) WithActivityID(activityID string) *GetUsersDevelopmentActivityParams {
	o.SetActivityID(activityID)
	return o
}

// SetActivityID adds the activityId to the get users development activity params
func (o *GetUsersDevelopmentActivityParams) SetActivityID(activityID string) {
	o.ActivityID = activityID
}

// WithType adds the typeVar to the get users development activity params
func (o *GetUsersDevelopmentActivityParams) WithType(typeVar string) *GetUsersDevelopmentActivityParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the get users development activity params
func (o *GetUsersDevelopmentActivityParams) SetType(typeVar string) {
	o.Type = typeVar
}

// WriteToRequest writes these params to a swagger request
func (o *GetUsersDevelopmentActivityParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param activityId
	if err := r.SetPathParam("activityId", o.ActivityID); err != nil {
		return err
	}

	// query param type
	qrType := o.Type
	qType := qrType
	if qType != "" {

		if err := r.SetQueryParam("type", qType); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
