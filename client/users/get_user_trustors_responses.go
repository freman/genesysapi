// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetUserTrustorsReader is a Reader for the GetUserTrustors structure.
type GetUserTrustorsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserTrustorsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserTrustorsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUserTrustorsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetUserTrustorsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUserTrustorsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUserTrustorsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetUserTrustorsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetUserTrustorsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetUserTrustorsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetUserTrustorsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUserTrustorsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetUserTrustorsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetUserTrustorsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUserTrustorsOK creates a GetUserTrustorsOK with default headers values
func NewGetUserTrustorsOK() *GetUserTrustorsOK {
	return &GetUserTrustorsOK{}
}

/*
GetUserTrustorsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetUserTrustorsOK struct {
	Payload *models.TrustorEntityListing
}

// IsSuccess returns true when this get user trustors o k response has a 2xx status code
func (o *GetUserTrustorsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get user trustors o k response has a 3xx status code
func (o *GetUserTrustorsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user trustors o k response has a 4xx status code
func (o *GetUserTrustorsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user trustors o k response has a 5xx status code
func (o *GetUserTrustorsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get user trustors o k response a status code equal to that given
func (o *GetUserTrustorsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetUserTrustorsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/trustors][%d] getUserTrustorsOK  %+v", 200, o.Payload)
}

func (o *GetUserTrustorsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/trustors][%d] getUserTrustorsOK  %+v", 200, o.Payload)
}

func (o *GetUserTrustorsOK) GetPayload() *models.TrustorEntityListing {
	return o.Payload
}

func (o *GetUserTrustorsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TrustorEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserTrustorsBadRequest creates a GetUserTrustorsBadRequest with default headers values
func NewGetUserTrustorsBadRequest() *GetUserTrustorsBadRequest {
	return &GetUserTrustorsBadRequest{}
}

/*
GetUserTrustorsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetUserTrustorsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user trustors bad request response has a 2xx status code
func (o *GetUserTrustorsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user trustors bad request response has a 3xx status code
func (o *GetUserTrustorsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user trustors bad request response has a 4xx status code
func (o *GetUserTrustorsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user trustors bad request response has a 5xx status code
func (o *GetUserTrustorsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get user trustors bad request response a status code equal to that given
func (o *GetUserTrustorsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetUserTrustorsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/trustors][%d] getUserTrustorsBadRequest  %+v", 400, o.Payload)
}

func (o *GetUserTrustorsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/trustors][%d] getUserTrustorsBadRequest  %+v", 400, o.Payload)
}

func (o *GetUserTrustorsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserTrustorsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserTrustorsUnauthorized creates a GetUserTrustorsUnauthorized with default headers values
func NewGetUserTrustorsUnauthorized() *GetUserTrustorsUnauthorized {
	return &GetUserTrustorsUnauthorized{}
}

/*
GetUserTrustorsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetUserTrustorsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user trustors unauthorized response has a 2xx status code
func (o *GetUserTrustorsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user trustors unauthorized response has a 3xx status code
func (o *GetUserTrustorsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user trustors unauthorized response has a 4xx status code
func (o *GetUserTrustorsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user trustors unauthorized response has a 5xx status code
func (o *GetUserTrustorsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get user trustors unauthorized response a status code equal to that given
func (o *GetUserTrustorsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetUserTrustorsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/trustors][%d] getUserTrustorsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUserTrustorsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/trustors][%d] getUserTrustorsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUserTrustorsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserTrustorsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserTrustorsForbidden creates a GetUserTrustorsForbidden with default headers values
func NewGetUserTrustorsForbidden() *GetUserTrustorsForbidden {
	return &GetUserTrustorsForbidden{}
}

/*
GetUserTrustorsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetUserTrustorsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user trustors forbidden response has a 2xx status code
func (o *GetUserTrustorsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user trustors forbidden response has a 3xx status code
func (o *GetUserTrustorsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user trustors forbidden response has a 4xx status code
func (o *GetUserTrustorsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user trustors forbidden response has a 5xx status code
func (o *GetUserTrustorsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get user trustors forbidden response a status code equal to that given
func (o *GetUserTrustorsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetUserTrustorsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/trustors][%d] getUserTrustorsForbidden  %+v", 403, o.Payload)
}

func (o *GetUserTrustorsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/trustors][%d] getUserTrustorsForbidden  %+v", 403, o.Payload)
}

func (o *GetUserTrustorsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserTrustorsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserTrustorsNotFound creates a GetUserTrustorsNotFound with default headers values
func NewGetUserTrustorsNotFound() *GetUserTrustorsNotFound {
	return &GetUserTrustorsNotFound{}
}

/*
GetUserTrustorsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetUserTrustorsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user trustors not found response has a 2xx status code
func (o *GetUserTrustorsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user trustors not found response has a 3xx status code
func (o *GetUserTrustorsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user trustors not found response has a 4xx status code
func (o *GetUserTrustorsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user trustors not found response has a 5xx status code
func (o *GetUserTrustorsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get user trustors not found response a status code equal to that given
func (o *GetUserTrustorsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetUserTrustorsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/trustors][%d] getUserTrustorsNotFound  %+v", 404, o.Payload)
}

func (o *GetUserTrustorsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/trustors][%d] getUserTrustorsNotFound  %+v", 404, o.Payload)
}

func (o *GetUserTrustorsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserTrustorsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserTrustorsRequestTimeout creates a GetUserTrustorsRequestTimeout with default headers values
func NewGetUserTrustorsRequestTimeout() *GetUserTrustorsRequestTimeout {
	return &GetUserTrustorsRequestTimeout{}
}

/*
GetUserTrustorsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetUserTrustorsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user trustors request timeout response has a 2xx status code
func (o *GetUserTrustorsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user trustors request timeout response has a 3xx status code
func (o *GetUserTrustorsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user trustors request timeout response has a 4xx status code
func (o *GetUserTrustorsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user trustors request timeout response has a 5xx status code
func (o *GetUserTrustorsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get user trustors request timeout response a status code equal to that given
func (o *GetUserTrustorsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetUserTrustorsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/trustors][%d] getUserTrustorsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetUserTrustorsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/trustors][%d] getUserTrustorsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetUserTrustorsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserTrustorsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserTrustorsRequestEntityTooLarge creates a GetUserTrustorsRequestEntityTooLarge with default headers values
func NewGetUserTrustorsRequestEntityTooLarge() *GetUserTrustorsRequestEntityTooLarge {
	return &GetUserTrustorsRequestEntityTooLarge{}
}

/*
GetUserTrustorsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetUserTrustorsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user trustors request entity too large response has a 2xx status code
func (o *GetUserTrustorsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user trustors request entity too large response has a 3xx status code
func (o *GetUserTrustorsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user trustors request entity too large response has a 4xx status code
func (o *GetUserTrustorsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user trustors request entity too large response has a 5xx status code
func (o *GetUserTrustorsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get user trustors request entity too large response a status code equal to that given
func (o *GetUserTrustorsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetUserTrustorsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/trustors][%d] getUserTrustorsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetUserTrustorsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/trustors][%d] getUserTrustorsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetUserTrustorsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserTrustorsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserTrustorsUnsupportedMediaType creates a GetUserTrustorsUnsupportedMediaType with default headers values
func NewGetUserTrustorsUnsupportedMediaType() *GetUserTrustorsUnsupportedMediaType {
	return &GetUserTrustorsUnsupportedMediaType{}
}

/*
GetUserTrustorsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetUserTrustorsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user trustors unsupported media type response has a 2xx status code
func (o *GetUserTrustorsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user trustors unsupported media type response has a 3xx status code
func (o *GetUserTrustorsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user trustors unsupported media type response has a 4xx status code
func (o *GetUserTrustorsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user trustors unsupported media type response has a 5xx status code
func (o *GetUserTrustorsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get user trustors unsupported media type response a status code equal to that given
func (o *GetUserTrustorsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetUserTrustorsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/trustors][%d] getUserTrustorsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetUserTrustorsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/trustors][%d] getUserTrustorsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetUserTrustorsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserTrustorsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserTrustorsTooManyRequests creates a GetUserTrustorsTooManyRequests with default headers values
func NewGetUserTrustorsTooManyRequests() *GetUserTrustorsTooManyRequests {
	return &GetUserTrustorsTooManyRequests{}
}

/*
GetUserTrustorsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetUserTrustorsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user trustors too many requests response has a 2xx status code
func (o *GetUserTrustorsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user trustors too many requests response has a 3xx status code
func (o *GetUserTrustorsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user trustors too many requests response has a 4xx status code
func (o *GetUserTrustorsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user trustors too many requests response has a 5xx status code
func (o *GetUserTrustorsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get user trustors too many requests response a status code equal to that given
func (o *GetUserTrustorsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetUserTrustorsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/trustors][%d] getUserTrustorsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetUserTrustorsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/trustors][%d] getUserTrustorsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetUserTrustorsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserTrustorsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserTrustorsInternalServerError creates a GetUserTrustorsInternalServerError with default headers values
func NewGetUserTrustorsInternalServerError() *GetUserTrustorsInternalServerError {
	return &GetUserTrustorsInternalServerError{}
}

/*
GetUserTrustorsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetUserTrustorsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user trustors internal server error response has a 2xx status code
func (o *GetUserTrustorsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user trustors internal server error response has a 3xx status code
func (o *GetUserTrustorsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user trustors internal server error response has a 4xx status code
func (o *GetUserTrustorsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user trustors internal server error response has a 5xx status code
func (o *GetUserTrustorsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get user trustors internal server error response a status code equal to that given
func (o *GetUserTrustorsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetUserTrustorsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/trustors][%d] getUserTrustorsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUserTrustorsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/trustors][%d] getUserTrustorsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUserTrustorsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserTrustorsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserTrustorsServiceUnavailable creates a GetUserTrustorsServiceUnavailable with default headers values
func NewGetUserTrustorsServiceUnavailable() *GetUserTrustorsServiceUnavailable {
	return &GetUserTrustorsServiceUnavailable{}
}

/*
GetUserTrustorsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetUserTrustorsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user trustors service unavailable response has a 2xx status code
func (o *GetUserTrustorsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user trustors service unavailable response has a 3xx status code
func (o *GetUserTrustorsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user trustors service unavailable response has a 4xx status code
func (o *GetUserTrustorsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user trustors service unavailable response has a 5xx status code
func (o *GetUserTrustorsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get user trustors service unavailable response a status code equal to that given
func (o *GetUserTrustorsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetUserTrustorsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/trustors][%d] getUserTrustorsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUserTrustorsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/trustors][%d] getUserTrustorsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUserTrustorsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserTrustorsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserTrustorsGatewayTimeout creates a GetUserTrustorsGatewayTimeout with default headers values
func NewGetUserTrustorsGatewayTimeout() *GetUserTrustorsGatewayTimeout {
	return &GetUserTrustorsGatewayTimeout{}
}

/*
GetUserTrustorsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetUserTrustorsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user trustors gateway timeout response has a 2xx status code
func (o *GetUserTrustorsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user trustors gateway timeout response has a 3xx status code
func (o *GetUserTrustorsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user trustors gateway timeout response has a 4xx status code
func (o *GetUserTrustorsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user trustors gateway timeout response has a 5xx status code
func (o *GetUserTrustorsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get user trustors gateway timeout response a status code equal to that given
func (o *GetUserTrustorsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetUserTrustorsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/trustors][%d] getUserTrustorsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUserTrustorsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/trustors][%d] getUserTrustorsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUserTrustorsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserTrustorsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
