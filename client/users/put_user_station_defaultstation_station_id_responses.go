// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutUserStationDefaultstationStationIDReader is a Reader for the PutUserStationDefaultstationStationID structure.
type PutUserStationDefaultstationStationIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutUserStationDefaultstationStationIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewPutUserStationDefaultstationStationIDAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutUserStationDefaultstationStationIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutUserStationDefaultstationStationIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutUserStationDefaultstationStationIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutUserStationDefaultstationStationIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutUserStationDefaultstationStationIDRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPutUserStationDefaultstationStationIDConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutUserStationDefaultstationStationIDRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutUserStationDefaultstationStationIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutUserStationDefaultstationStationIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutUserStationDefaultstationStationIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutUserStationDefaultstationStationIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutUserStationDefaultstationStationIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutUserStationDefaultstationStationIDAccepted creates a PutUserStationDefaultstationStationIDAccepted with default headers values
func NewPutUserStationDefaultstationStationIDAccepted() *PutUserStationDefaultstationStationIDAccepted {
	return &PutUserStationDefaultstationStationIDAccepted{}
}

/*PutUserStationDefaultstationStationIDAccepted handles this case with default header values.

Success
*/
type PutUserStationDefaultstationStationIDAccepted struct {
}

func (o *PutUserStationDefaultstationStationIDAccepted) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/station/defaultstation/{stationId}][%d] putUserStationDefaultstationStationIdAccepted ", 202)
}

func (o *PutUserStationDefaultstationStationIDAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutUserStationDefaultstationStationIDBadRequest creates a PutUserStationDefaultstationStationIDBadRequest with default headers values
func NewPutUserStationDefaultstationStationIDBadRequest() *PutUserStationDefaultstationStationIDBadRequest {
	return &PutUserStationDefaultstationStationIDBadRequest{}
}

/*PutUserStationDefaultstationStationIDBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutUserStationDefaultstationStationIDBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PutUserStationDefaultstationStationIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/station/defaultstation/{stationId}][%d] putUserStationDefaultstationStationIdBadRequest  %+v", 400, o.Payload)
}

func (o *PutUserStationDefaultstationStationIDBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserStationDefaultstationStationIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserStationDefaultstationStationIDUnauthorized creates a PutUserStationDefaultstationStationIDUnauthorized with default headers values
func NewPutUserStationDefaultstationStationIDUnauthorized() *PutUserStationDefaultstationStationIDUnauthorized {
	return &PutUserStationDefaultstationStationIDUnauthorized{}
}

/*PutUserStationDefaultstationStationIDUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PutUserStationDefaultstationStationIDUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PutUserStationDefaultstationStationIDUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/station/defaultstation/{stationId}][%d] putUserStationDefaultstationStationIdUnauthorized  %+v", 401, o.Payload)
}

func (o *PutUserStationDefaultstationStationIDUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserStationDefaultstationStationIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserStationDefaultstationStationIDForbidden creates a PutUserStationDefaultstationStationIDForbidden with default headers values
func NewPutUserStationDefaultstationStationIDForbidden() *PutUserStationDefaultstationStationIDForbidden {
	return &PutUserStationDefaultstationStationIDForbidden{}
}

/*PutUserStationDefaultstationStationIDForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PutUserStationDefaultstationStationIDForbidden struct {
	Payload *models.ErrorBody
}

func (o *PutUserStationDefaultstationStationIDForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/station/defaultstation/{stationId}][%d] putUserStationDefaultstationStationIdForbidden  %+v", 403, o.Payload)
}

func (o *PutUserStationDefaultstationStationIDForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserStationDefaultstationStationIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserStationDefaultstationStationIDNotFound creates a PutUserStationDefaultstationStationIDNotFound with default headers values
func NewPutUserStationDefaultstationStationIDNotFound() *PutUserStationDefaultstationStationIDNotFound {
	return &PutUserStationDefaultstationStationIDNotFound{}
}

/*PutUserStationDefaultstationStationIDNotFound handles this case with default header values.

The requested resource was not found.
*/
type PutUserStationDefaultstationStationIDNotFound struct {
	Payload *models.ErrorBody
}

func (o *PutUserStationDefaultstationStationIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/station/defaultstation/{stationId}][%d] putUserStationDefaultstationStationIdNotFound  %+v", 404, o.Payload)
}

func (o *PutUserStationDefaultstationStationIDNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserStationDefaultstationStationIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserStationDefaultstationStationIDRequestTimeout creates a PutUserStationDefaultstationStationIDRequestTimeout with default headers values
func NewPutUserStationDefaultstationStationIDRequestTimeout() *PutUserStationDefaultstationStationIDRequestTimeout {
	return &PutUserStationDefaultstationStationIDRequestTimeout{}
}

/*PutUserStationDefaultstationStationIDRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutUserStationDefaultstationStationIDRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutUserStationDefaultstationStationIDRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/station/defaultstation/{stationId}][%d] putUserStationDefaultstationStationIdRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutUserStationDefaultstationStationIDRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserStationDefaultstationStationIDRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserStationDefaultstationStationIDConflict creates a PutUserStationDefaultstationStationIDConflict with default headers values
func NewPutUserStationDefaultstationStationIDConflict() *PutUserStationDefaultstationStationIDConflict {
	return &PutUserStationDefaultstationStationIDConflict{}
}

/*PutUserStationDefaultstationStationIDConflict handles this case with default header values.

Conflict
*/
type PutUserStationDefaultstationStationIDConflict struct {
	Payload *models.ErrorBody
}

func (o *PutUserStationDefaultstationStationIDConflict) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/station/defaultstation/{stationId}][%d] putUserStationDefaultstationStationIdConflict  %+v", 409, o.Payload)
}

func (o *PutUserStationDefaultstationStationIDConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserStationDefaultstationStationIDConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserStationDefaultstationStationIDRequestEntityTooLarge creates a PutUserStationDefaultstationStationIDRequestEntityTooLarge with default headers values
func NewPutUserStationDefaultstationStationIDRequestEntityTooLarge() *PutUserStationDefaultstationStationIDRequestEntityTooLarge {
	return &PutUserStationDefaultstationStationIDRequestEntityTooLarge{}
}

/*PutUserStationDefaultstationStationIDRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PutUserStationDefaultstationStationIDRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PutUserStationDefaultstationStationIDRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/station/defaultstation/{stationId}][%d] putUserStationDefaultstationStationIdRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutUserStationDefaultstationStationIDRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserStationDefaultstationStationIDRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserStationDefaultstationStationIDUnsupportedMediaType creates a PutUserStationDefaultstationStationIDUnsupportedMediaType with default headers values
func NewPutUserStationDefaultstationStationIDUnsupportedMediaType() *PutUserStationDefaultstationStationIDUnsupportedMediaType {
	return &PutUserStationDefaultstationStationIDUnsupportedMediaType{}
}

/*PutUserStationDefaultstationStationIDUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutUserStationDefaultstationStationIDUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PutUserStationDefaultstationStationIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/station/defaultstation/{stationId}][%d] putUserStationDefaultstationStationIdUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutUserStationDefaultstationStationIDUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserStationDefaultstationStationIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserStationDefaultstationStationIDTooManyRequests creates a PutUserStationDefaultstationStationIDTooManyRequests with default headers values
func NewPutUserStationDefaultstationStationIDTooManyRequests() *PutUserStationDefaultstationStationIDTooManyRequests {
	return &PutUserStationDefaultstationStationIDTooManyRequests{}
}

/*PutUserStationDefaultstationStationIDTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutUserStationDefaultstationStationIDTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PutUserStationDefaultstationStationIDTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/station/defaultstation/{stationId}][%d] putUserStationDefaultstationStationIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutUserStationDefaultstationStationIDTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserStationDefaultstationStationIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserStationDefaultstationStationIDInternalServerError creates a PutUserStationDefaultstationStationIDInternalServerError with default headers values
func NewPutUserStationDefaultstationStationIDInternalServerError() *PutUserStationDefaultstationStationIDInternalServerError {
	return &PutUserStationDefaultstationStationIDInternalServerError{}
}

/*PutUserStationDefaultstationStationIDInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutUserStationDefaultstationStationIDInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PutUserStationDefaultstationStationIDInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/station/defaultstation/{stationId}][%d] putUserStationDefaultstationStationIdInternalServerError  %+v", 500, o.Payload)
}

func (o *PutUserStationDefaultstationStationIDInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserStationDefaultstationStationIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserStationDefaultstationStationIDServiceUnavailable creates a PutUserStationDefaultstationStationIDServiceUnavailable with default headers values
func NewPutUserStationDefaultstationStationIDServiceUnavailable() *PutUserStationDefaultstationStationIDServiceUnavailable {
	return &PutUserStationDefaultstationStationIDServiceUnavailable{}
}

/*PutUserStationDefaultstationStationIDServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutUserStationDefaultstationStationIDServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PutUserStationDefaultstationStationIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/station/defaultstation/{stationId}][%d] putUserStationDefaultstationStationIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutUserStationDefaultstationStationIDServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserStationDefaultstationStationIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserStationDefaultstationStationIDGatewayTimeout creates a PutUserStationDefaultstationStationIDGatewayTimeout with default headers values
func NewPutUserStationDefaultstationStationIDGatewayTimeout() *PutUserStationDefaultstationStationIDGatewayTimeout {
	return &PutUserStationDefaultstationStationIDGatewayTimeout{}
}

/*PutUserStationDefaultstationStationIDGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PutUserStationDefaultstationStationIDGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutUserStationDefaultstationStationIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/station/defaultstation/{stationId}][%d] putUserStationDefaultstationStationIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutUserStationDefaultstationStationIDGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserStationDefaultstationStationIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
