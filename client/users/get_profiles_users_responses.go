// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetProfilesUsersReader is a Reader for the GetProfilesUsers structure.
type GetProfilesUsersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetProfilesUsersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetProfilesUsersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetProfilesUsersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetProfilesUsersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetProfilesUsersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetProfilesUsersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetProfilesUsersRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetProfilesUsersRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetProfilesUsersUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetProfilesUsersTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetProfilesUsersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetProfilesUsersServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetProfilesUsersGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetProfilesUsersOK creates a GetProfilesUsersOK with default headers values
func NewGetProfilesUsersOK() *GetProfilesUsersOK {
	return &GetProfilesUsersOK{}
}

/*
GetProfilesUsersOK describes a response with status code 200, with default header values.

successful operation
*/
type GetProfilesUsersOK struct {
	Payload *models.UserProfileEntityListing
}

// IsSuccess returns true when this get profiles users o k response has a 2xx status code
func (o *GetProfilesUsersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get profiles users o k response has a 3xx status code
func (o *GetProfilesUsersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get profiles users o k response has a 4xx status code
func (o *GetProfilesUsersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get profiles users o k response has a 5xx status code
func (o *GetProfilesUsersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get profiles users o k response a status code equal to that given
func (o *GetProfilesUsersOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetProfilesUsersOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/profiles/users][%d] getProfilesUsersOK  %+v", 200, o.Payload)
}

func (o *GetProfilesUsersOK) String() string {
	return fmt.Sprintf("[GET /api/v2/profiles/users][%d] getProfilesUsersOK  %+v", 200, o.Payload)
}

func (o *GetProfilesUsersOK) GetPayload() *models.UserProfileEntityListing {
	return o.Payload
}

func (o *GetProfilesUsersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserProfileEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProfilesUsersBadRequest creates a GetProfilesUsersBadRequest with default headers values
func NewGetProfilesUsersBadRequest() *GetProfilesUsersBadRequest {
	return &GetProfilesUsersBadRequest{}
}

/*
GetProfilesUsersBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetProfilesUsersBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get profiles users bad request response has a 2xx status code
func (o *GetProfilesUsersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get profiles users bad request response has a 3xx status code
func (o *GetProfilesUsersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get profiles users bad request response has a 4xx status code
func (o *GetProfilesUsersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get profiles users bad request response has a 5xx status code
func (o *GetProfilesUsersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get profiles users bad request response a status code equal to that given
func (o *GetProfilesUsersBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetProfilesUsersBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/profiles/users][%d] getProfilesUsersBadRequest  %+v", 400, o.Payload)
}

func (o *GetProfilesUsersBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/profiles/users][%d] getProfilesUsersBadRequest  %+v", 400, o.Payload)
}

func (o *GetProfilesUsersBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetProfilesUsersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProfilesUsersUnauthorized creates a GetProfilesUsersUnauthorized with default headers values
func NewGetProfilesUsersUnauthorized() *GetProfilesUsersUnauthorized {
	return &GetProfilesUsersUnauthorized{}
}

/*
GetProfilesUsersUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetProfilesUsersUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get profiles users unauthorized response has a 2xx status code
func (o *GetProfilesUsersUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get profiles users unauthorized response has a 3xx status code
func (o *GetProfilesUsersUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get profiles users unauthorized response has a 4xx status code
func (o *GetProfilesUsersUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get profiles users unauthorized response has a 5xx status code
func (o *GetProfilesUsersUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get profiles users unauthorized response a status code equal to that given
func (o *GetProfilesUsersUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetProfilesUsersUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/profiles/users][%d] getProfilesUsersUnauthorized  %+v", 401, o.Payload)
}

func (o *GetProfilesUsersUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/profiles/users][%d] getProfilesUsersUnauthorized  %+v", 401, o.Payload)
}

func (o *GetProfilesUsersUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetProfilesUsersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProfilesUsersForbidden creates a GetProfilesUsersForbidden with default headers values
func NewGetProfilesUsersForbidden() *GetProfilesUsersForbidden {
	return &GetProfilesUsersForbidden{}
}

/*
GetProfilesUsersForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetProfilesUsersForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get profiles users forbidden response has a 2xx status code
func (o *GetProfilesUsersForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get profiles users forbidden response has a 3xx status code
func (o *GetProfilesUsersForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get profiles users forbidden response has a 4xx status code
func (o *GetProfilesUsersForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get profiles users forbidden response has a 5xx status code
func (o *GetProfilesUsersForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get profiles users forbidden response a status code equal to that given
func (o *GetProfilesUsersForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetProfilesUsersForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/profiles/users][%d] getProfilesUsersForbidden  %+v", 403, o.Payload)
}

func (o *GetProfilesUsersForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/profiles/users][%d] getProfilesUsersForbidden  %+v", 403, o.Payload)
}

func (o *GetProfilesUsersForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetProfilesUsersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProfilesUsersNotFound creates a GetProfilesUsersNotFound with default headers values
func NewGetProfilesUsersNotFound() *GetProfilesUsersNotFound {
	return &GetProfilesUsersNotFound{}
}

/*
GetProfilesUsersNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetProfilesUsersNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get profiles users not found response has a 2xx status code
func (o *GetProfilesUsersNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get profiles users not found response has a 3xx status code
func (o *GetProfilesUsersNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get profiles users not found response has a 4xx status code
func (o *GetProfilesUsersNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get profiles users not found response has a 5xx status code
func (o *GetProfilesUsersNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get profiles users not found response a status code equal to that given
func (o *GetProfilesUsersNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetProfilesUsersNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/profiles/users][%d] getProfilesUsersNotFound  %+v", 404, o.Payload)
}

func (o *GetProfilesUsersNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/profiles/users][%d] getProfilesUsersNotFound  %+v", 404, o.Payload)
}

func (o *GetProfilesUsersNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetProfilesUsersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProfilesUsersRequestTimeout creates a GetProfilesUsersRequestTimeout with default headers values
func NewGetProfilesUsersRequestTimeout() *GetProfilesUsersRequestTimeout {
	return &GetProfilesUsersRequestTimeout{}
}

/*
GetProfilesUsersRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetProfilesUsersRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get profiles users request timeout response has a 2xx status code
func (o *GetProfilesUsersRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get profiles users request timeout response has a 3xx status code
func (o *GetProfilesUsersRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get profiles users request timeout response has a 4xx status code
func (o *GetProfilesUsersRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get profiles users request timeout response has a 5xx status code
func (o *GetProfilesUsersRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get profiles users request timeout response a status code equal to that given
func (o *GetProfilesUsersRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetProfilesUsersRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/profiles/users][%d] getProfilesUsersRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetProfilesUsersRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/profiles/users][%d] getProfilesUsersRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetProfilesUsersRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetProfilesUsersRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProfilesUsersRequestEntityTooLarge creates a GetProfilesUsersRequestEntityTooLarge with default headers values
func NewGetProfilesUsersRequestEntityTooLarge() *GetProfilesUsersRequestEntityTooLarge {
	return &GetProfilesUsersRequestEntityTooLarge{}
}

/*
GetProfilesUsersRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetProfilesUsersRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get profiles users request entity too large response has a 2xx status code
func (o *GetProfilesUsersRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get profiles users request entity too large response has a 3xx status code
func (o *GetProfilesUsersRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get profiles users request entity too large response has a 4xx status code
func (o *GetProfilesUsersRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get profiles users request entity too large response has a 5xx status code
func (o *GetProfilesUsersRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get profiles users request entity too large response a status code equal to that given
func (o *GetProfilesUsersRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetProfilesUsersRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/profiles/users][%d] getProfilesUsersRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetProfilesUsersRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/profiles/users][%d] getProfilesUsersRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetProfilesUsersRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetProfilesUsersRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProfilesUsersUnsupportedMediaType creates a GetProfilesUsersUnsupportedMediaType with default headers values
func NewGetProfilesUsersUnsupportedMediaType() *GetProfilesUsersUnsupportedMediaType {
	return &GetProfilesUsersUnsupportedMediaType{}
}

/*
GetProfilesUsersUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetProfilesUsersUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get profiles users unsupported media type response has a 2xx status code
func (o *GetProfilesUsersUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get profiles users unsupported media type response has a 3xx status code
func (o *GetProfilesUsersUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get profiles users unsupported media type response has a 4xx status code
func (o *GetProfilesUsersUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get profiles users unsupported media type response has a 5xx status code
func (o *GetProfilesUsersUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get profiles users unsupported media type response a status code equal to that given
func (o *GetProfilesUsersUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetProfilesUsersUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/profiles/users][%d] getProfilesUsersUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetProfilesUsersUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/profiles/users][%d] getProfilesUsersUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetProfilesUsersUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetProfilesUsersUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProfilesUsersTooManyRequests creates a GetProfilesUsersTooManyRequests with default headers values
func NewGetProfilesUsersTooManyRequests() *GetProfilesUsersTooManyRequests {
	return &GetProfilesUsersTooManyRequests{}
}

/*
GetProfilesUsersTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetProfilesUsersTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get profiles users too many requests response has a 2xx status code
func (o *GetProfilesUsersTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get profiles users too many requests response has a 3xx status code
func (o *GetProfilesUsersTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get profiles users too many requests response has a 4xx status code
func (o *GetProfilesUsersTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get profiles users too many requests response has a 5xx status code
func (o *GetProfilesUsersTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get profiles users too many requests response a status code equal to that given
func (o *GetProfilesUsersTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetProfilesUsersTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/profiles/users][%d] getProfilesUsersTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetProfilesUsersTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/profiles/users][%d] getProfilesUsersTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetProfilesUsersTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetProfilesUsersTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProfilesUsersInternalServerError creates a GetProfilesUsersInternalServerError with default headers values
func NewGetProfilesUsersInternalServerError() *GetProfilesUsersInternalServerError {
	return &GetProfilesUsersInternalServerError{}
}

/*
GetProfilesUsersInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetProfilesUsersInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get profiles users internal server error response has a 2xx status code
func (o *GetProfilesUsersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get profiles users internal server error response has a 3xx status code
func (o *GetProfilesUsersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get profiles users internal server error response has a 4xx status code
func (o *GetProfilesUsersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get profiles users internal server error response has a 5xx status code
func (o *GetProfilesUsersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get profiles users internal server error response a status code equal to that given
func (o *GetProfilesUsersInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetProfilesUsersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/profiles/users][%d] getProfilesUsersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetProfilesUsersInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/profiles/users][%d] getProfilesUsersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetProfilesUsersInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetProfilesUsersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProfilesUsersServiceUnavailable creates a GetProfilesUsersServiceUnavailable with default headers values
func NewGetProfilesUsersServiceUnavailable() *GetProfilesUsersServiceUnavailable {
	return &GetProfilesUsersServiceUnavailable{}
}

/*
GetProfilesUsersServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetProfilesUsersServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get profiles users service unavailable response has a 2xx status code
func (o *GetProfilesUsersServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get profiles users service unavailable response has a 3xx status code
func (o *GetProfilesUsersServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get profiles users service unavailable response has a 4xx status code
func (o *GetProfilesUsersServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get profiles users service unavailable response has a 5xx status code
func (o *GetProfilesUsersServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get profiles users service unavailable response a status code equal to that given
func (o *GetProfilesUsersServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetProfilesUsersServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/profiles/users][%d] getProfilesUsersServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetProfilesUsersServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/profiles/users][%d] getProfilesUsersServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetProfilesUsersServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetProfilesUsersServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProfilesUsersGatewayTimeout creates a GetProfilesUsersGatewayTimeout with default headers values
func NewGetProfilesUsersGatewayTimeout() *GetProfilesUsersGatewayTimeout {
	return &GetProfilesUsersGatewayTimeout{}
}

/*
GetProfilesUsersGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetProfilesUsersGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get profiles users gateway timeout response has a 2xx status code
func (o *GetProfilesUsersGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get profiles users gateway timeout response has a 3xx status code
func (o *GetProfilesUsersGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get profiles users gateway timeout response has a 4xx status code
func (o *GetProfilesUsersGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get profiles users gateway timeout response has a 5xx status code
func (o *GetProfilesUsersGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get profiles users gateway timeout response a status code equal to that given
func (o *GetProfilesUsersGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetProfilesUsersGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/profiles/users][%d] getProfilesUsersGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetProfilesUsersGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/profiles/users][%d] getProfilesUsersGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetProfilesUsersGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetProfilesUsersGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
