// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetFieldconfigReader is a Reader for the GetFieldconfig structure.
type GetFieldconfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFieldconfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFieldconfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFieldconfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetFieldconfigUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetFieldconfigForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFieldconfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetFieldconfigRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetFieldconfigRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetFieldconfigUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetFieldconfigTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFieldconfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetFieldconfigServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetFieldconfigGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetFieldconfigOK creates a GetFieldconfigOK with default headers values
func NewGetFieldconfigOK() *GetFieldconfigOK {
	return &GetFieldconfigOK{}
}

/*
GetFieldconfigOK describes a response with status code 200, with default header values.

successful operation
*/
type GetFieldconfigOK struct {
	Payload *models.FieldConfig
}

// IsSuccess returns true when this get fieldconfig o k response has a 2xx status code
func (o *GetFieldconfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get fieldconfig o k response has a 3xx status code
func (o *GetFieldconfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fieldconfig o k response has a 4xx status code
func (o *GetFieldconfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fieldconfig o k response has a 5xx status code
func (o *GetFieldconfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get fieldconfig o k response a status code equal to that given
func (o *GetFieldconfigOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetFieldconfigOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/fieldconfig][%d] getFieldconfigOK  %+v", 200, o.Payload)
}

func (o *GetFieldconfigOK) String() string {
	return fmt.Sprintf("[GET /api/v2/fieldconfig][%d] getFieldconfigOK  %+v", 200, o.Payload)
}

func (o *GetFieldconfigOK) GetPayload() *models.FieldConfig {
	return o.Payload
}

func (o *GetFieldconfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FieldConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFieldconfigBadRequest creates a GetFieldconfigBadRequest with default headers values
func NewGetFieldconfigBadRequest() *GetFieldconfigBadRequest {
	return &GetFieldconfigBadRequest{}
}

/*
GetFieldconfigBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetFieldconfigBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get fieldconfig bad request response has a 2xx status code
func (o *GetFieldconfigBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fieldconfig bad request response has a 3xx status code
func (o *GetFieldconfigBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fieldconfig bad request response has a 4xx status code
func (o *GetFieldconfigBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get fieldconfig bad request response has a 5xx status code
func (o *GetFieldconfigBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get fieldconfig bad request response a status code equal to that given
func (o *GetFieldconfigBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetFieldconfigBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/fieldconfig][%d] getFieldconfigBadRequest  %+v", 400, o.Payload)
}

func (o *GetFieldconfigBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/fieldconfig][%d] getFieldconfigBadRequest  %+v", 400, o.Payload)
}

func (o *GetFieldconfigBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFieldconfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFieldconfigUnauthorized creates a GetFieldconfigUnauthorized with default headers values
func NewGetFieldconfigUnauthorized() *GetFieldconfigUnauthorized {
	return &GetFieldconfigUnauthorized{}
}

/*
GetFieldconfigUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetFieldconfigUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get fieldconfig unauthorized response has a 2xx status code
func (o *GetFieldconfigUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fieldconfig unauthorized response has a 3xx status code
func (o *GetFieldconfigUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fieldconfig unauthorized response has a 4xx status code
func (o *GetFieldconfigUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get fieldconfig unauthorized response has a 5xx status code
func (o *GetFieldconfigUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get fieldconfig unauthorized response a status code equal to that given
func (o *GetFieldconfigUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetFieldconfigUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/fieldconfig][%d] getFieldconfigUnauthorized  %+v", 401, o.Payload)
}

func (o *GetFieldconfigUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/fieldconfig][%d] getFieldconfigUnauthorized  %+v", 401, o.Payload)
}

func (o *GetFieldconfigUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFieldconfigUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFieldconfigForbidden creates a GetFieldconfigForbidden with default headers values
func NewGetFieldconfigForbidden() *GetFieldconfigForbidden {
	return &GetFieldconfigForbidden{}
}

/*
GetFieldconfigForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetFieldconfigForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get fieldconfig forbidden response has a 2xx status code
func (o *GetFieldconfigForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fieldconfig forbidden response has a 3xx status code
func (o *GetFieldconfigForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fieldconfig forbidden response has a 4xx status code
func (o *GetFieldconfigForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get fieldconfig forbidden response has a 5xx status code
func (o *GetFieldconfigForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get fieldconfig forbidden response a status code equal to that given
func (o *GetFieldconfigForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetFieldconfigForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/fieldconfig][%d] getFieldconfigForbidden  %+v", 403, o.Payload)
}

func (o *GetFieldconfigForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/fieldconfig][%d] getFieldconfigForbidden  %+v", 403, o.Payload)
}

func (o *GetFieldconfigForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFieldconfigForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFieldconfigNotFound creates a GetFieldconfigNotFound with default headers values
func NewGetFieldconfigNotFound() *GetFieldconfigNotFound {
	return &GetFieldconfigNotFound{}
}

/*
GetFieldconfigNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetFieldconfigNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get fieldconfig not found response has a 2xx status code
func (o *GetFieldconfigNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fieldconfig not found response has a 3xx status code
func (o *GetFieldconfigNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fieldconfig not found response has a 4xx status code
func (o *GetFieldconfigNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get fieldconfig not found response has a 5xx status code
func (o *GetFieldconfigNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get fieldconfig not found response a status code equal to that given
func (o *GetFieldconfigNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetFieldconfigNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/fieldconfig][%d] getFieldconfigNotFound  %+v", 404, o.Payload)
}

func (o *GetFieldconfigNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/fieldconfig][%d] getFieldconfigNotFound  %+v", 404, o.Payload)
}

func (o *GetFieldconfigNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFieldconfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFieldconfigRequestTimeout creates a GetFieldconfigRequestTimeout with default headers values
func NewGetFieldconfigRequestTimeout() *GetFieldconfigRequestTimeout {
	return &GetFieldconfigRequestTimeout{}
}

/*
GetFieldconfigRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetFieldconfigRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get fieldconfig request timeout response has a 2xx status code
func (o *GetFieldconfigRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fieldconfig request timeout response has a 3xx status code
func (o *GetFieldconfigRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fieldconfig request timeout response has a 4xx status code
func (o *GetFieldconfigRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get fieldconfig request timeout response has a 5xx status code
func (o *GetFieldconfigRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get fieldconfig request timeout response a status code equal to that given
func (o *GetFieldconfigRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetFieldconfigRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/fieldconfig][%d] getFieldconfigRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetFieldconfigRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/fieldconfig][%d] getFieldconfigRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetFieldconfigRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFieldconfigRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFieldconfigRequestEntityTooLarge creates a GetFieldconfigRequestEntityTooLarge with default headers values
func NewGetFieldconfigRequestEntityTooLarge() *GetFieldconfigRequestEntityTooLarge {
	return &GetFieldconfigRequestEntityTooLarge{}
}

/*
GetFieldconfigRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetFieldconfigRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get fieldconfig request entity too large response has a 2xx status code
func (o *GetFieldconfigRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fieldconfig request entity too large response has a 3xx status code
func (o *GetFieldconfigRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fieldconfig request entity too large response has a 4xx status code
func (o *GetFieldconfigRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get fieldconfig request entity too large response has a 5xx status code
func (o *GetFieldconfigRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get fieldconfig request entity too large response a status code equal to that given
func (o *GetFieldconfigRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetFieldconfigRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/fieldconfig][%d] getFieldconfigRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetFieldconfigRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/fieldconfig][%d] getFieldconfigRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetFieldconfigRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFieldconfigRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFieldconfigUnsupportedMediaType creates a GetFieldconfigUnsupportedMediaType with default headers values
func NewGetFieldconfigUnsupportedMediaType() *GetFieldconfigUnsupportedMediaType {
	return &GetFieldconfigUnsupportedMediaType{}
}

/*
GetFieldconfigUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetFieldconfigUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get fieldconfig unsupported media type response has a 2xx status code
func (o *GetFieldconfigUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fieldconfig unsupported media type response has a 3xx status code
func (o *GetFieldconfigUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fieldconfig unsupported media type response has a 4xx status code
func (o *GetFieldconfigUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get fieldconfig unsupported media type response has a 5xx status code
func (o *GetFieldconfigUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get fieldconfig unsupported media type response a status code equal to that given
func (o *GetFieldconfigUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetFieldconfigUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/fieldconfig][%d] getFieldconfigUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetFieldconfigUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/fieldconfig][%d] getFieldconfigUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetFieldconfigUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFieldconfigUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFieldconfigTooManyRequests creates a GetFieldconfigTooManyRequests with default headers values
func NewGetFieldconfigTooManyRequests() *GetFieldconfigTooManyRequests {
	return &GetFieldconfigTooManyRequests{}
}

/*
GetFieldconfigTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetFieldconfigTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get fieldconfig too many requests response has a 2xx status code
func (o *GetFieldconfigTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fieldconfig too many requests response has a 3xx status code
func (o *GetFieldconfigTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fieldconfig too many requests response has a 4xx status code
func (o *GetFieldconfigTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get fieldconfig too many requests response has a 5xx status code
func (o *GetFieldconfigTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get fieldconfig too many requests response a status code equal to that given
func (o *GetFieldconfigTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetFieldconfigTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/fieldconfig][%d] getFieldconfigTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetFieldconfigTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/fieldconfig][%d] getFieldconfigTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetFieldconfigTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFieldconfigTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFieldconfigInternalServerError creates a GetFieldconfigInternalServerError with default headers values
func NewGetFieldconfigInternalServerError() *GetFieldconfigInternalServerError {
	return &GetFieldconfigInternalServerError{}
}

/*
GetFieldconfigInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetFieldconfigInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get fieldconfig internal server error response has a 2xx status code
func (o *GetFieldconfigInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fieldconfig internal server error response has a 3xx status code
func (o *GetFieldconfigInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fieldconfig internal server error response has a 4xx status code
func (o *GetFieldconfigInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fieldconfig internal server error response has a 5xx status code
func (o *GetFieldconfigInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get fieldconfig internal server error response a status code equal to that given
func (o *GetFieldconfigInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetFieldconfigInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/fieldconfig][%d] getFieldconfigInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFieldconfigInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/fieldconfig][%d] getFieldconfigInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFieldconfigInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFieldconfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFieldconfigServiceUnavailable creates a GetFieldconfigServiceUnavailable with default headers values
func NewGetFieldconfigServiceUnavailable() *GetFieldconfigServiceUnavailable {
	return &GetFieldconfigServiceUnavailable{}
}

/*
GetFieldconfigServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetFieldconfigServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get fieldconfig service unavailable response has a 2xx status code
func (o *GetFieldconfigServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fieldconfig service unavailable response has a 3xx status code
func (o *GetFieldconfigServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fieldconfig service unavailable response has a 4xx status code
func (o *GetFieldconfigServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fieldconfig service unavailable response has a 5xx status code
func (o *GetFieldconfigServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get fieldconfig service unavailable response a status code equal to that given
func (o *GetFieldconfigServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetFieldconfigServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/fieldconfig][%d] getFieldconfigServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetFieldconfigServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/fieldconfig][%d] getFieldconfigServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetFieldconfigServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFieldconfigServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFieldconfigGatewayTimeout creates a GetFieldconfigGatewayTimeout with default headers values
func NewGetFieldconfigGatewayTimeout() *GetFieldconfigGatewayTimeout {
	return &GetFieldconfigGatewayTimeout{}
}

/*
GetFieldconfigGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetFieldconfigGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get fieldconfig gateway timeout response has a 2xx status code
func (o *GetFieldconfigGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fieldconfig gateway timeout response has a 3xx status code
func (o *GetFieldconfigGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fieldconfig gateway timeout response has a 4xx status code
func (o *GetFieldconfigGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fieldconfig gateway timeout response has a 5xx status code
func (o *GetFieldconfigGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get fieldconfig gateway timeout response a status code equal to that given
func (o *GetFieldconfigGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetFieldconfigGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/fieldconfig][%d] getFieldconfigGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetFieldconfigGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/fieldconfig][%d] getFieldconfigGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetFieldconfigGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetFieldconfigGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
