// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetUsersMeReader is a Reader for the GetUsersMe structure.
type GetUsersMeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUsersMeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUsersMeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUsersMeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetUsersMeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUsersMeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUsersMeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetUsersMeRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetUsersMeRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetUsersMeUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetUsersMeTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUsersMeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetUsersMeServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetUsersMeGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUsersMeOK creates a GetUsersMeOK with default headers values
func NewGetUsersMeOK() *GetUsersMeOK {
	return &GetUsersMeOK{}
}

/*
GetUsersMeOK describes a response with status code 200, with default header values.

successful operation
*/
type GetUsersMeOK struct {
	Payload *models.UserMe
}

// IsSuccess returns true when this get users me o k response has a 2xx status code
func (o *GetUsersMeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get users me o k response has a 3xx status code
func (o *GetUsersMeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users me o k response has a 4xx status code
func (o *GetUsersMeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get users me o k response has a 5xx status code
func (o *GetUsersMeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get users me o k response a status code equal to that given
func (o *GetUsersMeOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetUsersMeOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/me][%d] getUsersMeOK  %+v", 200, o.Payload)
}

func (o *GetUsersMeOK) String() string {
	return fmt.Sprintf("[GET /api/v2/users/me][%d] getUsersMeOK  %+v", 200, o.Payload)
}

func (o *GetUsersMeOK) GetPayload() *models.UserMe {
	return o.Payload
}

func (o *GetUsersMeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserMe)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersMeBadRequest creates a GetUsersMeBadRequest with default headers values
func NewGetUsersMeBadRequest() *GetUsersMeBadRequest {
	return &GetUsersMeBadRequest{}
}

/*
GetUsersMeBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetUsersMeBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get users me bad request response has a 2xx status code
func (o *GetUsersMeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users me bad request response has a 3xx status code
func (o *GetUsersMeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users me bad request response has a 4xx status code
func (o *GetUsersMeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get users me bad request response has a 5xx status code
func (o *GetUsersMeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get users me bad request response a status code equal to that given
func (o *GetUsersMeBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetUsersMeBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/me][%d] getUsersMeBadRequest  %+v", 400, o.Payload)
}

func (o *GetUsersMeBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/users/me][%d] getUsersMeBadRequest  %+v", 400, o.Payload)
}

func (o *GetUsersMeBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUsersMeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersMeUnauthorized creates a GetUsersMeUnauthorized with default headers values
func NewGetUsersMeUnauthorized() *GetUsersMeUnauthorized {
	return &GetUsersMeUnauthorized{}
}

/*
GetUsersMeUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetUsersMeUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get users me unauthorized response has a 2xx status code
func (o *GetUsersMeUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users me unauthorized response has a 3xx status code
func (o *GetUsersMeUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users me unauthorized response has a 4xx status code
func (o *GetUsersMeUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get users me unauthorized response has a 5xx status code
func (o *GetUsersMeUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get users me unauthorized response a status code equal to that given
func (o *GetUsersMeUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetUsersMeUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/me][%d] getUsersMeUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUsersMeUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/users/me][%d] getUsersMeUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUsersMeUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUsersMeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersMeForbidden creates a GetUsersMeForbidden with default headers values
func NewGetUsersMeForbidden() *GetUsersMeForbidden {
	return &GetUsersMeForbidden{}
}

/*
GetUsersMeForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetUsersMeForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get users me forbidden response has a 2xx status code
func (o *GetUsersMeForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users me forbidden response has a 3xx status code
func (o *GetUsersMeForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users me forbidden response has a 4xx status code
func (o *GetUsersMeForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get users me forbidden response has a 5xx status code
func (o *GetUsersMeForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get users me forbidden response a status code equal to that given
func (o *GetUsersMeForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetUsersMeForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/me][%d] getUsersMeForbidden  %+v", 403, o.Payload)
}

func (o *GetUsersMeForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/users/me][%d] getUsersMeForbidden  %+v", 403, o.Payload)
}

func (o *GetUsersMeForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUsersMeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersMeNotFound creates a GetUsersMeNotFound with default headers values
func NewGetUsersMeNotFound() *GetUsersMeNotFound {
	return &GetUsersMeNotFound{}
}

/*
GetUsersMeNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetUsersMeNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get users me not found response has a 2xx status code
func (o *GetUsersMeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users me not found response has a 3xx status code
func (o *GetUsersMeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users me not found response has a 4xx status code
func (o *GetUsersMeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get users me not found response has a 5xx status code
func (o *GetUsersMeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get users me not found response a status code equal to that given
func (o *GetUsersMeNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetUsersMeNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/me][%d] getUsersMeNotFound  %+v", 404, o.Payload)
}

func (o *GetUsersMeNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/users/me][%d] getUsersMeNotFound  %+v", 404, o.Payload)
}

func (o *GetUsersMeNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUsersMeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersMeRequestTimeout creates a GetUsersMeRequestTimeout with default headers values
func NewGetUsersMeRequestTimeout() *GetUsersMeRequestTimeout {
	return &GetUsersMeRequestTimeout{}
}

/*
GetUsersMeRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetUsersMeRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get users me request timeout response has a 2xx status code
func (o *GetUsersMeRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users me request timeout response has a 3xx status code
func (o *GetUsersMeRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users me request timeout response has a 4xx status code
func (o *GetUsersMeRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get users me request timeout response has a 5xx status code
func (o *GetUsersMeRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get users me request timeout response a status code equal to that given
func (o *GetUsersMeRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetUsersMeRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/me][%d] getUsersMeRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetUsersMeRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/users/me][%d] getUsersMeRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetUsersMeRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUsersMeRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersMeRequestEntityTooLarge creates a GetUsersMeRequestEntityTooLarge with default headers values
func NewGetUsersMeRequestEntityTooLarge() *GetUsersMeRequestEntityTooLarge {
	return &GetUsersMeRequestEntityTooLarge{}
}

/*
GetUsersMeRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetUsersMeRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get users me request entity too large response has a 2xx status code
func (o *GetUsersMeRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users me request entity too large response has a 3xx status code
func (o *GetUsersMeRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users me request entity too large response has a 4xx status code
func (o *GetUsersMeRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get users me request entity too large response has a 5xx status code
func (o *GetUsersMeRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get users me request entity too large response a status code equal to that given
func (o *GetUsersMeRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetUsersMeRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/me][%d] getUsersMeRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetUsersMeRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/users/me][%d] getUsersMeRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetUsersMeRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUsersMeRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersMeUnsupportedMediaType creates a GetUsersMeUnsupportedMediaType with default headers values
func NewGetUsersMeUnsupportedMediaType() *GetUsersMeUnsupportedMediaType {
	return &GetUsersMeUnsupportedMediaType{}
}

/*
GetUsersMeUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetUsersMeUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get users me unsupported media type response has a 2xx status code
func (o *GetUsersMeUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users me unsupported media type response has a 3xx status code
func (o *GetUsersMeUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users me unsupported media type response has a 4xx status code
func (o *GetUsersMeUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get users me unsupported media type response has a 5xx status code
func (o *GetUsersMeUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get users me unsupported media type response a status code equal to that given
func (o *GetUsersMeUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetUsersMeUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/me][%d] getUsersMeUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetUsersMeUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/users/me][%d] getUsersMeUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetUsersMeUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUsersMeUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersMeTooManyRequests creates a GetUsersMeTooManyRequests with default headers values
func NewGetUsersMeTooManyRequests() *GetUsersMeTooManyRequests {
	return &GetUsersMeTooManyRequests{}
}

/*
GetUsersMeTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetUsersMeTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get users me too many requests response has a 2xx status code
func (o *GetUsersMeTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users me too many requests response has a 3xx status code
func (o *GetUsersMeTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users me too many requests response has a 4xx status code
func (o *GetUsersMeTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get users me too many requests response has a 5xx status code
func (o *GetUsersMeTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get users me too many requests response a status code equal to that given
func (o *GetUsersMeTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetUsersMeTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/me][%d] getUsersMeTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetUsersMeTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/users/me][%d] getUsersMeTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetUsersMeTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUsersMeTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersMeInternalServerError creates a GetUsersMeInternalServerError with default headers values
func NewGetUsersMeInternalServerError() *GetUsersMeInternalServerError {
	return &GetUsersMeInternalServerError{}
}

/*
GetUsersMeInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetUsersMeInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get users me internal server error response has a 2xx status code
func (o *GetUsersMeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users me internal server error response has a 3xx status code
func (o *GetUsersMeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users me internal server error response has a 4xx status code
func (o *GetUsersMeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get users me internal server error response has a 5xx status code
func (o *GetUsersMeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get users me internal server error response a status code equal to that given
func (o *GetUsersMeInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetUsersMeInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/me][%d] getUsersMeInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUsersMeInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/users/me][%d] getUsersMeInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUsersMeInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUsersMeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersMeServiceUnavailable creates a GetUsersMeServiceUnavailable with default headers values
func NewGetUsersMeServiceUnavailable() *GetUsersMeServiceUnavailable {
	return &GetUsersMeServiceUnavailable{}
}

/*
GetUsersMeServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetUsersMeServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get users me service unavailable response has a 2xx status code
func (o *GetUsersMeServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users me service unavailable response has a 3xx status code
func (o *GetUsersMeServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users me service unavailable response has a 4xx status code
func (o *GetUsersMeServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get users me service unavailable response has a 5xx status code
func (o *GetUsersMeServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get users me service unavailable response a status code equal to that given
func (o *GetUsersMeServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetUsersMeServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/me][%d] getUsersMeServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUsersMeServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/users/me][%d] getUsersMeServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUsersMeServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUsersMeServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersMeGatewayTimeout creates a GetUsersMeGatewayTimeout with default headers values
func NewGetUsersMeGatewayTimeout() *GetUsersMeGatewayTimeout {
	return &GetUsersMeGatewayTimeout{}
}

/*
GetUsersMeGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetUsersMeGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get users me gateway timeout response has a 2xx status code
func (o *GetUsersMeGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users me gateway timeout response has a 3xx status code
func (o *GetUsersMeGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users me gateway timeout response has a 4xx status code
func (o *GetUsersMeGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get users me gateway timeout response has a 5xx status code
func (o *GetUsersMeGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get users me gateway timeout response a status code equal to that given
func (o *GetUsersMeGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetUsersMeGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/me][%d] getUsersMeGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUsersMeGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/users/me][%d] getUsersMeGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUsersMeGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUsersMeGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
