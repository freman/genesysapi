// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutUserRoutingskillReader is a Reader for the PutUserRoutingskill structure.
type PutUserRoutingskillReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutUserRoutingskillReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutUserRoutingskillOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutUserRoutingskillBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutUserRoutingskillUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutUserRoutingskillForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutUserRoutingskillNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutUserRoutingskillRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPutUserRoutingskillConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutUserRoutingskillRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutUserRoutingskillUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutUserRoutingskillTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutUserRoutingskillInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutUserRoutingskillServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutUserRoutingskillGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutUserRoutingskillOK creates a PutUserRoutingskillOK with default headers values
func NewPutUserRoutingskillOK() *PutUserRoutingskillOK {
	return &PutUserRoutingskillOK{}
}

/*
PutUserRoutingskillOK describes a response with status code 200, with default header values.

successful operation
*/
type PutUserRoutingskillOK struct {
	Payload *models.UserRoutingSkill
}

// IsSuccess returns true when this put user routingskill o k response has a 2xx status code
func (o *PutUserRoutingskillOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put user routingskill o k response has a 3xx status code
func (o *PutUserRoutingskillOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user routingskill o k response has a 4xx status code
func (o *PutUserRoutingskillOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put user routingskill o k response has a 5xx status code
func (o *PutUserRoutingskillOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put user routingskill o k response a status code equal to that given
func (o *PutUserRoutingskillOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutUserRoutingskillOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/routingskills/{skillId}][%d] putUserRoutingskillOK  %+v", 200, o.Payload)
}

func (o *PutUserRoutingskillOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/routingskills/{skillId}][%d] putUserRoutingskillOK  %+v", 200, o.Payload)
}

func (o *PutUserRoutingskillOK) GetPayload() *models.UserRoutingSkill {
	return o.Payload
}

func (o *PutUserRoutingskillOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserRoutingSkill)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserRoutingskillBadRequest creates a PutUserRoutingskillBadRequest with default headers values
func NewPutUserRoutingskillBadRequest() *PutUserRoutingskillBadRequest {
	return &PutUserRoutingskillBadRequest{}
}

/*
PutUserRoutingskillBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutUserRoutingskillBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user routingskill bad request response has a 2xx status code
func (o *PutUserRoutingskillBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user routingskill bad request response has a 3xx status code
func (o *PutUserRoutingskillBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user routingskill bad request response has a 4xx status code
func (o *PutUserRoutingskillBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put user routingskill bad request response has a 5xx status code
func (o *PutUserRoutingskillBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put user routingskill bad request response a status code equal to that given
func (o *PutUserRoutingskillBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutUserRoutingskillBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/routingskills/{skillId}][%d] putUserRoutingskillBadRequest  %+v", 400, o.Payload)
}

func (o *PutUserRoutingskillBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/routingskills/{skillId}][%d] putUserRoutingskillBadRequest  %+v", 400, o.Payload)
}

func (o *PutUserRoutingskillBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserRoutingskillBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserRoutingskillUnauthorized creates a PutUserRoutingskillUnauthorized with default headers values
func NewPutUserRoutingskillUnauthorized() *PutUserRoutingskillUnauthorized {
	return &PutUserRoutingskillUnauthorized{}
}

/*
PutUserRoutingskillUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutUserRoutingskillUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user routingskill unauthorized response has a 2xx status code
func (o *PutUserRoutingskillUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user routingskill unauthorized response has a 3xx status code
func (o *PutUserRoutingskillUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user routingskill unauthorized response has a 4xx status code
func (o *PutUserRoutingskillUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put user routingskill unauthorized response has a 5xx status code
func (o *PutUserRoutingskillUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put user routingskill unauthorized response a status code equal to that given
func (o *PutUserRoutingskillUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutUserRoutingskillUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/routingskills/{skillId}][%d] putUserRoutingskillUnauthorized  %+v", 401, o.Payload)
}

func (o *PutUserRoutingskillUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/routingskills/{skillId}][%d] putUserRoutingskillUnauthorized  %+v", 401, o.Payload)
}

func (o *PutUserRoutingskillUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserRoutingskillUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserRoutingskillForbidden creates a PutUserRoutingskillForbidden with default headers values
func NewPutUserRoutingskillForbidden() *PutUserRoutingskillForbidden {
	return &PutUserRoutingskillForbidden{}
}

/*
PutUserRoutingskillForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutUserRoutingskillForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user routingskill forbidden response has a 2xx status code
func (o *PutUserRoutingskillForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user routingskill forbidden response has a 3xx status code
func (o *PutUserRoutingskillForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user routingskill forbidden response has a 4xx status code
func (o *PutUserRoutingskillForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put user routingskill forbidden response has a 5xx status code
func (o *PutUserRoutingskillForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put user routingskill forbidden response a status code equal to that given
func (o *PutUserRoutingskillForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutUserRoutingskillForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/routingskills/{skillId}][%d] putUserRoutingskillForbidden  %+v", 403, o.Payload)
}

func (o *PutUserRoutingskillForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/routingskills/{skillId}][%d] putUserRoutingskillForbidden  %+v", 403, o.Payload)
}

func (o *PutUserRoutingskillForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserRoutingskillForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserRoutingskillNotFound creates a PutUserRoutingskillNotFound with default headers values
func NewPutUserRoutingskillNotFound() *PutUserRoutingskillNotFound {
	return &PutUserRoutingskillNotFound{}
}

/*
PutUserRoutingskillNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutUserRoutingskillNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user routingskill not found response has a 2xx status code
func (o *PutUserRoutingskillNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user routingskill not found response has a 3xx status code
func (o *PutUserRoutingskillNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user routingskill not found response has a 4xx status code
func (o *PutUserRoutingskillNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put user routingskill not found response has a 5xx status code
func (o *PutUserRoutingskillNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put user routingskill not found response a status code equal to that given
func (o *PutUserRoutingskillNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutUserRoutingskillNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/routingskills/{skillId}][%d] putUserRoutingskillNotFound  %+v", 404, o.Payload)
}

func (o *PutUserRoutingskillNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/routingskills/{skillId}][%d] putUserRoutingskillNotFound  %+v", 404, o.Payload)
}

func (o *PutUserRoutingskillNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserRoutingskillNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserRoutingskillRequestTimeout creates a PutUserRoutingskillRequestTimeout with default headers values
func NewPutUserRoutingskillRequestTimeout() *PutUserRoutingskillRequestTimeout {
	return &PutUserRoutingskillRequestTimeout{}
}

/*
PutUserRoutingskillRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutUserRoutingskillRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user routingskill request timeout response has a 2xx status code
func (o *PutUserRoutingskillRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user routingskill request timeout response has a 3xx status code
func (o *PutUserRoutingskillRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user routingskill request timeout response has a 4xx status code
func (o *PutUserRoutingskillRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put user routingskill request timeout response has a 5xx status code
func (o *PutUserRoutingskillRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put user routingskill request timeout response a status code equal to that given
func (o *PutUserRoutingskillRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutUserRoutingskillRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/routingskills/{skillId}][%d] putUserRoutingskillRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutUserRoutingskillRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/routingskills/{skillId}][%d] putUserRoutingskillRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutUserRoutingskillRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserRoutingskillRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserRoutingskillConflict creates a PutUserRoutingskillConflict with default headers values
func NewPutUserRoutingskillConflict() *PutUserRoutingskillConflict {
	return &PutUserRoutingskillConflict{}
}

/*
PutUserRoutingskillConflict describes a response with status code 409, with default header values.

Resource conflict - Unexpected version was provided
*/
type PutUserRoutingskillConflict struct {
}

// IsSuccess returns true when this put user routingskill conflict response has a 2xx status code
func (o *PutUserRoutingskillConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user routingskill conflict response has a 3xx status code
func (o *PutUserRoutingskillConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user routingskill conflict response has a 4xx status code
func (o *PutUserRoutingskillConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this put user routingskill conflict response has a 5xx status code
func (o *PutUserRoutingskillConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this put user routingskill conflict response a status code equal to that given
func (o *PutUserRoutingskillConflict) IsCode(code int) bool {
	return code == 409
}

func (o *PutUserRoutingskillConflict) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/routingskills/{skillId}][%d] putUserRoutingskillConflict ", 409)
}

func (o *PutUserRoutingskillConflict) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/routingskills/{skillId}][%d] putUserRoutingskillConflict ", 409)
}

func (o *PutUserRoutingskillConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutUserRoutingskillRequestEntityTooLarge creates a PutUserRoutingskillRequestEntityTooLarge with default headers values
func NewPutUserRoutingskillRequestEntityTooLarge() *PutUserRoutingskillRequestEntityTooLarge {
	return &PutUserRoutingskillRequestEntityTooLarge{}
}

/*
PutUserRoutingskillRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PutUserRoutingskillRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user routingskill request entity too large response has a 2xx status code
func (o *PutUserRoutingskillRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user routingskill request entity too large response has a 3xx status code
func (o *PutUserRoutingskillRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user routingskill request entity too large response has a 4xx status code
func (o *PutUserRoutingskillRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put user routingskill request entity too large response has a 5xx status code
func (o *PutUserRoutingskillRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put user routingskill request entity too large response a status code equal to that given
func (o *PutUserRoutingskillRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutUserRoutingskillRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/routingskills/{skillId}][%d] putUserRoutingskillRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutUserRoutingskillRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/routingskills/{skillId}][%d] putUserRoutingskillRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutUserRoutingskillRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserRoutingskillRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserRoutingskillUnsupportedMediaType creates a PutUserRoutingskillUnsupportedMediaType with default headers values
func NewPutUserRoutingskillUnsupportedMediaType() *PutUserRoutingskillUnsupportedMediaType {
	return &PutUserRoutingskillUnsupportedMediaType{}
}

/*
PutUserRoutingskillUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutUserRoutingskillUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user routingskill unsupported media type response has a 2xx status code
func (o *PutUserRoutingskillUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user routingskill unsupported media type response has a 3xx status code
func (o *PutUserRoutingskillUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user routingskill unsupported media type response has a 4xx status code
func (o *PutUserRoutingskillUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put user routingskill unsupported media type response has a 5xx status code
func (o *PutUserRoutingskillUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put user routingskill unsupported media type response a status code equal to that given
func (o *PutUserRoutingskillUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutUserRoutingskillUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/routingskills/{skillId}][%d] putUserRoutingskillUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutUserRoutingskillUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/routingskills/{skillId}][%d] putUserRoutingskillUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutUserRoutingskillUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserRoutingskillUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserRoutingskillTooManyRequests creates a PutUserRoutingskillTooManyRequests with default headers values
func NewPutUserRoutingskillTooManyRequests() *PutUserRoutingskillTooManyRequests {
	return &PutUserRoutingskillTooManyRequests{}
}

/*
PutUserRoutingskillTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutUserRoutingskillTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user routingskill too many requests response has a 2xx status code
func (o *PutUserRoutingskillTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user routingskill too many requests response has a 3xx status code
func (o *PutUserRoutingskillTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user routingskill too many requests response has a 4xx status code
func (o *PutUserRoutingskillTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put user routingskill too many requests response has a 5xx status code
func (o *PutUserRoutingskillTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put user routingskill too many requests response a status code equal to that given
func (o *PutUserRoutingskillTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutUserRoutingskillTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/routingskills/{skillId}][%d] putUserRoutingskillTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutUserRoutingskillTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/routingskills/{skillId}][%d] putUserRoutingskillTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutUserRoutingskillTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserRoutingskillTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserRoutingskillInternalServerError creates a PutUserRoutingskillInternalServerError with default headers values
func NewPutUserRoutingskillInternalServerError() *PutUserRoutingskillInternalServerError {
	return &PutUserRoutingskillInternalServerError{}
}

/*
PutUserRoutingskillInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutUserRoutingskillInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user routingskill internal server error response has a 2xx status code
func (o *PutUserRoutingskillInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user routingskill internal server error response has a 3xx status code
func (o *PutUserRoutingskillInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user routingskill internal server error response has a 4xx status code
func (o *PutUserRoutingskillInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put user routingskill internal server error response has a 5xx status code
func (o *PutUserRoutingskillInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put user routingskill internal server error response a status code equal to that given
func (o *PutUserRoutingskillInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutUserRoutingskillInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/routingskills/{skillId}][%d] putUserRoutingskillInternalServerError  %+v", 500, o.Payload)
}

func (o *PutUserRoutingskillInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/routingskills/{skillId}][%d] putUserRoutingskillInternalServerError  %+v", 500, o.Payload)
}

func (o *PutUserRoutingskillInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserRoutingskillInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserRoutingskillServiceUnavailable creates a PutUserRoutingskillServiceUnavailable with default headers values
func NewPutUserRoutingskillServiceUnavailable() *PutUserRoutingskillServiceUnavailable {
	return &PutUserRoutingskillServiceUnavailable{}
}

/*
PutUserRoutingskillServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutUserRoutingskillServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user routingskill service unavailable response has a 2xx status code
func (o *PutUserRoutingskillServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user routingskill service unavailable response has a 3xx status code
func (o *PutUserRoutingskillServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user routingskill service unavailable response has a 4xx status code
func (o *PutUserRoutingskillServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put user routingskill service unavailable response has a 5xx status code
func (o *PutUserRoutingskillServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put user routingskill service unavailable response a status code equal to that given
func (o *PutUserRoutingskillServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutUserRoutingskillServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/routingskills/{skillId}][%d] putUserRoutingskillServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutUserRoutingskillServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/routingskills/{skillId}][%d] putUserRoutingskillServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutUserRoutingskillServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserRoutingskillServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserRoutingskillGatewayTimeout creates a PutUserRoutingskillGatewayTimeout with default headers values
func NewPutUserRoutingskillGatewayTimeout() *PutUserRoutingskillGatewayTimeout {
	return &PutUserRoutingskillGatewayTimeout{}
}

/*
PutUserRoutingskillGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutUserRoutingskillGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user routingskill gateway timeout response has a 2xx status code
func (o *PutUserRoutingskillGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user routingskill gateway timeout response has a 3xx status code
func (o *PutUserRoutingskillGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user routingskill gateway timeout response has a 4xx status code
func (o *PutUserRoutingskillGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put user routingskill gateway timeout response has a 5xx status code
func (o *PutUserRoutingskillGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put user routingskill gateway timeout response a status code equal to that given
func (o *PutUserRoutingskillGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutUserRoutingskillGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/routingskills/{skillId}][%d] putUserRoutingskillGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutUserRoutingskillGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/routingskills/{skillId}][%d] putUserRoutingskillGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutUserRoutingskillGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserRoutingskillGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
