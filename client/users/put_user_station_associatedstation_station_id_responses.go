// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutUserStationAssociatedstationStationIDReader is a Reader for the PutUserStationAssociatedstationStationID structure.
type PutUserStationAssociatedstationStationIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutUserStationAssociatedstationStationIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewPutUserStationAssociatedstationStationIDAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutUserStationAssociatedstationStationIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutUserStationAssociatedstationStationIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutUserStationAssociatedstationStationIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutUserStationAssociatedstationStationIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutUserStationAssociatedstationStationIDRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPutUserStationAssociatedstationStationIDConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutUserStationAssociatedstationStationIDRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutUserStationAssociatedstationStationIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 424:
		result := NewPutUserStationAssociatedstationStationIDFailedDependency()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutUserStationAssociatedstationStationIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutUserStationAssociatedstationStationIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutUserStationAssociatedstationStationIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutUserStationAssociatedstationStationIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutUserStationAssociatedstationStationIDAccepted creates a PutUserStationAssociatedstationStationIDAccepted with default headers values
func NewPutUserStationAssociatedstationStationIDAccepted() *PutUserStationAssociatedstationStationIDAccepted {
	return &PutUserStationAssociatedstationStationIDAccepted{}
}

/*PutUserStationAssociatedstationStationIDAccepted handles this case with default header values.

Success
*/
type PutUserStationAssociatedstationStationIDAccepted struct {
}

func (o *PutUserStationAssociatedstationStationIDAccepted) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/station/associatedstation/{stationId}][%d] putUserStationAssociatedstationStationIdAccepted ", 202)
}

func (o *PutUserStationAssociatedstationStationIDAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutUserStationAssociatedstationStationIDBadRequest creates a PutUserStationAssociatedstationStationIDBadRequest with default headers values
func NewPutUserStationAssociatedstationStationIDBadRequest() *PutUserStationAssociatedstationStationIDBadRequest {
	return &PutUserStationAssociatedstationStationIDBadRequest{}
}

/*PutUserStationAssociatedstationStationIDBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutUserStationAssociatedstationStationIDBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PutUserStationAssociatedstationStationIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/station/associatedstation/{stationId}][%d] putUserStationAssociatedstationStationIdBadRequest  %+v", 400, o.Payload)
}

func (o *PutUserStationAssociatedstationStationIDBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserStationAssociatedstationStationIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserStationAssociatedstationStationIDUnauthorized creates a PutUserStationAssociatedstationStationIDUnauthorized with default headers values
func NewPutUserStationAssociatedstationStationIDUnauthorized() *PutUserStationAssociatedstationStationIDUnauthorized {
	return &PutUserStationAssociatedstationStationIDUnauthorized{}
}

/*PutUserStationAssociatedstationStationIDUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PutUserStationAssociatedstationStationIDUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PutUserStationAssociatedstationStationIDUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/station/associatedstation/{stationId}][%d] putUserStationAssociatedstationStationIdUnauthorized  %+v", 401, o.Payload)
}

func (o *PutUserStationAssociatedstationStationIDUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserStationAssociatedstationStationIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserStationAssociatedstationStationIDForbidden creates a PutUserStationAssociatedstationStationIDForbidden with default headers values
func NewPutUserStationAssociatedstationStationIDForbidden() *PutUserStationAssociatedstationStationIDForbidden {
	return &PutUserStationAssociatedstationStationIDForbidden{}
}

/*PutUserStationAssociatedstationStationIDForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PutUserStationAssociatedstationStationIDForbidden struct {
	Payload *models.ErrorBody
}

func (o *PutUserStationAssociatedstationStationIDForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/station/associatedstation/{stationId}][%d] putUserStationAssociatedstationStationIdForbidden  %+v", 403, o.Payload)
}

func (o *PutUserStationAssociatedstationStationIDForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserStationAssociatedstationStationIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserStationAssociatedstationStationIDNotFound creates a PutUserStationAssociatedstationStationIDNotFound with default headers values
func NewPutUserStationAssociatedstationStationIDNotFound() *PutUserStationAssociatedstationStationIDNotFound {
	return &PutUserStationAssociatedstationStationIDNotFound{}
}

/*PutUserStationAssociatedstationStationIDNotFound handles this case with default header values.

The requested resource was not found.
*/
type PutUserStationAssociatedstationStationIDNotFound struct {
	Payload *models.ErrorBody
}

func (o *PutUserStationAssociatedstationStationIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/station/associatedstation/{stationId}][%d] putUserStationAssociatedstationStationIdNotFound  %+v", 404, o.Payload)
}

func (o *PutUserStationAssociatedstationStationIDNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserStationAssociatedstationStationIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserStationAssociatedstationStationIDRequestTimeout creates a PutUserStationAssociatedstationStationIDRequestTimeout with default headers values
func NewPutUserStationAssociatedstationStationIDRequestTimeout() *PutUserStationAssociatedstationStationIDRequestTimeout {
	return &PutUserStationAssociatedstationStationIDRequestTimeout{}
}

/*PutUserStationAssociatedstationStationIDRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutUserStationAssociatedstationStationIDRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutUserStationAssociatedstationStationIDRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/station/associatedstation/{stationId}][%d] putUserStationAssociatedstationStationIdRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutUserStationAssociatedstationStationIDRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserStationAssociatedstationStationIDRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserStationAssociatedstationStationIDConflict creates a PutUserStationAssociatedstationStationIDConflict with default headers values
func NewPutUserStationAssociatedstationStationIDConflict() *PutUserStationAssociatedstationStationIDConflict {
	return &PutUserStationAssociatedstationStationIDConflict{}
}

/*PutUserStationAssociatedstationStationIDConflict handles this case with default header values.

Conflict
*/
type PutUserStationAssociatedstationStationIDConflict struct {
	Payload *models.ErrorBody
}

func (o *PutUserStationAssociatedstationStationIDConflict) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/station/associatedstation/{stationId}][%d] putUserStationAssociatedstationStationIdConflict  %+v", 409, o.Payload)
}

func (o *PutUserStationAssociatedstationStationIDConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserStationAssociatedstationStationIDConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserStationAssociatedstationStationIDRequestEntityTooLarge creates a PutUserStationAssociatedstationStationIDRequestEntityTooLarge with default headers values
func NewPutUserStationAssociatedstationStationIDRequestEntityTooLarge() *PutUserStationAssociatedstationStationIDRequestEntityTooLarge {
	return &PutUserStationAssociatedstationStationIDRequestEntityTooLarge{}
}

/*PutUserStationAssociatedstationStationIDRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type PutUserStationAssociatedstationStationIDRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PutUserStationAssociatedstationStationIDRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/station/associatedstation/{stationId}][%d] putUserStationAssociatedstationStationIdRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutUserStationAssociatedstationStationIDRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserStationAssociatedstationStationIDRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserStationAssociatedstationStationIDUnsupportedMediaType creates a PutUserStationAssociatedstationStationIDUnsupportedMediaType with default headers values
func NewPutUserStationAssociatedstationStationIDUnsupportedMediaType() *PutUserStationAssociatedstationStationIDUnsupportedMediaType {
	return &PutUserStationAssociatedstationStationIDUnsupportedMediaType{}
}

/*PutUserStationAssociatedstationStationIDUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutUserStationAssociatedstationStationIDUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PutUserStationAssociatedstationStationIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/station/associatedstation/{stationId}][%d] putUserStationAssociatedstationStationIdUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutUserStationAssociatedstationStationIDUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserStationAssociatedstationStationIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserStationAssociatedstationStationIDFailedDependency creates a PutUserStationAssociatedstationStationIDFailedDependency with default headers values
func NewPutUserStationAssociatedstationStationIDFailedDependency() *PutUserStationAssociatedstationStationIDFailedDependency {
	return &PutUserStationAssociatedstationStationIDFailedDependency{}
}

/*PutUserStationAssociatedstationStationIDFailedDependency handles this case with default header values.

PutUserStationAssociatedstationStationIDFailedDependency put user station associatedstation station Id failed dependency
*/
type PutUserStationAssociatedstationStationIDFailedDependency struct {
	Payload *models.ErrorBody
}

func (o *PutUserStationAssociatedstationStationIDFailedDependency) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/station/associatedstation/{stationId}][%d] putUserStationAssociatedstationStationIdFailedDependency  %+v", 424, o.Payload)
}

func (o *PutUserStationAssociatedstationStationIDFailedDependency) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserStationAssociatedstationStationIDFailedDependency) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserStationAssociatedstationStationIDTooManyRequests creates a PutUserStationAssociatedstationStationIDTooManyRequests with default headers values
func NewPutUserStationAssociatedstationStationIDTooManyRequests() *PutUserStationAssociatedstationStationIDTooManyRequests {
	return &PutUserStationAssociatedstationStationIDTooManyRequests{}
}

/*PutUserStationAssociatedstationStationIDTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutUserStationAssociatedstationStationIDTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PutUserStationAssociatedstationStationIDTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/station/associatedstation/{stationId}][%d] putUserStationAssociatedstationStationIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutUserStationAssociatedstationStationIDTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserStationAssociatedstationStationIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserStationAssociatedstationStationIDInternalServerError creates a PutUserStationAssociatedstationStationIDInternalServerError with default headers values
func NewPutUserStationAssociatedstationStationIDInternalServerError() *PutUserStationAssociatedstationStationIDInternalServerError {
	return &PutUserStationAssociatedstationStationIDInternalServerError{}
}

/*PutUserStationAssociatedstationStationIDInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutUserStationAssociatedstationStationIDInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PutUserStationAssociatedstationStationIDInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/station/associatedstation/{stationId}][%d] putUserStationAssociatedstationStationIdInternalServerError  %+v", 500, o.Payload)
}

func (o *PutUserStationAssociatedstationStationIDInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserStationAssociatedstationStationIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserStationAssociatedstationStationIDServiceUnavailable creates a PutUserStationAssociatedstationStationIDServiceUnavailable with default headers values
func NewPutUserStationAssociatedstationStationIDServiceUnavailable() *PutUserStationAssociatedstationStationIDServiceUnavailable {
	return &PutUserStationAssociatedstationStationIDServiceUnavailable{}
}

/*PutUserStationAssociatedstationStationIDServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutUserStationAssociatedstationStationIDServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PutUserStationAssociatedstationStationIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/station/associatedstation/{stationId}][%d] putUserStationAssociatedstationStationIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutUserStationAssociatedstationStationIDServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserStationAssociatedstationStationIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserStationAssociatedstationStationIDGatewayTimeout creates a PutUserStationAssociatedstationStationIDGatewayTimeout with default headers values
func NewPutUserStationAssociatedstationStationIDGatewayTimeout() *PutUserStationAssociatedstationStationIDGatewayTimeout {
	return &PutUserStationAssociatedstationStationIDGatewayTimeout{}
}

/*PutUserStationAssociatedstationStationIDGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PutUserStationAssociatedstationStationIDGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutUserStationAssociatedstationStationIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/station/associatedstation/{stationId}][%d] putUserStationAssociatedstationStationIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutUserStationAssociatedstationStationIDGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserStationAssociatedstationStationIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
