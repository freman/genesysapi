// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetUserDirectreportsReader is a Reader for the GetUserDirectreports structure.
type GetUserDirectreportsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserDirectreportsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserDirectreportsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUserDirectreportsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetUserDirectreportsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUserDirectreportsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUserDirectreportsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetUserDirectreportsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetUserDirectreportsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetUserDirectreportsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUserDirectreportsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetUserDirectreportsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetUserDirectreportsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUserDirectreportsOK creates a GetUserDirectreportsOK with default headers values
func NewGetUserDirectreportsOK() *GetUserDirectreportsOK {
	return &GetUserDirectreportsOK{}
}

/*GetUserDirectreportsOK handles this case with default header values.

successful operation
*/
type GetUserDirectreportsOK struct {
	Payload []*models.User
}

func (o *GetUserDirectreportsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/directreports][%d] getUserDirectreportsOK  %+v", 200, o.Payload)
}

func (o *GetUserDirectreportsOK) GetPayload() []*models.User {
	return o.Payload
}

func (o *GetUserDirectreportsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserDirectreportsBadRequest creates a GetUserDirectreportsBadRequest with default headers values
func NewGetUserDirectreportsBadRequest() *GetUserDirectreportsBadRequest {
	return &GetUserDirectreportsBadRequest{}
}

/*GetUserDirectreportsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetUserDirectreportsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetUserDirectreportsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/directreports][%d] getUserDirectreportsBadRequest  %+v", 400, o.Payload)
}

func (o *GetUserDirectreportsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserDirectreportsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserDirectreportsUnauthorized creates a GetUserDirectreportsUnauthorized with default headers values
func NewGetUserDirectreportsUnauthorized() *GetUserDirectreportsUnauthorized {
	return &GetUserDirectreportsUnauthorized{}
}

/*GetUserDirectreportsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetUserDirectreportsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetUserDirectreportsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/directreports][%d] getUserDirectreportsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUserDirectreportsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserDirectreportsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserDirectreportsForbidden creates a GetUserDirectreportsForbidden with default headers values
func NewGetUserDirectreportsForbidden() *GetUserDirectreportsForbidden {
	return &GetUserDirectreportsForbidden{}
}

/*GetUserDirectreportsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetUserDirectreportsForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetUserDirectreportsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/directreports][%d] getUserDirectreportsForbidden  %+v", 403, o.Payload)
}

func (o *GetUserDirectreportsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserDirectreportsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserDirectreportsNotFound creates a GetUserDirectreportsNotFound with default headers values
func NewGetUserDirectreportsNotFound() *GetUserDirectreportsNotFound {
	return &GetUserDirectreportsNotFound{}
}

/*GetUserDirectreportsNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetUserDirectreportsNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetUserDirectreportsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/directreports][%d] getUserDirectreportsNotFound  %+v", 404, o.Payload)
}

func (o *GetUserDirectreportsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserDirectreportsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserDirectreportsRequestEntityTooLarge creates a GetUserDirectreportsRequestEntityTooLarge with default headers values
func NewGetUserDirectreportsRequestEntityTooLarge() *GetUserDirectreportsRequestEntityTooLarge {
	return &GetUserDirectreportsRequestEntityTooLarge{}
}

/*GetUserDirectreportsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetUserDirectreportsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetUserDirectreportsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/directreports][%d] getUserDirectreportsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetUserDirectreportsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserDirectreportsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserDirectreportsUnsupportedMediaType creates a GetUserDirectreportsUnsupportedMediaType with default headers values
func NewGetUserDirectreportsUnsupportedMediaType() *GetUserDirectreportsUnsupportedMediaType {
	return &GetUserDirectreportsUnsupportedMediaType{}
}

/*GetUserDirectreportsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetUserDirectreportsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetUserDirectreportsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/directreports][%d] getUserDirectreportsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetUserDirectreportsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserDirectreportsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserDirectreportsTooManyRequests creates a GetUserDirectreportsTooManyRequests with default headers values
func NewGetUserDirectreportsTooManyRequests() *GetUserDirectreportsTooManyRequests {
	return &GetUserDirectreportsTooManyRequests{}
}

/*GetUserDirectreportsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type GetUserDirectreportsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetUserDirectreportsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/directreports][%d] getUserDirectreportsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetUserDirectreportsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserDirectreportsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserDirectreportsInternalServerError creates a GetUserDirectreportsInternalServerError with default headers values
func NewGetUserDirectreportsInternalServerError() *GetUserDirectreportsInternalServerError {
	return &GetUserDirectreportsInternalServerError{}
}

/*GetUserDirectreportsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetUserDirectreportsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetUserDirectreportsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/directreports][%d] getUserDirectreportsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUserDirectreportsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserDirectreportsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserDirectreportsServiceUnavailable creates a GetUserDirectreportsServiceUnavailable with default headers values
func NewGetUserDirectreportsServiceUnavailable() *GetUserDirectreportsServiceUnavailable {
	return &GetUserDirectreportsServiceUnavailable{}
}

/*GetUserDirectreportsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetUserDirectreportsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetUserDirectreportsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/directreports][%d] getUserDirectreportsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUserDirectreportsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserDirectreportsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserDirectreportsGatewayTimeout creates a GetUserDirectreportsGatewayTimeout with default headers values
func NewGetUserDirectreportsGatewayTimeout() *GetUserDirectreportsGatewayTimeout {
	return &GetUserDirectreportsGatewayTimeout{}
}

/*GetUserDirectreportsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetUserDirectreportsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetUserDirectreportsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/directreports][%d] getUserDirectreportsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUserDirectreportsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserDirectreportsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
