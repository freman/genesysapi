// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostUserInviteReader is a Reader for the PostUserInvite structure.
type PostUserInviteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostUserInviteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPostUserInviteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostUserInviteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostUserInviteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostUserInviteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostUserInviteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostUserInviteRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostUserInviteRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostUserInviteUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostUserInviteTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostUserInviteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostUserInviteServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostUserInviteGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostUserInviteNoContent creates a PostUserInviteNoContent with default headers values
func NewPostUserInviteNoContent() *PostUserInviteNoContent {
	return &PostUserInviteNoContent{}
}

/*
PostUserInviteNoContent describes a response with status code 204, with default header values.

Invitation Sent
*/
type PostUserInviteNoContent struct {
}

// IsSuccess returns true when this post user invite no content response has a 2xx status code
func (o *PostUserInviteNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post user invite no content response has a 3xx status code
func (o *PostUserInviteNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post user invite no content response has a 4xx status code
func (o *PostUserInviteNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this post user invite no content response has a 5xx status code
func (o *PostUserInviteNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this post user invite no content response a status code equal to that given
func (o *PostUserInviteNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *PostUserInviteNoContent) Error() string {
	return fmt.Sprintf("[POST /api/v2/users/{userId}/invite][%d] postUserInviteNoContent ", 204)
}

func (o *PostUserInviteNoContent) String() string {
	return fmt.Sprintf("[POST /api/v2/users/{userId}/invite][%d] postUserInviteNoContent ", 204)
}

func (o *PostUserInviteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUserInviteBadRequest creates a PostUserInviteBadRequest with default headers values
func NewPostUserInviteBadRequest() *PostUserInviteBadRequest {
	return &PostUserInviteBadRequest{}
}

/*
PostUserInviteBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostUserInviteBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post user invite bad request response has a 2xx status code
func (o *PostUserInviteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post user invite bad request response has a 3xx status code
func (o *PostUserInviteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post user invite bad request response has a 4xx status code
func (o *PostUserInviteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post user invite bad request response has a 5xx status code
func (o *PostUserInviteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post user invite bad request response a status code equal to that given
func (o *PostUserInviteBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostUserInviteBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/users/{userId}/invite][%d] postUserInviteBadRequest  %+v", 400, o.Payload)
}

func (o *PostUserInviteBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/users/{userId}/invite][%d] postUserInviteBadRequest  %+v", 400, o.Payload)
}

func (o *PostUserInviteBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUserInviteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUserInviteUnauthorized creates a PostUserInviteUnauthorized with default headers values
func NewPostUserInviteUnauthorized() *PostUserInviteUnauthorized {
	return &PostUserInviteUnauthorized{}
}

/*
PostUserInviteUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostUserInviteUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post user invite unauthorized response has a 2xx status code
func (o *PostUserInviteUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post user invite unauthorized response has a 3xx status code
func (o *PostUserInviteUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post user invite unauthorized response has a 4xx status code
func (o *PostUserInviteUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post user invite unauthorized response has a 5xx status code
func (o *PostUserInviteUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post user invite unauthorized response a status code equal to that given
func (o *PostUserInviteUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostUserInviteUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/users/{userId}/invite][%d] postUserInviteUnauthorized  %+v", 401, o.Payload)
}

func (o *PostUserInviteUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/users/{userId}/invite][%d] postUserInviteUnauthorized  %+v", 401, o.Payload)
}

func (o *PostUserInviteUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUserInviteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUserInviteForbidden creates a PostUserInviteForbidden with default headers values
func NewPostUserInviteForbidden() *PostUserInviteForbidden {
	return &PostUserInviteForbidden{}
}

/*
PostUserInviteForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostUserInviteForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post user invite forbidden response has a 2xx status code
func (o *PostUserInviteForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post user invite forbidden response has a 3xx status code
func (o *PostUserInviteForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post user invite forbidden response has a 4xx status code
func (o *PostUserInviteForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post user invite forbidden response has a 5xx status code
func (o *PostUserInviteForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post user invite forbidden response a status code equal to that given
func (o *PostUserInviteForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostUserInviteForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/users/{userId}/invite][%d] postUserInviteForbidden  %+v", 403, o.Payload)
}

func (o *PostUserInviteForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/users/{userId}/invite][%d] postUserInviteForbidden  %+v", 403, o.Payload)
}

func (o *PostUserInviteForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUserInviteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUserInviteNotFound creates a PostUserInviteNotFound with default headers values
func NewPostUserInviteNotFound() *PostUserInviteNotFound {
	return &PostUserInviteNotFound{}
}

/*
PostUserInviteNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostUserInviteNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post user invite not found response has a 2xx status code
func (o *PostUserInviteNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post user invite not found response has a 3xx status code
func (o *PostUserInviteNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post user invite not found response has a 4xx status code
func (o *PostUserInviteNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post user invite not found response has a 5xx status code
func (o *PostUserInviteNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post user invite not found response a status code equal to that given
func (o *PostUserInviteNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostUserInviteNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/users/{userId}/invite][%d] postUserInviteNotFound  %+v", 404, o.Payload)
}

func (o *PostUserInviteNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/users/{userId}/invite][%d] postUserInviteNotFound  %+v", 404, o.Payload)
}

func (o *PostUserInviteNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUserInviteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUserInviteRequestTimeout creates a PostUserInviteRequestTimeout with default headers values
func NewPostUserInviteRequestTimeout() *PostUserInviteRequestTimeout {
	return &PostUserInviteRequestTimeout{}
}

/*
PostUserInviteRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostUserInviteRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post user invite request timeout response has a 2xx status code
func (o *PostUserInviteRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post user invite request timeout response has a 3xx status code
func (o *PostUserInviteRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post user invite request timeout response has a 4xx status code
func (o *PostUserInviteRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post user invite request timeout response has a 5xx status code
func (o *PostUserInviteRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post user invite request timeout response a status code equal to that given
func (o *PostUserInviteRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostUserInviteRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/users/{userId}/invite][%d] postUserInviteRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostUserInviteRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/users/{userId}/invite][%d] postUserInviteRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostUserInviteRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUserInviteRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUserInviteRequestEntityTooLarge creates a PostUserInviteRequestEntityTooLarge with default headers values
func NewPostUserInviteRequestEntityTooLarge() *PostUserInviteRequestEntityTooLarge {
	return &PostUserInviteRequestEntityTooLarge{}
}

/*
PostUserInviteRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostUserInviteRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post user invite request entity too large response has a 2xx status code
func (o *PostUserInviteRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post user invite request entity too large response has a 3xx status code
func (o *PostUserInviteRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post user invite request entity too large response has a 4xx status code
func (o *PostUserInviteRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post user invite request entity too large response has a 5xx status code
func (o *PostUserInviteRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post user invite request entity too large response a status code equal to that given
func (o *PostUserInviteRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostUserInviteRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/users/{userId}/invite][%d] postUserInviteRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostUserInviteRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/users/{userId}/invite][%d] postUserInviteRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostUserInviteRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUserInviteRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUserInviteUnsupportedMediaType creates a PostUserInviteUnsupportedMediaType with default headers values
func NewPostUserInviteUnsupportedMediaType() *PostUserInviteUnsupportedMediaType {
	return &PostUserInviteUnsupportedMediaType{}
}

/*
PostUserInviteUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostUserInviteUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post user invite unsupported media type response has a 2xx status code
func (o *PostUserInviteUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post user invite unsupported media type response has a 3xx status code
func (o *PostUserInviteUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post user invite unsupported media type response has a 4xx status code
func (o *PostUserInviteUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post user invite unsupported media type response has a 5xx status code
func (o *PostUserInviteUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post user invite unsupported media type response a status code equal to that given
func (o *PostUserInviteUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostUserInviteUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/users/{userId}/invite][%d] postUserInviteUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostUserInviteUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/users/{userId}/invite][%d] postUserInviteUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostUserInviteUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUserInviteUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUserInviteTooManyRequests creates a PostUserInviteTooManyRequests with default headers values
func NewPostUserInviteTooManyRequests() *PostUserInviteTooManyRequests {
	return &PostUserInviteTooManyRequests{}
}

/*
PostUserInviteTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostUserInviteTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post user invite too many requests response has a 2xx status code
func (o *PostUserInviteTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post user invite too many requests response has a 3xx status code
func (o *PostUserInviteTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post user invite too many requests response has a 4xx status code
func (o *PostUserInviteTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post user invite too many requests response has a 5xx status code
func (o *PostUserInviteTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post user invite too many requests response a status code equal to that given
func (o *PostUserInviteTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostUserInviteTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/users/{userId}/invite][%d] postUserInviteTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostUserInviteTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/users/{userId}/invite][%d] postUserInviteTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostUserInviteTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUserInviteTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUserInviteInternalServerError creates a PostUserInviteInternalServerError with default headers values
func NewPostUserInviteInternalServerError() *PostUserInviteInternalServerError {
	return &PostUserInviteInternalServerError{}
}

/*
PostUserInviteInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostUserInviteInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post user invite internal server error response has a 2xx status code
func (o *PostUserInviteInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post user invite internal server error response has a 3xx status code
func (o *PostUserInviteInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post user invite internal server error response has a 4xx status code
func (o *PostUserInviteInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post user invite internal server error response has a 5xx status code
func (o *PostUserInviteInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post user invite internal server error response a status code equal to that given
func (o *PostUserInviteInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostUserInviteInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/users/{userId}/invite][%d] postUserInviteInternalServerError  %+v", 500, o.Payload)
}

func (o *PostUserInviteInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/users/{userId}/invite][%d] postUserInviteInternalServerError  %+v", 500, o.Payload)
}

func (o *PostUserInviteInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUserInviteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUserInviteServiceUnavailable creates a PostUserInviteServiceUnavailable with default headers values
func NewPostUserInviteServiceUnavailable() *PostUserInviteServiceUnavailable {
	return &PostUserInviteServiceUnavailable{}
}

/*
PostUserInviteServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostUserInviteServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post user invite service unavailable response has a 2xx status code
func (o *PostUserInviteServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post user invite service unavailable response has a 3xx status code
func (o *PostUserInviteServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post user invite service unavailable response has a 4xx status code
func (o *PostUserInviteServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post user invite service unavailable response has a 5xx status code
func (o *PostUserInviteServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post user invite service unavailable response a status code equal to that given
func (o *PostUserInviteServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostUserInviteServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/users/{userId}/invite][%d] postUserInviteServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostUserInviteServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/users/{userId}/invite][%d] postUserInviteServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostUserInviteServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUserInviteServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUserInviteGatewayTimeout creates a PostUserInviteGatewayTimeout with default headers values
func NewPostUserInviteGatewayTimeout() *PostUserInviteGatewayTimeout {
	return &PostUserInviteGatewayTimeout{}
}

/*
PostUserInviteGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostUserInviteGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post user invite gateway timeout response has a 2xx status code
func (o *PostUserInviteGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post user invite gateway timeout response has a 3xx status code
func (o *PostUserInviteGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post user invite gateway timeout response has a 4xx status code
func (o *PostUserInviteGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post user invite gateway timeout response has a 5xx status code
func (o *PostUserInviteGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post user invite gateway timeout response a status code equal to that given
func (o *PostUserInviteGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostUserInviteGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/users/{userId}/invite][%d] postUserInviteGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostUserInviteGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/users/{userId}/invite][%d] postUserInviteGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostUserInviteGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostUserInviteGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
