// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteUserStationDefaultstationReader is a Reader for the DeleteUserStationDefaultstation structure.
type DeleteUserStationDefaultstationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteUserStationDefaultstationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewDeleteUserStationDefaultstationAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteUserStationDefaultstationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteUserStationDefaultstationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteUserStationDefaultstationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteUserStationDefaultstationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteUserStationDefaultstationRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteUserStationDefaultstationRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteUserStationDefaultstationUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteUserStationDefaultstationTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteUserStationDefaultstationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteUserStationDefaultstationServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteUserStationDefaultstationGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteUserStationDefaultstationAccepted creates a DeleteUserStationDefaultstationAccepted with default headers values
func NewDeleteUserStationDefaultstationAccepted() *DeleteUserStationDefaultstationAccepted {
	return &DeleteUserStationDefaultstationAccepted{}
}

/*
DeleteUserStationDefaultstationAccepted describes a response with status code 202, with default header values.

Success
*/
type DeleteUserStationDefaultstationAccepted struct {
}

// IsSuccess returns true when this delete user station defaultstation accepted response has a 2xx status code
func (o *DeleteUserStationDefaultstationAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete user station defaultstation accepted response has a 3xx status code
func (o *DeleteUserStationDefaultstationAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user station defaultstation accepted response has a 4xx status code
func (o *DeleteUserStationDefaultstationAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete user station defaultstation accepted response has a 5xx status code
func (o *DeleteUserStationDefaultstationAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user station defaultstation accepted response a status code equal to that given
func (o *DeleteUserStationDefaultstationAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *DeleteUserStationDefaultstationAccepted) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/station/defaultstation][%d] deleteUserStationDefaultstationAccepted ", 202)
}

func (o *DeleteUserStationDefaultstationAccepted) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/station/defaultstation][%d] deleteUserStationDefaultstationAccepted ", 202)
}

func (o *DeleteUserStationDefaultstationAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteUserStationDefaultstationBadRequest creates a DeleteUserStationDefaultstationBadRequest with default headers values
func NewDeleteUserStationDefaultstationBadRequest() *DeleteUserStationDefaultstationBadRequest {
	return &DeleteUserStationDefaultstationBadRequest{}
}

/*
DeleteUserStationDefaultstationBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteUserStationDefaultstationBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user station defaultstation bad request response has a 2xx status code
func (o *DeleteUserStationDefaultstationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user station defaultstation bad request response has a 3xx status code
func (o *DeleteUserStationDefaultstationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user station defaultstation bad request response has a 4xx status code
func (o *DeleteUserStationDefaultstationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user station defaultstation bad request response has a 5xx status code
func (o *DeleteUserStationDefaultstationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user station defaultstation bad request response a status code equal to that given
func (o *DeleteUserStationDefaultstationBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteUserStationDefaultstationBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/station/defaultstation][%d] deleteUserStationDefaultstationBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteUserStationDefaultstationBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/station/defaultstation][%d] deleteUserStationDefaultstationBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteUserStationDefaultstationBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserStationDefaultstationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserStationDefaultstationUnauthorized creates a DeleteUserStationDefaultstationUnauthorized with default headers values
func NewDeleteUserStationDefaultstationUnauthorized() *DeleteUserStationDefaultstationUnauthorized {
	return &DeleteUserStationDefaultstationUnauthorized{}
}

/*
DeleteUserStationDefaultstationUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteUserStationDefaultstationUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user station defaultstation unauthorized response has a 2xx status code
func (o *DeleteUserStationDefaultstationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user station defaultstation unauthorized response has a 3xx status code
func (o *DeleteUserStationDefaultstationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user station defaultstation unauthorized response has a 4xx status code
func (o *DeleteUserStationDefaultstationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user station defaultstation unauthorized response has a 5xx status code
func (o *DeleteUserStationDefaultstationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user station defaultstation unauthorized response a status code equal to that given
func (o *DeleteUserStationDefaultstationUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteUserStationDefaultstationUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/station/defaultstation][%d] deleteUserStationDefaultstationUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteUserStationDefaultstationUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/station/defaultstation][%d] deleteUserStationDefaultstationUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteUserStationDefaultstationUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserStationDefaultstationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserStationDefaultstationForbidden creates a DeleteUserStationDefaultstationForbidden with default headers values
func NewDeleteUserStationDefaultstationForbidden() *DeleteUserStationDefaultstationForbidden {
	return &DeleteUserStationDefaultstationForbidden{}
}

/*
DeleteUserStationDefaultstationForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type DeleteUserStationDefaultstationForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user station defaultstation forbidden response has a 2xx status code
func (o *DeleteUserStationDefaultstationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user station defaultstation forbidden response has a 3xx status code
func (o *DeleteUserStationDefaultstationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user station defaultstation forbidden response has a 4xx status code
func (o *DeleteUserStationDefaultstationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user station defaultstation forbidden response has a 5xx status code
func (o *DeleteUserStationDefaultstationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user station defaultstation forbidden response a status code equal to that given
func (o *DeleteUserStationDefaultstationForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteUserStationDefaultstationForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/station/defaultstation][%d] deleteUserStationDefaultstationForbidden  %+v", 403, o.Payload)
}

func (o *DeleteUserStationDefaultstationForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/station/defaultstation][%d] deleteUserStationDefaultstationForbidden  %+v", 403, o.Payload)
}

func (o *DeleteUserStationDefaultstationForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserStationDefaultstationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserStationDefaultstationNotFound creates a DeleteUserStationDefaultstationNotFound with default headers values
func NewDeleteUserStationDefaultstationNotFound() *DeleteUserStationDefaultstationNotFound {
	return &DeleteUserStationDefaultstationNotFound{}
}

/*
DeleteUserStationDefaultstationNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type DeleteUserStationDefaultstationNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user station defaultstation not found response has a 2xx status code
func (o *DeleteUserStationDefaultstationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user station defaultstation not found response has a 3xx status code
func (o *DeleteUserStationDefaultstationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user station defaultstation not found response has a 4xx status code
func (o *DeleteUserStationDefaultstationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user station defaultstation not found response has a 5xx status code
func (o *DeleteUserStationDefaultstationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user station defaultstation not found response a status code equal to that given
func (o *DeleteUserStationDefaultstationNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteUserStationDefaultstationNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/station/defaultstation][%d] deleteUserStationDefaultstationNotFound  %+v", 404, o.Payload)
}

func (o *DeleteUserStationDefaultstationNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/station/defaultstation][%d] deleteUserStationDefaultstationNotFound  %+v", 404, o.Payload)
}

func (o *DeleteUserStationDefaultstationNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserStationDefaultstationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserStationDefaultstationRequestTimeout creates a DeleteUserStationDefaultstationRequestTimeout with default headers values
func NewDeleteUserStationDefaultstationRequestTimeout() *DeleteUserStationDefaultstationRequestTimeout {
	return &DeleteUserStationDefaultstationRequestTimeout{}
}

/*
DeleteUserStationDefaultstationRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteUserStationDefaultstationRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user station defaultstation request timeout response has a 2xx status code
func (o *DeleteUserStationDefaultstationRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user station defaultstation request timeout response has a 3xx status code
func (o *DeleteUserStationDefaultstationRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user station defaultstation request timeout response has a 4xx status code
func (o *DeleteUserStationDefaultstationRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user station defaultstation request timeout response has a 5xx status code
func (o *DeleteUserStationDefaultstationRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user station defaultstation request timeout response a status code equal to that given
func (o *DeleteUserStationDefaultstationRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *DeleteUserStationDefaultstationRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/station/defaultstation][%d] deleteUserStationDefaultstationRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteUserStationDefaultstationRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/station/defaultstation][%d] deleteUserStationDefaultstationRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteUserStationDefaultstationRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserStationDefaultstationRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserStationDefaultstationRequestEntityTooLarge creates a DeleteUserStationDefaultstationRequestEntityTooLarge with default headers values
func NewDeleteUserStationDefaultstationRequestEntityTooLarge() *DeleteUserStationDefaultstationRequestEntityTooLarge {
	return &DeleteUserStationDefaultstationRequestEntityTooLarge{}
}

/*
DeleteUserStationDefaultstationRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type DeleteUserStationDefaultstationRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user station defaultstation request entity too large response has a 2xx status code
func (o *DeleteUserStationDefaultstationRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user station defaultstation request entity too large response has a 3xx status code
func (o *DeleteUserStationDefaultstationRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user station defaultstation request entity too large response has a 4xx status code
func (o *DeleteUserStationDefaultstationRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user station defaultstation request entity too large response has a 5xx status code
func (o *DeleteUserStationDefaultstationRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user station defaultstation request entity too large response a status code equal to that given
func (o *DeleteUserStationDefaultstationRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *DeleteUserStationDefaultstationRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/station/defaultstation][%d] deleteUserStationDefaultstationRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteUserStationDefaultstationRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/station/defaultstation][%d] deleteUserStationDefaultstationRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteUserStationDefaultstationRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserStationDefaultstationRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserStationDefaultstationUnsupportedMediaType creates a DeleteUserStationDefaultstationUnsupportedMediaType with default headers values
func NewDeleteUserStationDefaultstationUnsupportedMediaType() *DeleteUserStationDefaultstationUnsupportedMediaType {
	return &DeleteUserStationDefaultstationUnsupportedMediaType{}
}

/*
DeleteUserStationDefaultstationUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteUserStationDefaultstationUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user station defaultstation unsupported media type response has a 2xx status code
func (o *DeleteUserStationDefaultstationUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user station defaultstation unsupported media type response has a 3xx status code
func (o *DeleteUserStationDefaultstationUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user station defaultstation unsupported media type response has a 4xx status code
func (o *DeleteUserStationDefaultstationUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user station defaultstation unsupported media type response has a 5xx status code
func (o *DeleteUserStationDefaultstationUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user station defaultstation unsupported media type response a status code equal to that given
func (o *DeleteUserStationDefaultstationUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *DeleteUserStationDefaultstationUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/station/defaultstation][%d] deleteUserStationDefaultstationUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteUserStationDefaultstationUnsupportedMediaType) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/station/defaultstation][%d] deleteUserStationDefaultstationUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteUserStationDefaultstationUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserStationDefaultstationUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserStationDefaultstationTooManyRequests creates a DeleteUserStationDefaultstationTooManyRequests with default headers values
func NewDeleteUserStationDefaultstationTooManyRequests() *DeleteUserStationDefaultstationTooManyRequests {
	return &DeleteUserStationDefaultstationTooManyRequests{}
}

/*
DeleteUserStationDefaultstationTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteUserStationDefaultstationTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user station defaultstation too many requests response has a 2xx status code
func (o *DeleteUserStationDefaultstationTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user station defaultstation too many requests response has a 3xx status code
func (o *DeleteUserStationDefaultstationTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user station defaultstation too many requests response has a 4xx status code
func (o *DeleteUserStationDefaultstationTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user station defaultstation too many requests response has a 5xx status code
func (o *DeleteUserStationDefaultstationTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user station defaultstation too many requests response a status code equal to that given
func (o *DeleteUserStationDefaultstationTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteUserStationDefaultstationTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/station/defaultstation][%d] deleteUserStationDefaultstationTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteUserStationDefaultstationTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/station/defaultstation][%d] deleteUserStationDefaultstationTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteUserStationDefaultstationTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserStationDefaultstationTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserStationDefaultstationInternalServerError creates a DeleteUserStationDefaultstationInternalServerError with default headers values
func NewDeleteUserStationDefaultstationInternalServerError() *DeleteUserStationDefaultstationInternalServerError {
	return &DeleteUserStationDefaultstationInternalServerError{}
}

/*
DeleteUserStationDefaultstationInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteUserStationDefaultstationInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user station defaultstation internal server error response has a 2xx status code
func (o *DeleteUserStationDefaultstationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user station defaultstation internal server error response has a 3xx status code
func (o *DeleteUserStationDefaultstationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user station defaultstation internal server error response has a 4xx status code
func (o *DeleteUserStationDefaultstationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete user station defaultstation internal server error response has a 5xx status code
func (o *DeleteUserStationDefaultstationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete user station defaultstation internal server error response a status code equal to that given
func (o *DeleteUserStationDefaultstationInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteUserStationDefaultstationInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/station/defaultstation][%d] deleteUserStationDefaultstationInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteUserStationDefaultstationInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/station/defaultstation][%d] deleteUserStationDefaultstationInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteUserStationDefaultstationInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserStationDefaultstationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserStationDefaultstationServiceUnavailable creates a DeleteUserStationDefaultstationServiceUnavailable with default headers values
func NewDeleteUserStationDefaultstationServiceUnavailable() *DeleteUserStationDefaultstationServiceUnavailable {
	return &DeleteUserStationDefaultstationServiceUnavailable{}
}

/*
DeleteUserStationDefaultstationServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteUserStationDefaultstationServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user station defaultstation service unavailable response has a 2xx status code
func (o *DeleteUserStationDefaultstationServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user station defaultstation service unavailable response has a 3xx status code
func (o *DeleteUserStationDefaultstationServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user station defaultstation service unavailable response has a 4xx status code
func (o *DeleteUserStationDefaultstationServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete user station defaultstation service unavailable response has a 5xx status code
func (o *DeleteUserStationDefaultstationServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete user station defaultstation service unavailable response a status code equal to that given
func (o *DeleteUserStationDefaultstationServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *DeleteUserStationDefaultstationServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/station/defaultstation][%d] deleteUserStationDefaultstationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteUserStationDefaultstationServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/station/defaultstation][%d] deleteUserStationDefaultstationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteUserStationDefaultstationServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserStationDefaultstationServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserStationDefaultstationGatewayTimeout creates a DeleteUserStationDefaultstationGatewayTimeout with default headers values
func NewDeleteUserStationDefaultstationGatewayTimeout() *DeleteUserStationDefaultstationGatewayTimeout {
	return &DeleteUserStationDefaultstationGatewayTimeout{}
}

/*
DeleteUserStationDefaultstationGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type DeleteUserStationDefaultstationGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user station defaultstation gateway timeout response has a 2xx status code
func (o *DeleteUserStationDefaultstationGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user station defaultstation gateway timeout response has a 3xx status code
func (o *DeleteUserStationDefaultstationGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user station defaultstation gateway timeout response has a 4xx status code
func (o *DeleteUserStationDefaultstationGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete user station defaultstation gateway timeout response has a 5xx status code
func (o *DeleteUserStationDefaultstationGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this delete user station defaultstation gateway timeout response a status code equal to that given
func (o *DeleteUserStationDefaultstationGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *DeleteUserStationDefaultstationGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/station/defaultstation][%d] deleteUserStationDefaultstationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteUserStationDefaultstationGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/station/defaultstation][%d] deleteUserStationDefaultstationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteUserStationDefaultstationGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserStationDefaultstationGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
