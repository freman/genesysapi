// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteUserRoutingskillReader is a Reader for the DeleteUserRoutingskill structure.
type DeleteUserRoutingskillReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteUserRoutingskillReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteUserRoutingskillOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteUserRoutingskillBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteUserRoutingskillUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteUserRoutingskillForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteUserRoutingskillNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteUserRoutingskillRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteUserRoutingskillConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteUserRoutingskillRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteUserRoutingskillUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteUserRoutingskillTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteUserRoutingskillInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteUserRoutingskillServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteUserRoutingskillGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteUserRoutingskillOK creates a DeleteUserRoutingskillOK with default headers values
func NewDeleteUserRoutingskillOK() *DeleteUserRoutingskillOK {
	return &DeleteUserRoutingskillOK{}
}

/*
DeleteUserRoutingskillOK describes a response with status code 200, with default header values.

Operation was successful.
*/
type DeleteUserRoutingskillOK struct {
}

// IsSuccess returns true when this delete user routingskill o k response has a 2xx status code
func (o *DeleteUserRoutingskillOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete user routingskill o k response has a 3xx status code
func (o *DeleteUserRoutingskillOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user routingskill o k response has a 4xx status code
func (o *DeleteUserRoutingskillOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete user routingskill o k response has a 5xx status code
func (o *DeleteUserRoutingskillOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user routingskill o k response a status code equal to that given
func (o *DeleteUserRoutingskillOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeleteUserRoutingskillOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routingskills/{skillId}][%d] deleteUserRoutingskillOK ", 200)
}

func (o *DeleteUserRoutingskillOK) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routingskills/{skillId}][%d] deleteUserRoutingskillOK ", 200)
}

func (o *DeleteUserRoutingskillOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteUserRoutingskillBadRequest creates a DeleteUserRoutingskillBadRequest with default headers values
func NewDeleteUserRoutingskillBadRequest() *DeleteUserRoutingskillBadRequest {
	return &DeleteUserRoutingskillBadRequest{}
}

/*
DeleteUserRoutingskillBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteUserRoutingskillBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user routingskill bad request response has a 2xx status code
func (o *DeleteUserRoutingskillBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user routingskill bad request response has a 3xx status code
func (o *DeleteUserRoutingskillBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user routingskill bad request response has a 4xx status code
func (o *DeleteUserRoutingskillBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user routingskill bad request response has a 5xx status code
func (o *DeleteUserRoutingskillBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user routingskill bad request response a status code equal to that given
func (o *DeleteUserRoutingskillBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteUserRoutingskillBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routingskills/{skillId}][%d] deleteUserRoutingskillBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteUserRoutingskillBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routingskills/{skillId}][%d] deleteUserRoutingskillBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteUserRoutingskillBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserRoutingskillBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserRoutingskillUnauthorized creates a DeleteUserRoutingskillUnauthorized with default headers values
func NewDeleteUserRoutingskillUnauthorized() *DeleteUserRoutingskillUnauthorized {
	return &DeleteUserRoutingskillUnauthorized{}
}

/*
DeleteUserRoutingskillUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteUserRoutingskillUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user routingskill unauthorized response has a 2xx status code
func (o *DeleteUserRoutingskillUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user routingskill unauthorized response has a 3xx status code
func (o *DeleteUserRoutingskillUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user routingskill unauthorized response has a 4xx status code
func (o *DeleteUserRoutingskillUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user routingskill unauthorized response has a 5xx status code
func (o *DeleteUserRoutingskillUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user routingskill unauthorized response a status code equal to that given
func (o *DeleteUserRoutingskillUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteUserRoutingskillUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routingskills/{skillId}][%d] deleteUserRoutingskillUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteUserRoutingskillUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routingskills/{skillId}][%d] deleteUserRoutingskillUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteUserRoutingskillUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserRoutingskillUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserRoutingskillForbidden creates a DeleteUserRoutingskillForbidden with default headers values
func NewDeleteUserRoutingskillForbidden() *DeleteUserRoutingskillForbidden {
	return &DeleteUserRoutingskillForbidden{}
}

/*
DeleteUserRoutingskillForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type DeleteUserRoutingskillForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user routingskill forbidden response has a 2xx status code
func (o *DeleteUserRoutingskillForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user routingskill forbidden response has a 3xx status code
func (o *DeleteUserRoutingskillForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user routingskill forbidden response has a 4xx status code
func (o *DeleteUserRoutingskillForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user routingskill forbidden response has a 5xx status code
func (o *DeleteUserRoutingskillForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user routingskill forbidden response a status code equal to that given
func (o *DeleteUserRoutingskillForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteUserRoutingskillForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routingskills/{skillId}][%d] deleteUserRoutingskillForbidden  %+v", 403, o.Payload)
}

func (o *DeleteUserRoutingskillForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routingskills/{skillId}][%d] deleteUserRoutingskillForbidden  %+v", 403, o.Payload)
}

func (o *DeleteUserRoutingskillForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserRoutingskillForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserRoutingskillNotFound creates a DeleteUserRoutingskillNotFound with default headers values
func NewDeleteUserRoutingskillNotFound() *DeleteUserRoutingskillNotFound {
	return &DeleteUserRoutingskillNotFound{}
}

/*
DeleteUserRoutingskillNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type DeleteUserRoutingskillNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user routingskill not found response has a 2xx status code
func (o *DeleteUserRoutingskillNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user routingskill not found response has a 3xx status code
func (o *DeleteUserRoutingskillNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user routingskill not found response has a 4xx status code
func (o *DeleteUserRoutingskillNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user routingskill not found response has a 5xx status code
func (o *DeleteUserRoutingskillNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user routingskill not found response a status code equal to that given
func (o *DeleteUserRoutingskillNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteUserRoutingskillNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routingskills/{skillId}][%d] deleteUserRoutingskillNotFound  %+v", 404, o.Payload)
}

func (o *DeleteUserRoutingskillNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routingskills/{skillId}][%d] deleteUserRoutingskillNotFound  %+v", 404, o.Payload)
}

func (o *DeleteUserRoutingskillNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserRoutingskillNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserRoutingskillRequestTimeout creates a DeleteUserRoutingskillRequestTimeout with default headers values
func NewDeleteUserRoutingskillRequestTimeout() *DeleteUserRoutingskillRequestTimeout {
	return &DeleteUserRoutingskillRequestTimeout{}
}

/*
DeleteUserRoutingskillRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteUserRoutingskillRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user routingskill request timeout response has a 2xx status code
func (o *DeleteUserRoutingskillRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user routingskill request timeout response has a 3xx status code
func (o *DeleteUserRoutingskillRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user routingskill request timeout response has a 4xx status code
func (o *DeleteUserRoutingskillRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user routingskill request timeout response has a 5xx status code
func (o *DeleteUserRoutingskillRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user routingskill request timeout response a status code equal to that given
func (o *DeleteUserRoutingskillRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *DeleteUserRoutingskillRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routingskills/{skillId}][%d] deleteUserRoutingskillRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteUserRoutingskillRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routingskills/{skillId}][%d] deleteUserRoutingskillRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteUserRoutingskillRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserRoutingskillRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserRoutingskillConflict creates a DeleteUserRoutingskillConflict with default headers values
func NewDeleteUserRoutingskillConflict() *DeleteUserRoutingskillConflict {
	return &DeleteUserRoutingskillConflict{}
}

/*
DeleteUserRoutingskillConflict describes a response with status code 409, with default header values.

Conflict
*/
type DeleteUserRoutingskillConflict struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user routingskill conflict response has a 2xx status code
func (o *DeleteUserRoutingskillConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user routingskill conflict response has a 3xx status code
func (o *DeleteUserRoutingskillConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user routingskill conflict response has a 4xx status code
func (o *DeleteUserRoutingskillConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user routingskill conflict response has a 5xx status code
func (o *DeleteUserRoutingskillConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user routingskill conflict response a status code equal to that given
func (o *DeleteUserRoutingskillConflict) IsCode(code int) bool {
	return code == 409
}

func (o *DeleteUserRoutingskillConflict) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routingskills/{skillId}][%d] deleteUserRoutingskillConflict  %+v", 409, o.Payload)
}

func (o *DeleteUserRoutingskillConflict) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routingskills/{skillId}][%d] deleteUserRoutingskillConflict  %+v", 409, o.Payload)
}

func (o *DeleteUserRoutingskillConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserRoutingskillConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserRoutingskillRequestEntityTooLarge creates a DeleteUserRoutingskillRequestEntityTooLarge with default headers values
func NewDeleteUserRoutingskillRequestEntityTooLarge() *DeleteUserRoutingskillRequestEntityTooLarge {
	return &DeleteUserRoutingskillRequestEntityTooLarge{}
}

/*
DeleteUserRoutingskillRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type DeleteUserRoutingskillRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user routingskill request entity too large response has a 2xx status code
func (o *DeleteUserRoutingskillRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user routingskill request entity too large response has a 3xx status code
func (o *DeleteUserRoutingskillRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user routingskill request entity too large response has a 4xx status code
func (o *DeleteUserRoutingskillRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user routingskill request entity too large response has a 5xx status code
func (o *DeleteUserRoutingskillRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user routingskill request entity too large response a status code equal to that given
func (o *DeleteUserRoutingskillRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *DeleteUserRoutingskillRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routingskills/{skillId}][%d] deleteUserRoutingskillRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteUserRoutingskillRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routingskills/{skillId}][%d] deleteUserRoutingskillRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteUserRoutingskillRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserRoutingskillRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserRoutingskillUnsupportedMediaType creates a DeleteUserRoutingskillUnsupportedMediaType with default headers values
func NewDeleteUserRoutingskillUnsupportedMediaType() *DeleteUserRoutingskillUnsupportedMediaType {
	return &DeleteUserRoutingskillUnsupportedMediaType{}
}

/*
DeleteUserRoutingskillUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteUserRoutingskillUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user routingskill unsupported media type response has a 2xx status code
func (o *DeleteUserRoutingskillUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user routingskill unsupported media type response has a 3xx status code
func (o *DeleteUserRoutingskillUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user routingskill unsupported media type response has a 4xx status code
func (o *DeleteUserRoutingskillUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user routingskill unsupported media type response has a 5xx status code
func (o *DeleteUserRoutingskillUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user routingskill unsupported media type response a status code equal to that given
func (o *DeleteUserRoutingskillUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *DeleteUserRoutingskillUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routingskills/{skillId}][%d] deleteUserRoutingskillUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteUserRoutingskillUnsupportedMediaType) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routingskills/{skillId}][%d] deleteUserRoutingskillUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteUserRoutingskillUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserRoutingskillUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserRoutingskillTooManyRequests creates a DeleteUserRoutingskillTooManyRequests with default headers values
func NewDeleteUserRoutingskillTooManyRequests() *DeleteUserRoutingskillTooManyRequests {
	return &DeleteUserRoutingskillTooManyRequests{}
}

/*
DeleteUserRoutingskillTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteUserRoutingskillTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user routingskill too many requests response has a 2xx status code
func (o *DeleteUserRoutingskillTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user routingskill too many requests response has a 3xx status code
func (o *DeleteUserRoutingskillTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user routingskill too many requests response has a 4xx status code
func (o *DeleteUserRoutingskillTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user routingskill too many requests response has a 5xx status code
func (o *DeleteUserRoutingskillTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user routingskill too many requests response a status code equal to that given
func (o *DeleteUserRoutingskillTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteUserRoutingskillTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routingskills/{skillId}][%d] deleteUserRoutingskillTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteUserRoutingskillTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routingskills/{skillId}][%d] deleteUserRoutingskillTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteUserRoutingskillTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserRoutingskillTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserRoutingskillInternalServerError creates a DeleteUserRoutingskillInternalServerError with default headers values
func NewDeleteUserRoutingskillInternalServerError() *DeleteUserRoutingskillInternalServerError {
	return &DeleteUserRoutingskillInternalServerError{}
}

/*
DeleteUserRoutingskillInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteUserRoutingskillInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user routingskill internal server error response has a 2xx status code
func (o *DeleteUserRoutingskillInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user routingskill internal server error response has a 3xx status code
func (o *DeleteUserRoutingskillInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user routingskill internal server error response has a 4xx status code
func (o *DeleteUserRoutingskillInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete user routingskill internal server error response has a 5xx status code
func (o *DeleteUserRoutingskillInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete user routingskill internal server error response a status code equal to that given
func (o *DeleteUserRoutingskillInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteUserRoutingskillInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routingskills/{skillId}][%d] deleteUserRoutingskillInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteUserRoutingskillInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routingskills/{skillId}][%d] deleteUserRoutingskillInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteUserRoutingskillInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserRoutingskillInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserRoutingskillServiceUnavailable creates a DeleteUserRoutingskillServiceUnavailable with default headers values
func NewDeleteUserRoutingskillServiceUnavailable() *DeleteUserRoutingskillServiceUnavailable {
	return &DeleteUserRoutingskillServiceUnavailable{}
}

/*
DeleteUserRoutingskillServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteUserRoutingskillServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user routingskill service unavailable response has a 2xx status code
func (o *DeleteUserRoutingskillServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user routingskill service unavailable response has a 3xx status code
func (o *DeleteUserRoutingskillServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user routingskill service unavailable response has a 4xx status code
func (o *DeleteUserRoutingskillServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete user routingskill service unavailable response has a 5xx status code
func (o *DeleteUserRoutingskillServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete user routingskill service unavailable response a status code equal to that given
func (o *DeleteUserRoutingskillServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *DeleteUserRoutingskillServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routingskills/{skillId}][%d] deleteUserRoutingskillServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteUserRoutingskillServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routingskills/{skillId}][%d] deleteUserRoutingskillServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteUserRoutingskillServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserRoutingskillServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserRoutingskillGatewayTimeout creates a DeleteUserRoutingskillGatewayTimeout with default headers values
func NewDeleteUserRoutingskillGatewayTimeout() *DeleteUserRoutingskillGatewayTimeout {
	return &DeleteUserRoutingskillGatewayTimeout{}
}

/*
DeleteUserRoutingskillGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type DeleteUserRoutingskillGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user routingskill gateway timeout response has a 2xx status code
func (o *DeleteUserRoutingskillGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user routingskill gateway timeout response has a 3xx status code
func (o *DeleteUserRoutingskillGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user routingskill gateway timeout response has a 4xx status code
func (o *DeleteUserRoutingskillGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete user routingskill gateway timeout response has a 5xx status code
func (o *DeleteUserRoutingskillGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this delete user routingskill gateway timeout response a status code equal to that given
func (o *DeleteUserRoutingskillGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *DeleteUserRoutingskillGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routingskills/{skillId}][%d] deleteUserRoutingskillGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteUserRoutingskillGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routingskills/{skillId}][%d] deleteUserRoutingskillGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteUserRoutingskillGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserRoutingskillGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
