// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PatchUserCallforwardingReader is a Reader for the PatchUserCallforwarding structure.
type PatchUserCallforwardingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchUserCallforwardingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchUserCallforwardingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchUserCallforwardingBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchUserCallforwardingUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchUserCallforwardingForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchUserCallforwardingNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPatchUserCallforwardingRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPatchUserCallforwardingConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPatchUserCallforwardingRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchUserCallforwardingUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPatchUserCallforwardingTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchUserCallforwardingInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPatchUserCallforwardingServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPatchUserCallforwardingGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchUserCallforwardingOK creates a PatchUserCallforwardingOK with default headers values
func NewPatchUserCallforwardingOK() *PatchUserCallforwardingOK {
	return &PatchUserCallforwardingOK{}
}

/*PatchUserCallforwardingOK handles this case with default header values.

successful operation
*/
type PatchUserCallforwardingOK struct {
	Payload *models.CallForwarding
}

func (o *PatchUserCallforwardingOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/callforwarding][%d] patchUserCallforwardingOK  %+v", 200, o.Payload)
}

func (o *PatchUserCallforwardingOK) GetPayload() *models.CallForwarding {
	return o.Payload
}

func (o *PatchUserCallforwardingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CallForwarding)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchUserCallforwardingBadRequest creates a PatchUserCallforwardingBadRequest with default headers values
func NewPatchUserCallforwardingBadRequest() *PatchUserCallforwardingBadRequest {
	return &PatchUserCallforwardingBadRequest{}
}

/*PatchUserCallforwardingBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PatchUserCallforwardingBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PatchUserCallforwardingBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/callforwarding][%d] patchUserCallforwardingBadRequest  %+v", 400, o.Payload)
}

func (o *PatchUserCallforwardingBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchUserCallforwardingBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchUserCallforwardingUnauthorized creates a PatchUserCallforwardingUnauthorized with default headers values
func NewPatchUserCallforwardingUnauthorized() *PatchUserCallforwardingUnauthorized {
	return &PatchUserCallforwardingUnauthorized{}
}

/*PatchUserCallforwardingUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PatchUserCallforwardingUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PatchUserCallforwardingUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/callforwarding][%d] patchUserCallforwardingUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchUserCallforwardingUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchUserCallforwardingUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchUserCallforwardingForbidden creates a PatchUserCallforwardingForbidden with default headers values
func NewPatchUserCallforwardingForbidden() *PatchUserCallforwardingForbidden {
	return &PatchUserCallforwardingForbidden{}
}

/*PatchUserCallforwardingForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PatchUserCallforwardingForbidden struct {
	Payload *models.ErrorBody
}

func (o *PatchUserCallforwardingForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/callforwarding][%d] patchUserCallforwardingForbidden  %+v", 403, o.Payload)
}

func (o *PatchUserCallforwardingForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchUserCallforwardingForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchUserCallforwardingNotFound creates a PatchUserCallforwardingNotFound with default headers values
func NewPatchUserCallforwardingNotFound() *PatchUserCallforwardingNotFound {
	return &PatchUserCallforwardingNotFound{}
}

/*PatchUserCallforwardingNotFound handles this case with default header values.

The requested resource was not found.
*/
type PatchUserCallforwardingNotFound struct {
	Payload *models.ErrorBody
}

func (o *PatchUserCallforwardingNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/callforwarding][%d] patchUserCallforwardingNotFound  %+v", 404, o.Payload)
}

func (o *PatchUserCallforwardingNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchUserCallforwardingNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchUserCallforwardingRequestTimeout creates a PatchUserCallforwardingRequestTimeout with default headers values
func NewPatchUserCallforwardingRequestTimeout() *PatchUserCallforwardingRequestTimeout {
	return &PatchUserCallforwardingRequestTimeout{}
}

/*PatchUserCallforwardingRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PatchUserCallforwardingRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PatchUserCallforwardingRequestTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/callforwarding][%d] patchUserCallforwardingRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchUserCallforwardingRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchUserCallforwardingRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchUserCallforwardingConflict creates a PatchUserCallforwardingConflict with default headers values
func NewPatchUserCallforwardingConflict() *PatchUserCallforwardingConflict {
	return &PatchUserCallforwardingConflict{}
}

/*PatchUserCallforwardingConflict handles this case with default header values.

Conflict
*/
type PatchUserCallforwardingConflict struct {
	Payload *models.ErrorBody
}

func (o *PatchUserCallforwardingConflict) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/callforwarding][%d] patchUserCallforwardingConflict  %+v", 409, o.Payload)
}

func (o *PatchUserCallforwardingConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchUserCallforwardingConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchUserCallforwardingRequestEntityTooLarge creates a PatchUserCallforwardingRequestEntityTooLarge with default headers values
func NewPatchUserCallforwardingRequestEntityTooLarge() *PatchUserCallforwardingRequestEntityTooLarge {
	return &PatchUserCallforwardingRequestEntityTooLarge{}
}

/*PatchUserCallforwardingRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PatchUserCallforwardingRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PatchUserCallforwardingRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/callforwarding][%d] patchUserCallforwardingRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchUserCallforwardingRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchUserCallforwardingRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchUserCallforwardingUnsupportedMediaType creates a PatchUserCallforwardingUnsupportedMediaType with default headers values
func NewPatchUserCallforwardingUnsupportedMediaType() *PatchUserCallforwardingUnsupportedMediaType {
	return &PatchUserCallforwardingUnsupportedMediaType{}
}

/*PatchUserCallforwardingUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PatchUserCallforwardingUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PatchUserCallforwardingUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/callforwarding][%d] patchUserCallforwardingUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchUserCallforwardingUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchUserCallforwardingUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchUserCallforwardingTooManyRequests creates a PatchUserCallforwardingTooManyRequests with default headers values
func NewPatchUserCallforwardingTooManyRequests() *PatchUserCallforwardingTooManyRequests {
	return &PatchUserCallforwardingTooManyRequests{}
}

/*PatchUserCallforwardingTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PatchUserCallforwardingTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PatchUserCallforwardingTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/callforwarding][%d] patchUserCallforwardingTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchUserCallforwardingTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchUserCallforwardingTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchUserCallforwardingInternalServerError creates a PatchUserCallforwardingInternalServerError with default headers values
func NewPatchUserCallforwardingInternalServerError() *PatchUserCallforwardingInternalServerError {
	return &PatchUserCallforwardingInternalServerError{}
}

/*PatchUserCallforwardingInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PatchUserCallforwardingInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PatchUserCallforwardingInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/callforwarding][%d] patchUserCallforwardingInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchUserCallforwardingInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchUserCallforwardingInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchUserCallforwardingServiceUnavailable creates a PatchUserCallforwardingServiceUnavailable with default headers values
func NewPatchUserCallforwardingServiceUnavailable() *PatchUserCallforwardingServiceUnavailable {
	return &PatchUserCallforwardingServiceUnavailable{}
}

/*PatchUserCallforwardingServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PatchUserCallforwardingServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PatchUserCallforwardingServiceUnavailable) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/callforwarding][%d] patchUserCallforwardingServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchUserCallforwardingServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchUserCallforwardingServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchUserCallforwardingGatewayTimeout creates a PatchUserCallforwardingGatewayTimeout with default headers values
func NewPatchUserCallforwardingGatewayTimeout() *PatchUserCallforwardingGatewayTimeout {
	return &PatchUserCallforwardingGatewayTimeout{}
}

/*PatchUserCallforwardingGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PatchUserCallforwardingGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PatchUserCallforwardingGatewayTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/callforwarding][%d] patchUserCallforwardingGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchUserCallforwardingGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchUserCallforwardingGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
