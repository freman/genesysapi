// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetUserRoutingskillsReader is a Reader for the GetUserRoutingskills structure.
type GetUserRoutingskillsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserRoutingskillsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserRoutingskillsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUserRoutingskillsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetUserRoutingskillsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUserRoutingskillsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUserRoutingskillsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetUserRoutingskillsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetUserRoutingskillsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetUserRoutingskillsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetUserRoutingskillsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUserRoutingskillsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetUserRoutingskillsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetUserRoutingskillsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUserRoutingskillsOK creates a GetUserRoutingskillsOK with default headers values
func NewGetUserRoutingskillsOK() *GetUserRoutingskillsOK {
	return &GetUserRoutingskillsOK{}
}

/*GetUserRoutingskillsOK handles this case with default header values.

successful operation
*/
type GetUserRoutingskillsOK struct {
	Payload *models.UserSkillEntityListing
}

func (o *GetUserRoutingskillsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/routingskills][%d] getUserRoutingskillsOK  %+v", 200, o.Payload)
}

func (o *GetUserRoutingskillsOK) GetPayload() *models.UserSkillEntityListing {
	return o.Payload
}

func (o *GetUserRoutingskillsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserSkillEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRoutingskillsBadRequest creates a GetUserRoutingskillsBadRequest with default headers values
func NewGetUserRoutingskillsBadRequest() *GetUserRoutingskillsBadRequest {
	return &GetUserRoutingskillsBadRequest{}
}

/*GetUserRoutingskillsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetUserRoutingskillsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetUserRoutingskillsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/routingskills][%d] getUserRoutingskillsBadRequest  %+v", 400, o.Payload)
}

func (o *GetUserRoutingskillsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserRoutingskillsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRoutingskillsUnauthorized creates a GetUserRoutingskillsUnauthorized with default headers values
func NewGetUserRoutingskillsUnauthorized() *GetUserRoutingskillsUnauthorized {
	return &GetUserRoutingskillsUnauthorized{}
}

/*GetUserRoutingskillsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetUserRoutingskillsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetUserRoutingskillsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/routingskills][%d] getUserRoutingskillsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUserRoutingskillsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserRoutingskillsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRoutingskillsForbidden creates a GetUserRoutingskillsForbidden with default headers values
func NewGetUserRoutingskillsForbidden() *GetUserRoutingskillsForbidden {
	return &GetUserRoutingskillsForbidden{}
}

/*GetUserRoutingskillsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetUserRoutingskillsForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetUserRoutingskillsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/routingskills][%d] getUserRoutingskillsForbidden  %+v", 403, o.Payload)
}

func (o *GetUserRoutingskillsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserRoutingskillsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRoutingskillsNotFound creates a GetUserRoutingskillsNotFound with default headers values
func NewGetUserRoutingskillsNotFound() *GetUserRoutingskillsNotFound {
	return &GetUserRoutingskillsNotFound{}
}

/*GetUserRoutingskillsNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetUserRoutingskillsNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetUserRoutingskillsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/routingskills][%d] getUserRoutingskillsNotFound  %+v", 404, o.Payload)
}

func (o *GetUserRoutingskillsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserRoutingskillsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRoutingskillsRequestTimeout creates a GetUserRoutingskillsRequestTimeout with default headers values
func NewGetUserRoutingskillsRequestTimeout() *GetUserRoutingskillsRequestTimeout {
	return &GetUserRoutingskillsRequestTimeout{}
}

/*GetUserRoutingskillsRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetUserRoutingskillsRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetUserRoutingskillsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/routingskills][%d] getUserRoutingskillsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetUserRoutingskillsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserRoutingskillsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRoutingskillsRequestEntityTooLarge creates a GetUserRoutingskillsRequestEntityTooLarge with default headers values
func NewGetUserRoutingskillsRequestEntityTooLarge() *GetUserRoutingskillsRequestEntityTooLarge {
	return &GetUserRoutingskillsRequestEntityTooLarge{}
}

/*GetUserRoutingskillsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetUserRoutingskillsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetUserRoutingskillsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/routingskills][%d] getUserRoutingskillsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetUserRoutingskillsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserRoutingskillsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRoutingskillsUnsupportedMediaType creates a GetUserRoutingskillsUnsupportedMediaType with default headers values
func NewGetUserRoutingskillsUnsupportedMediaType() *GetUserRoutingskillsUnsupportedMediaType {
	return &GetUserRoutingskillsUnsupportedMediaType{}
}

/*GetUserRoutingskillsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetUserRoutingskillsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetUserRoutingskillsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/routingskills][%d] getUserRoutingskillsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetUserRoutingskillsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserRoutingskillsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRoutingskillsTooManyRequests creates a GetUserRoutingskillsTooManyRequests with default headers values
func NewGetUserRoutingskillsTooManyRequests() *GetUserRoutingskillsTooManyRequests {
	return &GetUserRoutingskillsTooManyRequests{}
}

/*GetUserRoutingskillsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetUserRoutingskillsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetUserRoutingskillsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/routingskills][%d] getUserRoutingskillsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetUserRoutingskillsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserRoutingskillsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRoutingskillsInternalServerError creates a GetUserRoutingskillsInternalServerError with default headers values
func NewGetUserRoutingskillsInternalServerError() *GetUserRoutingskillsInternalServerError {
	return &GetUserRoutingskillsInternalServerError{}
}

/*GetUserRoutingskillsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetUserRoutingskillsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetUserRoutingskillsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/routingskills][%d] getUserRoutingskillsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUserRoutingskillsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserRoutingskillsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRoutingskillsServiceUnavailable creates a GetUserRoutingskillsServiceUnavailable with default headers values
func NewGetUserRoutingskillsServiceUnavailable() *GetUserRoutingskillsServiceUnavailable {
	return &GetUserRoutingskillsServiceUnavailable{}
}

/*GetUserRoutingskillsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetUserRoutingskillsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetUserRoutingskillsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/routingskills][%d] getUserRoutingskillsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUserRoutingskillsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserRoutingskillsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRoutingskillsGatewayTimeout creates a GetUserRoutingskillsGatewayTimeout with default headers values
func NewGetUserRoutingskillsGatewayTimeout() *GetUserRoutingskillsGatewayTimeout {
	return &GetUserRoutingskillsGatewayTimeout{}
}

/*GetUserRoutingskillsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetUserRoutingskillsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetUserRoutingskillsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/routingskills][%d] getUserRoutingskillsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUserRoutingskillsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserRoutingskillsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
