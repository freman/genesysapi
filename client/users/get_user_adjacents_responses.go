// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetUserAdjacentsReader is a Reader for the GetUserAdjacents structure.
type GetUserAdjacentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserAdjacentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserAdjacentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUserAdjacentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetUserAdjacentsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUserAdjacentsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUserAdjacentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetUserAdjacentsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetUserAdjacentsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetUserAdjacentsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetUserAdjacentsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUserAdjacentsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetUserAdjacentsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetUserAdjacentsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUserAdjacentsOK creates a GetUserAdjacentsOK with default headers values
func NewGetUserAdjacentsOK() *GetUserAdjacentsOK {
	return &GetUserAdjacentsOK{}
}

/*
GetUserAdjacentsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetUserAdjacentsOK struct {
	Payload *models.Adjacents
}

// IsSuccess returns true when this get user adjacents o k response has a 2xx status code
func (o *GetUserAdjacentsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get user adjacents o k response has a 3xx status code
func (o *GetUserAdjacentsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user adjacents o k response has a 4xx status code
func (o *GetUserAdjacentsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user adjacents o k response has a 5xx status code
func (o *GetUserAdjacentsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get user adjacents o k response a status code equal to that given
func (o *GetUserAdjacentsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetUserAdjacentsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsOK  %+v", 200, o.Payload)
}

func (o *GetUserAdjacentsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsOK  %+v", 200, o.Payload)
}

func (o *GetUserAdjacentsOK) GetPayload() *models.Adjacents {
	return o.Payload
}

func (o *GetUserAdjacentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Adjacents)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserAdjacentsBadRequest creates a GetUserAdjacentsBadRequest with default headers values
func NewGetUserAdjacentsBadRequest() *GetUserAdjacentsBadRequest {
	return &GetUserAdjacentsBadRequest{}
}

/*
GetUserAdjacentsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetUserAdjacentsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user adjacents bad request response has a 2xx status code
func (o *GetUserAdjacentsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user adjacents bad request response has a 3xx status code
func (o *GetUserAdjacentsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user adjacents bad request response has a 4xx status code
func (o *GetUserAdjacentsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user adjacents bad request response has a 5xx status code
func (o *GetUserAdjacentsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get user adjacents bad request response a status code equal to that given
func (o *GetUserAdjacentsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetUserAdjacentsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsBadRequest  %+v", 400, o.Payload)
}

func (o *GetUserAdjacentsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsBadRequest  %+v", 400, o.Payload)
}

func (o *GetUserAdjacentsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserAdjacentsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserAdjacentsUnauthorized creates a GetUserAdjacentsUnauthorized with default headers values
func NewGetUserAdjacentsUnauthorized() *GetUserAdjacentsUnauthorized {
	return &GetUserAdjacentsUnauthorized{}
}

/*
GetUserAdjacentsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetUserAdjacentsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user adjacents unauthorized response has a 2xx status code
func (o *GetUserAdjacentsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user adjacents unauthorized response has a 3xx status code
func (o *GetUserAdjacentsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user adjacents unauthorized response has a 4xx status code
func (o *GetUserAdjacentsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user adjacents unauthorized response has a 5xx status code
func (o *GetUserAdjacentsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get user adjacents unauthorized response a status code equal to that given
func (o *GetUserAdjacentsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetUserAdjacentsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUserAdjacentsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUserAdjacentsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserAdjacentsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserAdjacentsForbidden creates a GetUserAdjacentsForbidden with default headers values
func NewGetUserAdjacentsForbidden() *GetUserAdjacentsForbidden {
	return &GetUserAdjacentsForbidden{}
}

/*
GetUserAdjacentsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetUserAdjacentsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user adjacents forbidden response has a 2xx status code
func (o *GetUserAdjacentsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user adjacents forbidden response has a 3xx status code
func (o *GetUserAdjacentsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user adjacents forbidden response has a 4xx status code
func (o *GetUserAdjacentsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user adjacents forbidden response has a 5xx status code
func (o *GetUserAdjacentsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get user adjacents forbidden response a status code equal to that given
func (o *GetUserAdjacentsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetUserAdjacentsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsForbidden  %+v", 403, o.Payload)
}

func (o *GetUserAdjacentsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsForbidden  %+v", 403, o.Payload)
}

func (o *GetUserAdjacentsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserAdjacentsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserAdjacentsNotFound creates a GetUserAdjacentsNotFound with default headers values
func NewGetUserAdjacentsNotFound() *GetUserAdjacentsNotFound {
	return &GetUserAdjacentsNotFound{}
}

/*
GetUserAdjacentsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetUserAdjacentsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user adjacents not found response has a 2xx status code
func (o *GetUserAdjacentsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user adjacents not found response has a 3xx status code
func (o *GetUserAdjacentsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user adjacents not found response has a 4xx status code
func (o *GetUserAdjacentsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user adjacents not found response has a 5xx status code
func (o *GetUserAdjacentsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get user adjacents not found response a status code equal to that given
func (o *GetUserAdjacentsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetUserAdjacentsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsNotFound  %+v", 404, o.Payload)
}

func (o *GetUserAdjacentsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsNotFound  %+v", 404, o.Payload)
}

func (o *GetUserAdjacentsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserAdjacentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserAdjacentsRequestTimeout creates a GetUserAdjacentsRequestTimeout with default headers values
func NewGetUserAdjacentsRequestTimeout() *GetUserAdjacentsRequestTimeout {
	return &GetUserAdjacentsRequestTimeout{}
}

/*
GetUserAdjacentsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetUserAdjacentsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user adjacents request timeout response has a 2xx status code
func (o *GetUserAdjacentsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user adjacents request timeout response has a 3xx status code
func (o *GetUserAdjacentsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user adjacents request timeout response has a 4xx status code
func (o *GetUserAdjacentsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user adjacents request timeout response has a 5xx status code
func (o *GetUserAdjacentsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get user adjacents request timeout response a status code equal to that given
func (o *GetUserAdjacentsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetUserAdjacentsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetUserAdjacentsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetUserAdjacentsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserAdjacentsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserAdjacentsRequestEntityTooLarge creates a GetUserAdjacentsRequestEntityTooLarge with default headers values
func NewGetUserAdjacentsRequestEntityTooLarge() *GetUserAdjacentsRequestEntityTooLarge {
	return &GetUserAdjacentsRequestEntityTooLarge{}
}

/*
GetUserAdjacentsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetUserAdjacentsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user adjacents request entity too large response has a 2xx status code
func (o *GetUserAdjacentsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user adjacents request entity too large response has a 3xx status code
func (o *GetUserAdjacentsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user adjacents request entity too large response has a 4xx status code
func (o *GetUserAdjacentsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user adjacents request entity too large response has a 5xx status code
func (o *GetUserAdjacentsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get user adjacents request entity too large response a status code equal to that given
func (o *GetUserAdjacentsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetUserAdjacentsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetUserAdjacentsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetUserAdjacentsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserAdjacentsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserAdjacentsUnsupportedMediaType creates a GetUserAdjacentsUnsupportedMediaType with default headers values
func NewGetUserAdjacentsUnsupportedMediaType() *GetUserAdjacentsUnsupportedMediaType {
	return &GetUserAdjacentsUnsupportedMediaType{}
}

/*
GetUserAdjacentsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetUserAdjacentsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user adjacents unsupported media type response has a 2xx status code
func (o *GetUserAdjacentsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user adjacents unsupported media type response has a 3xx status code
func (o *GetUserAdjacentsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user adjacents unsupported media type response has a 4xx status code
func (o *GetUserAdjacentsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user adjacents unsupported media type response has a 5xx status code
func (o *GetUserAdjacentsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get user adjacents unsupported media type response a status code equal to that given
func (o *GetUserAdjacentsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetUserAdjacentsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetUserAdjacentsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetUserAdjacentsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserAdjacentsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserAdjacentsTooManyRequests creates a GetUserAdjacentsTooManyRequests with default headers values
func NewGetUserAdjacentsTooManyRequests() *GetUserAdjacentsTooManyRequests {
	return &GetUserAdjacentsTooManyRequests{}
}

/*
GetUserAdjacentsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetUserAdjacentsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user adjacents too many requests response has a 2xx status code
func (o *GetUserAdjacentsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user adjacents too many requests response has a 3xx status code
func (o *GetUserAdjacentsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user adjacents too many requests response has a 4xx status code
func (o *GetUserAdjacentsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user adjacents too many requests response has a 5xx status code
func (o *GetUserAdjacentsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get user adjacents too many requests response a status code equal to that given
func (o *GetUserAdjacentsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetUserAdjacentsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetUserAdjacentsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetUserAdjacentsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserAdjacentsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserAdjacentsInternalServerError creates a GetUserAdjacentsInternalServerError with default headers values
func NewGetUserAdjacentsInternalServerError() *GetUserAdjacentsInternalServerError {
	return &GetUserAdjacentsInternalServerError{}
}

/*
GetUserAdjacentsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetUserAdjacentsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user adjacents internal server error response has a 2xx status code
func (o *GetUserAdjacentsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user adjacents internal server error response has a 3xx status code
func (o *GetUserAdjacentsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user adjacents internal server error response has a 4xx status code
func (o *GetUserAdjacentsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user adjacents internal server error response has a 5xx status code
func (o *GetUserAdjacentsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get user adjacents internal server error response a status code equal to that given
func (o *GetUserAdjacentsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetUserAdjacentsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUserAdjacentsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUserAdjacentsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserAdjacentsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserAdjacentsServiceUnavailable creates a GetUserAdjacentsServiceUnavailable with default headers values
func NewGetUserAdjacentsServiceUnavailable() *GetUserAdjacentsServiceUnavailable {
	return &GetUserAdjacentsServiceUnavailable{}
}

/*
GetUserAdjacentsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetUserAdjacentsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user adjacents service unavailable response has a 2xx status code
func (o *GetUserAdjacentsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user adjacents service unavailable response has a 3xx status code
func (o *GetUserAdjacentsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user adjacents service unavailable response has a 4xx status code
func (o *GetUserAdjacentsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user adjacents service unavailable response has a 5xx status code
func (o *GetUserAdjacentsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get user adjacents service unavailable response a status code equal to that given
func (o *GetUserAdjacentsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetUserAdjacentsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUserAdjacentsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUserAdjacentsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserAdjacentsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserAdjacentsGatewayTimeout creates a GetUserAdjacentsGatewayTimeout with default headers values
func NewGetUserAdjacentsGatewayTimeout() *GetUserAdjacentsGatewayTimeout {
	return &GetUserAdjacentsGatewayTimeout{}
}

/*
GetUserAdjacentsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetUserAdjacentsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get user adjacents gateway timeout response has a 2xx status code
func (o *GetUserAdjacentsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user adjacents gateway timeout response has a 3xx status code
func (o *GetUserAdjacentsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user adjacents gateway timeout response has a 4xx status code
func (o *GetUserAdjacentsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user adjacents gateway timeout response has a 5xx status code
func (o *GetUserAdjacentsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get user adjacents gateway timeout response a status code equal to that given
func (o *GetUserAdjacentsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetUserAdjacentsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUserAdjacentsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUserAdjacentsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserAdjacentsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
