// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetUserAdjacentsReader is a Reader for the GetUserAdjacents structure.
type GetUserAdjacentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserAdjacentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserAdjacentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUserAdjacentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetUserAdjacentsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUserAdjacentsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUserAdjacentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetUserAdjacentsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetUserAdjacentsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetUserAdjacentsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetUserAdjacentsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUserAdjacentsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetUserAdjacentsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetUserAdjacentsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUserAdjacentsOK creates a GetUserAdjacentsOK with default headers values
func NewGetUserAdjacentsOK() *GetUserAdjacentsOK {
	return &GetUserAdjacentsOK{}
}

/*GetUserAdjacentsOK handles this case with default header values.

successful operation
*/
type GetUserAdjacentsOK struct {
	Payload *models.Adjacents
}

func (o *GetUserAdjacentsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsOK  %+v", 200, o.Payload)
}

func (o *GetUserAdjacentsOK) GetPayload() *models.Adjacents {
	return o.Payload
}

func (o *GetUserAdjacentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Adjacents)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserAdjacentsBadRequest creates a GetUserAdjacentsBadRequest with default headers values
func NewGetUserAdjacentsBadRequest() *GetUserAdjacentsBadRequest {
	return &GetUserAdjacentsBadRequest{}
}

/*GetUserAdjacentsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetUserAdjacentsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetUserAdjacentsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsBadRequest  %+v", 400, o.Payload)
}

func (o *GetUserAdjacentsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserAdjacentsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserAdjacentsUnauthorized creates a GetUserAdjacentsUnauthorized with default headers values
func NewGetUserAdjacentsUnauthorized() *GetUserAdjacentsUnauthorized {
	return &GetUserAdjacentsUnauthorized{}
}

/*GetUserAdjacentsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetUserAdjacentsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetUserAdjacentsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUserAdjacentsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserAdjacentsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserAdjacentsForbidden creates a GetUserAdjacentsForbidden with default headers values
func NewGetUserAdjacentsForbidden() *GetUserAdjacentsForbidden {
	return &GetUserAdjacentsForbidden{}
}

/*GetUserAdjacentsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetUserAdjacentsForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetUserAdjacentsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsForbidden  %+v", 403, o.Payload)
}

func (o *GetUserAdjacentsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserAdjacentsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserAdjacentsNotFound creates a GetUserAdjacentsNotFound with default headers values
func NewGetUserAdjacentsNotFound() *GetUserAdjacentsNotFound {
	return &GetUserAdjacentsNotFound{}
}

/*GetUserAdjacentsNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetUserAdjacentsNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetUserAdjacentsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsNotFound  %+v", 404, o.Payload)
}

func (o *GetUserAdjacentsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserAdjacentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserAdjacentsRequestTimeout creates a GetUserAdjacentsRequestTimeout with default headers values
func NewGetUserAdjacentsRequestTimeout() *GetUserAdjacentsRequestTimeout {
	return &GetUserAdjacentsRequestTimeout{}
}

/*GetUserAdjacentsRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetUserAdjacentsRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetUserAdjacentsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetUserAdjacentsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserAdjacentsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserAdjacentsRequestEntityTooLarge creates a GetUserAdjacentsRequestEntityTooLarge with default headers values
func NewGetUserAdjacentsRequestEntityTooLarge() *GetUserAdjacentsRequestEntityTooLarge {
	return &GetUserAdjacentsRequestEntityTooLarge{}
}

/*GetUserAdjacentsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetUserAdjacentsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetUserAdjacentsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetUserAdjacentsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserAdjacentsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserAdjacentsUnsupportedMediaType creates a GetUserAdjacentsUnsupportedMediaType with default headers values
func NewGetUserAdjacentsUnsupportedMediaType() *GetUserAdjacentsUnsupportedMediaType {
	return &GetUserAdjacentsUnsupportedMediaType{}
}

/*GetUserAdjacentsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetUserAdjacentsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetUserAdjacentsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetUserAdjacentsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserAdjacentsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserAdjacentsTooManyRequests creates a GetUserAdjacentsTooManyRequests with default headers values
func NewGetUserAdjacentsTooManyRequests() *GetUserAdjacentsTooManyRequests {
	return &GetUserAdjacentsTooManyRequests{}
}

/*GetUserAdjacentsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetUserAdjacentsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetUserAdjacentsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetUserAdjacentsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserAdjacentsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserAdjacentsInternalServerError creates a GetUserAdjacentsInternalServerError with default headers values
func NewGetUserAdjacentsInternalServerError() *GetUserAdjacentsInternalServerError {
	return &GetUserAdjacentsInternalServerError{}
}

/*GetUserAdjacentsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetUserAdjacentsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetUserAdjacentsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUserAdjacentsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserAdjacentsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserAdjacentsServiceUnavailable creates a GetUserAdjacentsServiceUnavailable with default headers values
func NewGetUserAdjacentsServiceUnavailable() *GetUserAdjacentsServiceUnavailable {
	return &GetUserAdjacentsServiceUnavailable{}
}

/*GetUserAdjacentsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetUserAdjacentsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetUserAdjacentsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUserAdjacentsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserAdjacentsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserAdjacentsGatewayTimeout creates a GetUserAdjacentsGatewayTimeout with default headers values
func NewGetUserAdjacentsGatewayTimeout() *GetUserAdjacentsGatewayTimeout {
	return &GetUserAdjacentsGatewayTimeout{}
}

/*GetUserAdjacentsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetUserAdjacentsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetUserAdjacentsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/adjacents][%d] getUserAdjacentsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUserAdjacentsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserAdjacentsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
