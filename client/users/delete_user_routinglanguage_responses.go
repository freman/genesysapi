// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteUserRoutinglanguageReader is a Reader for the DeleteUserRoutinglanguage structure.
type DeleteUserRoutinglanguageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteUserRoutinglanguageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteUserRoutinglanguageNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteUserRoutinglanguageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteUserRoutinglanguageUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteUserRoutinglanguageForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteUserRoutinglanguageNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteUserRoutinglanguageRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteUserRoutinglanguageRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteUserRoutinglanguageUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteUserRoutinglanguageTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteUserRoutinglanguageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteUserRoutinglanguageServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteUserRoutinglanguageGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteUserRoutinglanguageNoContent creates a DeleteUserRoutinglanguageNoContent with default headers values
func NewDeleteUserRoutinglanguageNoContent() *DeleteUserRoutinglanguageNoContent {
	return &DeleteUserRoutinglanguageNoContent{}
}

/*
DeleteUserRoutinglanguageNoContent describes a response with status code 204, with default header values.

Language removed
*/
type DeleteUserRoutinglanguageNoContent struct {
}

// IsSuccess returns true when this delete user routinglanguage no content response has a 2xx status code
func (o *DeleteUserRoutinglanguageNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete user routinglanguage no content response has a 3xx status code
func (o *DeleteUserRoutinglanguageNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user routinglanguage no content response has a 4xx status code
func (o *DeleteUserRoutinglanguageNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete user routinglanguage no content response has a 5xx status code
func (o *DeleteUserRoutinglanguageNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user routinglanguage no content response a status code equal to that given
func (o *DeleteUserRoutinglanguageNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeleteUserRoutinglanguageNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routinglanguages/{languageId}][%d] deleteUserRoutinglanguageNoContent ", 204)
}

func (o *DeleteUserRoutinglanguageNoContent) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routinglanguages/{languageId}][%d] deleteUserRoutinglanguageNoContent ", 204)
}

func (o *DeleteUserRoutinglanguageNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteUserRoutinglanguageBadRequest creates a DeleteUserRoutinglanguageBadRequest with default headers values
func NewDeleteUserRoutinglanguageBadRequest() *DeleteUserRoutinglanguageBadRequest {
	return &DeleteUserRoutinglanguageBadRequest{}
}

/*
DeleteUserRoutinglanguageBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteUserRoutinglanguageBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user routinglanguage bad request response has a 2xx status code
func (o *DeleteUserRoutinglanguageBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user routinglanguage bad request response has a 3xx status code
func (o *DeleteUserRoutinglanguageBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user routinglanguage bad request response has a 4xx status code
func (o *DeleteUserRoutinglanguageBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user routinglanguage bad request response has a 5xx status code
func (o *DeleteUserRoutinglanguageBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user routinglanguage bad request response a status code equal to that given
func (o *DeleteUserRoutinglanguageBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteUserRoutinglanguageBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routinglanguages/{languageId}][%d] deleteUserRoutinglanguageBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteUserRoutinglanguageBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routinglanguages/{languageId}][%d] deleteUserRoutinglanguageBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteUserRoutinglanguageBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserRoutinglanguageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserRoutinglanguageUnauthorized creates a DeleteUserRoutinglanguageUnauthorized with default headers values
func NewDeleteUserRoutinglanguageUnauthorized() *DeleteUserRoutinglanguageUnauthorized {
	return &DeleteUserRoutinglanguageUnauthorized{}
}

/*
DeleteUserRoutinglanguageUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteUserRoutinglanguageUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user routinglanguage unauthorized response has a 2xx status code
func (o *DeleteUserRoutinglanguageUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user routinglanguage unauthorized response has a 3xx status code
func (o *DeleteUserRoutinglanguageUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user routinglanguage unauthorized response has a 4xx status code
func (o *DeleteUserRoutinglanguageUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user routinglanguage unauthorized response has a 5xx status code
func (o *DeleteUserRoutinglanguageUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user routinglanguage unauthorized response a status code equal to that given
func (o *DeleteUserRoutinglanguageUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteUserRoutinglanguageUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routinglanguages/{languageId}][%d] deleteUserRoutinglanguageUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteUserRoutinglanguageUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routinglanguages/{languageId}][%d] deleteUserRoutinglanguageUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteUserRoutinglanguageUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserRoutinglanguageUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserRoutinglanguageForbidden creates a DeleteUserRoutinglanguageForbidden with default headers values
func NewDeleteUserRoutinglanguageForbidden() *DeleteUserRoutinglanguageForbidden {
	return &DeleteUserRoutinglanguageForbidden{}
}

/*
DeleteUserRoutinglanguageForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type DeleteUserRoutinglanguageForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user routinglanguage forbidden response has a 2xx status code
func (o *DeleteUserRoutinglanguageForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user routinglanguage forbidden response has a 3xx status code
func (o *DeleteUserRoutinglanguageForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user routinglanguage forbidden response has a 4xx status code
func (o *DeleteUserRoutinglanguageForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user routinglanguage forbidden response has a 5xx status code
func (o *DeleteUserRoutinglanguageForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user routinglanguage forbidden response a status code equal to that given
func (o *DeleteUserRoutinglanguageForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteUserRoutinglanguageForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routinglanguages/{languageId}][%d] deleteUserRoutinglanguageForbidden  %+v", 403, o.Payload)
}

func (o *DeleteUserRoutinglanguageForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routinglanguages/{languageId}][%d] deleteUserRoutinglanguageForbidden  %+v", 403, o.Payload)
}

func (o *DeleteUserRoutinglanguageForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserRoutinglanguageForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserRoutinglanguageNotFound creates a DeleteUserRoutinglanguageNotFound with default headers values
func NewDeleteUserRoutinglanguageNotFound() *DeleteUserRoutinglanguageNotFound {
	return &DeleteUserRoutinglanguageNotFound{}
}

/*
DeleteUserRoutinglanguageNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type DeleteUserRoutinglanguageNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user routinglanguage not found response has a 2xx status code
func (o *DeleteUserRoutinglanguageNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user routinglanguage not found response has a 3xx status code
func (o *DeleteUserRoutinglanguageNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user routinglanguage not found response has a 4xx status code
func (o *DeleteUserRoutinglanguageNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user routinglanguage not found response has a 5xx status code
func (o *DeleteUserRoutinglanguageNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user routinglanguage not found response a status code equal to that given
func (o *DeleteUserRoutinglanguageNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteUserRoutinglanguageNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routinglanguages/{languageId}][%d] deleteUserRoutinglanguageNotFound  %+v", 404, o.Payload)
}

func (o *DeleteUserRoutinglanguageNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routinglanguages/{languageId}][%d] deleteUserRoutinglanguageNotFound  %+v", 404, o.Payload)
}

func (o *DeleteUserRoutinglanguageNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserRoutinglanguageNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserRoutinglanguageRequestTimeout creates a DeleteUserRoutinglanguageRequestTimeout with default headers values
func NewDeleteUserRoutinglanguageRequestTimeout() *DeleteUserRoutinglanguageRequestTimeout {
	return &DeleteUserRoutinglanguageRequestTimeout{}
}

/*
DeleteUserRoutinglanguageRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteUserRoutinglanguageRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user routinglanguage request timeout response has a 2xx status code
func (o *DeleteUserRoutinglanguageRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user routinglanguage request timeout response has a 3xx status code
func (o *DeleteUserRoutinglanguageRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user routinglanguage request timeout response has a 4xx status code
func (o *DeleteUserRoutinglanguageRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user routinglanguage request timeout response has a 5xx status code
func (o *DeleteUserRoutinglanguageRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user routinglanguage request timeout response a status code equal to that given
func (o *DeleteUserRoutinglanguageRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *DeleteUserRoutinglanguageRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routinglanguages/{languageId}][%d] deleteUserRoutinglanguageRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteUserRoutinglanguageRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routinglanguages/{languageId}][%d] deleteUserRoutinglanguageRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteUserRoutinglanguageRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserRoutinglanguageRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserRoutinglanguageRequestEntityTooLarge creates a DeleteUserRoutinglanguageRequestEntityTooLarge with default headers values
func NewDeleteUserRoutinglanguageRequestEntityTooLarge() *DeleteUserRoutinglanguageRequestEntityTooLarge {
	return &DeleteUserRoutinglanguageRequestEntityTooLarge{}
}

/*
DeleteUserRoutinglanguageRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type DeleteUserRoutinglanguageRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user routinglanguage request entity too large response has a 2xx status code
func (o *DeleteUserRoutinglanguageRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user routinglanguage request entity too large response has a 3xx status code
func (o *DeleteUserRoutinglanguageRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user routinglanguage request entity too large response has a 4xx status code
func (o *DeleteUserRoutinglanguageRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user routinglanguage request entity too large response has a 5xx status code
func (o *DeleteUserRoutinglanguageRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user routinglanguage request entity too large response a status code equal to that given
func (o *DeleteUserRoutinglanguageRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *DeleteUserRoutinglanguageRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routinglanguages/{languageId}][%d] deleteUserRoutinglanguageRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteUserRoutinglanguageRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routinglanguages/{languageId}][%d] deleteUserRoutinglanguageRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteUserRoutinglanguageRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserRoutinglanguageRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserRoutinglanguageUnsupportedMediaType creates a DeleteUserRoutinglanguageUnsupportedMediaType with default headers values
func NewDeleteUserRoutinglanguageUnsupportedMediaType() *DeleteUserRoutinglanguageUnsupportedMediaType {
	return &DeleteUserRoutinglanguageUnsupportedMediaType{}
}

/*
DeleteUserRoutinglanguageUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteUserRoutinglanguageUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user routinglanguage unsupported media type response has a 2xx status code
func (o *DeleteUserRoutinglanguageUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user routinglanguage unsupported media type response has a 3xx status code
func (o *DeleteUserRoutinglanguageUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user routinglanguage unsupported media type response has a 4xx status code
func (o *DeleteUserRoutinglanguageUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user routinglanguage unsupported media type response has a 5xx status code
func (o *DeleteUserRoutinglanguageUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user routinglanguage unsupported media type response a status code equal to that given
func (o *DeleteUserRoutinglanguageUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *DeleteUserRoutinglanguageUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routinglanguages/{languageId}][%d] deleteUserRoutinglanguageUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteUserRoutinglanguageUnsupportedMediaType) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routinglanguages/{languageId}][%d] deleteUserRoutinglanguageUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteUserRoutinglanguageUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserRoutinglanguageUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserRoutinglanguageTooManyRequests creates a DeleteUserRoutinglanguageTooManyRequests with default headers values
func NewDeleteUserRoutinglanguageTooManyRequests() *DeleteUserRoutinglanguageTooManyRequests {
	return &DeleteUserRoutinglanguageTooManyRequests{}
}

/*
DeleteUserRoutinglanguageTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteUserRoutinglanguageTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user routinglanguage too many requests response has a 2xx status code
func (o *DeleteUserRoutinglanguageTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user routinglanguage too many requests response has a 3xx status code
func (o *DeleteUserRoutinglanguageTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user routinglanguage too many requests response has a 4xx status code
func (o *DeleteUserRoutinglanguageTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user routinglanguage too many requests response has a 5xx status code
func (o *DeleteUserRoutinglanguageTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user routinglanguage too many requests response a status code equal to that given
func (o *DeleteUserRoutinglanguageTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteUserRoutinglanguageTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routinglanguages/{languageId}][%d] deleteUserRoutinglanguageTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteUserRoutinglanguageTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routinglanguages/{languageId}][%d] deleteUserRoutinglanguageTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteUserRoutinglanguageTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserRoutinglanguageTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserRoutinglanguageInternalServerError creates a DeleteUserRoutinglanguageInternalServerError with default headers values
func NewDeleteUserRoutinglanguageInternalServerError() *DeleteUserRoutinglanguageInternalServerError {
	return &DeleteUserRoutinglanguageInternalServerError{}
}

/*
DeleteUserRoutinglanguageInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteUserRoutinglanguageInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user routinglanguage internal server error response has a 2xx status code
func (o *DeleteUserRoutinglanguageInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user routinglanguage internal server error response has a 3xx status code
func (o *DeleteUserRoutinglanguageInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user routinglanguage internal server error response has a 4xx status code
func (o *DeleteUserRoutinglanguageInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete user routinglanguage internal server error response has a 5xx status code
func (o *DeleteUserRoutinglanguageInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete user routinglanguage internal server error response a status code equal to that given
func (o *DeleteUserRoutinglanguageInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteUserRoutinglanguageInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routinglanguages/{languageId}][%d] deleteUserRoutinglanguageInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteUserRoutinglanguageInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routinglanguages/{languageId}][%d] deleteUserRoutinglanguageInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteUserRoutinglanguageInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserRoutinglanguageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserRoutinglanguageServiceUnavailable creates a DeleteUserRoutinglanguageServiceUnavailable with default headers values
func NewDeleteUserRoutinglanguageServiceUnavailable() *DeleteUserRoutinglanguageServiceUnavailable {
	return &DeleteUserRoutinglanguageServiceUnavailable{}
}

/*
DeleteUserRoutinglanguageServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteUserRoutinglanguageServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user routinglanguage service unavailable response has a 2xx status code
func (o *DeleteUserRoutinglanguageServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user routinglanguage service unavailable response has a 3xx status code
func (o *DeleteUserRoutinglanguageServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user routinglanguage service unavailable response has a 4xx status code
func (o *DeleteUserRoutinglanguageServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete user routinglanguage service unavailable response has a 5xx status code
func (o *DeleteUserRoutinglanguageServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete user routinglanguage service unavailable response a status code equal to that given
func (o *DeleteUserRoutinglanguageServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *DeleteUserRoutinglanguageServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routinglanguages/{languageId}][%d] deleteUserRoutinglanguageServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteUserRoutinglanguageServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routinglanguages/{languageId}][%d] deleteUserRoutinglanguageServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteUserRoutinglanguageServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserRoutinglanguageServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserRoutinglanguageGatewayTimeout creates a DeleteUserRoutinglanguageGatewayTimeout with default headers values
func NewDeleteUserRoutinglanguageGatewayTimeout() *DeleteUserRoutinglanguageGatewayTimeout {
	return &DeleteUserRoutinglanguageGatewayTimeout{}
}

/*
DeleteUserRoutinglanguageGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type DeleteUserRoutinglanguageGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete user routinglanguage gateway timeout response has a 2xx status code
func (o *DeleteUserRoutinglanguageGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user routinglanguage gateway timeout response has a 3xx status code
func (o *DeleteUserRoutinglanguageGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user routinglanguage gateway timeout response has a 4xx status code
func (o *DeleteUserRoutinglanguageGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete user routinglanguage gateway timeout response has a 5xx status code
func (o *DeleteUserRoutinglanguageGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this delete user routinglanguage gateway timeout response a status code equal to that given
func (o *DeleteUserRoutinglanguageGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *DeleteUserRoutinglanguageGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routinglanguages/{languageId}][%d] deleteUserRoutinglanguageGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteUserRoutinglanguageGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{userId}/routinglanguages/{languageId}][%d] deleteUserRoutinglanguageGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteUserRoutinglanguageGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteUserRoutinglanguageGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
