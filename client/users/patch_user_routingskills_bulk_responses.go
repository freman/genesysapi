// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PatchUserRoutingskillsBulkReader is a Reader for the PatchUserRoutingskillsBulk structure.
type PatchUserRoutingskillsBulkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchUserRoutingskillsBulkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchUserRoutingskillsBulkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchUserRoutingskillsBulkBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchUserRoutingskillsBulkUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchUserRoutingskillsBulkForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchUserRoutingskillsBulkNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPatchUserRoutingskillsBulkRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPatchUserRoutingskillsBulkRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchUserRoutingskillsBulkUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPatchUserRoutingskillsBulkTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchUserRoutingskillsBulkInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPatchUserRoutingskillsBulkServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPatchUserRoutingskillsBulkGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchUserRoutingskillsBulkOK creates a PatchUserRoutingskillsBulkOK with default headers values
func NewPatchUserRoutingskillsBulkOK() *PatchUserRoutingskillsBulkOK {
	return &PatchUserRoutingskillsBulkOK{}
}

/*
PatchUserRoutingskillsBulkOK describes a response with status code 200, with default header values.

successful operation
*/
type PatchUserRoutingskillsBulkOK struct {
	Payload *models.UserSkillEntityListing
}

// IsSuccess returns true when this patch user routingskills bulk o k response has a 2xx status code
func (o *PatchUserRoutingskillsBulkOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch user routingskills bulk o k response has a 3xx status code
func (o *PatchUserRoutingskillsBulkOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch user routingskills bulk o k response has a 4xx status code
func (o *PatchUserRoutingskillsBulkOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch user routingskills bulk o k response has a 5xx status code
func (o *PatchUserRoutingskillsBulkOK) IsServerError() bool {
	return false
}

// IsCode returns true when this patch user routingskills bulk o k response a status code equal to that given
func (o *PatchUserRoutingskillsBulkOK) IsCode(code int) bool {
	return code == 200
}

func (o *PatchUserRoutingskillsBulkOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/routingskills/bulk][%d] patchUserRoutingskillsBulkOK  %+v", 200, o.Payload)
}

func (o *PatchUserRoutingskillsBulkOK) String() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/routingskills/bulk][%d] patchUserRoutingskillsBulkOK  %+v", 200, o.Payload)
}

func (o *PatchUserRoutingskillsBulkOK) GetPayload() *models.UserSkillEntityListing {
	return o.Payload
}

func (o *PatchUserRoutingskillsBulkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserSkillEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchUserRoutingskillsBulkBadRequest creates a PatchUserRoutingskillsBulkBadRequest with default headers values
func NewPatchUserRoutingskillsBulkBadRequest() *PatchUserRoutingskillsBulkBadRequest {
	return &PatchUserRoutingskillsBulkBadRequest{}
}

/*
PatchUserRoutingskillsBulkBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PatchUserRoutingskillsBulkBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch user routingskills bulk bad request response has a 2xx status code
func (o *PatchUserRoutingskillsBulkBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch user routingskills bulk bad request response has a 3xx status code
func (o *PatchUserRoutingskillsBulkBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch user routingskills bulk bad request response has a 4xx status code
func (o *PatchUserRoutingskillsBulkBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch user routingskills bulk bad request response has a 5xx status code
func (o *PatchUserRoutingskillsBulkBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this patch user routingskills bulk bad request response a status code equal to that given
func (o *PatchUserRoutingskillsBulkBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PatchUserRoutingskillsBulkBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/routingskills/bulk][%d] patchUserRoutingskillsBulkBadRequest  %+v", 400, o.Payload)
}

func (o *PatchUserRoutingskillsBulkBadRequest) String() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/routingskills/bulk][%d] patchUserRoutingskillsBulkBadRequest  %+v", 400, o.Payload)
}

func (o *PatchUserRoutingskillsBulkBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchUserRoutingskillsBulkBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchUserRoutingskillsBulkUnauthorized creates a PatchUserRoutingskillsBulkUnauthorized with default headers values
func NewPatchUserRoutingskillsBulkUnauthorized() *PatchUserRoutingskillsBulkUnauthorized {
	return &PatchUserRoutingskillsBulkUnauthorized{}
}

/*
PatchUserRoutingskillsBulkUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PatchUserRoutingskillsBulkUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch user routingskills bulk unauthorized response has a 2xx status code
func (o *PatchUserRoutingskillsBulkUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch user routingskills bulk unauthorized response has a 3xx status code
func (o *PatchUserRoutingskillsBulkUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch user routingskills bulk unauthorized response has a 4xx status code
func (o *PatchUserRoutingskillsBulkUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch user routingskills bulk unauthorized response has a 5xx status code
func (o *PatchUserRoutingskillsBulkUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this patch user routingskills bulk unauthorized response a status code equal to that given
func (o *PatchUserRoutingskillsBulkUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PatchUserRoutingskillsBulkUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/routingskills/bulk][%d] patchUserRoutingskillsBulkUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchUserRoutingskillsBulkUnauthorized) String() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/routingskills/bulk][%d] patchUserRoutingskillsBulkUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchUserRoutingskillsBulkUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchUserRoutingskillsBulkUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchUserRoutingskillsBulkForbidden creates a PatchUserRoutingskillsBulkForbidden with default headers values
func NewPatchUserRoutingskillsBulkForbidden() *PatchUserRoutingskillsBulkForbidden {
	return &PatchUserRoutingskillsBulkForbidden{}
}

/*
PatchUserRoutingskillsBulkForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PatchUserRoutingskillsBulkForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch user routingskills bulk forbidden response has a 2xx status code
func (o *PatchUserRoutingskillsBulkForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch user routingskills bulk forbidden response has a 3xx status code
func (o *PatchUserRoutingskillsBulkForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch user routingskills bulk forbidden response has a 4xx status code
func (o *PatchUserRoutingskillsBulkForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch user routingskills bulk forbidden response has a 5xx status code
func (o *PatchUserRoutingskillsBulkForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this patch user routingskills bulk forbidden response a status code equal to that given
func (o *PatchUserRoutingskillsBulkForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PatchUserRoutingskillsBulkForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/routingskills/bulk][%d] patchUserRoutingskillsBulkForbidden  %+v", 403, o.Payload)
}

func (o *PatchUserRoutingskillsBulkForbidden) String() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/routingskills/bulk][%d] patchUserRoutingskillsBulkForbidden  %+v", 403, o.Payload)
}

func (o *PatchUserRoutingskillsBulkForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchUserRoutingskillsBulkForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchUserRoutingskillsBulkNotFound creates a PatchUserRoutingskillsBulkNotFound with default headers values
func NewPatchUserRoutingskillsBulkNotFound() *PatchUserRoutingskillsBulkNotFound {
	return &PatchUserRoutingskillsBulkNotFound{}
}

/*
PatchUserRoutingskillsBulkNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PatchUserRoutingskillsBulkNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch user routingskills bulk not found response has a 2xx status code
func (o *PatchUserRoutingskillsBulkNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch user routingskills bulk not found response has a 3xx status code
func (o *PatchUserRoutingskillsBulkNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch user routingskills bulk not found response has a 4xx status code
func (o *PatchUserRoutingskillsBulkNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch user routingskills bulk not found response has a 5xx status code
func (o *PatchUserRoutingskillsBulkNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this patch user routingskills bulk not found response a status code equal to that given
func (o *PatchUserRoutingskillsBulkNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PatchUserRoutingskillsBulkNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/routingskills/bulk][%d] patchUserRoutingskillsBulkNotFound  %+v", 404, o.Payload)
}

func (o *PatchUserRoutingskillsBulkNotFound) String() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/routingskills/bulk][%d] patchUserRoutingskillsBulkNotFound  %+v", 404, o.Payload)
}

func (o *PatchUserRoutingskillsBulkNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchUserRoutingskillsBulkNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchUserRoutingskillsBulkRequestTimeout creates a PatchUserRoutingskillsBulkRequestTimeout with default headers values
func NewPatchUserRoutingskillsBulkRequestTimeout() *PatchUserRoutingskillsBulkRequestTimeout {
	return &PatchUserRoutingskillsBulkRequestTimeout{}
}

/*
PatchUserRoutingskillsBulkRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PatchUserRoutingskillsBulkRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch user routingskills bulk request timeout response has a 2xx status code
func (o *PatchUserRoutingskillsBulkRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch user routingskills bulk request timeout response has a 3xx status code
func (o *PatchUserRoutingskillsBulkRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch user routingskills bulk request timeout response has a 4xx status code
func (o *PatchUserRoutingskillsBulkRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch user routingskills bulk request timeout response has a 5xx status code
func (o *PatchUserRoutingskillsBulkRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this patch user routingskills bulk request timeout response a status code equal to that given
func (o *PatchUserRoutingskillsBulkRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PatchUserRoutingskillsBulkRequestTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/routingskills/bulk][%d] patchUserRoutingskillsBulkRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchUserRoutingskillsBulkRequestTimeout) String() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/routingskills/bulk][%d] patchUserRoutingskillsBulkRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchUserRoutingskillsBulkRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchUserRoutingskillsBulkRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchUserRoutingskillsBulkRequestEntityTooLarge creates a PatchUserRoutingskillsBulkRequestEntityTooLarge with default headers values
func NewPatchUserRoutingskillsBulkRequestEntityTooLarge() *PatchUserRoutingskillsBulkRequestEntityTooLarge {
	return &PatchUserRoutingskillsBulkRequestEntityTooLarge{}
}

/*
PatchUserRoutingskillsBulkRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PatchUserRoutingskillsBulkRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch user routingskills bulk request entity too large response has a 2xx status code
func (o *PatchUserRoutingskillsBulkRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch user routingskills bulk request entity too large response has a 3xx status code
func (o *PatchUserRoutingskillsBulkRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch user routingskills bulk request entity too large response has a 4xx status code
func (o *PatchUserRoutingskillsBulkRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch user routingskills bulk request entity too large response has a 5xx status code
func (o *PatchUserRoutingskillsBulkRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this patch user routingskills bulk request entity too large response a status code equal to that given
func (o *PatchUserRoutingskillsBulkRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PatchUserRoutingskillsBulkRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/routingskills/bulk][%d] patchUserRoutingskillsBulkRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchUserRoutingskillsBulkRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/routingskills/bulk][%d] patchUserRoutingskillsBulkRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchUserRoutingskillsBulkRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchUserRoutingskillsBulkRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchUserRoutingskillsBulkUnsupportedMediaType creates a PatchUserRoutingskillsBulkUnsupportedMediaType with default headers values
func NewPatchUserRoutingskillsBulkUnsupportedMediaType() *PatchUserRoutingskillsBulkUnsupportedMediaType {
	return &PatchUserRoutingskillsBulkUnsupportedMediaType{}
}

/*
PatchUserRoutingskillsBulkUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PatchUserRoutingskillsBulkUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch user routingskills bulk unsupported media type response has a 2xx status code
func (o *PatchUserRoutingskillsBulkUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch user routingskills bulk unsupported media type response has a 3xx status code
func (o *PatchUserRoutingskillsBulkUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch user routingskills bulk unsupported media type response has a 4xx status code
func (o *PatchUserRoutingskillsBulkUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch user routingskills bulk unsupported media type response has a 5xx status code
func (o *PatchUserRoutingskillsBulkUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this patch user routingskills bulk unsupported media type response a status code equal to that given
func (o *PatchUserRoutingskillsBulkUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PatchUserRoutingskillsBulkUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/routingskills/bulk][%d] patchUserRoutingskillsBulkUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchUserRoutingskillsBulkUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/routingskills/bulk][%d] patchUserRoutingskillsBulkUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchUserRoutingskillsBulkUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchUserRoutingskillsBulkUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchUserRoutingskillsBulkTooManyRequests creates a PatchUserRoutingskillsBulkTooManyRequests with default headers values
func NewPatchUserRoutingskillsBulkTooManyRequests() *PatchUserRoutingskillsBulkTooManyRequests {
	return &PatchUserRoutingskillsBulkTooManyRequests{}
}

/*
PatchUserRoutingskillsBulkTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PatchUserRoutingskillsBulkTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch user routingskills bulk too many requests response has a 2xx status code
func (o *PatchUserRoutingskillsBulkTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch user routingskills bulk too many requests response has a 3xx status code
func (o *PatchUserRoutingskillsBulkTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch user routingskills bulk too many requests response has a 4xx status code
func (o *PatchUserRoutingskillsBulkTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch user routingskills bulk too many requests response has a 5xx status code
func (o *PatchUserRoutingskillsBulkTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this patch user routingskills bulk too many requests response a status code equal to that given
func (o *PatchUserRoutingskillsBulkTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PatchUserRoutingskillsBulkTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/routingskills/bulk][%d] patchUserRoutingskillsBulkTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchUserRoutingskillsBulkTooManyRequests) String() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/routingskills/bulk][%d] patchUserRoutingskillsBulkTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchUserRoutingskillsBulkTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchUserRoutingskillsBulkTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchUserRoutingskillsBulkInternalServerError creates a PatchUserRoutingskillsBulkInternalServerError with default headers values
func NewPatchUserRoutingskillsBulkInternalServerError() *PatchUserRoutingskillsBulkInternalServerError {
	return &PatchUserRoutingskillsBulkInternalServerError{}
}

/*
PatchUserRoutingskillsBulkInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PatchUserRoutingskillsBulkInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch user routingskills bulk internal server error response has a 2xx status code
func (o *PatchUserRoutingskillsBulkInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch user routingskills bulk internal server error response has a 3xx status code
func (o *PatchUserRoutingskillsBulkInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch user routingskills bulk internal server error response has a 4xx status code
func (o *PatchUserRoutingskillsBulkInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch user routingskills bulk internal server error response has a 5xx status code
func (o *PatchUserRoutingskillsBulkInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this patch user routingskills bulk internal server error response a status code equal to that given
func (o *PatchUserRoutingskillsBulkInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PatchUserRoutingskillsBulkInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/routingskills/bulk][%d] patchUserRoutingskillsBulkInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchUserRoutingskillsBulkInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/routingskills/bulk][%d] patchUserRoutingskillsBulkInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchUserRoutingskillsBulkInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchUserRoutingskillsBulkInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchUserRoutingskillsBulkServiceUnavailable creates a PatchUserRoutingskillsBulkServiceUnavailable with default headers values
func NewPatchUserRoutingskillsBulkServiceUnavailable() *PatchUserRoutingskillsBulkServiceUnavailable {
	return &PatchUserRoutingskillsBulkServiceUnavailable{}
}

/*
PatchUserRoutingskillsBulkServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PatchUserRoutingskillsBulkServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch user routingskills bulk service unavailable response has a 2xx status code
func (o *PatchUserRoutingskillsBulkServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch user routingskills bulk service unavailable response has a 3xx status code
func (o *PatchUserRoutingskillsBulkServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch user routingskills bulk service unavailable response has a 4xx status code
func (o *PatchUserRoutingskillsBulkServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch user routingskills bulk service unavailable response has a 5xx status code
func (o *PatchUserRoutingskillsBulkServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this patch user routingskills bulk service unavailable response a status code equal to that given
func (o *PatchUserRoutingskillsBulkServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PatchUserRoutingskillsBulkServiceUnavailable) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/routingskills/bulk][%d] patchUserRoutingskillsBulkServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchUserRoutingskillsBulkServiceUnavailable) String() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/routingskills/bulk][%d] patchUserRoutingskillsBulkServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchUserRoutingskillsBulkServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchUserRoutingskillsBulkServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchUserRoutingskillsBulkGatewayTimeout creates a PatchUserRoutingskillsBulkGatewayTimeout with default headers values
func NewPatchUserRoutingskillsBulkGatewayTimeout() *PatchUserRoutingskillsBulkGatewayTimeout {
	return &PatchUserRoutingskillsBulkGatewayTimeout{}
}

/*
PatchUserRoutingskillsBulkGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PatchUserRoutingskillsBulkGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch user routingskills bulk gateway timeout response has a 2xx status code
func (o *PatchUserRoutingskillsBulkGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch user routingskills bulk gateway timeout response has a 3xx status code
func (o *PatchUserRoutingskillsBulkGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch user routingskills bulk gateway timeout response has a 4xx status code
func (o *PatchUserRoutingskillsBulkGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch user routingskills bulk gateway timeout response has a 5xx status code
func (o *PatchUserRoutingskillsBulkGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this patch user routingskills bulk gateway timeout response a status code equal to that given
func (o *PatchUserRoutingskillsBulkGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PatchUserRoutingskillsBulkGatewayTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/routingskills/bulk][%d] patchUserRoutingskillsBulkGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchUserRoutingskillsBulkGatewayTimeout) String() string {
	return fmt.Sprintf("[PATCH /api/v2/users/{userId}/routingskills/bulk][%d] patchUserRoutingskillsBulkGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchUserRoutingskillsBulkGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchUserRoutingskillsBulkGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
