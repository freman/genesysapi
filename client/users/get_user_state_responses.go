// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetUserStateReader is a Reader for the GetUserState structure.
type GetUserStateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserStateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserStateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUserStateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetUserStateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUserStateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUserStateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetUserStateRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetUserStateRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetUserStateUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetUserStateTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUserStateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetUserStateServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetUserStateGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUserStateOK creates a GetUserStateOK with default headers values
func NewGetUserStateOK() *GetUserStateOK {
	return &GetUserStateOK{}
}

/*GetUserStateOK handles this case with default header values.

successful operation
*/
type GetUserStateOK struct {
	Payload *models.UserState
}

func (o *GetUserStateOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/state][%d] getUserStateOK  %+v", 200, o.Payload)
}

func (o *GetUserStateOK) GetPayload() *models.UserState {
	return o.Payload
}

func (o *GetUserStateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserState)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserStateBadRequest creates a GetUserStateBadRequest with default headers values
func NewGetUserStateBadRequest() *GetUserStateBadRequest {
	return &GetUserStateBadRequest{}
}

/*GetUserStateBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetUserStateBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetUserStateBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/state][%d] getUserStateBadRequest  %+v", 400, o.Payload)
}

func (o *GetUserStateBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserStateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserStateUnauthorized creates a GetUserStateUnauthorized with default headers values
func NewGetUserStateUnauthorized() *GetUserStateUnauthorized {
	return &GetUserStateUnauthorized{}
}

/*GetUserStateUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetUserStateUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetUserStateUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/state][%d] getUserStateUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUserStateUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserStateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserStateForbidden creates a GetUserStateForbidden with default headers values
func NewGetUserStateForbidden() *GetUserStateForbidden {
	return &GetUserStateForbidden{}
}

/*GetUserStateForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetUserStateForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetUserStateForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/state][%d] getUserStateForbidden  %+v", 403, o.Payload)
}

func (o *GetUserStateForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserStateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserStateNotFound creates a GetUserStateNotFound with default headers values
func NewGetUserStateNotFound() *GetUserStateNotFound {
	return &GetUserStateNotFound{}
}

/*GetUserStateNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetUserStateNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetUserStateNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/state][%d] getUserStateNotFound  %+v", 404, o.Payload)
}

func (o *GetUserStateNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserStateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserStateRequestTimeout creates a GetUserStateRequestTimeout with default headers values
func NewGetUserStateRequestTimeout() *GetUserStateRequestTimeout {
	return &GetUserStateRequestTimeout{}
}

/*GetUserStateRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetUserStateRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetUserStateRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/state][%d] getUserStateRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetUserStateRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserStateRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserStateRequestEntityTooLarge creates a GetUserStateRequestEntityTooLarge with default headers values
func NewGetUserStateRequestEntityTooLarge() *GetUserStateRequestEntityTooLarge {
	return &GetUserStateRequestEntityTooLarge{}
}

/*GetUserStateRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetUserStateRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetUserStateRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/state][%d] getUserStateRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetUserStateRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserStateRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserStateUnsupportedMediaType creates a GetUserStateUnsupportedMediaType with default headers values
func NewGetUserStateUnsupportedMediaType() *GetUserStateUnsupportedMediaType {
	return &GetUserStateUnsupportedMediaType{}
}

/*GetUserStateUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetUserStateUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetUserStateUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/state][%d] getUserStateUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetUserStateUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserStateUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserStateTooManyRequests creates a GetUserStateTooManyRequests with default headers values
func NewGetUserStateTooManyRequests() *GetUserStateTooManyRequests {
	return &GetUserStateTooManyRequests{}
}

/*GetUserStateTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetUserStateTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetUserStateTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/state][%d] getUserStateTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetUserStateTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserStateTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserStateInternalServerError creates a GetUserStateInternalServerError with default headers values
func NewGetUserStateInternalServerError() *GetUserStateInternalServerError {
	return &GetUserStateInternalServerError{}
}

/*GetUserStateInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetUserStateInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetUserStateInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/state][%d] getUserStateInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUserStateInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserStateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserStateServiceUnavailable creates a GetUserStateServiceUnavailable with default headers values
func NewGetUserStateServiceUnavailable() *GetUserStateServiceUnavailable {
	return &GetUserStateServiceUnavailable{}
}

/*GetUserStateServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetUserStateServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetUserStateServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/state][%d] getUserStateServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUserStateServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserStateServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserStateGatewayTimeout creates a GetUserStateGatewayTimeout with default headers values
func NewGetUserStateGatewayTimeout() *GetUserStateGatewayTimeout {
	return &GetUserStateGatewayTimeout{}
}

/*GetUserStateGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetUserStateGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetUserStateGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{userId}/state][%d] getUserStateGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUserStateGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserStateGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
