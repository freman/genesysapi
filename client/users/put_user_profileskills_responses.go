// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutUserProfileskillsReader is a Reader for the PutUserProfileskills structure.
type PutUserProfileskillsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutUserProfileskillsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutUserProfileskillsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutUserProfileskillsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutUserProfileskillsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutUserProfileskillsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutUserProfileskillsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutUserProfileskillsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutUserProfileskillsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutUserProfileskillsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutUserProfileskillsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutUserProfileskillsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutUserProfileskillsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutUserProfileskillsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutUserProfileskillsOK creates a PutUserProfileskillsOK with default headers values
func NewPutUserProfileskillsOK() *PutUserProfileskillsOK {
	return &PutUserProfileskillsOK{}
}

/*
PutUserProfileskillsOK describes a response with status code 200, with default header values.

successful operation
*/
type PutUserProfileskillsOK struct {
	Payload []string
}

// IsSuccess returns true when this put user profileskills o k response has a 2xx status code
func (o *PutUserProfileskillsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put user profileskills o k response has a 3xx status code
func (o *PutUserProfileskillsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user profileskills o k response has a 4xx status code
func (o *PutUserProfileskillsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put user profileskills o k response has a 5xx status code
func (o *PutUserProfileskillsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put user profileskills o k response a status code equal to that given
func (o *PutUserProfileskillsOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutUserProfileskillsOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/profileskills][%d] putUserProfileskillsOK  %+v", 200, o.Payload)
}

func (o *PutUserProfileskillsOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/profileskills][%d] putUserProfileskillsOK  %+v", 200, o.Payload)
}

func (o *PutUserProfileskillsOK) GetPayload() []string {
	return o.Payload
}

func (o *PutUserProfileskillsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserProfileskillsBadRequest creates a PutUserProfileskillsBadRequest with default headers values
func NewPutUserProfileskillsBadRequest() *PutUserProfileskillsBadRequest {
	return &PutUserProfileskillsBadRequest{}
}

/*
PutUserProfileskillsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutUserProfileskillsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user profileskills bad request response has a 2xx status code
func (o *PutUserProfileskillsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user profileskills bad request response has a 3xx status code
func (o *PutUserProfileskillsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user profileskills bad request response has a 4xx status code
func (o *PutUserProfileskillsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put user profileskills bad request response has a 5xx status code
func (o *PutUserProfileskillsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put user profileskills bad request response a status code equal to that given
func (o *PutUserProfileskillsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutUserProfileskillsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/profileskills][%d] putUserProfileskillsBadRequest  %+v", 400, o.Payload)
}

func (o *PutUserProfileskillsBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/profileskills][%d] putUserProfileskillsBadRequest  %+v", 400, o.Payload)
}

func (o *PutUserProfileskillsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserProfileskillsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserProfileskillsUnauthorized creates a PutUserProfileskillsUnauthorized with default headers values
func NewPutUserProfileskillsUnauthorized() *PutUserProfileskillsUnauthorized {
	return &PutUserProfileskillsUnauthorized{}
}

/*
PutUserProfileskillsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutUserProfileskillsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user profileskills unauthorized response has a 2xx status code
func (o *PutUserProfileskillsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user profileskills unauthorized response has a 3xx status code
func (o *PutUserProfileskillsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user profileskills unauthorized response has a 4xx status code
func (o *PutUserProfileskillsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put user profileskills unauthorized response has a 5xx status code
func (o *PutUserProfileskillsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put user profileskills unauthorized response a status code equal to that given
func (o *PutUserProfileskillsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutUserProfileskillsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/profileskills][%d] putUserProfileskillsUnauthorized  %+v", 401, o.Payload)
}

func (o *PutUserProfileskillsUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/profileskills][%d] putUserProfileskillsUnauthorized  %+v", 401, o.Payload)
}

func (o *PutUserProfileskillsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserProfileskillsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserProfileskillsForbidden creates a PutUserProfileskillsForbidden with default headers values
func NewPutUserProfileskillsForbidden() *PutUserProfileskillsForbidden {
	return &PutUserProfileskillsForbidden{}
}

/*
PutUserProfileskillsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutUserProfileskillsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user profileskills forbidden response has a 2xx status code
func (o *PutUserProfileskillsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user profileskills forbidden response has a 3xx status code
func (o *PutUserProfileskillsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user profileskills forbidden response has a 4xx status code
func (o *PutUserProfileskillsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put user profileskills forbidden response has a 5xx status code
func (o *PutUserProfileskillsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put user profileskills forbidden response a status code equal to that given
func (o *PutUserProfileskillsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutUserProfileskillsForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/profileskills][%d] putUserProfileskillsForbidden  %+v", 403, o.Payload)
}

func (o *PutUserProfileskillsForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/profileskills][%d] putUserProfileskillsForbidden  %+v", 403, o.Payload)
}

func (o *PutUserProfileskillsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserProfileskillsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserProfileskillsNotFound creates a PutUserProfileskillsNotFound with default headers values
func NewPutUserProfileskillsNotFound() *PutUserProfileskillsNotFound {
	return &PutUserProfileskillsNotFound{}
}

/*
PutUserProfileskillsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutUserProfileskillsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user profileskills not found response has a 2xx status code
func (o *PutUserProfileskillsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user profileskills not found response has a 3xx status code
func (o *PutUserProfileskillsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user profileskills not found response has a 4xx status code
func (o *PutUserProfileskillsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put user profileskills not found response has a 5xx status code
func (o *PutUserProfileskillsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put user profileskills not found response a status code equal to that given
func (o *PutUserProfileskillsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutUserProfileskillsNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/profileskills][%d] putUserProfileskillsNotFound  %+v", 404, o.Payload)
}

func (o *PutUserProfileskillsNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/profileskills][%d] putUserProfileskillsNotFound  %+v", 404, o.Payload)
}

func (o *PutUserProfileskillsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserProfileskillsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserProfileskillsRequestTimeout creates a PutUserProfileskillsRequestTimeout with default headers values
func NewPutUserProfileskillsRequestTimeout() *PutUserProfileskillsRequestTimeout {
	return &PutUserProfileskillsRequestTimeout{}
}

/*
PutUserProfileskillsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutUserProfileskillsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user profileskills request timeout response has a 2xx status code
func (o *PutUserProfileskillsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user profileskills request timeout response has a 3xx status code
func (o *PutUserProfileskillsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user profileskills request timeout response has a 4xx status code
func (o *PutUserProfileskillsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put user profileskills request timeout response has a 5xx status code
func (o *PutUserProfileskillsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put user profileskills request timeout response a status code equal to that given
func (o *PutUserProfileskillsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutUserProfileskillsRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/profileskills][%d] putUserProfileskillsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutUserProfileskillsRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/profileskills][%d] putUserProfileskillsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutUserProfileskillsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserProfileskillsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserProfileskillsRequestEntityTooLarge creates a PutUserProfileskillsRequestEntityTooLarge with default headers values
func NewPutUserProfileskillsRequestEntityTooLarge() *PutUserProfileskillsRequestEntityTooLarge {
	return &PutUserProfileskillsRequestEntityTooLarge{}
}

/*
PutUserProfileskillsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PutUserProfileskillsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user profileskills request entity too large response has a 2xx status code
func (o *PutUserProfileskillsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user profileskills request entity too large response has a 3xx status code
func (o *PutUserProfileskillsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user profileskills request entity too large response has a 4xx status code
func (o *PutUserProfileskillsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put user profileskills request entity too large response has a 5xx status code
func (o *PutUserProfileskillsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put user profileskills request entity too large response a status code equal to that given
func (o *PutUserProfileskillsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutUserProfileskillsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/profileskills][%d] putUserProfileskillsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutUserProfileskillsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/profileskills][%d] putUserProfileskillsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutUserProfileskillsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserProfileskillsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserProfileskillsUnsupportedMediaType creates a PutUserProfileskillsUnsupportedMediaType with default headers values
func NewPutUserProfileskillsUnsupportedMediaType() *PutUserProfileskillsUnsupportedMediaType {
	return &PutUserProfileskillsUnsupportedMediaType{}
}

/*
PutUserProfileskillsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutUserProfileskillsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user profileskills unsupported media type response has a 2xx status code
func (o *PutUserProfileskillsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user profileskills unsupported media type response has a 3xx status code
func (o *PutUserProfileskillsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user profileskills unsupported media type response has a 4xx status code
func (o *PutUserProfileskillsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put user profileskills unsupported media type response has a 5xx status code
func (o *PutUserProfileskillsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put user profileskills unsupported media type response a status code equal to that given
func (o *PutUserProfileskillsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutUserProfileskillsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/profileskills][%d] putUserProfileskillsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutUserProfileskillsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/profileskills][%d] putUserProfileskillsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutUserProfileskillsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserProfileskillsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserProfileskillsTooManyRequests creates a PutUserProfileskillsTooManyRequests with default headers values
func NewPutUserProfileskillsTooManyRequests() *PutUserProfileskillsTooManyRequests {
	return &PutUserProfileskillsTooManyRequests{}
}

/*
PutUserProfileskillsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutUserProfileskillsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user profileskills too many requests response has a 2xx status code
func (o *PutUserProfileskillsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user profileskills too many requests response has a 3xx status code
func (o *PutUserProfileskillsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user profileskills too many requests response has a 4xx status code
func (o *PutUserProfileskillsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put user profileskills too many requests response has a 5xx status code
func (o *PutUserProfileskillsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put user profileskills too many requests response a status code equal to that given
func (o *PutUserProfileskillsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutUserProfileskillsTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/profileskills][%d] putUserProfileskillsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutUserProfileskillsTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/profileskills][%d] putUserProfileskillsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutUserProfileskillsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserProfileskillsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserProfileskillsInternalServerError creates a PutUserProfileskillsInternalServerError with default headers values
func NewPutUserProfileskillsInternalServerError() *PutUserProfileskillsInternalServerError {
	return &PutUserProfileskillsInternalServerError{}
}

/*
PutUserProfileskillsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutUserProfileskillsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user profileskills internal server error response has a 2xx status code
func (o *PutUserProfileskillsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user profileskills internal server error response has a 3xx status code
func (o *PutUserProfileskillsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user profileskills internal server error response has a 4xx status code
func (o *PutUserProfileskillsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put user profileskills internal server error response has a 5xx status code
func (o *PutUserProfileskillsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put user profileskills internal server error response a status code equal to that given
func (o *PutUserProfileskillsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutUserProfileskillsInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/profileskills][%d] putUserProfileskillsInternalServerError  %+v", 500, o.Payload)
}

func (o *PutUserProfileskillsInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/profileskills][%d] putUserProfileskillsInternalServerError  %+v", 500, o.Payload)
}

func (o *PutUserProfileskillsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserProfileskillsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserProfileskillsServiceUnavailable creates a PutUserProfileskillsServiceUnavailable with default headers values
func NewPutUserProfileskillsServiceUnavailable() *PutUserProfileskillsServiceUnavailable {
	return &PutUserProfileskillsServiceUnavailable{}
}

/*
PutUserProfileskillsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutUserProfileskillsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user profileskills service unavailable response has a 2xx status code
func (o *PutUserProfileskillsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user profileskills service unavailable response has a 3xx status code
func (o *PutUserProfileskillsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user profileskills service unavailable response has a 4xx status code
func (o *PutUserProfileskillsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put user profileskills service unavailable response has a 5xx status code
func (o *PutUserProfileskillsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put user profileskills service unavailable response a status code equal to that given
func (o *PutUserProfileskillsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutUserProfileskillsServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/profileskills][%d] putUserProfileskillsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutUserProfileskillsServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/profileskills][%d] putUserProfileskillsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutUserProfileskillsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserProfileskillsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserProfileskillsGatewayTimeout creates a PutUserProfileskillsGatewayTimeout with default headers values
func NewPutUserProfileskillsGatewayTimeout() *PutUserProfileskillsGatewayTimeout {
	return &PutUserProfileskillsGatewayTimeout{}
}

/*
PutUserProfileskillsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutUserProfileskillsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user profileskills gateway timeout response has a 2xx status code
func (o *PutUserProfileskillsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user profileskills gateway timeout response has a 3xx status code
func (o *PutUserProfileskillsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user profileskills gateway timeout response has a 4xx status code
func (o *PutUserProfileskillsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put user profileskills gateway timeout response has a 5xx status code
func (o *PutUserProfileskillsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put user profileskills gateway timeout response a status code equal to that given
func (o *PutUserProfileskillsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutUserProfileskillsGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/profileskills][%d] putUserProfileskillsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutUserProfileskillsGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/profileskills][%d] putUserProfileskillsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutUserProfileskillsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserProfileskillsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
