// Code generated by go-swagger; DO NOT EDIT.

package notifications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetNotificationsChannelsReader is a Reader for the GetNotificationsChannels structure.
type GetNotificationsChannelsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNotificationsChannelsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNotificationsChannelsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetNotificationsChannelsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetNotificationsChannelsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetNotificationsChannelsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetNotificationsChannelsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetNotificationsChannelsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetNotificationsChannelsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetNotificationsChannelsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetNotificationsChannelsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetNotificationsChannelsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetNotificationsChannelsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetNotificationsChannelsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetNotificationsChannelsOK creates a GetNotificationsChannelsOK with default headers values
func NewGetNotificationsChannelsOK() *GetNotificationsChannelsOK {
	return &GetNotificationsChannelsOK{}
}

/*
GetNotificationsChannelsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetNotificationsChannelsOK struct {
	Payload *models.ChannelEntityListing
}

// IsSuccess returns true when this get notifications channels o k response has a 2xx status code
func (o *GetNotificationsChannelsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get notifications channels o k response has a 3xx status code
func (o *GetNotificationsChannelsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get notifications channels o k response has a 4xx status code
func (o *GetNotificationsChannelsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get notifications channels o k response has a 5xx status code
func (o *GetNotificationsChannelsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get notifications channels o k response a status code equal to that given
func (o *GetNotificationsChannelsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetNotificationsChannelsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/notifications/channels][%d] getNotificationsChannelsOK  %+v", 200, o.Payload)
}

func (o *GetNotificationsChannelsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/notifications/channels][%d] getNotificationsChannelsOK  %+v", 200, o.Payload)
}

func (o *GetNotificationsChannelsOK) GetPayload() *models.ChannelEntityListing {
	return o.Payload
}

func (o *GetNotificationsChannelsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChannelEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNotificationsChannelsBadRequest creates a GetNotificationsChannelsBadRequest with default headers values
func NewGetNotificationsChannelsBadRequest() *GetNotificationsChannelsBadRequest {
	return &GetNotificationsChannelsBadRequest{}
}

/*
GetNotificationsChannelsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetNotificationsChannelsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get notifications channels bad request response has a 2xx status code
func (o *GetNotificationsChannelsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get notifications channels bad request response has a 3xx status code
func (o *GetNotificationsChannelsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get notifications channels bad request response has a 4xx status code
func (o *GetNotificationsChannelsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get notifications channels bad request response has a 5xx status code
func (o *GetNotificationsChannelsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get notifications channels bad request response a status code equal to that given
func (o *GetNotificationsChannelsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetNotificationsChannelsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/notifications/channels][%d] getNotificationsChannelsBadRequest  %+v", 400, o.Payload)
}

func (o *GetNotificationsChannelsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/notifications/channels][%d] getNotificationsChannelsBadRequest  %+v", 400, o.Payload)
}

func (o *GetNotificationsChannelsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetNotificationsChannelsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNotificationsChannelsUnauthorized creates a GetNotificationsChannelsUnauthorized with default headers values
func NewGetNotificationsChannelsUnauthorized() *GetNotificationsChannelsUnauthorized {
	return &GetNotificationsChannelsUnauthorized{}
}

/*
GetNotificationsChannelsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetNotificationsChannelsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get notifications channels unauthorized response has a 2xx status code
func (o *GetNotificationsChannelsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get notifications channels unauthorized response has a 3xx status code
func (o *GetNotificationsChannelsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get notifications channels unauthorized response has a 4xx status code
func (o *GetNotificationsChannelsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get notifications channels unauthorized response has a 5xx status code
func (o *GetNotificationsChannelsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get notifications channels unauthorized response a status code equal to that given
func (o *GetNotificationsChannelsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetNotificationsChannelsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/notifications/channels][%d] getNotificationsChannelsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetNotificationsChannelsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/notifications/channels][%d] getNotificationsChannelsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetNotificationsChannelsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetNotificationsChannelsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNotificationsChannelsForbidden creates a GetNotificationsChannelsForbidden with default headers values
func NewGetNotificationsChannelsForbidden() *GetNotificationsChannelsForbidden {
	return &GetNotificationsChannelsForbidden{}
}

/*
GetNotificationsChannelsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetNotificationsChannelsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get notifications channels forbidden response has a 2xx status code
func (o *GetNotificationsChannelsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get notifications channels forbidden response has a 3xx status code
func (o *GetNotificationsChannelsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get notifications channels forbidden response has a 4xx status code
func (o *GetNotificationsChannelsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get notifications channels forbidden response has a 5xx status code
func (o *GetNotificationsChannelsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get notifications channels forbidden response a status code equal to that given
func (o *GetNotificationsChannelsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetNotificationsChannelsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/notifications/channels][%d] getNotificationsChannelsForbidden  %+v", 403, o.Payload)
}

func (o *GetNotificationsChannelsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/notifications/channels][%d] getNotificationsChannelsForbidden  %+v", 403, o.Payload)
}

func (o *GetNotificationsChannelsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetNotificationsChannelsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNotificationsChannelsNotFound creates a GetNotificationsChannelsNotFound with default headers values
func NewGetNotificationsChannelsNotFound() *GetNotificationsChannelsNotFound {
	return &GetNotificationsChannelsNotFound{}
}

/*
GetNotificationsChannelsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetNotificationsChannelsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get notifications channels not found response has a 2xx status code
func (o *GetNotificationsChannelsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get notifications channels not found response has a 3xx status code
func (o *GetNotificationsChannelsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get notifications channels not found response has a 4xx status code
func (o *GetNotificationsChannelsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get notifications channels not found response has a 5xx status code
func (o *GetNotificationsChannelsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get notifications channels not found response a status code equal to that given
func (o *GetNotificationsChannelsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetNotificationsChannelsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/notifications/channels][%d] getNotificationsChannelsNotFound  %+v", 404, o.Payload)
}

func (o *GetNotificationsChannelsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/notifications/channels][%d] getNotificationsChannelsNotFound  %+v", 404, o.Payload)
}

func (o *GetNotificationsChannelsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetNotificationsChannelsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNotificationsChannelsRequestTimeout creates a GetNotificationsChannelsRequestTimeout with default headers values
func NewGetNotificationsChannelsRequestTimeout() *GetNotificationsChannelsRequestTimeout {
	return &GetNotificationsChannelsRequestTimeout{}
}

/*
GetNotificationsChannelsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetNotificationsChannelsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get notifications channels request timeout response has a 2xx status code
func (o *GetNotificationsChannelsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get notifications channels request timeout response has a 3xx status code
func (o *GetNotificationsChannelsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get notifications channels request timeout response has a 4xx status code
func (o *GetNotificationsChannelsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get notifications channels request timeout response has a 5xx status code
func (o *GetNotificationsChannelsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get notifications channels request timeout response a status code equal to that given
func (o *GetNotificationsChannelsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetNotificationsChannelsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/notifications/channels][%d] getNotificationsChannelsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetNotificationsChannelsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/notifications/channels][%d] getNotificationsChannelsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetNotificationsChannelsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetNotificationsChannelsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNotificationsChannelsRequestEntityTooLarge creates a GetNotificationsChannelsRequestEntityTooLarge with default headers values
func NewGetNotificationsChannelsRequestEntityTooLarge() *GetNotificationsChannelsRequestEntityTooLarge {
	return &GetNotificationsChannelsRequestEntityTooLarge{}
}

/*
GetNotificationsChannelsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetNotificationsChannelsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get notifications channels request entity too large response has a 2xx status code
func (o *GetNotificationsChannelsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get notifications channels request entity too large response has a 3xx status code
func (o *GetNotificationsChannelsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get notifications channels request entity too large response has a 4xx status code
func (o *GetNotificationsChannelsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get notifications channels request entity too large response has a 5xx status code
func (o *GetNotificationsChannelsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get notifications channels request entity too large response a status code equal to that given
func (o *GetNotificationsChannelsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetNotificationsChannelsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/notifications/channels][%d] getNotificationsChannelsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetNotificationsChannelsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/notifications/channels][%d] getNotificationsChannelsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetNotificationsChannelsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetNotificationsChannelsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNotificationsChannelsUnsupportedMediaType creates a GetNotificationsChannelsUnsupportedMediaType with default headers values
func NewGetNotificationsChannelsUnsupportedMediaType() *GetNotificationsChannelsUnsupportedMediaType {
	return &GetNotificationsChannelsUnsupportedMediaType{}
}

/*
GetNotificationsChannelsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetNotificationsChannelsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get notifications channels unsupported media type response has a 2xx status code
func (o *GetNotificationsChannelsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get notifications channels unsupported media type response has a 3xx status code
func (o *GetNotificationsChannelsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get notifications channels unsupported media type response has a 4xx status code
func (o *GetNotificationsChannelsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get notifications channels unsupported media type response has a 5xx status code
func (o *GetNotificationsChannelsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get notifications channels unsupported media type response a status code equal to that given
func (o *GetNotificationsChannelsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetNotificationsChannelsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/notifications/channels][%d] getNotificationsChannelsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetNotificationsChannelsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/notifications/channels][%d] getNotificationsChannelsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetNotificationsChannelsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetNotificationsChannelsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNotificationsChannelsTooManyRequests creates a GetNotificationsChannelsTooManyRequests with default headers values
func NewGetNotificationsChannelsTooManyRequests() *GetNotificationsChannelsTooManyRequests {
	return &GetNotificationsChannelsTooManyRequests{}
}

/*
GetNotificationsChannelsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetNotificationsChannelsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get notifications channels too many requests response has a 2xx status code
func (o *GetNotificationsChannelsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get notifications channels too many requests response has a 3xx status code
func (o *GetNotificationsChannelsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get notifications channels too many requests response has a 4xx status code
func (o *GetNotificationsChannelsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get notifications channels too many requests response has a 5xx status code
func (o *GetNotificationsChannelsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get notifications channels too many requests response a status code equal to that given
func (o *GetNotificationsChannelsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetNotificationsChannelsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/notifications/channels][%d] getNotificationsChannelsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetNotificationsChannelsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/notifications/channels][%d] getNotificationsChannelsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetNotificationsChannelsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetNotificationsChannelsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNotificationsChannelsInternalServerError creates a GetNotificationsChannelsInternalServerError with default headers values
func NewGetNotificationsChannelsInternalServerError() *GetNotificationsChannelsInternalServerError {
	return &GetNotificationsChannelsInternalServerError{}
}

/*
GetNotificationsChannelsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetNotificationsChannelsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get notifications channels internal server error response has a 2xx status code
func (o *GetNotificationsChannelsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get notifications channels internal server error response has a 3xx status code
func (o *GetNotificationsChannelsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get notifications channels internal server error response has a 4xx status code
func (o *GetNotificationsChannelsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get notifications channels internal server error response has a 5xx status code
func (o *GetNotificationsChannelsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get notifications channels internal server error response a status code equal to that given
func (o *GetNotificationsChannelsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetNotificationsChannelsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/notifications/channels][%d] getNotificationsChannelsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetNotificationsChannelsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/notifications/channels][%d] getNotificationsChannelsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetNotificationsChannelsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetNotificationsChannelsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNotificationsChannelsServiceUnavailable creates a GetNotificationsChannelsServiceUnavailable with default headers values
func NewGetNotificationsChannelsServiceUnavailable() *GetNotificationsChannelsServiceUnavailable {
	return &GetNotificationsChannelsServiceUnavailable{}
}

/*
GetNotificationsChannelsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetNotificationsChannelsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get notifications channels service unavailable response has a 2xx status code
func (o *GetNotificationsChannelsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get notifications channels service unavailable response has a 3xx status code
func (o *GetNotificationsChannelsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get notifications channels service unavailable response has a 4xx status code
func (o *GetNotificationsChannelsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get notifications channels service unavailable response has a 5xx status code
func (o *GetNotificationsChannelsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get notifications channels service unavailable response a status code equal to that given
func (o *GetNotificationsChannelsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetNotificationsChannelsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/notifications/channels][%d] getNotificationsChannelsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetNotificationsChannelsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/notifications/channels][%d] getNotificationsChannelsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetNotificationsChannelsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetNotificationsChannelsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNotificationsChannelsGatewayTimeout creates a GetNotificationsChannelsGatewayTimeout with default headers values
func NewGetNotificationsChannelsGatewayTimeout() *GetNotificationsChannelsGatewayTimeout {
	return &GetNotificationsChannelsGatewayTimeout{}
}

/*
GetNotificationsChannelsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetNotificationsChannelsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get notifications channels gateway timeout response has a 2xx status code
func (o *GetNotificationsChannelsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get notifications channels gateway timeout response has a 3xx status code
func (o *GetNotificationsChannelsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get notifications channels gateway timeout response has a 4xx status code
func (o *GetNotificationsChannelsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get notifications channels gateway timeout response has a 5xx status code
func (o *GetNotificationsChannelsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get notifications channels gateway timeout response a status code equal to that given
func (o *GetNotificationsChannelsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetNotificationsChannelsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/notifications/channels][%d] getNotificationsChannelsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetNotificationsChannelsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/notifications/channels][%d] getNotificationsChannelsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetNotificationsChannelsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetNotificationsChannelsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
