// Code generated by go-swagger; DO NOT EDIT.

package notifications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteNotificationsChannelSubscriptionsReader is a Reader for the DeleteNotificationsChannelSubscriptions structure.
type DeleteNotificationsChannelSubscriptionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteNotificationsChannelSubscriptionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewDeleteNotificationsChannelSubscriptionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteNotificationsChannelSubscriptionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteNotificationsChannelSubscriptionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteNotificationsChannelSubscriptionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteNotificationsChannelSubscriptionsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteNotificationsChannelSubscriptionsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteNotificationsChannelSubscriptionsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteNotificationsChannelSubscriptionsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteNotificationsChannelSubscriptionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteNotificationsChannelSubscriptionsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteNotificationsChannelSubscriptionsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteNotificationsChannelSubscriptionsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteNotificationsChannelSubscriptionsBadRequest creates a DeleteNotificationsChannelSubscriptionsBadRequest with default headers values
func NewDeleteNotificationsChannelSubscriptionsBadRequest() *DeleteNotificationsChannelSubscriptionsBadRequest {
	return &DeleteNotificationsChannelSubscriptionsBadRequest{}
}

/*
DeleteNotificationsChannelSubscriptionsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteNotificationsChannelSubscriptionsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete notifications channel subscriptions bad request response has a 2xx status code
func (o *DeleteNotificationsChannelSubscriptionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete notifications channel subscriptions bad request response has a 3xx status code
func (o *DeleteNotificationsChannelSubscriptionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete notifications channel subscriptions bad request response has a 4xx status code
func (o *DeleteNotificationsChannelSubscriptionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete notifications channel subscriptions bad request response has a 5xx status code
func (o *DeleteNotificationsChannelSubscriptionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete notifications channel subscriptions bad request response a status code equal to that given
func (o *DeleteNotificationsChannelSubscriptionsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteNotificationsChannelSubscriptionsBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/notifications/channels/{channelId}/subscriptions][%d] deleteNotificationsChannelSubscriptionsBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteNotificationsChannelSubscriptionsBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v2/notifications/channels/{channelId}/subscriptions][%d] deleteNotificationsChannelSubscriptionsBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteNotificationsChannelSubscriptionsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteNotificationsChannelSubscriptionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteNotificationsChannelSubscriptionsUnauthorized creates a DeleteNotificationsChannelSubscriptionsUnauthorized with default headers values
func NewDeleteNotificationsChannelSubscriptionsUnauthorized() *DeleteNotificationsChannelSubscriptionsUnauthorized {
	return &DeleteNotificationsChannelSubscriptionsUnauthorized{}
}

/*
DeleteNotificationsChannelSubscriptionsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteNotificationsChannelSubscriptionsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete notifications channel subscriptions unauthorized response has a 2xx status code
func (o *DeleteNotificationsChannelSubscriptionsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete notifications channel subscriptions unauthorized response has a 3xx status code
func (o *DeleteNotificationsChannelSubscriptionsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete notifications channel subscriptions unauthorized response has a 4xx status code
func (o *DeleteNotificationsChannelSubscriptionsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete notifications channel subscriptions unauthorized response has a 5xx status code
func (o *DeleteNotificationsChannelSubscriptionsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete notifications channel subscriptions unauthorized response a status code equal to that given
func (o *DeleteNotificationsChannelSubscriptionsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteNotificationsChannelSubscriptionsUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/notifications/channels/{channelId}/subscriptions][%d] deleteNotificationsChannelSubscriptionsUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteNotificationsChannelSubscriptionsUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/notifications/channels/{channelId}/subscriptions][%d] deleteNotificationsChannelSubscriptionsUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteNotificationsChannelSubscriptionsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteNotificationsChannelSubscriptionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteNotificationsChannelSubscriptionsForbidden creates a DeleteNotificationsChannelSubscriptionsForbidden with default headers values
func NewDeleteNotificationsChannelSubscriptionsForbidden() *DeleteNotificationsChannelSubscriptionsForbidden {
	return &DeleteNotificationsChannelSubscriptionsForbidden{}
}

/*
DeleteNotificationsChannelSubscriptionsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type DeleteNotificationsChannelSubscriptionsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete notifications channel subscriptions forbidden response has a 2xx status code
func (o *DeleteNotificationsChannelSubscriptionsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete notifications channel subscriptions forbidden response has a 3xx status code
func (o *DeleteNotificationsChannelSubscriptionsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete notifications channel subscriptions forbidden response has a 4xx status code
func (o *DeleteNotificationsChannelSubscriptionsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete notifications channel subscriptions forbidden response has a 5xx status code
func (o *DeleteNotificationsChannelSubscriptionsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete notifications channel subscriptions forbidden response a status code equal to that given
func (o *DeleteNotificationsChannelSubscriptionsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteNotificationsChannelSubscriptionsForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/notifications/channels/{channelId}/subscriptions][%d] deleteNotificationsChannelSubscriptionsForbidden  %+v", 403, o.Payload)
}

func (o *DeleteNotificationsChannelSubscriptionsForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/notifications/channels/{channelId}/subscriptions][%d] deleteNotificationsChannelSubscriptionsForbidden  %+v", 403, o.Payload)
}

func (o *DeleteNotificationsChannelSubscriptionsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteNotificationsChannelSubscriptionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteNotificationsChannelSubscriptionsNotFound creates a DeleteNotificationsChannelSubscriptionsNotFound with default headers values
func NewDeleteNotificationsChannelSubscriptionsNotFound() *DeleteNotificationsChannelSubscriptionsNotFound {
	return &DeleteNotificationsChannelSubscriptionsNotFound{}
}

/*
DeleteNotificationsChannelSubscriptionsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type DeleteNotificationsChannelSubscriptionsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete notifications channel subscriptions not found response has a 2xx status code
func (o *DeleteNotificationsChannelSubscriptionsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete notifications channel subscriptions not found response has a 3xx status code
func (o *DeleteNotificationsChannelSubscriptionsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete notifications channel subscriptions not found response has a 4xx status code
func (o *DeleteNotificationsChannelSubscriptionsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete notifications channel subscriptions not found response has a 5xx status code
func (o *DeleteNotificationsChannelSubscriptionsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete notifications channel subscriptions not found response a status code equal to that given
func (o *DeleteNotificationsChannelSubscriptionsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteNotificationsChannelSubscriptionsNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/notifications/channels/{channelId}/subscriptions][%d] deleteNotificationsChannelSubscriptionsNotFound  %+v", 404, o.Payload)
}

func (o *DeleteNotificationsChannelSubscriptionsNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v2/notifications/channels/{channelId}/subscriptions][%d] deleteNotificationsChannelSubscriptionsNotFound  %+v", 404, o.Payload)
}

func (o *DeleteNotificationsChannelSubscriptionsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteNotificationsChannelSubscriptionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteNotificationsChannelSubscriptionsRequestTimeout creates a DeleteNotificationsChannelSubscriptionsRequestTimeout with default headers values
func NewDeleteNotificationsChannelSubscriptionsRequestTimeout() *DeleteNotificationsChannelSubscriptionsRequestTimeout {
	return &DeleteNotificationsChannelSubscriptionsRequestTimeout{}
}

/*
DeleteNotificationsChannelSubscriptionsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteNotificationsChannelSubscriptionsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete notifications channel subscriptions request timeout response has a 2xx status code
func (o *DeleteNotificationsChannelSubscriptionsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete notifications channel subscriptions request timeout response has a 3xx status code
func (o *DeleteNotificationsChannelSubscriptionsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete notifications channel subscriptions request timeout response has a 4xx status code
func (o *DeleteNotificationsChannelSubscriptionsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete notifications channel subscriptions request timeout response has a 5xx status code
func (o *DeleteNotificationsChannelSubscriptionsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete notifications channel subscriptions request timeout response a status code equal to that given
func (o *DeleteNotificationsChannelSubscriptionsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *DeleteNotificationsChannelSubscriptionsRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/notifications/channels/{channelId}/subscriptions][%d] deleteNotificationsChannelSubscriptionsRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteNotificationsChannelSubscriptionsRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/notifications/channels/{channelId}/subscriptions][%d] deleteNotificationsChannelSubscriptionsRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteNotificationsChannelSubscriptionsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteNotificationsChannelSubscriptionsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteNotificationsChannelSubscriptionsRequestEntityTooLarge creates a DeleteNotificationsChannelSubscriptionsRequestEntityTooLarge with default headers values
func NewDeleteNotificationsChannelSubscriptionsRequestEntityTooLarge() *DeleteNotificationsChannelSubscriptionsRequestEntityTooLarge {
	return &DeleteNotificationsChannelSubscriptionsRequestEntityTooLarge{}
}

/*
DeleteNotificationsChannelSubscriptionsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type DeleteNotificationsChannelSubscriptionsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete notifications channel subscriptions request entity too large response has a 2xx status code
func (o *DeleteNotificationsChannelSubscriptionsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete notifications channel subscriptions request entity too large response has a 3xx status code
func (o *DeleteNotificationsChannelSubscriptionsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete notifications channel subscriptions request entity too large response has a 4xx status code
func (o *DeleteNotificationsChannelSubscriptionsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete notifications channel subscriptions request entity too large response has a 5xx status code
func (o *DeleteNotificationsChannelSubscriptionsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this delete notifications channel subscriptions request entity too large response a status code equal to that given
func (o *DeleteNotificationsChannelSubscriptionsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *DeleteNotificationsChannelSubscriptionsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/notifications/channels/{channelId}/subscriptions][%d] deleteNotificationsChannelSubscriptionsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteNotificationsChannelSubscriptionsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[DELETE /api/v2/notifications/channels/{channelId}/subscriptions][%d] deleteNotificationsChannelSubscriptionsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteNotificationsChannelSubscriptionsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteNotificationsChannelSubscriptionsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteNotificationsChannelSubscriptionsUnsupportedMediaType creates a DeleteNotificationsChannelSubscriptionsUnsupportedMediaType with default headers values
func NewDeleteNotificationsChannelSubscriptionsUnsupportedMediaType() *DeleteNotificationsChannelSubscriptionsUnsupportedMediaType {
	return &DeleteNotificationsChannelSubscriptionsUnsupportedMediaType{}
}

/*
DeleteNotificationsChannelSubscriptionsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteNotificationsChannelSubscriptionsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete notifications channel subscriptions unsupported media type response has a 2xx status code
func (o *DeleteNotificationsChannelSubscriptionsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete notifications channel subscriptions unsupported media type response has a 3xx status code
func (o *DeleteNotificationsChannelSubscriptionsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete notifications channel subscriptions unsupported media type response has a 4xx status code
func (o *DeleteNotificationsChannelSubscriptionsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete notifications channel subscriptions unsupported media type response has a 5xx status code
func (o *DeleteNotificationsChannelSubscriptionsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this delete notifications channel subscriptions unsupported media type response a status code equal to that given
func (o *DeleteNotificationsChannelSubscriptionsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *DeleteNotificationsChannelSubscriptionsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/notifications/channels/{channelId}/subscriptions][%d] deleteNotificationsChannelSubscriptionsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteNotificationsChannelSubscriptionsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[DELETE /api/v2/notifications/channels/{channelId}/subscriptions][%d] deleteNotificationsChannelSubscriptionsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteNotificationsChannelSubscriptionsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteNotificationsChannelSubscriptionsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteNotificationsChannelSubscriptionsTooManyRequests creates a DeleteNotificationsChannelSubscriptionsTooManyRequests with default headers values
func NewDeleteNotificationsChannelSubscriptionsTooManyRequests() *DeleteNotificationsChannelSubscriptionsTooManyRequests {
	return &DeleteNotificationsChannelSubscriptionsTooManyRequests{}
}

/*
DeleteNotificationsChannelSubscriptionsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteNotificationsChannelSubscriptionsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete notifications channel subscriptions too many requests response has a 2xx status code
func (o *DeleteNotificationsChannelSubscriptionsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete notifications channel subscriptions too many requests response has a 3xx status code
func (o *DeleteNotificationsChannelSubscriptionsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete notifications channel subscriptions too many requests response has a 4xx status code
func (o *DeleteNotificationsChannelSubscriptionsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete notifications channel subscriptions too many requests response has a 5xx status code
func (o *DeleteNotificationsChannelSubscriptionsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete notifications channel subscriptions too many requests response a status code equal to that given
func (o *DeleteNotificationsChannelSubscriptionsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteNotificationsChannelSubscriptionsTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/notifications/channels/{channelId}/subscriptions][%d] deleteNotificationsChannelSubscriptionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteNotificationsChannelSubscriptionsTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /api/v2/notifications/channels/{channelId}/subscriptions][%d] deleteNotificationsChannelSubscriptionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteNotificationsChannelSubscriptionsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteNotificationsChannelSubscriptionsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteNotificationsChannelSubscriptionsInternalServerError creates a DeleteNotificationsChannelSubscriptionsInternalServerError with default headers values
func NewDeleteNotificationsChannelSubscriptionsInternalServerError() *DeleteNotificationsChannelSubscriptionsInternalServerError {
	return &DeleteNotificationsChannelSubscriptionsInternalServerError{}
}

/*
DeleteNotificationsChannelSubscriptionsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteNotificationsChannelSubscriptionsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete notifications channel subscriptions internal server error response has a 2xx status code
func (o *DeleteNotificationsChannelSubscriptionsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete notifications channel subscriptions internal server error response has a 3xx status code
func (o *DeleteNotificationsChannelSubscriptionsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete notifications channel subscriptions internal server error response has a 4xx status code
func (o *DeleteNotificationsChannelSubscriptionsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete notifications channel subscriptions internal server error response has a 5xx status code
func (o *DeleteNotificationsChannelSubscriptionsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete notifications channel subscriptions internal server error response a status code equal to that given
func (o *DeleteNotificationsChannelSubscriptionsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteNotificationsChannelSubscriptionsInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/notifications/channels/{channelId}/subscriptions][%d] deleteNotificationsChannelSubscriptionsInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteNotificationsChannelSubscriptionsInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v2/notifications/channels/{channelId}/subscriptions][%d] deleteNotificationsChannelSubscriptionsInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteNotificationsChannelSubscriptionsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteNotificationsChannelSubscriptionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteNotificationsChannelSubscriptionsServiceUnavailable creates a DeleteNotificationsChannelSubscriptionsServiceUnavailable with default headers values
func NewDeleteNotificationsChannelSubscriptionsServiceUnavailable() *DeleteNotificationsChannelSubscriptionsServiceUnavailable {
	return &DeleteNotificationsChannelSubscriptionsServiceUnavailable{}
}

/*
DeleteNotificationsChannelSubscriptionsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteNotificationsChannelSubscriptionsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete notifications channel subscriptions service unavailable response has a 2xx status code
func (o *DeleteNotificationsChannelSubscriptionsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete notifications channel subscriptions service unavailable response has a 3xx status code
func (o *DeleteNotificationsChannelSubscriptionsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete notifications channel subscriptions service unavailable response has a 4xx status code
func (o *DeleteNotificationsChannelSubscriptionsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete notifications channel subscriptions service unavailable response has a 5xx status code
func (o *DeleteNotificationsChannelSubscriptionsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete notifications channel subscriptions service unavailable response a status code equal to that given
func (o *DeleteNotificationsChannelSubscriptionsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *DeleteNotificationsChannelSubscriptionsServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/notifications/channels/{channelId}/subscriptions][%d] deleteNotificationsChannelSubscriptionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteNotificationsChannelSubscriptionsServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /api/v2/notifications/channels/{channelId}/subscriptions][%d] deleteNotificationsChannelSubscriptionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteNotificationsChannelSubscriptionsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteNotificationsChannelSubscriptionsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteNotificationsChannelSubscriptionsGatewayTimeout creates a DeleteNotificationsChannelSubscriptionsGatewayTimeout with default headers values
func NewDeleteNotificationsChannelSubscriptionsGatewayTimeout() *DeleteNotificationsChannelSubscriptionsGatewayTimeout {
	return &DeleteNotificationsChannelSubscriptionsGatewayTimeout{}
}

/*
DeleteNotificationsChannelSubscriptionsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type DeleteNotificationsChannelSubscriptionsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete notifications channel subscriptions gateway timeout response has a 2xx status code
func (o *DeleteNotificationsChannelSubscriptionsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete notifications channel subscriptions gateway timeout response has a 3xx status code
func (o *DeleteNotificationsChannelSubscriptionsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete notifications channel subscriptions gateway timeout response has a 4xx status code
func (o *DeleteNotificationsChannelSubscriptionsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete notifications channel subscriptions gateway timeout response has a 5xx status code
func (o *DeleteNotificationsChannelSubscriptionsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this delete notifications channel subscriptions gateway timeout response a status code equal to that given
func (o *DeleteNotificationsChannelSubscriptionsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *DeleteNotificationsChannelSubscriptionsGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/notifications/channels/{channelId}/subscriptions][%d] deleteNotificationsChannelSubscriptionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteNotificationsChannelSubscriptionsGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/notifications/channels/{channelId}/subscriptions][%d] deleteNotificationsChannelSubscriptionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteNotificationsChannelSubscriptionsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteNotificationsChannelSubscriptionsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteNotificationsChannelSubscriptionsDefault creates a DeleteNotificationsChannelSubscriptionsDefault with default headers values
func NewDeleteNotificationsChannelSubscriptionsDefault(code int) *DeleteNotificationsChannelSubscriptionsDefault {
	return &DeleteNotificationsChannelSubscriptionsDefault{
		_statusCode: code,
	}
}

/*
DeleteNotificationsChannelSubscriptionsDefault describes a response with status code -1, with default header values.

successful operation
*/
type DeleteNotificationsChannelSubscriptionsDefault struct {
	_statusCode int
}

// Code gets the status code for the delete notifications channel subscriptions default response
func (o *DeleteNotificationsChannelSubscriptionsDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this delete notifications channel subscriptions default response has a 2xx status code
func (o *DeleteNotificationsChannelSubscriptionsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete notifications channel subscriptions default response has a 3xx status code
func (o *DeleteNotificationsChannelSubscriptionsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete notifications channel subscriptions default response has a 4xx status code
func (o *DeleteNotificationsChannelSubscriptionsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete notifications channel subscriptions default response has a 5xx status code
func (o *DeleteNotificationsChannelSubscriptionsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete notifications channel subscriptions default response a status code equal to that given
func (o *DeleteNotificationsChannelSubscriptionsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *DeleteNotificationsChannelSubscriptionsDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/notifications/channels/{channelId}/subscriptions][%d] deleteNotificationsChannelSubscriptions default ", o._statusCode)
}

func (o *DeleteNotificationsChannelSubscriptionsDefault) String() string {
	return fmt.Sprintf("[DELETE /api/v2/notifications/channels/{channelId}/subscriptions][%d] deleteNotificationsChannelSubscriptions default ", o._statusCode)
}

func (o *DeleteNotificationsChannelSubscriptionsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
