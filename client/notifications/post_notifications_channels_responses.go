// Code generated by go-swagger; DO NOT EDIT.

package notifications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostNotificationsChannelsReader is a Reader for the PostNotificationsChannels structure.
type PostNotificationsChannelsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostNotificationsChannelsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostNotificationsChannelsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostNotificationsChannelsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostNotificationsChannelsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostNotificationsChannelsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostNotificationsChannelsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostNotificationsChannelsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostNotificationsChannelsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostNotificationsChannelsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostNotificationsChannelsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostNotificationsChannelsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostNotificationsChannelsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostNotificationsChannelsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostNotificationsChannelsOK creates a PostNotificationsChannelsOK with default headers values
func NewPostNotificationsChannelsOK() *PostNotificationsChannelsOK {
	return &PostNotificationsChannelsOK{}
}

/*
PostNotificationsChannelsOK describes a response with status code 200, with default header values.

successful operation
*/
type PostNotificationsChannelsOK struct {
	Payload *models.Channel
}

// IsSuccess returns true when this post notifications channels o k response has a 2xx status code
func (o *PostNotificationsChannelsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post notifications channels o k response has a 3xx status code
func (o *PostNotificationsChannelsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post notifications channels o k response has a 4xx status code
func (o *PostNotificationsChannelsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post notifications channels o k response has a 5xx status code
func (o *PostNotificationsChannelsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post notifications channels o k response a status code equal to that given
func (o *PostNotificationsChannelsOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostNotificationsChannelsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels][%d] postNotificationsChannelsOK  %+v", 200, o.Payload)
}

func (o *PostNotificationsChannelsOK) String() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels][%d] postNotificationsChannelsOK  %+v", 200, o.Payload)
}

func (o *PostNotificationsChannelsOK) GetPayload() *models.Channel {
	return o.Payload
}

func (o *PostNotificationsChannelsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Channel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostNotificationsChannelsBadRequest creates a PostNotificationsChannelsBadRequest with default headers values
func NewPostNotificationsChannelsBadRequest() *PostNotificationsChannelsBadRequest {
	return &PostNotificationsChannelsBadRequest{}
}

/*
PostNotificationsChannelsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostNotificationsChannelsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post notifications channels bad request response has a 2xx status code
func (o *PostNotificationsChannelsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post notifications channels bad request response has a 3xx status code
func (o *PostNotificationsChannelsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post notifications channels bad request response has a 4xx status code
func (o *PostNotificationsChannelsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post notifications channels bad request response has a 5xx status code
func (o *PostNotificationsChannelsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post notifications channels bad request response a status code equal to that given
func (o *PostNotificationsChannelsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostNotificationsChannelsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels][%d] postNotificationsChannelsBadRequest  %+v", 400, o.Payload)
}

func (o *PostNotificationsChannelsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels][%d] postNotificationsChannelsBadRequest  %+v", 400, o.Payload)
}

func (o *PostNotificationsChannelsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostNotificationsChannelsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostNotificationsChannelsUnauthorized creates a PostNotificationsChannelsUnauthorized with default headers values
func NewPostNotificationsChannelsUnauthorized() *PostNotificationsChannelsUnauthorized {
	return &PostNotificationsChannelsUnauthorized{}
}

/*
PostNotificationsChannelsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostNotificationsChannelsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post notifications channels unauthorized response has a 2xx status code
func (o *PostNotificationsChannelsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post notifications channels unauthorized response has a 3xx status code
func (o *PostNotificationsChannelsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post notifications channels unauthorized response has a 4xx status code
func (o *PostNotificationsChannelsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post notifications channels unauthorized response has a 5xx status code
func (o *PostNotificationsChannelsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post notifications channels unauthorized response a status code equal to that given
func (o *PostNotificationsChannelsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostNotificationsChannelsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels][%d] postNotificationsChannelsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostNotificationsChannelsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels][%d] postNotificationsChannelsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostNotificationsChannelsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostNotificationsChannelsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostNotificationsChannelsForbidden creates a PostNotificationsChannelsForbidden with default headers values
func NewPostNotificationsChannelsForbidden() *PostNotificationsChannelsForbidden {
	return &PostNotificationsChannelsForbidden{}
}

/*
PostNotificationsChannelsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostNotificationsChannelsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post notifications channels forbidden response has a 2xx status code
func (o *PostNotificationsChannelsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post notifications channels forbidden response has a 3xx status code
func (o *PostNotificationsChannelsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post notifications channels forbidden response has a 4xx status code
func (o *PostNotificationsChannelsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post notifications channels forbidden response has a 5xx status code
func (o *PostNotificationsChannelsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post notifications channels forbidden response a status code equal to that given
func (o *PostNotificationsChannelsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostNotificationsChannelsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels][%d] postNotificationsChannelsForbidden  %+v", 403, o.Payload)
}

func (o *PostNotificationsChannelsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels][%d] postNotificationsChannelsForbidden  %+v", 403, o.Payload)
}

func (o *PostNotificationsChannelsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostNotificationsChannelsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostNotificationsChannelsNotFound creates a PostNotificationsChannelsNotFound with default headers values
func NewPostNotificationsChannelsNotFound() *PostNotificationsChannelsNotFound {
	return &PostNotificationsChannelsNotFound{}
}

/*
PostNotificationsChannelsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostNotificationsChannelsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post notifications channels not found response has a 2xx status code
func (o *PostNotificationsChannelsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post notifications channels not found response has a 3xx status code
func (o *PostNotificationsChannelsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post notifications channels not found response has a 4xx status code
func (o *PostNotificationsChannelsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post notifications channels not found response has a 5xx status code
func (o *PostNotificationsChannelsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post notifications channels not found response a status code equal to that given
func (o *PostNotificationsChannelsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostNotificationsChannelsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels][%d] postNotificationsChannelsNotFound  %+v", 404, o.Payload)
}

func (o *PostNotificationsChannelsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels][%d] postNotificationsChannelsNotFound  %+v", 404, o.Payload)
}

func (o *PostNotificationsChannelsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostNotificationsChannelsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostNotificationsChannelsRequestTimeout creates a PostNotificationsChannelsRequestTimeout with default headers values
func NewPostNotificationsChannelsRequestTimeout() *PostNotificationsChannelsRequestTimeout {
	return &PostNotificationsChannelsRequestTimeout{}
}

/*
PostNotificationsChannelsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostNotificationsChannelsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post notifications channels request timeout response has a 2xx status code
func (o *PostNotificationsChannelsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post notifications channels request timeout response has a 3xx status code
func (o *PostNotificationsChannelsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post notifications channels request timeout response has a 4xx status code
func (o *PostNotificationsChannelsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post notifications channels request timeout response has a 5xx status code
func (o *PostNotificationsChannelsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post notifications channels request timeout response a status code equal to that given
func (o *PostNotificationsChannelsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostNotificationsChannelsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels][%d] postNotificationsChannelsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostNotificationsChannelsRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels][%d] postNotificationsChannelsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostNotificationsChannelsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostNotificationsChannelsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostNotificationsChannelsRequestEntityTooLarge creates a PostNotificationsChannelsRequestEntityTooLarge with default headers values
func NewPostNotificationsChannelsRequestEntityTooLarge() *PostNotificationsChannelsRequestEntityTooLarge {
	return &PostNotificationsChannelsRequestEntityTooLarge{}
}

/*
PostNotificationsChannelsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostNotificationsChannelsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post notifications channels request entity too large response has a 2xx status code
func (o *PostNotificationsChannelsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post notifications channels request entity too large response has a 3xx status code
func (o *PostNotificationsChannelsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post notifications channels request entity too large response has a 4xx status code
func (o *PostNotificationsChannelsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post notifications channels request entity too large response has a 5xx status code
func (o *PostNotificationsChannelsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post notifications channels request entity too large response a status code equal to that given
func (o *PostNotificationsChannelsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostNotificationsChannelsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels][%d] postNotificationsChannelsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostNotificationsChannelsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels][%d] postNotificationsChannelsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostNotificationsChannelsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostNotificationsChannelsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostNotificationsChannelsUnsupportedMediaType creates a PostNotificationsChannelsUnsupportedMediaType with default headers values
func NewPostNotificationsChannelsUnsupportedMediaType() *PostNotificationsChannelsUnsupportedMediaType {
	return &PostNotificationsChannelsUnsupportedMediaType{}
}

/*
PostNotificationsChannelsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostNotificationsChannelsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post notifications channels unsupported media type response has a 2xx status code
func (o *PostNotificationsChannelsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post notifications channels unsupported media type response has a 3xx status code
func (o *PostNotificationsChannelsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post notifications channels unsupported media type response has a 4xx status code
func (o *PostNotificationsChannelsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post notifications channels unsupported media type response has a 5xx status code
func (o *PostNotificationsChannelsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post notifications channels unsupported media type response a status code equal to that given
func (o *PostNotificationsChannelsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostNotificationsChannelsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels][%d] postNotificationsChannelsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostNotificationsChannelsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels][%d] postNotificationsChannelsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostNotificationsChannelsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostNotificationsChannelsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostNotificationsChannelsTooManyRequests creates a PostNotificationsChannelsTooManyRequests with default headers values
func NewPostNotificationsChannelsTooManyRequests() *PostNotificationsChannelsTooManyRequests {
	return &PostNotificationsChannelsTooManyRequests{}
}

/*
PostNotificationsChannelsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostNotificationsChannelsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post notifications channels too many requests response has a 2xx status code
func (o *PostNotificationsChannelsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post notifications channels too many requests response has a 3xx status code
func (o *PostNotificationsChannelsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post notifications channels too many requests response has a 4xx status code
func (o *PostNotificationsChannelsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post notifications channels too many requests response has a 5xx status code
func (o *PostNotificationsChannelsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post notifications channels too many requests response a status code equal to that given
func (o *PostNotificationsChannelsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostNotificationsChannelsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels][%d] postNotificationsChannelsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostNotificationsChannelsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels][%d] postNotificationsChannelsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostNotificationsChannelsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostNotificationsChannelsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostNotificationsChannelsInternalServerError creates a PostNotificationsChannelsInternalServerError with default headers values
func NewPostNotificationsChannelsInternalServerError() *PostNotificationsChannelsInternalServerError {
	return &PostNotificationsChannelsInternalServerError{}
}

/*
PostNotificationsChannelsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostNotificationsChannelsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post notifications channels internal server error response has a 2xx status code
func (o *PostNotificationsChannelsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post notifications channels internal server error response has a 3xx status code
func (o *PostNotificationsChannelsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post notifications channels internal server error response has a 4xx status code
func (o *PostNotificationsChannelsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post notifications channels internal server error response has a 5xx status code
func (o *PostNotificationsChannelsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post notifications channels internal server error response a status code equal to that given
func (o *PostNotificationsChannelsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostNotificationsChannelsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels][%d] postNotificationsChannelsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostNotificationsChannelsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels][%d] postNotificationsChannelsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostNotificationsChannelsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostNotificationsChannelsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostNotificationsChannelsServiceUnavailable creates a PostNotificationsChannelsServiceUnavailable with default headers values
func NewPostNotificationsChannelsServiceUnavailable() *PostNotificationsChannelsServiceUnavailable {
	return &PostNotificationsChannelsServiceUnavailable{}
}

/*
PostNotificationsChannelsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostNotificationsChannelsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post notifications channels service unavailable response has a 2xx status code
func (o *PostNotificationsChannelsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post notifications channels service unavailable response has a 3xx status code
func (o *PostNotificationsChannelsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post notifications channels service unavailable response has a 4xx status code
func (o *PostNotificationsChannelsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post notifications channels service unavailable response has a 5xx status code
func (o *PostNotificationsChannelsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post notifications channels service unavailable response a status code equal to that given
func (o *PostNotificationsChannelsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostNotificationsChannelsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels][%d] postNotificationsChannelsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostNotificationsChannelsServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels][%d] postNotificationsChannelsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostNotificationsChannelsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostNotificationsChannelsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostNotificationsChannelsGatewayTimeout creates a PostNotificationsChannelsGatewayTimeout with default headers values
func NewPostNotificationsChannelsGatewayTimeout() *PostNotificationsChannelsGatewayTimeout {
	return &PostNotificationsChannelsGatewayTimeout{}
}

/*
PostNotificationsChannelsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostNotificationsChannelsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post notifications channels gateway timeout response has a 2xx status code
func (o *PostNotificationsChannelsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post notifications channels gateway timeout response has a 3xx status code
func (o *PostNotificationsChannelsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post notifications channels gateway timeout response has a 4xx status code
func (o *PostNotificationsChannelsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post notifications channels gateway timeout response has a 5xx status code
func (o *PostNotificationsChannelsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post notifications channels gateway timeout response a status code equal to that given
func (o *PostNotificationsChannelsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostNotificationsChannelsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels][%d] postNotificationsChannelsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostNotificationsChannelsGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels][%d] postNotificationsChannelsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostNotificationsChannelsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostNotificationsChannelsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
