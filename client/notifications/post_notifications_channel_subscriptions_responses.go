// Code generated by go-swagger; DO NOT EDIT.

package notifications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostNotificationsChannelSubscriptionsReader is a Reader for the PostNotificationsChannelSubscriptions structure.
type PostNotificationsChannelSubscriptionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostNotificationsChannelSubscriptionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostNotificationsChannelSubscriptionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostNotificationsChannelSubscriptionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostNotificationsChannelSubscriptionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostNotificationsChannelSubscriptionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostNotificationsChannelSubscriptionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostNotificationsChannelSubscriptionsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostNotificationsChannelSubscriptionsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostNotificationsChannelSubscriptionsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostNotificationsChannelSubscriptionsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostNotificationsChannelSubscriptionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostNotificationsChannelSubscriptionsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostNotificationsChannelSubscriptionsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostNotificationsChannelSubscriptionsOK creates a PostNotificationsChannelSubscriptionsOK with default headers values
func NewPostNotificationsChannelSubscriptionsOK() *PostNotificationsChannelSubscriptionsOK {
	return &PostNotificationsChannelSubscriptionsOK{}
}

/*
PostNotificationsChannelSubscriptionsOK describes a response with status code 200, with default header values.

successful operation
*/
type PostNotificationsChannelSubscriptionsOK struct {
	Payload *models.ChannelTopicEntityListing
}

// IsSuccess returns true when this post notifications channel subscriptions o k response has a 2xx status code
func (o *PostNotificationsChannelSubscriptionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post notifications channel subscriptions o k response has a 3xx status code
func (o *PostNotificationsChannelSubscriptionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post notifications channel subscriptions o k response has a 4xx status code
func (o *PostNotificationsChannelSubscriptionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post notifications channel subscriptions o k response has a 5xx status code
func (o *PostNotificationsChannelSubscriptionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post notifications channel subscriptions o k response a status code equal to that given
func (o *PostNotificationsChannelSubscriptionsOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostNotificationsChannelSubscriptionsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels/{channelId}/subscriptions][%d] postNotificationsChannelSubscriptionsOK  %+v", 200, o.Payload)
}

func (o *PostNotificationsChannelSubscriptionsOK) String() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels/{channelId}/subscriptions][%d] postNotificationsChannelSubscriptionsOK  %+v", 200, o.Payload)
}

func (o *PostNotificationsChannelSubscriptionsOK) GetPayload() *models.ChannelTopicEntityListing {
	return o.Payload
}

func (o *PostNotificationsChannelSubscriptionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChannelTopicEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostNotificationsChannelSubscriptionsBadRequest creates a PostNotificationsChannelSubscriptionsBadRequest with default headers values
func NewPostNotificationsChannelSubscriptionsBadRequest() *PostNotificationsChannelSubscriptionsBadRequest {
	return &PostNotificationsChannelSubscriptionsBadRequest{}
}

/*
PostNotificationsChannelSubscriptionsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostNotificationsChannelSubscriptionsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post notifications channel subscriptions bad request response has a 2xx status code
func (o *PostNotificationsChannelSubscriptionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post notifications channel subscriptions bad request response has a 3xx status code
func (o *PostNotificationsChannelSubscriptionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post notifications channel subscriptions bad request response has a 4xx status code
func (o *PostNotificationsChannelSubscriptionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post notifications channel subscriptions bad request response has a 5xx status code
func (o *PostNotificationsChannelSubscriptionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post notifications channel subscriptions bad request response a status code equal to that given
func (o *PostNotificationsChannelSubscriptionsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostNotificationsChannelSubscriptionsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels/{channelId}/subscriptions][%d] postNotificationsChannelSubscriptionsBadRequest  %+v", 400, o.Payload)
}

func (o *PostNotificationsChannelSubscriptionsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels/{channelId}/subscriptions][%d] postNotificationsChannelSubscriptionsBadRequest  %+v", 400, o.Payload)
}

func (o *PostNotificationsChannelSubscriptionsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostNotificationsChannelSubscriptionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostNotificationsChannelSubscriptionsUnauthorized creates a PostNotificationsChannelSubscriptionsUnauthorized with default headers values
func NewPostNotificationsChannelSubscriptionsUnauthorized() *PostNotificationsChannelSubscriptionsUnauthorized {
	return &PostNotificationsChannelSubscriptionsUnauthorized{}
}

/*
PostNotificationsChannelSubscriptionsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostNotificationsChannelSubscriptionsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post notifications channel subscriptions unauthorized response has a 2xx status code
func (o *PostNotificationsChannelSubscriptionsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post notifications channel subscriptions unauthorized response has a 3xx status code
func (o *PostNotificationsChannelSubscriptionsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post notifications channel subscriptions unauthorized response has a 4xx status code
func (o *PostNotificationsChannelSubscriptionsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post notifications channel subscriptions unauthorized response has a 5xx status code
func (o *PostNotificationsChannelSubscriptionsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post notifications channel subscriptions unauthorized response a status code equal to that given
func (o *PostNotificationsChannelSubscriptionsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostNotificationsChannelSubscriptionsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels/{channelId}/subscriptions][%d] postNotificationsChannelSubscriptionsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostNotificationsChannelSubscriptionsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels/{channelId}/subscriptions][%d] postNotificationsChannelSubscriptionsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostNotificationsChannelSubscriptionsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostNotificationsChannelSubscriptionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostNotificationsChannelSubscriptionsForbidden creates a PostNotificationsChannelSubscriptionsForbidden with default headers values
func NewPostNotificationsChannelSubscriptionsForbidden() *PostNotificationsChannelSubscriptionsForbidden {
	return &PostNotificationsChannelSubscriptionsForbidden{}
}

/*
PostNotificationsChannelSubscriptionsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostNotificationsChannelSubscriptionsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post notifications channel subscriptions forbidden response has a 2xx status code
func (o *PostNotificationsChannelSubscriptionsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post notifications channel subscriptions forbidden response has a 3xx status code
func (o *PostNotificationsChannelSubscriptionsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post notifications channel subscriptions forbidden response has a 4xx status code
func (o *PostNotificationsChannelSubscriptionsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post notifications channel subscriptions forbidden response has a 5xx status code
func (o *PostNotificationsChannelSubscriptionsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post notifications channel subscriptions forbidden response a status code equal to that given
func (o *PostNotificationsChannelSubscriptionsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostNotificationsChannelSubscriptionsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels/{channelId}/subscriptions][%d] postNotificationsChannelSubscriptionsForbidden  %+v", 403, o.Payload)
}

func (o *PostNotificationsChannelSubscriptionsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels/{channelId}/subscriptions][%d] postNotificationsChannelSubscriptionsForbidden  %+v", 403, o.Payload)
}

func (o *PostNotificationsChannelSubscriptionsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostNotificationsChannelSubscriptionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostNotificationsChannelSubscriptionsNotFound creates a PostNotificationsChannelSubscriptionsNotFound with default headers values
func NewPostNotificationsChannelSubscriptionsNotFound() *PostNotificationsChannelSubscriptionsNotFound {
	return &PostNotificationsChannelSubscriptionsNotFound{}
}

/*
PostNotificationsChannelSubscriptionsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostNotificationsChannelSubscriptionsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post notifications channel subscriptions not found response has a 2xx status code
func (o *PostNotificationsChannelSubscriptionsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post notifications channel subscriptions not found response has a 3xx status code
func (o *PostNotificationsChannelSubscriptionsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post notifications channel subscriptions not found response has a 4xx status code
func (o *PostNotificationsChannelSubscriptionsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post notifications channel subscriptions not found response has a 5xx status code
func (o *PostNotificationsChannelSubscriptionsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post notifications channel subscriptions not found response a status code equal to that given
func (o *PostNotificationsChannelSubscriptionsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostNotificationsChannelSubscriptionsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels/{channelId}/subscriptions][%d] postNotificationsChannelSubscriptionsNotFound  %+v", 404, o.Payload)
}

func (o *PostNotificationsChannelSubscriptionsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels/{channelId}/subscriptions][%d] postNotificationsChannelSubscriptionsNotFound  %+v", 404, o.Payload)
}

func (o *PostNotificationsChannelSubscriptionsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostNotificationsChannelSubscriptionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostNotificationsChannelSubscriptionsRequestTimeout creates a PostNotificationsChannelSubscriptionsRequestTimeout with default headers values
func NewPostNotificationsChannelSubscriptionsRequestTimeout() *PostNotificationsChannelSubscriptionsRequestTimeout {
	return &PostNotificationsChannelSubscriptionsRequestTimeout{}
}

/*
PostNotificationsChannelSubscriptionsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostNotificationsChannelSubscriptionsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post notifications channel subscriptions request timeout response has a 2xx status code
func (o *PostNotificationsChannelSubscriptionsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post notifications channel subscriptions request timeout response has a 3xx status code
func (o *PostNotificationsChannelSubscriptionsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post notifications channel subscriptions request timeout response has a 4xx status code
func (o *PostNotificationsChannelSubscriptionsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post notifications channel subscriptions request timeout response has a 5xx status code
func (o *PostNotificationsChannelSubscriptionsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post notifications channel subscriptions request timeout response a status code equal to that given
func (o *PostNotificationsChannelSubscriptionsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostNotificationsChannelSubscriptionsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels/{channelId}/subscriptions][%d] postNotificationsChannelSubscriptionsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostNotificationsChannelSubscriptionsRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels/{channelId}/subscriptions][%d] postNotificationsChannelSubscriptionsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostNotificationsChannelSubscriptionsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostNotificationsChannelSubscriptionsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostNotificationsChannelSubscriptionsRequestEntityTooLarge creates a PostNotificationsChannelSubscriptionsRequestEntityTooLarge with default headers values
func NewPostNotificationsChannelSubscriptionsRequestEntityTooLarge() *PostNotificationsChannelSubscriptionsRequestEntityTooLarge {
	return &PostNotificationsChannelSubscriptionsRequestEntityTooLarge{}
}

/*
PostNotificationsChannelSubscriptionsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostNotificationsChannelSubscriptionsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post notifications channel subscriptions request entity too large response has a 2xx status code
func (o *PostNotificationsChannelSubscriptionsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post notifications channel subscriptions request entity too large response has a 3xx status code
func (o *PostNotificationsChannelSubscriptionsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post notifications channel subscriptions request entity too large response has a 4xx status code
func (o *PostNotificationsChannelSubscriptionsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post notifications channel subscriptions request entity too large response has a 5xx status code
func (o *PostNotificationsChannelSubscriptionsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post notifications channel subscriptions request entity too large response a status code equal to that given
func (o *PostNotificationsChannelSubscriptionsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostNotificationsChannelSubscriptionsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels/{channelId}/subscriptions][%d] postNotificationsChannelSubscriptionsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostNotificationsChannelSubscriptionsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels/{channelId}/subscriptions][%d] postNotificationsChannelSubscriptionsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostNotificationsChannelSubscriptionsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostNotificationsChannelSubscriptionsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostNotificationsChannelSubscriptionsUnsupportedMediaType creates a PostNotificationsChannelSubscriptionsUnsupportedMediaType with default headers values
func NewPostNotificationsChannelSubscriptionsUnsupportedMediaType() *PostNotificationsChannelSubscriptionsUnsupportedMediaType {
	return &PostNotificationsChannelSubscriptionsUnsupportedMediaType{}
}

/*
PostNotificationsChannelSubscriptionsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostNotificationsChannelSubscriptionsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post notifications channel subscriptions unsupported media type response has a 2xx status code
func (o *PostNotificationsChannelSubscriptionsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post notifications channel subscriptions unsupported media type response has a 3xx status code
func (o *PostNotificationsChannelSubscriptionsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post notifications channel subscriptions unsupported media type response has a 4xx status code
func (o *PostNotificationsChannelSubscriptionsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post notifications channel subscriptions unsupported media type response has a 5xx status code
func (o *PostNotificationsChannelSubscriptionsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post notifications channel subscriptions unsupported media type response a status code equal to that given
func (o *PostNotificationsChannelSubscriptionsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostNotificationsChannelSubscriptionsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels/{channelId}/subscriptions][%d] postNotificationsChannelSubscriptionsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostNotificationsChannelSubscriptionsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels/{channelId}/subscriptions][%d] postNotificationsChannelSubscriptionsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostNotificationsChannelSubscriptionsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostNotificationsChannelSubscriptionsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostNotificationsChannelSubscriptionsTooManyRequests creates a PostNotificationsChannelSubscriptionsTooManyRequests with default headers values
func NewPostNotificationsChannelSubscriptionsTooManyRequests() *PostNotificationsChannelSubscriptionsTooManyRequests {
	return &PostNotificationsChannelSubscriptionsTooManyRequests{}
}

/*
PostNotificationsChannelSubscriptionsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostNotificationsChannelSubscriptionsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post notifications channel subscriptions too many requests response has a 2xx status code
func (o *PostNotificationsChannelSubscriptionsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post notifications channel subscriptions too many requests response has a 3xx status code
func (o *PostNotificationsChannelSubscriptionsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post notifications channel subscriptions too many requests response has a 4xx status code
func (o *PostNotificationsChannelSubscriptionsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post notifications channel subscriptions too many requests response has a 5xx status code
func (o *PostNotificationsChannelSubscriptionsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post notifications channel subscriptions too many requests response a status code equal to that given
func (o *PostNotificationsChannelSubscriptionsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostNotificationsChannelSubscriptionsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels/{channelId}/subscriptions][%d] postNotificationsChannelSubscriptionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostNotificationsChannelSubscriptionsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels/{channelId}/subscriptions][%d] postNotificationsChannelSubscriptionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostNotificationsChannelSubscriptionsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostNotificationsChannelSubscriptionsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostNotificationsChannelSubscriptionsInternalServerError creates a PostNotificationsChannelSubscriptionsInternalServerError with default headers values
func NewPostNotificationsChannelSubscriptionsInternalServerError() *PostNotificationsChannelSubscriptionsInternalServerError {
	return &PostNotificationsChannelSubscriptionsInternalServerError{}
}

/*
PostNotificationsChannelSubscriptionsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostNotificationsChannelSubscriptionsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post notifications channel subscriptions internal server error response has a 2xx status code
func (o *PostNotificationsChannelSubscriptionsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post notifications channel subscriptions internal server error response has a 3xx status code
func (o *PostNotificationsChannelSubscriptionsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post notifications channel subscriptions internal server error response has a 4xx status code
func (o *PostNotificationsChannelSubscriptionsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post notifications channel subscriptions internal server error response has a 5xx status code
func (o *PostNotificationsChannelSubscriptionsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post notifications channel subscriptions internal server error response a status code equal to that given
func (o *PostNotificationsChannelSubscriptionsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostNotificationsChannelSubscriptionsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels/{channelId}/subscriptions][%d] postNotificationsChannelSubscriptionsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostNotificationsChannelSubscriptionsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels/{channelId}/subscriptions][%d] postNotificationsChannelSubscriptionsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostNotificationsChannelSubscriptionsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostNotificationsChannelSubscriptionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostNotificationsChannelSubscriptionsServiceUnavailable creates a PostNotificationsChannelSubscriptionsServiceUnavailable with default headers values
func NewPostNotificationsChannelSubscriptionsServiceUnavailable() *PostNotificationsChannelSubscriptionsServiceUnavailable {
	return &PostNotificationsChannelSubscriptionsServiceUnavailable{}
}

/*
PostNotificationsChannelSubscriptionsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostNotificationsChannelSubscriptionsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post notifications channel subscriptions service unavailable response has a 2xx status code
func (o *PostNotificationsChannelSubscriptionsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post notifications channel subscriptions service unavailable response has a 3xx status code
func (o *PostNotificationsChannelSubscriptionsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post notifications channel subscriptions service unavailable response has a 4xx status code
func (o *PostNotificationsChannelSubscriptionsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post notifications channel subscriptions service unavailable response has a 5xx status code
func (o *PostNotificationsChannelSubscriptionsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post notifications channel subscriptions service unavailable response a status code equal to that given
func (o *PostNotificationsChannelSubscriptionsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostNotificationsChannelSubscriptionsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels/{channelId}/subscriptions][%d] postNotificationsChannelSubscriptionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostNotificationsChannelSubscriptionsServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels/{channelId}/subscriptions][%d] postNotificationsChannelSubscriptionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostNotificationsChannelSubscriptionsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostNotificationsChannelSubscriptionsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostNotificationsChannelSubscriptionsGatewayTimeout creates a PostNotificationsChannelSubscriptionsGatewayTimeout with default headers values
func NewPostNotificationsChannelSubscriptionsGatewayTimeout() *PostNotificationsChannelSubscriptionsGatewayTimeout {
	return &PostNotificationsChannelSubscriptionsGatewayTimeout{}
}

/*
PostNotificationsChannelSubscriptionsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostNotificationsChannelSubscriptionsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post notifications channel subscriptions gateway timeout response has a 2xx status code
func (o *PostNotificationsChannelSubscriptionsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post notifications channel subscriptions gateway timeout response has a 3xx status code
func (o *PostNotificationsChannelSubscriptionsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post notifications channel subscriptions gateway timeout response has a 4xx status code
func (o *PostNotificationsChannelSubscriptionsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post notifications channel subscriptions gateway timeout response has a 5xx status code
func (o *PostNotificationsChannelSubscriptionsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post notifications channel subscriptions gateway timeout response a status code equal to that given
func (o *PostNotificationsChannelSubscriptionsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostNotificationsChannelSubscriptionsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels/{channelId}/subscriptions][%d] postNotificationsChannelSubscriptionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostNotificationsChannelSubscriptionsGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/notifications/channels/{channelId}/subscriptions][%d] postNotificationsChannelSubscriptionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostNotificationsChannelSubscriptionsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostNotificationsChannelSubscriptionsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
