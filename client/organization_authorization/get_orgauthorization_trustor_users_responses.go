// Code generated by go-swagger; DO NOT EDIT.

package organization_authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetOrgauthorizationTrustorUsersReader is a Reader for the GetOrgauthorizationTrustorUsers structure.
type GetOrgauthorizationTrustorUsersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrgauthorizationTrustorUsersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrgauthorizationTrustorUsersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOrgauthorizationTrustorUsersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOrgauthorizationTrustorUsersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOrgauthorizationTrustorUsersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOrgauthorizationTrustorUsersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetOrgauthorizationTrustorUsersRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetOrgauthorizationTrustorUsersRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetOrgauthorizationTrustorUsersUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetOrgauthorizationTrustorUsersTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOrgauthorizationTrustorUsersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetOrgauthorizationTrustorUsersServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetOrgauthorizationTrustorUsersGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOrgauthorizationTrustorUsersOK creates a GetOrgauthorizationTrustorUsersOK with default headers values
func NewGetOrgauthorizationTrustorUsersOK() *GetOrgauthorizationTrustorUsersOK {
	return &GetOrgauthorizationTrustorUsersOK{}
}

/*GetOrgauthorizationTrustorUsersOK handles this case with default header values.

successful operation
*/
type GetOrgauthorizationTrustorUsersOK struct {
	Payload *models.TrustUserEntityListing
}

func (o *GetOrgauthorizationTrustorUsersOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users][%d] getOrgauthorizationTrustorUsersOK  %+v", 200, o.Payload)
}

func (o *GetOrgauthorizationTrustorUsersOK) GetPayload() *models.TrustUserEntityListing {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorUsersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TrustUserEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorUsersBadRequest creates a GetOrgauthorizationTrustorUsersBadRequest with default headers values
func NewGetOrgauthorizationTrustorUsersBadRequest() *GetOrgauthorizationTrustorUsersBadRequest {
	return &GetOrgauthorizationTrustorUsersBadRequest{}
}

/*GetOrgauthorizationTrustorUsersBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetOrgauthorizationTrustorUsersBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetOrgauthorizationTrustorUsersBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users][%d] getOrgauthorizationTrustorUsersBadRequest  %+v", 400, o.Payload)
}

func (o *GetOrgauthorizationTrustorUsersBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorUsersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorUsersUnauthorized creates a GetOrgauthorizationTrustorUsersUnauthorized with default headers values
func NewGetOrgauthorizationTrustorUsersUnauthorized() *GetOrgauthorizationTrustorUsersUnauthorized {
	return &GetOrgauthorizationTrustorUsersUnauthorized{}
}

/*GetOrgauthorizationTrustorUsersUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetOrgauthorizationTrustorUsersUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetOrgauthorizationTrustorUsersUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users][%d] getOrgauthorizationTrustorUsersUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOrgauthorizationTrustorUsersUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorUsersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorUsersForbidden creates a GetOrgauthorizationTrustorUsersForbidden with default headers values
func NewGetOrgauthorizationTrustorUsersForbidden() *GetOrgauthorizationTrustorUsersForbidden {
	return &GetOrgauthorizationTrustorUsersForbidden{}
}

/*GetOrgauthorizationTrustorUsersForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetOrgauthorizationTrustorUsersForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetOrgauthorizationTrustorUsersForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users][%d] getOrgauthorizationTrustorUsersForbidden  %+v", 403, o.Payload)
}

func (o *GetOrgauthorizationTrustorUsersForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorUsersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorUsersNotFound creates a GetOrgauthorizationTrustorUsersNotFound with default headers values
func NewGetOrgauthorizationTrustorUsersNotFound() *GetOrgauthorizationTrustorUsersNotFound {
	return &GetOrgauthorizationTrustorUsersNotFound{}
}

/*GetOrgauthorizationTrustorUsersNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetOrgauthorizationTrustorUsersNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetOrgauthorizationTrustorUsersNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users][%d] getOrgauthorizationTrustorUsersNotFound  %+v", 404, o.Payload)
}

func (o *GetOrgauthorizationTrustorUsersNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorUsersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorUsersRequestTimeout creates a GetOrgauthorizationTrustorUsersRequestTimeout with default headers values
func NewGetOrgauthorizationTrustorUsersRequestTimeout() *GetOrgauthorizationTrustorUsersRequestTimeout {
	return &GetOrgauthorizationTrustorUsersRequestTimeout{}
}

/*GetOrgauthorizationTrustorUsersRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetOrgauthorizationTrustorUsersRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetOrgauthorizationTrustorUsersRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users][%d] getOrgauthorizationTrustorUsersRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetOrgauthorizationTrustorUsersRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorUsersRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorUsersRequestEntityTooLarge creates a GetOrgauthorizationTrustorUsersRequestEntityTooLarge with default headers values
func NewGetOrgauthorizationTrustorUsersRequestEntityTooLarge() *GetOrgauthorizationTrustorUsersRequestEntityTooLarge {
	return &GetOrgauthorizationTrustorUsersRequestEntityTooLarge{}
}

/*GetOrgauthorizationTrustorUsersRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetOrgauthorizationTrustorUsersRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetOrgauthorizationTrustorUsersRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users][%d] getOrgauthorizationTrustorUsersRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetOrgauthorizationTrustorUsersRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorUsersRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorUsersUnsupportedMediaType creates a GetOrgauthorizationTrustorUsersUnsupportedMediaType with default headers values
func NewGetOrgauthorizationTrustorUsersUnsupportedMediaType() *GetOrgauthorizationTrustorUsersUnsupportedMediaType {
	return &GetOrgauthorizationTrustorUsersUnsupportedMediaType{}
}

/*GetOrgauthorizationTrustorUsersUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetOrgauthorizationTrustorUsersUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetOrgauthorizationTrustorUsersUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users][%d] getOrgauthorizationTrustorUsersUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetOrgauthorizationTrustorUsersUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorUsersUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorUsersTooManyRequests creates a GetOrgauthorizationTrustorUsersTooManyRequests with default headers values
func NewGetOrgauthorizationTrustorUsersTooManyRequests() *GetOrgauthorizationTrustorUsersTooManyRequests {
	return &GetOrgauthorizationTrustorUsersTooManyRequests{}
}

/*GetOrgauthorizationTrustorUsersTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetOrgauthorizationTrustorUsersTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetOrgauthorizationTrustorUsersTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users][%d] getOrgauthorizationTrustorUsersTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOrgauthorizationTrustorUsersTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorUsersTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorUsersInternalServerError creates a GetOrgauthorizationTrustorUsersInternalServerError with default headers values
func NewGetOrgauthorizationTrustorUsersInternalServerError() *GetOrgauthorizationTrustorUsersInternalServerError {
	return &GetOrgauthorizationTrustorUsersInternalServerError{}
}

/*GetOrgauthorizationTrustorUsersInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetOrgauthorizationTrustorUsersInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetOrgauthorizationTrustorUsersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users][%d] getOrgauthorizationTrustorUsersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOrgauthorizationTrustorUsersInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorUsersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorUsersServiceUnavailable creates a GetOrgauthorizationTrustorUsersServiceUnavailable with default headers values
func NewGetOrgauthorizationTrustorUsersServiceUnavailable() *GetOrgauthorizationTrustorUsersServiceUnavailable {
	return &GetOrgauthorizationTrustorUsersServiceUnavailable{}
}

/*GetOrgauthorizationTrustorUsersServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetOrgauthorizationTrustorUsersServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetOrgauthorizationTrustorUsersServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users][%d] getOrgauthorizationTrustorUsersServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOrgauthorizationTrustorUsersServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorUsersServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorUsersGatewayTimeout creates a GetOrgauthorizationTrustorUsersGatewayTimeout with default headers values
func NewGetOrgauthorizationTrustorUsersGatewayTimeout() *GetOrgauthorizationTrustorUsersGatewayTimeout {
	return &GetOrgauthorizationTrustorUsersGatewayTimeout{}
}

/*GetOrgauthorizationTrustorUsersGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetOrgauthorizationTrustorUsersGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetOrgauthorizationTrustorUsersGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users][%d] getOrgauthorizationTrustorUsersGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOrgauthorizationTrustorUsersGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorUsersGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
