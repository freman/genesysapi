// Code generated by go-swagger; DO NOT EDIT.

package organization_authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutOrgauthorizationTrusteeUserRoledivisionsReader is a Reader for the PutOrgauthorizationTrusteeUserRoledivisions structure.
type PutOrgauthorizationTrusteeUserRoledivisionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutOrgauthorizationTrusteeUserRoledivisionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutOrgauthorizationTrusteeUserRoledivisionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutOrgauthorizationTrusteeUserRoledivisionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutOrgauthorizationTrusteeUserRoledivisionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutOrgauthorizationTrusteeUserRoledivisionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutOrgauthorizationTrusteeUserRoledivisionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutOrgauthorizationTrusteeUserRoledivisionsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutOrgauthorizationTrusteeUserRoledivisionsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutOrgauthorizationTrusteeUserRoledivisionsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutOrgauthorizationTrusteeUserRoledivisionsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutOrgauthorizationTrusteeUserRoledivisionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutOrgauthorizationTrusteeUserRoledivisionsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutOrgauthorizationTrusteeUserRoledivisionsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutOrgauthorizationTrusteeUserRoledivisionsOK creates a PutOrgauthorizationTrusteeUserRoledivisionsOK with default headers values
func NewPutOrgauthorizationTrusteeUserRoledivisionsOK() *PutOrgauthorizationTrusteeUserRoledivisionsOK {
	return &PutOrgauthorizationTrusteeUserRoledivisionsOK{}
}

/*PutOrgauthorizationTrusteeUserRoledivisionsOK handles this case with default header values.

successful operation
*/
type PutOrgauthorizationTrusteeUserRoledivisionsOK struct {
	Payload *models.UserAuthorization
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roledivisions][%d] putOrgauthorizationTrusteeUserRoledivisionsOK  %+v", 200, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsOK) GetPayload() *models.UserAuthorization {
	return o.Payload
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserAuthorization)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrusteeUserRoledivisionsBadRequest creates a PutOrgauthorizationTrusteeUserRoledivisionsBadRequest with default headers values
func NewPutOrgauthorizationTrusteeUserRoledivisionsBadRequest() *PutOrgauthorizationTrusteeUserRoledivisionsBadRequest {
	return &PutOrgauthorizationTrusteeUserRoledivisionsBadRequest{}
}

/*PutOrgauthorizationTrusteeUserRoledivisionsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutOrgauthorizationTrusteeUserRoledivisionsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roledivisions][%d] putOrgauthorizationTrusteeUserRoledivisionsBadRequest  %+v", 400, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrusteeUserRoledivisionsUnauthorized creates a PutOrgauthorizationTrusteeUserRoledivisionsUnauthorized with default headers values
func NewPutOrgauthorizationTrusteeUserRoledivisionsUnauthorized() *PutOrgauthorizationTrusteeUserRoledivisionsUnauthorized {
	return &PutOrgauthorizationTrusteeUserRoledivisionsUnauthorized{}
}

/*PutOrgauthorizationTrusteeUserRoledivisionsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PutOrgauthorizationTrusteeUserRoledivisionsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roledivisions][%d] putOrgauthorizationTrusteeUserRoledivisionsUnauthorized  %+v", 401, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrusteeUserRoledivisionsForbidden creates a PutOrgauthorizationTrusteeUserRoledivisionsForbidden with default headers values
func NewPutOrgauthorizationTrusteeUserRoledivisionsForbidden() *PutOrgauthorizationTrusteeUserRoledivisionsForbidden {
	return &PutOrgauthorizationTrusteeUserRoledivisionsForbidden{}
}

/*PutOrgauthorizationTrusteeUserRoledivisionsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PutOrgauthorizationTrusteeUserRoledivisionsForbidden struct {
	Payload *models.ErrorBody
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roledivisions][%d] putOrgauthorizationTrusteeUserRoledivisionsForbidden  %+v", 403, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrusteeUserRoledivisionsNotFound creates a PutOrgauthorizationTrusteeUserRoledivisionsNotFound with default headers values
func NewPutOrgauthorizationTrusteeUserRoledivisionsNotFound() *PutOrgauthorizationTrusteeUserRoledivisionsNotFound {
	return &PutOrgauthorizationTrusteeUserRoledivisionsNotFound{}
}

/*PutOrgauthorizationTrusteeUserRoledivisionsNotFound handles this case with default header values.

The requested resource was not found.
*/
type PutOrgauthorizationTrusteeUserRoledivisionsNotFound struct {
	Payload *models.ErrorBody
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roledivisions][%d] putOrgauthorizationTrusteeUserRoledivisionsNotFound  %+v", 404, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrusteeUserRoledivisionsRequestTimeout creates a PutOrgauthorizationTrusteeUserRoledivisionsRequestTimeout with default headers values
func NewPutOrgauthorizationTrusteeUserRoledivisionsRequestTimeout() *PutOrgauthorizationTrusteeUserRoledivisionsRequestTimeout {
	return &PutOrgauthorizationTrusteeUserRoledivisionsRequestTimeout{}
}

/*PutOrgauthorizationTrusteeUserRoledivisionsRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutOrgauthorizationTrusteeUserRoledivisionsRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roledivisions][%d] putOrgauthorizationTrusteeUserRoledivisionsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrusteeUserRoledivisionsRequestEntityTooLarge creates a PutOrgauthorizationTrusteeUserRoledivisionsRequestEntityTooLarge with default headers values
func NewPutOrgauthorizationTrusteeUserRoledivisionsRequestEntityTooLarge() *PutOrgauthorizationTrusteeUserRoledivisionsRequestEntityTooLarge {
	return &PutOrgauthorizationTrusteeUserRoledivisionsRequestEntityTooLarge{}
}

/*PutOrgauthorizationTrusteeUserRoledivisionsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PutOrgauthorizationTrusteeUserRoledivisionsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roledivisions][%d] putOrgauthorizationTrusteeUserRoledivisionsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrusteeUserRoledivisionsUnsupportedMediaType creates a PutOrgauthorizationTrusteeUserRoledivisionsUnsupportedMediaType with default headers values
func NewPutOrgauthorizationTrusteeUserRoledivisionsUnsupportedMediaType() *PutOrgauthorizationTrusteeUserRoledivisionsUnsupportedMediaType {
	return &PutOrgauthorizationTrusteeUserRoledivisionsUnsupportedMediaType{}
}

/*PutOrgauthorizationTrusteeUserRoledivisionsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutOrgauthorizationTrusteeUserRoledivisionsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roledivisions][%d] putOrgauthorizationTrusteeUserRoledivisionsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrusteeUserRoledivisionsTooManyRequests creates a PutOrgauthorizationTrusteeUserRoledivisionsTooManyRequests with default headers values
func NewPutOrgauthorizationTrusteeUserRoledivisionsTooManyRequests() *PutOrgauthorizationTrusteeUserRoledivisionsTooManyRequests {
	return &PutOrgauthorizationTrusteeUserRoledivisionsTooManyRequests{}
}

/*PutOrgauthorizationTrusteeUserRoledivisionsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutOrgauthorizationTrusteeUserRoledivisionsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roledivisions][%d] putOrgauthorizationTrusteeUserRoledivisionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrusteeUserRoledivisionsInternalServerError creates a PutOrgauthorizationTrusteeUserRoledivisionsInternalServerError with default headers values
func NewPutOrgauthorizationTrusteeUserRoledivisionsInternalServerError() *PutOrgauthorizationTrusteeUserRoledivisionsInternalServerError {
	return &PutOrgauthorizationTrusteeUserRoledivisionsInternalServerError{}
}

/*PutOrgauthorizationTrusteeUserRoledivisionsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutOrgauthorizationTrusteeUserRoledivisionsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roledivisions][%d] putOrgauthorizationTrusteeUserRoledivisionsInternalServerError  %+v", 500, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrusteeUserRoledivisionsServiceUnavailable creates a PutOrgauthorizationTrusteeUserRoledivisionsServiceUnavailable with default headers values
func NewPutOrgauthorizationTrusteeUserRoledivisionsServiceUnavailable() *PutOrgauthorizationTrusteeUserRoledivisionsServiceUnavailable {
	return &PutOrgauthorizationTrusteeUserRoledivisionsServiceUnavailable{}
}

/*PutOrgauthorizationTrusteeUserRoledivisionsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutOrgauthorizationTrusteeUserRoledivisionsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roledivisions][%d] putOrgauthorizationTrusteeUserRoledivisionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrusteeUserRoledivisionsGatewayTimeout creates a PutOrgauthorizationTrusteeUserRoledivisionsGatewayTimeout with default headers values
func NewPutOrgauthorizationTrusteeUserRoledivisionsGatewayTimeout() *PutOrgauthorizationTrusteeUserRoledivisionsGatewayTimeout {
	return &PutOrgauthorizationTrusteeUserRoledivisionsGatewayTimeout{}
}

/*PutOrgauthorizationTrusteeUserRoledivisionsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PutOrgauthorizationTrusteeUserRoledivisionsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roledivisions][%d] putOrgauthorizationTrusteeUserRoledivisionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrusteeUserRoledivisionsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
