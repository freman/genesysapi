// Code generated by go-swagger; DO NOT EDIT.

package organization_authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutOrgauthorizationTrustorUserReader is a Reader for the PutOrgauthorizationTrustorUser structure.
type PutOrgauthorizationTrustorUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutOrgauthorizationTrustorUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutOrgauthorizationTrustorUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutOrgauthorizationTrustorUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutOrgauthorizationTrustorUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutOrgauthorizationTrustorUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutOrgauthorizationTrustorUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutOrgauthorizationTrustorUserRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutOrgauthorizationTrustorUserRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutOrgauthorizationTrustorUserUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutOrgauthorizationTrustorUserTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutOrgauthorizationTrustorUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutOrgauthorizationTrustorUserServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutOrgauthorizationTrustorUserGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutOrgauthorizationTrustorUserOK creates a PutOrgauthorizationTrustorUserOK with default headers values
func NewPutOrgauthorizationTrustorUserOK() *PutOrgauthorizationTrustorUserOK {
	return &PutOrgauthorizationTrustorUserOK{}
}

/*
PutOrgauthorizationTrustorUserOK describes a response with status code 200, with default header values.

successful operation
*/
type PutOrgauthorizationTrustorUserOK struct {
	Payload *models.TrustUser
}

// IsSuccess returns true when this put orgauthorization trustor user o k response has a 2xx status code
func (o *PutOrgauthorizationTrustorUserOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put orgauthorization trustor user o k response has a 3xx status code
func (o *PutOrgauthorizationTrustorUserOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put orgauthorization trustor user o k response has a 4xx status code
func (o *PutOrgauthorizationTrustorUserOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put orgauthorization trustor user o k response has a 5xx status code
func (o *PutOrgauthorizationTrustorUserOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put orgauthorization trustor user o k response a status code equal to that given
func (o *PutOrgauthorizationTrustorUserOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutOrgauthorizationTrustorUserOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] putOrgauthorizationTrustorUserOK  %+v", 200, o.Payload)
}

func (o *PutOrgauthorizationTrustorUserOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] putOrgauthorizationTrustorUserOK  %+v", 200, o.Payload)
}

func (o *PutOrgauthorizationTrustorUserOK) GetPayload() *models.TrustUser {
	return o.Payload
}

func (o *PutOrgauthorizationTrustorUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TrustUser)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrustorUserBadRequest creates a PutOrgauthorizationTrustorUserBadRequest with default headers values
func NewPutOrgauthorizationTrustorUserBadRequest() *PutOrgauthorizationTrustorUserBadRequest {
	return &PutOrgauthorizationTrustorUserBadRequest{}
}

/*
PutOrgauthorizationTrustorUserBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutOrgauthorizationTrustorUserBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put orgauthorization trustor user bad request response has a 2xx status code
func (o *PutOrgauthorizationTrustorUserBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put orgauthorization trustor user bad request response has a 3xx status code
func (o *PutOrgauthorizationTrustorUserBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put orgauthorization trustor user bad request response has a 4xx status code
func (o *PutOrgauthorizationTrustorUserBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put orgauthorization trustor user bad request response has a 5xx status code
func (o *PutOrgauthorizationTrustorUserBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put orgauthorization trustor user bad request response a status code equal to that given
func (o *PutOrgauthorizationTrustorUserBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutOrgauthorizationTrustorUserBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] putOrgauthorizationTrustorUserBadRequest  %+v", 400, o.Payload)
}

func (o *PutOrgauthorizationTrustorUserBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] putOrgauthorizationTrustorUserBadRequest  %+v", 400, o.Payload)
}

func (o *PutOrgauthorizationTrustorUserBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrustorUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrustorUserUnauthorized creates a PutOrgauthorizationTrustorUserUnauthorized with default headers values
func NewPutOrgauthorizationTrustorUserUnauthorized() *PutOrgauthorizationTrustorUserUnauthorized {
	return &PutOrgauthorizationTrustorUserUnauthorized{}
}

/*
PutOrgauthorizationTrustorUserUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutOrgauthorizationTrustorUserUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put orgauthorization trustor user unauthorized response has a 2xx status code
func (o *PutOrgauthorizationTrustorUserUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put orgauthorization trustor user unauthorized response has a 3xx status code
func (o *PutOrgauthorizationTrustorUserUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put orgauthorization trustor user unauthorized response has a 4xx status code
func (o *PutOrgauthorizationTrustorUserUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put orgauthorization trustor user unauthorized response has a 5xx status code
func (o *PutOrgauthorizationTrustorUserUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put orgauthorization trustor user unauthorized response a status code equal to that given
func (o *PutOrgauthorizationTrustorUserUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutOrgauthorizationTrustorUserUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] putOrgauthorizationTrustorUserUnauthorized  %+v", 401, o.Payload)
}

func (o *PutOrgauthorizationTrustorUserUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] putOrgauthorizationTrustorUserUnauthorized  %+v", 401, o.Payload)
}

func (o *PutOrgauthorizationTrustorUserUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrustorUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrustorUserForbidden creates a PutOrgauthorizationTrustorUserForbidden with default headers values
func NewPutOrgauthorizationTrustorUserForbidden() *PutOrgauthorizationTrustorUserForbidden {
	return &PutOrgauthorizationTrustorUserForbidden{}
}

/*
PutOrgauthorizationTrustorUserForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutOrgauthorizationTrustorUserForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put orgauthorization trustor user forbidden response has a 2xx status code
func (o *PutOrgauthorizationTrustorUserForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put orgauthorization trustor user forbidden response has a 3xx status code
func (o *PutOrgauthorizationTrustorUserForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put orgauthorization trustor user forbidden response has a 4xx status code
func (o *PutOrgauthorizationTrustorUserForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put orgauthorization trustor user forbidden response has a 5xx status code
func (o *PutOrgauthorizationTrustorUserForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put orgauthorization trustor user forbidden response a status code equal to that given
func (o *PutOrgauthorizationTrustorUserForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutOrgauthorizationTrustorUserForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] putOrgauthorizationTrustorUserForbidden  %+v", 403, o.Payload)
}

func (o *PutOrgauthorizationTrustorUserForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] putOrgauthorizationTrustorUserForbidden  %+v", 403, o.Payload)
}

func (o *PutOrgauthorizationTrustorUserForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrustorUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrustorUserNotFound creates a PutOrgauthorizationTrustorUserNotFound with default headers values
func NewPutOrgauthorizationTrustorUserNotFound() *PutOrgauthorizationTrustorUserNotFound {
	return &PutOrgauthorizationTrustorUserNotFound{}
}

/*
PutOrgauthorizationTrustorUserNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutOrgauthorizationTrustorUserNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put orgauthorization trustor user not found response has a 2xx status code
func (o *PutOrgauthorizationTrustorUserNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put orgauthorization trustor user not found response has a 3xx status code
func (o *PutOrgauthorizationTrustorUserNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put orgauthorization trustor user not found response has a 4xx status code
func (o *PutOrgauthorizationTrustorUserNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put orgauthorization trustor user not found response has a 5xx status code
func (o *PutOrgauthorizationTrustorUserNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put orgauthorization trustor user not found response a status code equal to that given
func (o *PutOrgauthorizationTrustorUserNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutOrgauthorizationTrustorUserNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] putOrgauthorizationTrustorUserNotFound  %+v", 404, o.Payload)
}

func (o *PutOrgauthorizationTrustorUserNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] putOrgauthorizationTrustorUserNotFound  %+v", 404, o.Payload)
}

func (o *PutOrgauthorizationTrustorUserNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrustorUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrustorUserRequestTimeout creates a PutOrgauthorizationTrustorUserRequestTimeout with default headers values
func NewPutOrgauthorizationTrustorUserRequestTimeout() *PutOrgauthorizationTrustorUserRequestTimeout {
	return &PutOrgauthorizationTrustorUserRequestTimeout{}
}

/*
PutOrgauthorizationTrustorUserRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutOrgauthorizationTrustorUserRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put orgauthorization trustor user request timeout response has a 2xx status code
func (o *PutOrgauthorizationTrustorUserRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put orgauthorization trustor user request timeout response has a 3xx status code
func (o *PutOrgauthorizationTrustorUserRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put orgauthorization trustor user request timeout response has a 4xx status code
func (o *PutOrgauthorizationTrustorUserRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put orgauthorization trustor user request timeout response has a 5xx status code
func (o *PutOrgauthorizationTrustorUserRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put orgauthorization trustor user request timeout response a status code equal to that given
func (o *PutOrgauthorizationTrustorUserRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutOrgauthorizationTrustorUserRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] putOrgauthorizationTrustorUserRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutOrgauthorizationTrustorUserRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] putOrgauthorizationTrustorUserRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutOrgauthorizationTrustorUserRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrustorUserRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrustorUserRequestEntityTooLarge creates a PutOrgauthorizationTrustorUserRequestEntityTooLarge with default headers values
func NewPutOrgauthorizationTrustorUserRequestEntityTooLarge() *PutOrgauthorizationTrustorUserRequestEntityTooLarge {
	return &PutOrgauthorizationTrustorUserRequestEntityTooLarge{}
}

/*
PutOrgauthorizationTrustorUserRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PutOrgauthorizationTrustorUserRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put orgauthorization trustor user request entity too large response has a 2xx status code
func (o *PutOrgauthorizationTrustorUserRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put orgauthorization trustor user request entity too large response has a 3xx status code
func (o *PutOrgauthorizationTrustorUserRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put orgauthorization trustor user request entity too large response has a 4xx status code
func (o *PutOrgauthorizationTrustorUserRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put orgauthorization trustor user request entity too large response has a 5xx status code
func (o *PutOrgauthorizationTrustorUserRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put orgauthorization trustor user request entity too large response a status code equal to that given
func (o *PutOrgauthorizationTrustorUserRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutOrgauthorizationTrustorUserRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] putOrgauthorizationTrustorUserRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutOrgauthorizationTrustorUserRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] putOrgauthorizationTrustorUserRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutOrgauthorizationTrustorUserRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrustorUserRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrustorUserUnsupportedMediaType creates a PutOrgauthorizationTrustorUserUnsupportedMediaType with default headers values
func NewPutOrgauthorizationTrustorUserUnsupportedMediaType() *PutOrgauthorizationTrustorUserUnsupportedMediaType {
	return &PutOrgauthorizationTrustorUserUnsupportedMediaType{}
}

/*
PutOrgauthorizationTrustorUserUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutOrgauthorizationTrustorUserUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put orgauthorization trustor user unsupported media type response has a 2xx status code
func (o *PutOrgauthorizationTrustorUserUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put orgauthorization trustor user unsupported media type response has a 3xx status code
func (o *PutOrgauthorizationTrustorUserUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put orgauthorization trustor user unsupported media type response has a 4xx status code
func (o *PutOrgauthorizationTrustorUserUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put orgauthorization trustor user unsupported media type response has a 5xx status code
func (o *PutOrgauthorizationTrustorUserUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put orgauthorization trustor user unsupported media type response a status code equal to that given
func (o *PutOrgauthorizationTrustorUserUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutOrgauthorizationTrustorUserUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] putOrgauthorizationTrustorUserUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutOrgauthorizationTrustorUserUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] putOrgauthorizationTrustorUserUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutOrgauthorizationTrustorUserUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrustorUserUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrustorUserTooManyRequests creates a PutOrgauthorizationTrustorUserTooManyRequests with default headers values
func NewPutOrgauthorizationTrustorUserTooManyRequests() *PutOrgauthorizationTrustorUserTooManyRequests {
	return &PutOrgauthorizationTrustorUserTooManyRequests{}
}

/*
PutOrgauthorizationTrustorUserTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutOrgauthorizationTrustorUserTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put orgauthorization trustor user too many requests response has a 2xx status code
func (o *PutOrgauthorizationTrustorUserTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put orgauthorization trustor user too many requests response has a 3xx status code
func (o *PutOrgauthorizationTrustorUserTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put orgauthorization trustor user too many requests response has a 4xx status code
func (o *PutOrgauthorizationTrustorUserTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put orgauthorization trustor user too many requests response has a 5xx status code
func (o *PutOrgauthorizationTrustorUserTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put orgauthorization trustor user too many requests response a status code equal to that given
func (o *PutOrgauthorizationTrustorUserTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutOrgauthorizationTrustorUserTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] putOrgauthorizationTrustorUserTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutOrgauthorizationTrustorUserTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] putOrgauthorizationTrustorUserTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutOrgauthorizationTrustorUserTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrustorUserTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrustorUserInternalServerError creates a PutOrgauthorizationTrustorUserInternalServerError with default headers values
func NewPutOrgauthorizationTrustorUserInternalServerError() *PutOrgauthorizationTrustorUserInternalServerError {
	return &PutOrgauthorizationTrustorUserInternalServerError{}
}

/*
PutOrgauthorizationTrustorUserInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutOrgauthorizationTrustorUserInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put orgauthorization trustor user internal server error response has a 2xx status code
func (o *PutOrgauthorizationTrustorUserInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put orgauthorization trustor user internal server error response has a 3xx status code
func (o *PutOrgauthorizationTrustorUserInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put orgauthorization trustor user internal server error response has a 4xx status code
func (o *PutOrgauthorizationTrustorUserInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put orgauthorization trustor user internal server error response has a 5xx status code
func (o *PutOrgauthorizationTrustorUserInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put orgauthorization trustor user internal server error response a status code equal to that given
func (o *PutOrgauthorizationTrustorUserInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutOrgauthorizationTrustorUserInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] putOrgauthorizationTrustorUserInternalServerError  %+v", 500, o.Payload)
}

func (o *PutOrgauthorizationTrustorUserInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] putOrgauthorizationTrustorUserInternalServerError  %+v", 500, o.Payload)
}

func (o *PutOrgauthorizationTrustorUserInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrustorUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrustorUserServiceUnavailable creates a PutOrgauthorizationTrustorUserServiceUnavailable with default headers values
func NewPutOrgauthorizationTrustorUserServiceUnavailable() *PutOrgauthorizationTrustorUserServiceUnavailable {
	return &PutOrgauthorizationTrustorUserServiceUnavailable{}
}

/*
PutOrgauthorizationTrustorUserServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutOrgauthorizationTrustorUserServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put orgauthorization trustor user service unavailable response has a 2xx status code
func (o *PutOrgauthorizationTrustorUserServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put orgauthorization trustor user service unavailable response has a 3xx status code
func (o *PutOrgauthorizationTrustorUserServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put orgauthorization trustor user service unavailable response has a 4xx status code
func (o *PutOrgauthorizationTrustorUserServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put orgauthorization trustor user service unavailable response has a 5xx status code
func (o *PutOrgauthorizationTrustorUserServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put orgauthorization trustor user service unavailable response a status code equal to that given
func (o *PutOrgauthorizationTrustorUserServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutOrgauthorizationTrustorUserServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] putOrgauthorizationTrustorUserServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutOrgauthorizationTrustorUserServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] putOrgauthorizationTrustorUserServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutOrgauthorizationTrustorUserServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrustorUserServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrustorUserGatewayTimeout creates a PutOrgauthorizationTrustorUserGatewayTimeout with default headers values
func NewPutOrgauthorizationTrustorUserGatewayTimeout() *PutOrgauthorizationTrustorUserGatewayTimeout {
	return &PutOrgauthorizationTrustorUserGatewayTimeout{}
}

/*
PutOrgauthorizationTrustorUserGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutOrgauthorizationTrustorUserGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put orgauthorization trustor user gateway timeout response has a 2xx status code
func (o *PutOrgauthorizationTrustorUserGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put orgauthorization trustor user gateway timeout response has a 3xx status code
func (o *PutOrgauthorizationTrustorUserGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put orgauthorization trustor user gateway timeout response has a 4xx status code
func (o *PutOrgauthorizationTrustorUserGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put orgauthorization trustor user gateway timeout response has a 5xx status code
func (o *PutOrgauthorizationTrustorUserGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put orgauthorization trustor user gateway timeout response a status code equal to that given
func (o *PutOrgauthorizationTrustorUserGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutOrgauthorizationTrustorUserGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] putOrgauthorizationTrustorUserGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutOrgauthorizationTrustorUserGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] putOrgauthorizationTrustorUserGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutOrgauthorizationTrustorUserGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrustorUserGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
