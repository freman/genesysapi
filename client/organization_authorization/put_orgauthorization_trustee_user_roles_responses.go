// Code generated by go-swagger; DO NOT EDIT.

package organization_authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutOrgauthorizationTrusteeUserRolesReader is a Reader for the PutOrgauthorizationTrusteeUserRoles structure.
type PutOrgauthorizationTrusteeUserRolesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutOrgauthorizationTrusteeUserRolesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutOrgauthorizationTrusteeUserRolesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutOrgauthorizationTrusteeUserRolesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutOrgauthorizationTrusteeUserRolesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutOrgauthorizationTrusteeUserRolesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutOrgauthorizationTrusteeUserRolesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutOrgauthorizationTrusteeUserRolesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutOrgauthorizationTrusteeUserRolesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutOrgauthorizationTrusteeUserRolesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutOrgauthorizationTrusteeUserRolesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutOrgauthorizationTrusteeUserRolesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutOrgauthorizationTrusteeUserRolesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutOrgauthorizationTrusteeUserRolesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutOrgauthorizationTrusteeUserRolesOK creates a PutOrgauthorizationTrusteeUserRolesOK with default headers values
func NewPutOrgauthorizationTrusteeUserRolesOK() *PutOrgauthorizationTrusteeUserRolesOK {
	return &PutOrgauthorizationTrusteeUserRolesOK{}
}

/*
PutOrgauthorizationTrusteeUserRolesOK describes a response with status code 200, with default header values.

successful operation
*/
type PutOrgauthorizationTrusteeUserRolesOK struct {
	Payload *models.UserAuthorization
}

// IsSuccess returns true when this put orgauthorization trustee user roles o k response has a 2xx status code
func (o *PutOrgauthorizationTrusteeUserRolesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put orgauthorization trustee user roles o k response has a 3xx status code
func (o *PutOrgauthorizationTrusteeUserRolesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put orgauthorization trustee user roles o k response has a 4xx status code
func (o *PutOrgauthorizationTrusteeUserRolesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put orgauthorization trustee user roles o k response has a 5xx status code
func (o *PutOrgauthorizationTrusteeUserRolesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put orgauthorization trustee user roles o k response a status code equal to that given
func (o *PutOrgauthorizationTrusteeUserRolesOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutOrgauthorizationTrusteeUserRolesOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles][%d] putOrgauthorizationTrusteeUserRolesOK  %+v", 200, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRolesOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles][%d] putOrgauthorizationTrusteeUserRolesOK  %+v", 200, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRolesOK) GetPayload() *models.UserAuthorization {
	return o.Payload
}

func (o *PutOrgauthorizationTrusteeUserRolesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserAuthorization)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrusteeUserRolesBadRequest creates a PutOrgauthorizationTrusteeUserRolesBadRequest with default headers values
func NewPutOrgauthorizationTrusteeUserRolesBadRequest() *PutOrgauthorizationTrusteeUserRolesBadRequest {
	return &PutOrgauthorizationTrusteeUserRolesBadRequest{}
}

/*
PutOrgauthorizationTrusteeUserRolesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutOrgauthorizationTrusteeUserRolesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put orgauthorization trustee user roles bad request response has a 2xx status code
func (o *PutOrgauthorizationTrusteeUserRolesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put orgauthorization trustee user roles bad request response has a 3xx status code
func (o *PutOrgauthorizationTrusteeUserRolesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put orgauthorization trustee user roles bad request response has a 4xx status code
func (o *PutOrgauthorizationTrusteeUserRolesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put orgauthorization trustee user roles bad request response has a 5xx status code
func (o *PutOrgauthorizationTrusteeUserRolesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put orgauthorization trustee user roles bad request response a status code equal to that given
func (o *PutOrgauthorizationTrusteeUserRolesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutOrgauthorizationTrusteeUserRolesBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles][%d] putOrgauthorizationTrusteeUserRolesBadRequest  %+v", 400, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRolesBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles][%d] putOrgauthorizationTrusteeUserRolesBadRequest  %+v", 400, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRolesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrusteeUserRolesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrusteeUserRolesUnauthorized creates a PutOrgauthorizationTrusteeUserRolesUnauthorized with default headers values
func NewPutOrgauthorizationTrusteeUserRolesUnauthorized() *PutOrgauthorizationTrusteeUserRolesUnauthorized {
	return &PutOrgauthorizationTrusteeUserRolesUnauthorized{}
}

/*
PutOrgauthorizationTrusteeUserRolesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutOrgauthorizationTrusteeUserRolesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put orgauthorization trustee user roles unauthorized response has a 2xx status code
func (o *PutOrgauthorizationTrusteeUserRolesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put orgauthorization trustee user roles unauthorized response has a 3xx status code
func (o *PutOrgauthorizationTrusteeUserRolesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put orgauthorization trustee user roles unauthorized response has a 4xx status code
func (o *PutOrgauthorizationTrusteeUserRolesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put orgauthorization trustee user roles unauthorized response has a 5xx status code
func (o *PutOrgauthorizationTrusteeUserRolesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put orgauthorization trustee user roles unauthorized response a status code equal to that given
func (o *PutOrgauthorizationTrusteeUserRolesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutOrgauthorizationTrusteeUserRolesUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles][%d] putOrgauthorizationTrusteeUserRolesUnauthorized  %+v", 401, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRolesUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles][%d] putOrgauthorizationTrusteeUserRolesUnauthorized  %+v", 401, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRolesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrusteeUserRolesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrusteeUserRolesForbidden creates a PutOrgauthorizationTrusteeUserRolesForbidden with default headers values
func NewPutOrgauthorizationTrusteeUserRolesForbidden() *PutOrgauthorizationTrusteeUserRolesForbidden {
	return &PutOrgauthorizationTrusteeUserRolesForbidden{}
}

/*
PutOrgauthorizationTrusteeUserRolesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutOrgauthorizationTrusteeUserRolesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put orgauthorization trustee user roles forbidden response has a 2xx status code
func (o *PutOrgauthorizationTrusteeUserRolesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put orgauthorization trustee user roles forbidden response has a 3xx status code
func (o *PutOrgauthorizationTrusteeUserRolesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put orgauthorization trustee user roles forbidden response has a 4xx status code
func (o *PutOrgauthorizationTrusteeUserRolesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put orgauthorization trustee user roles forbidden response has a 5xx status code
func (o *PutOrgauthorizationTrusteeUserRolesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put orgauthorization trustee user roles forbidden response a status code equal to that given
func (o *PutOrgauthorizationTrusteeUserRolesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutOrgauthorizationTrusteeUserRolesForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles][%d] putOrgauthorizationTrusteeUserRolesForbidden  %+v", 403, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRolesForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles][%d] putOrgauthorizationTrusteeUserRolesForbidden  %+v", 403, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRolesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrusteeUserRolesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrusteeUserRolesNotFound creates a PutOrgauthorizationTrusteeUserRolesNotFound with default headers values
func NewPutOrgauthorizationTrusteeUserRolesNotFound() *PutOrgauthorizationTrusteeUserRolesNotFound {
	return &PutOrgauthorizationTrusteeUserRolesNotFound{}
}

/*
PutOrgauthorizationTrusteeUserRolesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutOrgauthorizationTrusteeUserRolesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put orgauthorization trustee user roles not found response has a 2xx status code
func (o *PutOrgauthorizationTrusteeUserRolesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put orgauthorization trustee user roles not found response has a 3xx status code
func (o *PutOrgauthorizationTrusteeUserRolesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put orgauthorization trustee user roles not found response has a 4xx status code
func (o *PutOrgauthorizationTrusteeUserRolesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put orgauthorization trustee user roles not found response has a 5xx status code
func (o *PutOrgauthorizationTrusteeUserRolesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put orgauthorization trustee user roles not found response a status code equal to that given
func (o *PutOrgauthorizationTrusteeUserRolesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutOrgauthorizationTrusteeUserRolesNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles][%d] putOrgauthorizationTrusteeUserRolesNotFound  %+v", 404, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRolesNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles][%d] putOrgauthorizationTrusteeUserRolesNotFound  %+v", 404, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRolesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrusteeUserRolesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrusteeUserRolesRequestTimeout creates a PutOrgauthorizationTrusteeUserRolesRequestTimeout with default headers values
func NewPutOrgauthorizationTrusteeUserRolesRequestTimeout() *PutOrgauthorizationTrusteeUserRolesRequestTimeout {
	return &PutOrgauthorizationTrusteeUserRolesRequestTimeout{}
}

/*
PutOrgauthorizationTrusteeUserRolesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutOrgauthorizationTrusteeUserRolesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put orgauthorization trustee user roles request timeout response has a 2xx status code
func (o *PutOrgauthorizationTrusteeUserRolesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put orgauthorization trustee user roles request timeout response has a 3xx status code
func (o *PutOrgauthorizationTrusteeUserRolesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put orgauthorization trustee user roles request timeout response has a 4xx status code
func (o *PutOrgauthorizationTrusteeUserRolesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put orgauthorization trustee user roles request timeout response has a 5xx status code
func (o *PutOrgauthorizationTrusteeUserRolesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put orgauthorization trustee user roles request timeout response a status code equal to that given
func (o *PutOrgauthorizationTrusteeUserRolesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutOrgauthorizationTrusteeUserRolesRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles][%d] putOrgauthorizationTrusteeUserRolesRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRolesRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles][%d] putOrgauthorizationTrusteeUserRolesRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRolesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrusteeUserRolesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrusteeUserRolesRequestEntityTooLarge creates a PutOrgauthorizationTrusteeUserRolesRequestEntityTooLarge with default headers values
func NewPutOrgauthorizationTrusteeUserRolesRequestEntityTooLarge() *PutOrgauthorizationTrusteeUserRolesRequestEntityTooLarge {
	return &PutOrgauthorizationTrusteeUserRolesRequestEntityTooLarge{}
}

/*
PutOrgauthorizationTrusteeUserRolesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PutOrgauthorizationTrusteeUserRolesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put orgauthorization trustee user roles request entity too large response has a 2xx status code
func (o *PutOrgauthorizationTrusteeUserRolesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put orgauthorization trustee user roles request entity too large response has a 3xx status code
func (o *PutOrgauthorizationTrusteeUserRolesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put orgauthorization trustee user roles request entity too large response has a 4xx status code
func (o *PutOrgauthorizationTrusteeUserRolesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put orgauthorization trustee user roles request entity too large response has a 5xx status code
func (o *PutOrgauthorizationTrusteeUserRolesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put orgauthorization trustee user roles request entity too large response a status code equal to that given
func (o *PutOrgauthorizationTrusteeUserRolesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutOrgauthorizationTrusteeUserRolesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles][%d] putOrgauthorizationTrusteeUserRolesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRolesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles][%d] putOrgauthorizationTrusteeUserRolesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRolesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrusteeUserRolesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrusteeUserRolesUnsupportedMediaType creates a PutOrgauthorizationTrusteeUserRolesUnsupportedMediaType with default headers values
func NewPutOrgauthorizationTrusteeUserRolesUnsupportedMediaType() *PutOrgauthorizationTrusteeUserRolesUnsupportedMediaType {
	return &PutOrgauthorizationTrusteeUserRolesUnsupportedMediaType{}
}

/*
PutOrgauthorizationTrusteeUserRolesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutOrgauthorizationTrusteeUserRolesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put orgauthorization trustee user roles unsupported media type response has a 2xx status code
func (o *PutOrgauthorizationTrusteeUserRolesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put orgauthorization trustee user roles unsupported media type response has a 3xx status code
func (o *PutOrgauthorizationTrusteeUserRolesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put orgauthorization trustee user roles unsupported media type response has a 4xx status code
func (o *PutOrgauthorizationTrusteeUserRolesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put orgauthorization trustee user roles unsupported media type response has a 5xx status code
func (o *PutOrgauthorizationTrusteeUserRolesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put orgauthorization trustee user roles unsupported media type response a status code equal to that given
func (o *PutOrgauthorizationTrusteeUserRolesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutOrgauthorizationTrusteeUserRolesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles][%d] putOrgauthorizationTrusteeUserRolesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRolesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles][%d] putOrgauthorizationTrusteeUserRolesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRolesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrusteeUserRolesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrusteeUserRolesTooManyRequests creates a PutOrgauthorizationTrusteeUserRolesTooManyRequests with default headers values
func NewPutOrgauthorizationTrusteeUserRolesTooManyRequests() *PutOrgauthorizationTrusteeUserRolesTooManyRequests {
	return &PutOrgauthorizationTrusteeUserRolesTooManyRequests{}
}

/*
PutOrgauthorizationTrusteeUserRolesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutOrgauthorizationTrusteeUserRolesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put orgauthorization trustee user roles too many requests response has a 2xx status code
func (o *PutOrgauthorizationTrusteeUserRolesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put orgauthorization trustee user roles too many requests response has a 3xx status code
func (o *PutOrgauthorizationTrusteeUserRolesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put orgauthorization trustee user roles too many requests response has a 4xx status code
func (o *PutOrgauthorizationTrusteeUserRolesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put orgauthorization trustee user roles too many requests response has a 5xx status code
func (o *PutOrgauthorizationTrusteeUserRolesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put orgauthorization trustee user roles too many requests response a status code equal to that given
func (o *PutOrgauthorizationTrusteeUserRolesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutOrgauthorizationTrusteeUserRolesTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles][%d] putOrgauthorizationTrusteeUserRolesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRolesTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles][%d] putOrgauthorizationTrusteeUserRolesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRolesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrusteeUserRolesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrusteeUserRolesInternalServerError creates a PutOrgauthorizationTrusteeUserRolesInternalServerError with default headers values
func NewPutOrgauthorizationTrusteeUserRolesInternalServerError() *PutOrgauthorizationTrusteeUserRolesInternalServerError {
	return &PutOrgauthorizationTrusteeUserRolesInternalServerError{}
}

/*
PutOrgauthorizationTrusteeUserRolesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutOrgauthorizationTrusteeUserRolesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put orgauthorization trustee user roles internal server error response has a 2xx status code
func (o *PutOrgauthorizationTrusteeUserRolesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put orgauthorization trustee user roles internal server error response has a 3xx status code
func (o *PutOrgauthorizationTrusteeUserRolesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put orgauthorization trustee user roles internal server error response has a 4xx status code
func (o *PutOrgauthorizationTrusteeUserRolesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put orgauthorization trustee user roles internal server error response has a 5xx status code
func (o *PutOrgauthorizationTrusteeUserRolesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put orgauthorization trustee user roles internal server error response a status code equal to that given
func (o *PutOrgauthorizationTrusteeUserRolesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutOrgauthorizationTrusteeUserRolesInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles][%d] putOrgauthorizationTrusteeUserRolesInternalServerError  %+v", 500, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRolesInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles][%d] putOrgauthorizationTrusteeUserRolesInternalServerError  %+v", 500, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRolesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrusteeUserRolesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrusteeUserRolesServiceUnavailable creates a PutOrgauthorizationTrusteeUserRolesServiceUnavailable with default headers values
func NewPutOrgauthorizationTrusteeUserRolesServiceUnavailable() *PutOrgauthorizationTrusteeUserRolesServiceUnavailable {
	return &PutOrgauthorizationTrusteeUserRolesServiceUnavailable{}
}

/*
PutOrgauthorizationTrusteeUserRolesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutOrgauthorizationTrusteeUserRolesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put orgauthorization trustee user roles service unavailable response has a 2xx status code
func (o *PutOrgauthorizationTrusteeUserRolesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put orgauthorization trustee user roles service unavailable response has a 3xx status code
func (o *PutOrgauthorizationTrusteeUserRolesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put orgauthorization trustee user roles service unavailable response has a 4xx status code
func (o *PutOrgauthorizationTrusteeUserRolesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put orgauthorization trustee user roles service unavailable response has a 5xx status code
func (o *PutOrgauthorizationTrusteeUserRolesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put orgauthorization trustee user roles service unavailable response a status code equal to that given
func (o *PutOrgauthorizationTrusteeUserRolesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutOrgauthorizationTrusteeUserRolesServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles][%d] putOrgauthorizationTrusteeUserRolesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRolesServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles][%d] putOrgauthorizationTrusteeUserRolesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRolesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrusteeUserRolesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrgauthorizationTrusteeUserRolesGatewayTimeout creates a PutOrgauthorizationTrusteeUserRolesGatewayTimeout with default headers values
func NewPutOrgauthorizationTrusteeUserRolesGatewayTimeout() *PutOrgauthorizationTrusteeUserRolesGatewayTimeout {
	return &PutOrgauthorizationTrusteeUserRolesGatewayTimeout{}
}

/*
PutOrgauthorizationTrusteeUserRolesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutOrgauthorizationTrusteeUserRolesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put orgauthorization trustee user roles gateway timeout response has a 2xx status code
func (o *PutOrgauthorizationTrusteeUserRolesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put orgauthorization trustee user roles gateway timeout response has a 3xx status code
func (o *PutOrgauthorizationTrusteeUserRolesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put orgauthorization trustee user roles gateway timeout response has a 4xx status code
func (o *PutOrgauthorizationTrusteeUserRolesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put orgauthorization trustee user roles gateway timeout response has a 5xx status code
func (o *PutOrgauthorizationTrusteeUserRolesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put orgauthorization trustee user roles gateway timeout response a status code equal to that given
func (o *PutOrgauthorizationTrusteeUserRolesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutOrgauthorizationTrusteeUserRolesGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles][%d] putOrgauthorizationTrusteeUserRolesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRolesGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles][%d] putOrgauthorizationTrusteeUserRolesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutOrgauthorizationTrusteeUserRolesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutOrgauthorizationTrusteeUserRolesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
