// Code generated by go-swagger; DO NOT EDIT.

package organization_authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetOrgauthorizationTrustorReader is a Reader for the GetOrgauthorizationTrustor structure.
type GetOrgauthorizationTrustorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrgauthorizationTrustorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrgauthorizationTrustorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOrgauthorizationTrustorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOrgauthorizationTrustorUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOrgauthorizationTrustorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOrgauthorizationTrustorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetOrgauthorizationTrustorRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetOrgauthorizationTrustorRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetOrgauthorizationTrustorUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetOrgauthorizationTrustorTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOrgauthorizationTrustorInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetOrgauthorizationTrustorServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetOrgauthorizationTrustorGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOrgauthorizationTrustorOK creates a GetOrgauthorizationTrustorOK with default headers values
func NewGetOrgauthorizationTrustorOK() *GetOrgauthorizationTrustorOK {
	return &GetOrgauthorizationTrustorOK{}
}

/*GetOrgauthorizationTrustorOK handles this case with default header values.

successful operation
*/
type GetOrgauthorizationTrustorOK struct {
	Payload *models.Trustor
}

func (o *GetOrgauthorizationTrustorOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}][%d] getOrgauthorizationTrustorOK  %+v", 200, o.Payload)
}

func (o *GetOrgauthorizationTrustorOK) GetPayload() *models.Trustor {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Trustor)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorBadRequest creates a GetOrgauthorizationTrustorBadRequest with default headers values
func NewGetOrgauthorizationTrustorBadRequest() *GetOrgauthorizationTrustorBadRequest {
	return &GetOrgauthorizationTrustorBadRequest{}
}

/*GetOrgauthorizationTrustorBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetOrgauthorizationTrustorBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetOrgauthorizationTrustorBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}][%d] getOrgauthorizationTrustorBadRequest  %+v", 400, o.Payload)
}

func (o *GetOrgauthorizationTrustorBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorUnauthorized creates a GetOrgauthorizationTrustorUnauthorized with default headers values
func NewGetOrgauthorizationTrustorUnauthorized() *GetOrgauthorizationTrustorUnauthorized {
	return &GetOrgauthorizationTrustorUnauthorized{}
}

/*GetOrgauthorizationTrustorUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetOrgauthorizationTrustorUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetOrgauthorizationTrustorUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}][%d] getOrgauthorizationTrustorUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOrgauthorizationTrustorUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorForbidden creates a GetOrgauthorizationTrustorForbidden with default headers values
func NewGetOrgauthorizationTrustorForbidden() *GetOrgauthorizationTrustorForbidden {
	return &GetOrgauthorizationTrustorForbidden{}
}

/*GetOrgauthorizationTrustorForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetOrgauthorizationTrustorForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetOrgauthorizationTrustorForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}][%d] getOrgauthorizationTrustorForbidden  %+v", 403, o.Payload)
}

func (o *GetOrgauthorizationTrustorForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorNotFound creates a GetOrgauthorizationTrustorNotFound with default headers values
func NewGetOrgauthorizationTrustorNotFound() *GetOrgauthorizationTrustorNotFound {
	return &GetOrgauthorizationTrustorNotFound{}
}

/*GetOrgauthorizationTrustorNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetOrgauthorizationTrustorNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetOrgauthorizationTrustorNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}][%d] getOrgauthorizationTrustorNotFound  %+v", 404, o.Payload)
}

func (o *GetOrgauthorizationTrustorNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorRequestTimeout creates a GetOrgauthorizationTrustorRequestTimeout with default headers values
func NewGetOrgauthorizationTrustorRequestTimeout() *GetOrgauthorizationTrustorRequestTimeout {
	return &GetOrgauthorizationTrustorRequestTimeout{}
}

/*GetOrgauthorizationTrustorRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetOrgauthorizationTrustorRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetOrgauthorizationTrustorRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}][%d] getOrgauthorizationTrustorRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetOrgauthorizationTrustorRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorRequestEntityTooLarge creates a GetOrgauthorizationTrustorRequestEntityTooLarge with default headers values
func NewGetOrgauthorizationTrustorRequestEntityTooLarge() *GetOrgauthorizationTrustorRequestEntityTooLarge {
	return &GetOrgauthorizationTrustorRequestEntityTooLarge{}
}

/*GetOrgauthorizationTrustorRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetOrgauthorizationTrustorRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetOrgauthorizationTrustorRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}][%d] getOrgauthorizationTrustorRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetOrgauthorizationTrustorRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorUnsupportedMediaType creates a GetOrgauthorizationTrustorUnsupportedMediaType with default headers values
func NewGetOrgauthorizationTrustorUnsupportedMediaType() *GetOrgauthorizationTrustorUnsupportedMediaType {
	return &GetOrgauthorizationTrustorUnsupportedMediaType{}
}

/*GetOrgauthorizationTrustorUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetOrgauthorizationTrustorUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetOrgauthorizationTrustorUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}][%d] getOrgauthorizationTrustorUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetOrgauthorizationTrustorUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorTooManyRequests creates a GetOrgauthorizationTrustorTooManyRequests with default headers values
func NewGetOrgauthorizationTrustorTooManyRequests() *GetOrgauthorizationTrustorTooManyRequests {
	return &GetOrgauthorizationTrustorTooManyRequests{}
}

/*GetOrgauthorizationTrustorTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetOrgauthorizationTrustorTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetOrgauthorizationTrustorTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}][%d] getOrgauthorizationTrustorTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOrgauthorizationTrustorTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorInternalServerError creates a GetOrgauthorizationTrustorInternalServerError with default headers values
func NewGetOrgauthorizationTrustorInternalServerError() *GetOrgauthorizationTrustorInternalServerError {
	return &GetOrgauthorizationTrustorInternalServerError{}
}

/*GetOrgauthorizationTrustorInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetOrgauthorizationTrustorInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetOrgauthorizationTrustorInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}][%d] getOrgauthorizationTrustorInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOrgauthorizationTrustorInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorServiceUnavailable creates a GetOrgauthorizationTrustorServiceUnavailable with default headers values
func NewGetOrgauthorizationTrustorServiceUnavailable() *GetOrgauthorizationTrustorServiceUnavailable {
	return &GetOrgauthorizationTrustorServiceUnavailable{}
}

/*GetOrgauthorizationTrustorServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetOrgauthorizationTrustorServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetOrgauthorizationTrustorServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}][%d] getOrgauthorizationTrustorServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOrgauthorizationTrustorServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorGatewayTimeout creates a GetOrgauthorizationTrustorGatewayTimeout with default headers values
func NewGetOrgauthorizationTrustorGatewayTimeout() *GetOrgauthorizationTrustorGatewayTimeout {
	return &GetOrgauthorizationTrustorGatewayTimeout{}
}

/*GetOrgauthorizationTrustorGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetOrgauthorizationTrustorGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetOrgauthorizationTrustorGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}][%d] getOrgauthorizationTrustorGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOrgauthorizationTrustorGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
