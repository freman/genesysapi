// Code generated by go-swagger; DO NOT EDIT.

package organization_authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPutOrgauthorizationTrusteeGroupRolesParams creates a new PutOrgauthorizationTrusteeGroupRolesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPutOrgauthorizationTrusteeGroupRolesParams() *PutOrgauthorizationTrusteeGroupRolesParams {
	return &PutOrgauthorizationTrusteeGroupRolesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPutOrgauthorizationTrusteeGroupRolesParamsWithTimeout creates a new PutOrgauthorizationTrusteeGroupRolesParams object
// with the ability to set a timeout on a request.
func NewPutOrgauthorizationTrusteeGroupRolesParamsWithTimeout(timeout time.Duration) *PutOrgauthorizationTrusteeGroupRolesParams {
	return &PutOrgauthorizationTrusteeGroupRolesParams{
		timeout: timeout,
	}
}

// NewPutOrgauthorizationTrusteeGroupRolesParamsWithContext creates a new PutOrgauthorizationTrusteeGroupRolesParams object
// with the ability to set a context for a request.
func NewPutOrgauthorizationTrusteeGroupRolesParamsWithContext(ctx context.Context) *PutOrgauthorizationTrusteeGroupRolesParams {
	return &PutOrgauthorizationTrusteeGroupRolesParams{
		Context: ctx,
	}
}

// NewPutOrgauthorizationTrusteeGroupRolesParamsWithHTTPClient creates a new PutOrgauthorizationTrusteeGroupRolesParams object
// with the ability to set a custom HTTPClient for a request.
func NewPutOrgauthorizationTrusteeGroupRolesParamsWithHTTPClient(client *http.Client) *PutOrgauthorizationTrusteeGroupRolesParams {
	return &PutOrgauthorizationTrusteeGroupRolesParams{
		HTTPClient: client,
	}
}

/*
PutOrgauthorizationTrusteeGroupRolesParams contains all the parameters to send to the API endpoint

	for the put orgauthorization trustee group roles operation.

	Typically these are written to a http.Request.
*/
type PutOrgauthorizationTrusteeGroupRolesParams struct {

	/* Body.

	   List of roles
	*/
	Body []string

	/* TrusteeGroupID.

	   Trustee Group Id
	*/
	TrusteeGroupID string

	/* TrusteeOrgID.

	   Trustee Organization Id
	*/
	TrusteeOrgID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the put orgauthorization trustee group roles params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutOrgauthorizationTrusteeGroupRolesParams) WithDefaults() *PutOrgauthorizationTrusteeGroupRolesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the put orgauthorization trustee group roles params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutOrgauthorizationTrusteeGroupRolesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the put orgauthorization trustee group roles params
func (o *PutOrgauthorizationTrusteeGroupRolesParams) WithTimeout(timeout time.Duration) *PutOrgauthorizationTrusteeGroupRolesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put orgauthorization trustee group roles params
func (o *PutOrgauthorizationTrusteeGroupRolesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put orgauthorization trustee group roles params
func (o *PutOrgauthorizationTrusteeGroupRolesParams) WithContext(ctx context.Context) *PutOrgauthorizationTrusteeGroupRolesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put orgauthorization trustee group roles params
func (o *PutOrgauthorizationTrusteeGroupRolesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put orgauthorization trustee group roles params
func (o *PutOrgauthorizationTrusteeGroupRolesParams) WithHTTPClient(client *http.Client) *PutOrgauthorizationTrusteeGroupRolesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put orgauthorization trustee group roles params
func (o *PutOrgauthorizationTrusteeGroupRolesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the put orgauthorization trustee group roles params
func (o *PutOrgauthorizationTrusteeGroupRolesParams) WithBody(body []string) *PutOrgauthorizationTrusteeGroupRolesParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the put orgauthorization trustee group roles params
func (o *PutOrgauthorizationTrusteeGroupRolesParams) SetBody(body []string) {
	o.Body = body
}

// WithTrusteeGroupID adds the trusteeGroupID to the put orgauthorization trustee group roles params
func (o *PutOrgauthorizationTrusteeGroupRolesParams) WithTrusteeGroupID(trusteeGroupID string) *PutOrgauthorizationTrusteeGroupRolesParams {
	o.SetTrusteeGroupID(trusteeGroupID)
	return o
}

// SetTrusteeGroupID adds the trusteeGroupId to the put orgauthorization trustee group roles params
func (o *PutOrgauthorizationTrusteeGroupRolesParams) SetTrusteeGroupID(trusteeGroupID string) {
	o.TrusteeGroupID = trusteeGroupID
}

// WithTrusteeOrgID adds the trusteeOrgID to the put orgauthorization trustee group roles params
func (o *PutOrgauthorizationTrusteeGroupRolesParams) WithTrusteeOrgID(trusteeOrgID string) *PutOrgauthorizationTrusteeGroupRolesParams {
	o.SetTrusteeOrgID(trusteeOrgID)
	return o
}

// SetTrusteeOrgID adds the trusteeOrgId to the put orgauthorization trustee group roles params
func (o *PutOrgauthorizationTrusteeGroupRolesParams) SetTrusteeOrgID(trusteeOrgID string) {
	o.TrusteeOrgID = trusteeOrgID
}

// WriteToRequest writes these params to a swagger request
func (o *PutOrgauthorizationTrusteeGroupRolesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param trusteeGroupId
	if err := r.SetPathParam("trusteeGroupId", o.TrusteeGroupID); err != nil {
		return err
	}

	// path param trusteeOrgId
	if err := r.SetPathParam("trusteeOrgId", o.TrusteeOrgID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
