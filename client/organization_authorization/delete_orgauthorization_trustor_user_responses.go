// Code generated by go-swagger; DO NOT EDIT.

package organization_authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteOrgauthorizationTrustorUserReader is a Reader for the DeleteOrgauthorizationTrustorUser structure.
type DeleteOrgauthorizationTrustorUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteOrgauthorizationTrustorUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteOrgauthorizationTrustorUserNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteOrgauthorizationTrustorUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteOrgauthorizationTrustorUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteOrgauthorizationTrustorUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteOrgauthorizationTrustorUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteOrgauthorizationTrustorUserRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteOrgauthorizationTrustorUserRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteOrgauthorizationTrustorUserUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteOrgauthorizationTrustorUserTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteOrgauthorizationTrustorUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteOrgauthorizationTrustorUserServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteOrgauthorizationTrustorUserGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteOrgauthorizationTrustorUserNoContent creates a DeleteOrgauthorizationTrustorUserNoContent with default headers values
func NewDeleteOrgauthorizationTrustorUserNoContent() *DeleteOrgauthorizationTrustorUserNoContent {
	return &DeleteOrgauthorizationTrustorUserNoContent{}
}

/*
DeleteOrgauthorizationTrustorUserNoContent describes a response with status code 204, with default header values.

Trust deleted
*/
type DeleteOrgauthorizationTrustorUserNoContent struct {
}

// IsSuccess returns true when this delete orgauthorization trustor user no content response has a 2xx status code
func (o *DeleteOrgauthorizationTrustorUserNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete orgauthorization trustor user no content response has a 3xx status code
func (o *DeleteOrgauthorizationTrustorUserNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete orgauthorization trustor user no content response has a 4xx status code
func (o *DeleteOrgauthorizationTrustorUserNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete orgauthorization trustor user no content response has a 5xx status code
func (o *DeleteOrgauthorizationTrustorUserNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete orgauthorization trustor user no content response a status code equal to that given
func (o *DeleteOrgauthorizationTrustorUserNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeleteOrgauthorizationTrustorUserNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] deleteOrgauthorizationTrustorUserNoContent ", 204)
}

func (o *DeleteOrgauthorizationTrustorUserNoContent) String() string {
	return fmt.Sprintf("[DELETE /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] deleteOrgauthorizationTrustorUserNoContent ", 204)
}

func (o *DeleteOrgauthorizationTrustorUserNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteOrgauthorizationTrustorUserBadRequest creates a DeleteOrgauthorizationTrustorUserBadRequest with default headers values
func NewDeleteOrgauthorizationTrustorUserBadRequest() *DeleteOrgauthorizationTrustorUserBadRequest {
	return &DeleteOrgauthorizationTrustorUserBadRequest{}
}

/*
DeleteOrgauthorizationTrustorUserBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteOrgauthorizationTrustorUserBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete orgauthorization trustor user bad request response has a 2xx status code
func (o *DeleteOrgauthorizationTrustorUserBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete orgauthorization trustor user bad request response has a 3xx status code
func (o *DeleteOrgauthorizationTrustorUserBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete orgauthorization trustor user bad request response has a 4xx status code
func (o *DeleteOrgauthorizationTrustorUserBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete orgauthorization trustor user bad request response has a 5xx status code
func (o *DeleteOrgauthorizationTrustorUserBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete orgauthorization trustor user bad request response a status code equal to that given
func (o *DeleteOrgauthorizationTrustorUserBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteOrgauthorizationTrustorUserBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] deleteOrgauthorizationTrustorUserBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteOrgauthorizationTrustorUserBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] deleteOrgauthorizationTrustorUserBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteOrgauthorizationTrustorUserBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOrgauthorizationTrustorUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOrgauthorizationTrustorUserUnauthorized creates a DeleteOrgauthorizationTrustorUserUnauthorized with default headers values
func NewDeleteOrgauthorizationTrustorUserUnauthorized() *DeleteOrgauthorizationTrustorUserUnauthorized {
	return &DeleteOrgauthorizationTrustorUserUnauthorized{}
}

/*
DeleteOrgauthorizationTrustorUserUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteOrgauthorizationTrustorUserUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete orgauthorization trustor user unauthorized response has a 2xx status code
func (o *DeleteOrgauthorizationTrustorUserUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete orgauthorization trustor user unauthorized response has a 3xx status code
func (o *DeleteOrgauthorizationTrustorUserUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete orgauthorization trustor user unauthorized response has a 4xx status code
func (o *DeleteOrgauthorizationTrustorUserUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete orgauthorization trustor user unauthorized response has a 5xx status code
func (o *DeleteOrgauthorizationTrustorUserUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete orgauthorization trustor user unauthorized response a status code equal to that given
func (o *DeleteOrgauthorizationTrustorUserUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteOrgauthorizationTrustorUserUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] deleteOrgauthorizationTrustorUserUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteOrgauthorizationTrustorUserUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] deleteOrgauthorizationTrustorUserUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteOrgauthorizationTrustorUserUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOrgauthorizationTrustorUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOrgauthorizationTrustorUserForbidden creates a DeleteOrgauthorizationTrustorUserForbidden with default headers values
func NewDeleteOrgauthorizationTrustorUserForbidden() *DeleteOrgauthorizationTrustorUserForbidden {
	return &DeleteOrgauthorizationTrustorUserForbidden{}
}

/*
DeleteOrgauthorizationTrustorUserForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type DeleteOrgauthorizationTrustorUserForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete orgauthorization trustor user forbidden response has a 2xx status code
func (o *DeleteOrgauthorizationTrustorUserForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete orgauthorization trustor user forbidden response has a 3xx status code
func (o *DeleteOrgauthorizationTrustorUserForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete orgauthorization trustor user forbidden response has a 4xx status code
func (o *DeleteOrgauthorizationTrustorUserForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete orgauthorization trustor user forbidden response has a 5xx status code
func (o *DeleteOrgauthorizationTrustorUserForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete orgauthorization trustor user forbidden response a status code equal to that given
func (o *DeleteOrgauthorizationTrustorUserForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteOrgauthorizationTrustorUserForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] deleteOrgauthorizationTrustorUserForbidden  %+v", 403, o.Payload)
}

func (o *DeleteOrgauthorizationTrustorUserForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] deleteOrgauthorizationTrustorUserForbidden  %+v", 403, o.Payload)
}

func (o *DeleteOrgauthorizationTrustorUserForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOrgauthorizationTrustorUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOrgauthorizationTrustorUserNotFound creates a DeleteOrgauthorizationTrustorUserNotFound with default headers values
func NewDeleteOrgauthorizationTrustorUserNotFound() *DeleteOrgauthorizationTrustorUserNotFound {
	return &DeleteOrgauthorizationTrustorUserNotFound{}
}

/*
DeleteOrgauthorizationTrustorUserNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type DeleteOrgauthorizationTrustorUserNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete orgauthorization trustor user not found response has a 2xx status code
func (o *DeleteOrgauthorizationTrustorUserNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete orgauthorization trustor user not found response has a 3xx status code
func (o *DeleteOrgauthorizationTrustorUserNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete orgauthorization trustor user not found response has a 4xx status code
func (o *DeleteOrgauthorizationTrustorUserNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete orgauthorization trustor user not found response has a 5xx status code
func (o *DeleteOrgauthorizationTrustorUserNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete orgauthorization trustor user not found response a status code equal to that given
func (o *DeleteOrgauthorizationTrustorUserNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteOrgauthorizationTrustorUserNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] deleteOrgauthorizationTrustorUserNotFound  %+v", 404, o.Payload)
}

func (o *DeleteOrgauthorizationTrustorUserNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] deleteOrgauthorizationTrustorUserNotFound  %+v", 404, o.Payload)
}

func (o *DeleteOrgauthorizationTrustorUserNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOrgauthorizationTrustorUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOrgauthorizationTrustorUserRequestTimeout creates a DeleteOrgauthorizationTrustorUserRequestTimeout with default headers values
func NewDeleteOrgauthorizationTrustorUserRequestTimeout() *DeleteOrgauthorizationTrustorUserRequestTimeout {
	return &DeleteOrgauthorizationTrustorUserRequestTimeout{}
}

/*
DeleteOrgauthorizationTrustorUserRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteOrgauthorizationTrustorUserRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete orgauthorization trustor user request timeout response has a 2xx status code
func (o *DeleteOrgauthorizationTrustorUserRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete orgauthorization trustor user request timeout response has a 3xx status code
func (o *DeleteOrgauthorizationTrustorUserRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete orgauthorization trustor user request timeout response has a 4xx status code
func (o *DeleteOrgauthorizationTrustorUserRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete orgauthorization trustor user request timeout response has a 5xx status code
func (o *DeleteOrgauthorizationTrustorUserRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete orgauthorization trustor user request timeout response a status code equal to that given
func (o *DeleteOrgauthorizationTrustorUserRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *DeleteOrgauthorizationTrustorUserRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] deleteOrgauthorizationTrustorUserRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteOrgauthorizationTrustorUserRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] deleteOrgauthorizationTrustorUserRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteOrgauthorizationTrustorUserRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOrgauthorizationTrustorUserRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOrgauthorizationTrustorUserRequestEntityTooLarge creates a DeleteOrgauthorizationTrustorUserRequestEntityTooLarge with default headers values
func NewDeleteOrgauthorizationTrustorUserRequestEntityTooLarge() *DeleteOrgauthorizationTrustorUserRequestEntityTooLarge {
	return &DeleteOrgauthorizationTrustorUserRequestEntityTooLarge{}
}

/*
DeleteOrgauthorizationTrustorUserRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type DeleteOrgauthorizationTrustorUserRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete orgauthorization trustor user request entity too large response has a 2xx status code
func (o *DeleteOrgauthorizationTrustorUserRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete orgauthorization trustor user request entity too large response has a 3xx status code
func (o *DeleteOrgauthorizationTrustorUserRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete orgauthorization trustor user request entity too large response has a 4xx status code
func (o *DeleteOrgauthorizationTrustorUserRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete orgauthorization trustor user request entity too large response has a 5xx status code
func (o *DeleteOrgauthorizationTrustorUserRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this delete orgauthorization trustor user request entity too large response a status code equal to that given
func (o *DeleteOrgauthorizationTrustorUserRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *DeleteOrgauthorizationTrustorUserRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] deleteOrgauthorizationTrustorUserRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteOrgauthorizationTrustorUserRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[DELETE /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] deleteOrgauthorizationTrustorUserRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteOrgauthorizationTrustorUserRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOrgauthorizationTrustorUserRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOrgauthorizationTrustorUserUnsupportedMediaType creates a DeleteOrgauthorizationTrustorUserUnsupportedMediaType with default headers values
func NewDeleteOrgauthorizationTrustorUserUnsupportedMediaType() *DeleteOrgauthorizationTrustorUserUnsupportedMediaType {
	return &DeleteOrgauthorizationTrustorUserUnsupportedMediaType{}
}

/*
DeleteOrgauthorizationTrustorUserUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteOrgauthorizationTrustorUserUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete orgauthorization trustor user unsupported media type response has a 2xx status code
func (o *DeleteOrgauthorizationTrustorUserUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete orgauthorization trustor user unsupported media type response has a 3xx status code
func (o *DeleteOrgauthorizationTrustorUserUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete orgauthorization trustor user unsupported media type response has a 4xx status code
func (o *DeleteOrgauthorizationTrustorUserUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete orgauthorization trustor user unsupported media type response has a 5xx status code
func (o *DeleteOrgauthorizationTrustorUserUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this delete orgauthorization trustor user unsupported media type response a status code equal to that given
func (o *DeleteOrgauthorizationTrustorUserUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *DeleteOrgauthorizationTrustorUserUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] deleteOrgauthorizationTrustorUserUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteOrgauthorizationTrustorUserUnsupportedMediaType) String() string {
	return fmt.Sprintf("[DELETE /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] deleteOrgauthorizationTrustorUserUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteOrgauthorizationTrustorUserUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOrgauthorizationTrustorUserUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOrgauthorizationTrustorUserTooManyRequests creates a DeleteOrgauthorizationTrustorUserTooManyRequests with default headers values
func NewDeleteOrgauthorizationTrustorUserTooManyRequests() *DeleteOrgauthorizationTrustorUserTooManyRequests {
	return &DeleteOrgauthorizationTrustorUserTooManyRequests{}
}

/*
DeleteOrgauthorizationTrustorUserTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteOrgauthorizationTrustorUserTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete orgauthorization trustor user too many requests response has a 2xx status code
func (o *DeleteOrgauthorizationTrustorUserTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete orgauthorization trustor user too many requests response has a 3xx status code
func (o *DeleteOrgauthorizationTrustorUserTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete orgauthorization trustor user too many requests response has a 4xx status code
func (o *DeleteOrgauthorizationTrustorUserTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete orgauthorization trustor user too many requests response has a 5xx status code
func (o *DeleteOrgauthorizationTrustorUserTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete orgauthorization trustor user too many requests response a status code equal to that given
func (o *DeleteOrgauthorizationTrustorUserTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteOrgauthorizationTrustorUserTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] deleteOrgauthorizationTrustorUserTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteOrgauthorizationTrustorUserTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] deleteOrgauthorizationTrustorUserTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteOrgauthorizationTrustorUserTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOrgauthorizationTrustorUserTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOrgauthorizationTrustorUserInternalServerError creates a DeleteOrgauthorizationTrustorUserInternalServerError with default headers values
func NewDeleteOrgauthorizationTrustorUserInternalServerError() *DeleteOrgauthorizationTrustorUserInternalServerError {
	return &DeleteOrgauthorizationTrustorUserInternalServerError{}
}

/*
DeleteOrgauthorizationTrustorUserInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteOrgauthorizationTrustorUserInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete orgauthorization trustor user internal server error response has a 2xx status code
func (o *DeleteOrgauthorizationTrustorUserInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete orgauthorization trustor user internal server error response has a 3xx status code
func (o *DeleteOrgauthorizationTrustorUserInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete orgauthorization trustor user internal server error response has a 4xx status code
func (o *DeleteOrgauthorizationTrustorUserInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete orgauthorization trustor user internal server error response has a 5xx status code
func (o *DeleteOrgauthorizationTrustorUserInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete orgauthorization trustor user internal server error response a status code equal to that given
func (o *DeleteOrgauthorizationTrustorUserInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteOrgauthorizationTrustorUserInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] deleteOrgauthorizationTrustorUserInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteOrgauthorizationTrustorUserInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] deleteOrgauthorizationTrustorUserInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteOrgauthorizationTrustorUserInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOrgauthorizationTrustorUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOrgauthorizationTrustorUserServiceUnavailable creates a DeleteOrgauthorizationTrustorUserServiceUnavailable with default headers values
func NewDeleteOrgauthorizationTrustorUserServiceUnavailable() *DeleteOrgauthorizationTrustorUserServiceUnavailable {
	return &DeleteOrgauthorizationTrustorUserServiceUnavailable{}
}

/*
DeleteOrgauthorizationTrustorUserServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteOrgauthorizationTrustorUserServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete orgauthorization trustor user service unavailable response has a 2xx status code
func (o *DeleteOrgauthorizationTrustorUserServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete orgauthorization trustor user service unavailable response has a 3xx status code
func (o *DeleteOrgauthorizationTrustorUserServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete orgauthorization trustor user service unavailable response has a 4xx status code
func (o *DeleteOrgauthorizationTrustorUserServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete orgauthorization trustor user service unavailable response has a 5xx status code
func (o *DeleteOrgauthorizationTrustorUserServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete orgauthorization trustor user service unavailable response a status code equal to that given
func (o *DeleteOrgauthorizationTrustorUserServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *DeleteOrgauthorizationTrustorUserServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] deleteOrgauthorizationTrustorUserServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteOrgauthorizationTrustorUserServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] deleteOrgauthorizationTrustorUserServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteOrgauthorizationTrustorUserServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOrgauthorizationTrustorUserServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOrgauthorizationTrustorUserGatewayTimeout creates a DeleteOrgauthorizationTrustorUserGatewayTimeout with default headers values
func NewDeleteOrgauthorizationTrustorUserGatewayTimeout() *DeleteOrgauthorizationTrustorUserGatewayTimeout {
	return &DeleteOrgauthorizationTrustorUserGatewayTimeout{}
}

/*
DeleteOrgauthorizationTrustorUserGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type DeleteOrgauthorizationTrustorUserGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete orgauthorization trustor user gateway timeout response has a 2xx status code
func (o *DeleteOrgauthorizationTrustorUserGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete orgauthorization trustor user gateway timeout response has a 3xx status code
func (o *DeleteOrgauthorizationTrustorUserGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete orgauthorization trustor user gateway timeout response has a 4xx status code
func (o *DeleteOrgauthorizationTrustorUserGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete orgauthorization trustor user gateway timeout response has a 5xx status code
func (o *DeleteOrgauthorizationTrustorUserGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this delete orgauthorization trustor user gateway timeout response a status code equal to that given
func (o *DeleteOrgauthorizationTrustorUserGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *DeleteOrgauthorizationTrustorUserGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] deleteOrgauthorizationTrustorUserGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteOrgauthorizationTrustorUserGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] deleteOrgauthorizationTrustorUserGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteOrgauthorizationTrustorUserGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOrgauthorizationTrustorUserGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
