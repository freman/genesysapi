// Code generated by go-swagger; DO NOT EDIT.

package organization_authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetOrgauthorizationPairingReader is a Reader for the GetOrgauthorizationPairing structure.
type GetOrgauthorizationPairingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrgauthorizationPairingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrgauthorizationPairingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOrgauthorizationPairingBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOrgauthorizationPairingUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOrgauthorizationPairingForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOrgauthorizationPairingNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetOrgauthorizationPairingRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetOrgauthorizationPairingRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetOrgauthorizationPairingUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetOrgauthorizationPairingTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOrgauthorizationPairingInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetOrgauthorizationPairingServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetOrgauthorizationPairingGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOrgauthorizationPairingOK creates a GetOrgauthorizationPairingOK with default headers values
func NewGetOrgauthorizationPairingOK() *GetOrgauthorizationPairingOK {
	return &GetOrgauthorizationPairingOK{}
}

/*
GetOrgauthorizationPairingOK describes a response with status code 200, with default header values.

successful operation
*/
type GetOrgauthorizationPairingOK struct {
	Payload *models.TrustRequest
}

// IsSuccess returns true when this get orgauthorization pairing o k response has a 2xx status code
func (o *GetOrgauthorizationPairingOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get orgauthorization pairing o k response has a 3xx status code
func (o *GetOrgauthorizationPairingOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orgauthorization pairing o k response has a 4xx status code
func (o *GetOrgauthorizationPairingOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get orgauthorization pairing o k response has a 5xx status code
func (o *GetOrgauthorizationPairingOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get orgauthorization pairing o k response a status code equal to that given
func (o *GetOrgauthorizationPairingOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetOrgauthorizationPairingOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/pairings/{pairingId}][%d] getOrgauthorizationPairingOK  %+v", 200, o.Payload)
}

func (o *GetOrgauthorizationPairingOK) String() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/pairings/{pairingId}][%d] getOrgauthorizationPairingOK  %+v", 200, o.Payload)
}

func (o *GetOrgauthorizationPairingOK) GetPayload() *models.TrustRequest {
	return o.Payload
}

func (o *GetOrgauthorizationPairingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TrustRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationPairingBadRequest creates a GetOrgauthorizationPairingBadRequest with default headers values
func NewGetOrgauthorizationPairingBadRequest() *GetOrgauthorizationPairingBadRequest {
	return &GetOrgauthorizationPairingBadRequest{}
}

/*
GetOrgauthorizationPairingBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetOrgauthorizationPairingBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orgauthorization pairing bad request response has a 2xx status code
func (o *GetOrgauthorizationPairingBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orgauthorization pairing bad request response has a 3xx status code
func (o *GetOrgauthorizationPairingBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orgauthorization pairing bad request response has a 4xx status code
func (o *GetOrgauthorizationPairingBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get orgauthorization pairing bad request response has a 5xx status code
func (o *GetOrgauthorizationPairingBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get orgauthorization pairing bad request response a status code equal to that given
func (o *GetOrgauthorizationPairingBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetOrgauthorizationPairingBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/pairings/{pairingId}][%d] getOrgauthorizationPairingBadRequest  %+v", 400, o.Payload)
}

func (o *GetOrgauthorizationPairingBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/pairings/{pairingId}][%d] getOrgauthorizationPairingBadRequest  %+v", 400, o.Payload)
}

func (o *GetOrgauthorizationPairingBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationPairingBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationPairingUnauthorized creates a GetOrgauthorizationPairingUnauthorized with default headers values
func NewGetOrgauthorizationPairingUnauthorized() *GetOrgauthorizationPairingUnauthorized {
	return &GetOrgauthorizationPairingUnauthorized{}
}

/*
GetOrgauthorizationPairingUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetOrgauthorizationPairingUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orgauthorization pairing unauthorized response has a 2xx status code
func (o *GetOrgauthorizationPairingUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orgauthorization pairing unauthorized response has a 3xx status code
func (o *GetOrgauthorizationPairingUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orgauthorization pairing unauthorized response has a 4xx status code
func (o *GetOrgauthorizationPairingUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get orgauthorization pairing unauthorized response has a 5xx status code
func (o *GetOrgauthorizationPairingUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get orgauthorization pairing unauthorized response a status code equal to that given
func (o *GetOrgauthorizationPairingUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetOrgauthorizationPairingUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/pairings/{pairingId}][%d] getOrgauthorizationPairingUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOrgauthorizationPairingUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/pairings/{pairingId}][%d] getOrgauthorizationPairingUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOrgauthorizationPairingUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationPairingUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationPairingForbidden creates a GetOrgauthorizationPairingForbidden with default headers values
func NewGetOrgauthorizationPairingForbidden() *GetOrgauthorizationPairingForbidden {
	return &GetOrgauthorizationPairingForbidden{}
}

/*
GetOrgauthorizationPairingForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetOrgauthorizationPairingForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orgauthorization pairing forbidden response has a 2xx status code
func (o *GetOrgauthorizationPairingForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orgauthorization pairing forbidden response has a 3xx status code
func (o *GetOrgauthorizationPairingForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orgauthorization pairing forbidden response has a 4xx status code
func (o *GetOrgauthorizationPairingForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get orgauthorization pairing forbidden response has a 5xx status code
func (o *GetOrgauthorizationPairingForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get orgauthorization pairing forbidden response a status code equal to that given
func (o *GetOrgauthorizationPairingForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetOrgauthorizationPairingForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/pairings/{pairingId}][%d] getOrgauthorizationPairingForbidden  %+v", 403, o.Payload)
}

func (o *GetOrgauthorizationPairingForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/pairings/{pairingId}][%d] getOrgauthorizationPairingForbidden  %+v", 403, o.Payload)
}

func (o *GetOrgauthorizationPairingForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationPairingForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationPairingNotFound creates a GetOrgauthorizationPairingNotFound with default headers values
func NewGetOrgauthorizationPairingNotFound() *GetOrgauthorizationPairingNotFound {
	return &GetOrgauthorizationPairingNotFound{}
}

/*
GetOrgauthorizationPairingNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetOrgauthorizationPairingNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orgauthorization pairing not found response has a 2xx status code
func (o *GetOrgauthorizationPairingNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orgauthorization pairing not found response has a 3xx status code
func (o *GetOrgauthorizationPairingNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orgauthorization pairing not found response has a 4xx status code
func (o *GetOrgauthorizationPairingNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get orgauthorization pairing not found response has a 5xx status code
func (o *GetOrgauthorizationPairingNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get orgauthorization pairing not found response a status code equal to that given
func (o *GetOrgauthorizationPairingNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetOrgauthorizationPairingNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/pairings/{pairingId}][%d] getOrgauthorizationPairingNotFound  %+v", 404, o.Payload)
}

func (o *GetOrgauthorizationPairingNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/pairings/{pairingId}][%d] getOrgauthorizationPairingNotFound  %+v", 404, o.Payload)
}

func (o *GetOrgauthorizationPairingNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationPairingNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationPairingRequestTimeout creates a GetOrgauthorizationPairingRequestTimeout with default headers values
func NewGetOrgauthorizationPairingRequestTimeout() *GetOrgauthorizationPairingRequestTimeout {
	return &GetOrgauthorizationPairingRequestTimeout{}
}

/*
GetOrgauthorizationPairingRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetOrgauthorizationPairingRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orgauthorization pairing request timeout response has a 2xx status code
func (o *GetOrgauthorizationPairingRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orgauthorization pairing request timeout response has a 3xx status code
func (o *GetOrgauthorizationPairingRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orgauthorization pairing request timeout response has a 4xx status code
func (o *GetOrgauthorizationPairingRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get orgauthorization pairing request timeout response has a 5xx status code
func (o *GetOrgauthorizationPairingRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get orgauthorization pairing request timeout response a status code equal to that given
func (o *GetOrgauthorizationPairingRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetOrgauthorizationPairingRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/pairings/{pairingId}][%d] getOrgauthorizationPairingRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetOrgauthorizationPairingRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/pairings/{pairingId}][%d] getOrgauthorizationPairingRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetOrgauthorizationPairingRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationPairingRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationPairingRequestEntityTooLarge creates a GetOrgauthorizationPairingRequestEntityTooLarge with default headers values
func NewGetOrgauthorizationPairingRequestEntityTooLarge() *GetOrgauthorizationPairingRequestEntityTooLarge {
	return &GetOrgauthorizationPairingRequestEntityTooLarge{}
}

/*
GetOrgauthorizationPairingRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetOrgauthorizationPairingRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orgauthorization pairing request entity too large response has a 2xx status code
func (o *GetOrgauthorizationPairingRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orgauthorization pairing request entity too large response has a 3xx status code
func (o *GetOrgauthorizationPairingRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orgauthorization pairing request entity too large response has a 4xx status code
func (o *GetOrgauthorizationPairingRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get orgauthorization pairing request entity too large response has a 5xx status code
func (o *GetOrgauthorizationPairingRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get orgauthorization pairing request entity too large response a status code equal to that given
func (o *GetOrgauthorizationPairingRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetOrgauthorizationPairingRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/pairings/{pairingId}][%d] getOrgauthorizationPairingRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetOrgauthorizationPairingRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/pairings/{pairingId}][%d] getOrgauthorizationPairingRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetOrgauthorizationPairingRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationPairingRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationPairingUnsupportedMediaType creates a GetOrgauthorizationPairingUnsupportedMediaType with default headers values
func NewGetOrgauthorizationPairingUnsupportedMediaType() *GetOrgauthorizationPairingUnsupportedMediaType {
	return &GetOrgauthorizationPairingUnsupportedMediaType{}
}

/*
GetOrgauthorizationPairingUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetOrgauthorizationPairingUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orgauthorization pairing unsupported media type response has a 2xx status code
func (o *GetOrgauthorizationPairingUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orgauthorization pairing unsupported media type response has a 3xx status code
func (o *GetOrgauthorizationPairingUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orgauthorization pairing unsupported media type response has a 4xx status code
func (o *GetOrgauthorizationPairingUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get orgauthorization pairing unsupported media type response has a 5xx status code
func (o *GetOrgauthorizationPairingUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get orgauthorization pairing unsupported media type response a status code equal to that given
func (o *GetOrgauthorizationPairingUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetOrgauthorizationPairingUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/pairings/{pairingId}][%d] getOrgauthorizationPairingUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetOrgauthorizationPairingUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/pairings/{pairingId}][%d] getOrgauthorizationPairingUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetOrgauthorizationPairingUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationPairingUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationPairingTooManyRequests creates a GetOrgauthorizationPairingTooManyRequests with default headers values
func NewGetOrgauthorizationPairingTooManyRequests() *GetOrgauthorizationPairingTooManyRequests {
	return &GetOrgauthorizationPairingTooManyRequests{}
}

/*
GetOrgauthorizationPairingTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetOrgauthorizationPairingTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orgauthorization pairing too many requests response has a 2xx status code
func (o *GetOrgauthorizationPairingTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orgauthorization pairing too many requests response has a 3xx status code
func (o *GetOrgauthorizationPairingTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orgauthorization pairing too many requests response has a 4xx status code
func (o *GetOrgauthorizationPairingTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get orgauthorization pairing too many requests response has a 5xx status code
func (o *GetOrgauthorizationPairingTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get orgauthorization pairing too many requests response a status code equal to that given
func (o *GetOrgauthorizationPairingTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetOrgauthorizationPairingTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/pairings/{pairingId}][%d] getOrgauthorizationPairingTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOrgauthorizationPairingTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/pairings/{pairingId}][%d] getOrgauthorizationPairingTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOrgauthorizationPairingTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationPairingTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationPairingInternalServerError creates a GetOrgauthorizationPairingInternalServerError with default headers values
func NewGetOrgauthorizationPairingInternalServerError() *GetOrgauthorizationPairingInternalServerError {
	return &GetOrgauthorizationPairingInternalServerError{}
}

/*
GetOrgauthorizationPairingInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetOrgauthorizationPairingInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orgauthorization pairing internal server error response has a 2xx status code
func (o *GetOrgauthorizationPairingInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orgauthorization pairing internal server error response has a 3xx status code
func (o *GetOrgauthorizationPairingInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orgauthorization pairing internal server error response has a 4xx status code
func (o *GetOrgauthorizationPairingInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get orgauthorization pairing internal server error response has a 5xx status code
func (o *GetOrgauthorizationPairingInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get orgauthorization pairing internal server error response a status code equal to that given
func (o *GetOrgauthorizationPairingInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetOrgauthorizationPairingInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/pairings/{pairingId}][%d] getOrgauthorizationPairingInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOrgauthorizationPairingInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/pairings/{pairingId}][%d] getOrgauthorizationPairingInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOrgauthorizationPairingInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationPairingInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationPairingServiceUnavailable creates a GetOrgauthorizationPairingServiceUnavailable with default headers values
func NewGetOrgauthorizationPairingServiceUnavailable() *GetOrgauthorizationPairingServiceUnavailable {
	return &GetOrgauthorizationPairingServiceUnavailable{}
}

/*
GetOrgauthorizationPairingServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetOrgauthorizationPairingServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orgauthorization pairing service unavailable response has a 2xx status code
func (o *GetOrgauthorizationPairingServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orgauthorization pairing service unavailable response has a 3xx status code
func (o *GetOrgauthorizationPairingServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orgauthorization pairing service unavailable response has a 4xx status code
func (o *GetOrgauthorizationPairingServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get orgauthorization pairing service unavailable response has a 5xx status code
func (o *GetOrgauthorizationPairingServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get orgauthorization pairing service unavailable response a status code equal to that given
func (o *GetOrgauthorizationPairingServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetOrgauthorizationPairingServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/pairings/{pairingId}][%d] getOrgauthorizationPairingServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOrgauthorizationPairingServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/pairings/{pairingId}][%d] getOrgauthorizationPairingServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOrgauthorizationPairingServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationPairingServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationPairingGatewayTimeout creates a GetOrgauthorizationPairingGatewayTimeout with default headers values
func NewGetOrgauthorizationPairingGatewayTimeout() *GetOrgauthorizationPairingGatewayTimeout {
	return &GetOrgauthorizationPairingGatewayTimeout{}
}

/*
GetOrgauthorizationPairingGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetOrgauthorizationPairingGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orgauthorization pairing gateway timeout response has a 2xx status code
func (o *GetOrgauthorizationPairingGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orgauthorization pairing gateway timeout response has a 3xx status code
func (o *GetOrgauthorizationPairingGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orgauthorization pairing gateway timeout response has a 4xx status code
func (o *GetOrgauthorizationPairingGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get orgauthorization pairing gateway timeout response has a 5xx status code
func (o *GetOrgauthorizationPairingGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get orgauthorization pairing gateway timeout response a status code equal to that given
func (o *GetOrgauthorizationPairingGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetOrgauthorizationPairingGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/pairings/{pairingId}][%d] getOrgauthorizationPairingGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOrgauthorizationPairingGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/pairings/{pairingId}][%d] getOrgauthorizationPairingGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOrgauthorizationPairingGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationPairingGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
