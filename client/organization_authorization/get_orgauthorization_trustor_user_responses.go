// Code generated by go-swagger; DO NOT EDIT.

package organization_authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetOrgauthorizationTrustorUserReader is a Reader for the GetOrgauthorizationTrustorUser structure.
type GetOrgauthorizationTrustorUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrgauthorizationTrustorUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrgauthorizationTrustorUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOrgauthorizationTrustorUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOrgauthorizationTrustorUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOrgauthorizationTrustorUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOrgauthorizationTrustorUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetOrgauthorizationTrustorUserRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetOrgauthorizationTrustorUserRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetOrgauthorizationTrustorUserUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetOrgauthorizationTrustorUserTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOrgauthorizationTrustorUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetOrgauthorizationTrustorUserServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetOrgauthorizationTrustorUserGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOrgauthorizationTrustorUserOK creates a GetOrgauthorizationTrustorUserOK with default headers values
func NewGetOrgauthorizationTrustorUserOK() *GetOrgauthorizationTrustorUserOK {
	return &GetOrgauthorizationTrustorUserOK{}
}

/*
GetOrgauthorizationTrustorUserOK describes a response with status code 200, with default header values.

successful operation
*/
type GetOrgauthorizationTrustorUserOK struct {
	Payload *models.TrustUser
}

// IsSuccess returns true when this get orgauthorization trustor user o k response has a 2xx status code
func (o *GetOrgauthorizationTrustorUserOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get orgauthorization trustor user o k response has a 3xx status code
func (o *GetOrgauthorizationTrustorUserOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orgauthorization trustor user o k response has a 4xx status code
func (o *GetOrgauthorizationTrustorUserOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get orgauthorization trustor user o k response has a 5xx status code
func (o *GetOrgauthorizationTrustorUserOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get orgauthorization trustor user o k response a status code equal to that given
func (o *GetOrgauthorizationTrustorUserOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetOrgauthorizationTrustorUserOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] getOrgauthorizationTrustorUserOK  %+v", 200, o.Payload)
}

func (o *GetOrgauthorizationTrustorUserOK) String() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] getOrgauthorizationTrustorUserOK  %+v", 200, o.Payload)
}

func (o *GetOrgauthorizationTrustorUserOK) GetPayload() *models.TrustUser {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TrustUser)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorUserBadRequest creates a GetOrgauthorizationTrustorUserBadRequest with default headers values
func NewGetOrgauthorizationTrustorUserBadRequest() *GetOrgauthorizationTrustorUserBadRequest {
	return &GetOrgauthorizationTrustorUserBadRequest{}
}

/*
GetOrgauthorizationTrustorUserBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetOrgauthorizationTrustorUserBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orgauthorization trustor user bad request response has a 2xx status code
func (o *GetOrgauthorizationTrustorUserBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orgauthorization trustor user bad request response has a 3xx status code
func (o *GetOrgauthorizationTrustorUserBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orgauthorization trustor user bad request response has a 4xx status code
func (o *GetOrgauthorizationTrustorUserBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get orgauthorization trustor user bad request response has a 5xx status code
func (o *GetOrgauthorizationTrustorUserBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get orgauthorization trustor user bad request response a status code equal to that given
func (o *GetOrgauthorizationTrustorUserBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetOrgauthorizationTrustorUserBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] getOrgauthorizationTrustorUserBadRequest  %+v", 400, o.Payload)
}

func (o *GetOrgauthorizationTrustorUserBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] getOrgauthorizationTrustorUserBadRequest  %+v", 400, o.Payload)
}

func (o *GetOrgauthorizationTrustorUserBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorUserUnauthorized creates a GetOrgauthorizationTrustorUserUnauthorized with default headers values
func NewGetOrgauthorizationTrustorUserUnauthorized() *GetOrgauthorizationTrustorUserUnauthorized {
	return &GetOrgauthorizationTrustorUserUnauthorized{}
}

/*
GetOrgauthorizationTrustorUserUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetOrgauthorizationTrustorUserUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orgauthorization trustor user unauthorized response has a 2xx status code
func (o *GetOrgauthorizationTrustorUserUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orgauthorization trustor user unauthorized response has a 3xx status code
func (o *GetOrgauthorizationTrustorUserUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orgauthorization trustor user unauthorized response has a 4xx status code
func (o *GetOrgauthorizationTrustorUserUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get orgauthorization trustor user unauthorized response has a 5xx status code
func (o *GetOrgauthorizationTrustorUserUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get orgauthorization trustor user unauthorized response a status code equal to that given
func (o *GetOrgauthorizationTrustorUserUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetOrgauthorizationTrustorUserUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] getOrgauthorizationTrustorUserUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOrgauthorizationTrustorUserUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] getOrgauthorizationTrustorUserUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOrgauthorizationTrustorUserUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorUserForbidden creates a GetOrgauthorizationTrustorUserForbidden with default headers values
func NewGetOrgauthorizationTrustorUserForbidden() *GetOrgauthorizationTrustorUserForbidden {
	return &GetOrgauthorizationTrustorUserForbidden{}
}

/*
GetOrgauthorizationTrustorUserForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetOrgauthorizationTrustorUserForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orgauthorization trustor user forbidden response has a 2xx status code
func (o *GetOrgauthorizationTrustorUserForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orgauthorization trustor user forbidden response has a 3xx status code
func (o *GetOrgauthorizationTrustorUserForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orgauthorization trustor user forbidden response has a 4xx status code
func (o *GetOrgauthorizationTrustorUserForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get orgauthorization trustor user forbidden response has a 5xx status code
func (o *GetOrgauthorizationTrustorUserForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get orgauthorization trustor user forbidden response a status code equal to that given
func (o *GetOrgauthorizationTrustorUserForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetOrgauthorizationTrustorUserForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] getOrgauthorizationTrustorUserForbidden  %+v", 403, o.Payload)
}

func (o *GetOrgauthorizationTrustorUserForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] getOrgauthorizationTrustorUserForbidden  %+v", 403, o.Payload)
}

func (o *GetOrgauthorizationTrustorUserForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorUserNotFound creates a GetOrgauthorizationTrustorUserNotFound with default headers values
func NewGetOrgauthorizationTrustorUserNotFound() *GetOrgauthorizationTrustorUserNotFound {
	return &GetOrgauthorizationTrustorUserNotFound{}
}

/*
GetOrgauthorizationTrustorUserNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetOrgauthorizationTrustorUserNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orgauthorization trustor user not found response has a 2xx status code
func (o *GetOrgauthorizationTrustorUserNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orgauthorization trustor user not found response has a 3xx status code
func (o *GetOrgauthorizationTrustorUserNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orgauthorization trustor user not found response has a 4xx status code
func (o *GetOrgauthorizationTrustorUserNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get orgauthorization trustor user not found response has a 5xx status code
func (o *GetOrgauthorizationTrustorUserNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get orgauthorization trustor user not found response a status code equal to that given
func (o *GetOrgauthorizationTrustorUserNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetOrgauthorizationTrustorUserNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] getOrgauthorizationTrustorUserNotFound  %+v", 404, o.Payload)
}

func (o *GetOrgauthorizationTrustorUserNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] getOrgauthorizationTrustorUserNotFound  %+v", 404, o.Payload)
}

func (o *GetOrgauthorizationTrustorUserNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorUserRequestTimeout creates a GetOrgauthorizationTrustorUserRequestTimeout with default headers values
func NewGetOrgauthorizationTrustorUserRequestTimeout() *GetOrgauthorizationTrustorUserRequestTimeout {
	return &GetOrgauthorizationTrustorUserRequestTimeout{}
}

/*
GetOrgauthorizationTrustorUserRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetOrgauthorizationTrustorUserRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orgauthorization trustor user request timeout response has a 2xx status code
func (o *GetOrgauthorizationTrustorUserRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orgauthorization trustor user request timeout response has a 3xx status code
func (o *GetOrgauthorizationTrustorUserRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orgauthorization trustor user request timeout response has a 4xx status code
func (o *GetOrgauthorizationTrustorUserRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get orgauthorization trustor user request timeout response has a 5xx status code
func (o *GetOrgauthorizationTrustorUserRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get orgauthorization trustor user request timeout response a status code equal to that given
func (o *GetOrgauthorizationTrustorUserRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetOrgauthorizationTrustorUserRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] getOrgauthorizationTrustorUserRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetOrgauthorizationTrustorUserRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] getOrgauthorizationTrustorUserRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetOrgauthorizationTrustorUserRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorUserRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorUserRequestEntityTooLarge creates a GetOrgauthorizationTrustorUserRequestEntityTooLarge with default headers values
func NewGetOrgauthorizationTrustorUserRequestEntityTooLarge() *GetOrgauthorizationTrustorUserRequestEntityTooLarge {
	return &GetOrgauthorizationTrustorUserRequestEntityTooLarge{}
}

/*
GetOrgauthorizationTrustorUserRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetOrgauthorizationTrustorUserRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orgauthorization trustor user request entity too large response has a 2xx status code
func (o *GetOrgauthorizationTrustorUserRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orgauthorization trustor user request entity too large response has a 3xx status code
func (o *GetOrgauthorizationTrustorUserRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orgauthorization trustor user request entity too large response has a 4xx status code
func (o *GetOrgauthorizationTrustorUserRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get orgauthorization trustor user request entity too large response has a 5xx status code
func (o *GetOrgauthorizationTrustorUserRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get orgauthorization trustor user request entity too large response a status code equal to that given
func (o *GetOrgauthorizationTrustorUserRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetOrgauthorizationTrustorUserRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] getOrgauthorizationTrustorUserRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetOrgauthorizationTrustorUserRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] getOrgauthorizationTrustorUserRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetOrgauthorizationTrustorUserRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorUserRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorUserUnsupportedMediaType creates a GetOrgauthorizationTrustorUserUnsupportedMediaType with default headers values
func NewGetOrgauthorizationTrustorUserUnsupportedMediaType() *GetOrgauthorizationTrustorUserUnsupportedMediaType {
	return &GetOrgauthorizationTrustorUserUnsupportedMediaType{}
}

/*
GetOrgauthorizationTrustorUserUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetOrgauthorizationTrustorUserUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orgauthorization trustor user unsupported media type response has a 2xx status code
func (o *GetOrgauthorizationTrustorUserUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orgauthorization trustor user unsupported media type response has a 3xx status code
func (o *GetOrgauthorizationTrustorUserUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orgauthorization trustor user unsupported media type response has a 4xx status code
func (o *GetOrgauthorizationTrustorUserUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get orgauthorization trustor user unsupported media type response has a 5xx status code
func (o *GetOrgauthorizationTrustorUserUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get orgauthorization trustor user unsupported media type response a status code equal to that given
func (o *GetOrgauthorizationTrustorUserUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetOrgauthorizationTrustorUserUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] getOrgauthorizationTrustorUserUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetOrgauthorizationTrustorUserUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] getOrgauthorizationTrustorUserUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetOrgauthorizationTrustorUserUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorUserUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorUserTooManyRequests creates a GetOrgauthorizationTrustorUserTooManyRequests with default headers values
func NewGetOrgauthorizationTrustorUserTooManyRequests() *GetOrgauthorizationTrustorUserTooManyRequests {
	return &GetOrgauthorizationTrustorUserTooManyRequests{}
}

/*
GetOrgauthorizationTrustorUserTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetOrgauthorizationTrustorUserTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orgauthorization trustor user too many requests response has a 2xx status code
func (o *GetOrgauthorizationTrustorUserTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orgauthorization trustor user too many requests response has a 3xx status code
func (o *GetOrgauthorizationTrustorUserTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orgauthorization trustor user too many requests response has a 4xx status code
func (o *GetOrgauthorizationTrustorUserTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get orgauthorization trustor user too many requests response has a 5xx status code
func (o *GetOrgauthorizationTrustorUserTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get orgauthorization trustor user too many requests response a status code equal to that given
func (o *GetOrgauthorizationTrustorUserTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetOrgauthorizationTrustorUserTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] getOrgauthorizationTrustorUserTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOrgauthorizationTrustorUserTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] getOrgauthorizationTrustorUserTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOrgauthorizationTrustorUserTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorUserTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorUserInternalServerError creates a GetOrgauthorizationTrustorUserInternalServerError with default headers values
func NewGetOrgauthorizationTrustorUserInternalServerError() *GetOrgauthorizationTrustorUserInternalServerError {
	return &GetOrgauthorizationTrustorUserInternalServerError{}
}

/*
GetOrgauthorizationTrustorUserInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetOrgauthorizationTrustorUserInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orgauthorization trustor user internal server error response has a 2xx status code
func (o *GetOrgauthorizationTrustorUserInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orgauthorization trustor user internal server error response has a 3xx status code
func (o *GetOrgauthorizationTrustorUserInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orgauthorization trustor user internal server error response has a 4xx status code
func (o *GetOrgauthorizationTrustorUserInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get orgauthorization trustor user internal server error response has a 5xx status code
func (o *GetOrgauthorizationTrustorUserInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get orgauthorization trustor user internal server error response a status code equal to that given
func (o *GetOrgauthorizationTrustorUserInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetOrgauthorizationTrustorUserInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] getOrgauthorizationTrustorUserInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOrgauthorizationTrustorUserInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] getOrgauthorizationTrustorUserInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOrgauthorizationTrustorUserInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorUserServiceUnavailable creates a GetOrgauthorizationTrustorUserServiceUnavailable with default headers values
func NewGetOrgauthorizationTrustorUserServiceUnavailable() *GetOrgauthorizationTrustorUserServiceUnavailable {
	return &GetOrgauthorizationTrustorUserServiceUnavailable{}
}

/*
GetOrgauthorizationTrustorUserServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetOrgauthorizationTrustorUserServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orgauthorization trustor user service unavailable response has a 2xx status code
func (o *GetOrgauthorizationTrustorUserServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orgauthorization trustor user service unavailable response has a 3xx status code
func (o *GetOrgauthorizationTrustorUserServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orgauthorization trustor user service unavailable response has a 4xx status code
func (o *GetOrgauthorizationTrustorUserServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get orgauthorization trustor user service unavailable response has a 5xx status code
func (o *GetOrgauthorizationTrustorUserServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get orgauthorization trustor user service unavailable response a status code equal to that given
func (o *GetOrgauthorizationTrustorUserServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetOrgauthorizationTrustorUserServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] getOrgauthorizationTrustorUserServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOrgauthorizationTrustorUserServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] getOrgauthorizationTrustorUserServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOrgauthorizationTrustorUserServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorUserServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgauthorizationTrustorUserGatewayTimeout creates a GetOrgauthorizationTrustorUserGatewayTimeout with default headers values
func NewGetOrgauthorizationTrustorUserGatewayTimeout() *GetOrgauthorizationTrustorUserGatewayTimeout {
	return &GetOrgauthorizationTrustorUserGatewayTimeout{}
}

/*
GetOrgauthorizationTrustorUserGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetOrgauthorizationTrustorUserGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get orgauthorization trustor user gateway timeout response has a 2xx status code
func (o *GetOrgauthorizationTrustorUserGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get orgauthorization trustor user gateway timeout response has a 3xx status code
func (o *GetOrgauthorizationTrustorUserGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get orgauthorization trustor user gateway timeout response has a 4xx status code
func (o *GetOrgauthorizationTrustorUserGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get orgauthorization trustor user gateway timeout response has a 5xx status code
func (o *GetOrgauthorizationTrustorUserGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get orgauthorization trustor user gateway timeout response a status code equal to that given
func (o *GetOrgauthorizationTrustorUserGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetOrgauthorizationTrustorUserGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] getOrgauthorizationTrustorUserGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOrgauthorizationTrustorUserGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}][%d] getOrgauthorizationTrustorUserGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOrgauthorizationTrustorUserGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrgauthorizationTrustorUserGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
