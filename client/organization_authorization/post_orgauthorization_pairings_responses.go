// Code generated by go-swagger; DO NOT EDIT.

package organization_authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostOrgauthorizationPairingsReader is a Reader for the PostOrgauthorizationPairings structure.
type PostOrgauthorizationPairingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostOrgauthorizationPairingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostOrgauthorizationPairingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostOrgauthorizationPairingsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostOrgauthorizationPairingsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostOrgauthorizationPairingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostOrgauthorizationPairingsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostOrgauthorizationPairingsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostOrgauthorizationPairingsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostOrgauthorizationPairingsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostOrgauthorizationPairingsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostOrgauthorizationPairingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostOrgauthorizationPairingsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostOrgauthorizationPairingsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostOrgauthorizationPairingsOK creates a PostOrgauthorizationPairingsOK with default headers values
func NewPostOrgauthorizationPairingsOK() *PostOrgauthorizationPairingsOK {
	return &PostOrgauthorizationPairingsOK{}
}

/*
PostOrgauthorizationPairingsOK describes a response with status code 200, with default header values.

successful operation
*/
type PostOrgauthorizationPairingsOK struct {
	Payload *models.TrustRequest
}

// IsSuccess returns true when this post orgauthorization pairings o k response has a 2xx status code
func (o *PostOrgauthorizationPairingsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post orgauthorization pairings o k response has a 3xx status code
func (o *PostOrgauthorizationPairingsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post orgauthorization pairings o k response has a 4xx status code
func (o *PostOrgauthorizationPairingsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post orgauthorization pairings o k response has a 5xx status code
func (o *PostOrgauthorizationPairingsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post orgauthorization pairings o k response a status code equal to that given
func (o *PostOrgauthorizationPairingsOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostOrgauthorizationPairingsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/orgauthorization/pairings][%d] postOrgauthorizationPairingsOK  %+v", 200, o.Payload)
}

func (o *PostOrgauthorizationPairingsOK) String() string {
	return fmt.Sprintf("[POST /api/v2/orgauthorization/pairings][%d] postOrgauthorizationPairingsOK  %+v", 200, o.Payload)
}

func (o *PostOrgauthorizationPairingsOK) GetPayload() *models.TrustRequest {
	return o.Payload
}

func (o *PostOrgauthorizationPairingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TrustRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOrgauthorizationPairingsBadRequest creates a PostOrgauthorizationPairingsBadRequest with default headers values
func NewPostOrgauthorizationPairingsBadRequest() *PostOrgauthorizationPairingsBadRequest {
	return &PostOrgauthorizationPairingsBadRequest{}
}

/*
PostOrgauthorizationPairingsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostOrgauthorizationPairingsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post orgauthorization pairings bad request response has a 2xx status code
func (o *PostOrgauthorizationPairingsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post orgauthorization pairings bad request response has a 3xx status code
func (o *PostOrgauthorizationPairingsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post orgauthorization pairings bad request response has a 4xx status code
func (o *PostOrgauthorizationPairingsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post orgauthorization pairings bad request response has a 5xx status code
func (o *PostOrgauthorizationPairingsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post orgauthorization pairings bad request response a status code equal to that given
func (o *PostOrgauthorizationPairingsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostOrgauthorizationPairingsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/orgauthorization/pairings][%d] postOrgauthorizationPairingsBadRequest  %+v", 400, o.Payload)
}

func (o *PostOrgauthorizationPairingsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/orgauthorization/pairings][%d] postOrgauthorizationPairingsBadRequest  %+v", 400, o.Payload)
}

func (o *PostOrgauthorizationPairingsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOrgauthorizationPairingsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOrgauthorizationPairingsUnauthorized creates a PostOrgauthorizationPairingsUnauthorized with default headers values
func NewPostOrgauthorizationPairingsUnauthorized() *PostOrgauthorizationPairingsUnauthorized {
	return &PostOrgauthorizationPairingsUnauthorized{}
}

/*
PostOrgauthorizationPairingsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostOrgauthorizationPairingsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post orgauthorization pairings unauthorized response has a 2xx status code
func (o *PostOrgauthorizationPairingsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post orgauthorization pairings unauthorized response has a 3xx status code
func (o *PostOrgauthorizationPairingsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post orgauthorization pairings unauthorized response has a 4xx status code
func (o *PostOrgauthorizationPairingsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post orgauthorization pairings unauthorized response has a 5xx status code
func (o *PostOrgauthorizationPairingsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post orgauthorization pairings unauthorized response a status code equal to that given
func (o *PostOrgauthorizationPairingsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostOrgauthorizationPairingsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/orgauthorization/pairings][%d] postOrgauthorizationPairingsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostOrgauthorizationPairingsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/orgauthorization/pairings][%d] postOrgauthorizationPairingsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostOrgauthorizationPairingsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOrgauthorizationPairingsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOrgauthorizationPairingsForbidden creates a PostOrgauthorizationPairingsForbidden with default headers values
func NewPostOrgauthorizationPairingsForbidden() *PostOrgauthorizationPairingsForbidden {
	return &PostOrgauthorizationPairingsForbidden{}
}

/*
PostOrgauthorizationPairingsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostOrgauthorizationPairingsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post orgauthorization pairings forbidden response has a 2xx status code
func (o *PostOrgauthorizationPairingsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post orgauthorization pairings forbidden response has a 3xx status code
func (o *PostOrgauthorizationPairingsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post orgauthorization pairings forbidden response has a 4xx status code
func (o *PostOrgauthorizationPairingsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post orgauthorization pairings forbidden response has a 5xx status code
func (o *PostOrgauthorizationPairingsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post orgauthorization pairings forbidden response a status code equal to that given
func (o *PostOrgauthorizationPairingsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostOrgauthorizationPairingsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/orgauthorization/pairings][%d] postOrgauthorizationPairingsForbidden  %+v", 403, o.Payload)
}

func (o *PostOrgauthorizationPairingsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/orgauthorization/pairings][%d] postOrgauthorizationPairingsForbidden  %+v", 403, o.Payload)
}

func (o *PostOrgauthorizationPairingsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOrgauthorizationPairingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOrgauthorizationPairingsNotFound creates a PostOrgauthorizationPairingsNotFound with default headers values
func NewPostOrgauthorizationPairingsNotFound() *PostOrgauthorizationPairingsNotFound {
	return &PostOrgauthorizationPairingsNotFound{}
}

/*
PostOrgauthorizationPairingsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostOrgauthorizationPairingsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post orgauthorization pairings not found response has a 2xx status code
func (o *PostOrgauthorizationPairingsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post orgauthorization pairings not found response has a 3xx status code
func (o *PostOrgauthorizationPairingsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post orgauthorization pairings not found response has a 4xx status code
func (o *PostOrgauthorizationPairingsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post orgauthorization pairings not found response has a 5xx status code
func (o *PostOrgauthorizationPairingsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post orgauthorization pairings not found response a status code equal to that given
func (o *PostOrgauthorizationPairingsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostOrgauthorizationPairingsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/orgauthorization/pairings][%d] postOrgauthorizationPairingsNotFound  %+v", 404, o.Payload)
}

func (o *PostOrgauthorizationPairingsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/orgauthorization/pairings][%d] postOrgauthorizationPairingsNotFound  %+v", 404, o.Payload)
}

func (o *PostOrgauthorizationPairingsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOrgauthorizationPairingsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOrgauthorizationPairingsRequestTimeout creates a PostOrgauthorizationPairingsRequestTimeout with default headers values
func NewPostOrgauthorizationPairingsRequestTimeout() *PostOrgauthorizationPairingsRequestTimeout {
	return &PostOrgauthorizationPairingsRequestTimeout{}
}

/*
PostOrgauthorizationPairingsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostOrgauthorizationPairingsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post orgauthorization pairings request timeout response has a 2xx status code
func (o *PostOrgauthorizationPairingsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post orgauthorization pairings request timeout response has a 3xx status code
func (o *PostOrgauthorizationPairingsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post orgauthorization pairings request timeout response has a 4xx status code
func (o *PostOrgauthorizationPairingsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post orgauthorization pairings request timeout response has a 5xx status code
func (o *PostOrgauthorizationPairingsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post orgauthorization pairings request timeout response a status code equal to that given
func (o *PostOrgauthorizationPairingsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostOrgauthorizationPairingsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/orgauthorization/pairings][%d] postOrgauthorizationPairingsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostOrgauthorizationPairingsRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/orgauthorization/pairings][%d] postOrgauthorizationPairingsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostOrgauthorizationPairingsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOrgauthorizationPairingsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOrgauthorizationPairingsRequestEntityTooLarge creates a PostOrgauthorizationPairingsRequestEntityTooLarge with default headers values
func NewPostOrgauthorizationPairingsRequestEntityTooLarge() *PostOrgauthorizationPairingsRequestEntityTooLarge {
	return &PostOrgauthorizationPairingsRequestEntityTooLarge{}
}

/*
PostOrgauthorizationPairingsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostOrgauthorizationPairingsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post orgauthorization pairings request entity too large response has a 2xx status code
func (o *PostOrgauthorizationPairingsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post orgauthorization pairings request entity too large response has a 3xx status code
func (o *PostOrgauthorizationPairingsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post orgauthorization pairings request entity too large response has a 4xx status code
func (o *PostOrgauthorizationPairingsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post orgauthorization pairings request entity too large response has a 5xx status code
func (o *PostOrgauthorizationPairingsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post orgauthorization pairings request entity too large response a status code equal to that given
func (o *PostOrgauthorizationPairingsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostOrgauthorizationPairingsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/orgauthorization/pairings][%d] postOrgauthorizationPairingsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostOrgauthorizationPairingsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/orgauthorization/pairings][%d] postOrgauthorizationPairingsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostOrgauthorizationPairingsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOrgauthorizationPairingsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOrgauthorizationPairingsUnsupportedMediaType creates a PostOrgauthorizationPairingsUnsupportedMediaType with default headers values
func NewPostOrgauthorizationPairingsUnsupportedMediaType() *PostOrgauthorizationPairingsUnsupportedMediaType {
	return &PostOrgauthorizationPairingsUnsupportedMediaType{}
}

/*
PostOrgauthorizationPairingsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostOrgauthorizationPairingsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post orgauthorization pairings unsupported media type response has a 2xx status code
func (o *PostOrgauthorizationPairingsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post orgauthorization pairings unsupported media type response has a 3xx status code
func (o *PostOrgauthorizationPairingsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post orgauthorization pairings unsupported media type response has a 4xx status code
func (o *PostOrgauthorizationPairingsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post orgauthorization pairings unsupported media type response has a 5xx status code
func (o *PostOrgauthorizationPairingsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post orgauthorization pairings unsupported media type response a status code equal to that given
func (o *PostOrgauthorizationPairingsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostOrgauthorizationPairingsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/orgauthorization/pairings][%d] postOrgauthorizationPairingsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostOrgauthorizationPairingsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/orgauthorization/pairings][%d] postOrgauthorizationPairingsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostOrgauthorizationPairingsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOrgauthorizationPairingsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOrgauthorizationPairingsTooManyRequests creates a PostOrgauthorizationPairingsTooManyRequests with default headers values
func NewPostOrgauthorizationPairingsTooManyRequests() *PostOrgauthorizationPairingsTooManyRequests {
	return &PostOrgauthorizationPairingsTooManyRequests{}
}

/*
PostOrgauthorizationPairingsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostOrgauthorizationPairingsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post orgauthorization pairings too many requests response has a 2xx status code
func (o *PostOrgauthorizationPairingsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post orgauthorization pairings too many requests response has a 3xx status code
func (o *PostOrgauthorizationPairingsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post orgauthorization pairings too many requests response has a 4xx status code
func (o *PostOrgauthorizationPairingsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post orgauthorization pairings too many requests response has a 5xx status code
func (o *PostOrgauthorizationPairingsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post orgauthorization pairings too many requests response a status code equal to that given
func (o *PostOrgauthorizationPairingsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostOrgauthorizationPairingsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/orgauthorization/pairings][%d] postOrgauthorizationPairingsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostOrgauthorizationPairingsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/orgauthorization/pairings][%d] postOrgauthorizationPairingsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostOrgauthorizationPairingsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOrgauthorizationPairingsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOrgauthorizationPairingsInternalServerError creates a PostOrgauthorizationPairingsInternalServerError with default headers values
func NewPostOrgauthorizationPairingsInternalServerError() *PostOrgauthorizationPairingsInternalServerError {
	return &PostOrgauthorizationPairingsInternalServerError{}
}

/*
PostOrgauthorizationPairingsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostOrgauthorizationPairingsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post orgauthorization pairings internal server error response has a 2xx status code
func (o *PostOrgauthorizationPairingsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post orgauthorization pairings internal server error response has a 3xx status code
func (o *PostOrgauthorizationPairingsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post orgauthorization pairings internal server error response has a 4xx status code
func (o *PostOrgauthorizationPairingsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post orgauthorization pairings internal server error response has a 5xx status code
func (o *PostOrgauthorizationPairingsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post orgauthorization pairings internal server error response a status code equal to that given
func (o *PostOrgauthorizationPairingsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostOrgauthorizationPairingsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/orgauthorization/pairings][%d] postOrgauthorizationPairingsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostOrgauthorizationPairingsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/orgauthorization/pairings][%d] postOrgauthorizationPairingsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostOrgauthorizationPairingsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOrgauthorizationPairingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOrgauthorizationPairingsServiceUnavailable creates a PostOrgauthorizationPairingsServiceUnavailable with default headers values
func NewPostOrgauthorizationPairingsServiceUnavailable() *PostOrgauthorizationPairingsServiceUnavailable {
	return &PostOrgauthorizationPairingsServiceUnavailable{}
}

/*
PostOrgauthorizationPairingsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostOrgauthorizationPairingsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post orgauthorization pairings service unavailable response has a 2xx status code
func (o *PostOrgauthorizationPairingsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post orgauthorization pairings service unavailable response has a 3xx status code
func (o *PostOrgauthorizationPairingsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post orgauthorization pairings service unavailable response has a 4xx status code
func (o *PostOrgauthorizationPairingsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post orgauthorization pairings service unavailable response has a 5xx status code
func (o *PostOrgauthorizationPairingsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post orgauthorization pairings service unavailable response a status code equal to that given
func (o *PostOrgauthorizationPairingsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostOrgauthorizationPairingsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/orgauthorization/pairings][%d] postOrgauthorizationPairingsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostOrgauthorizationPairingsServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/orgauthorization/pairings][%d] postOrgauthorizationPairingsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostOrgauthorizationPairingsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOrgauthorizationPairingsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOrgauthorizationPairingsGatewayTimeout creates a PostOrgauthorizationPairingsGatewayTimeout with default headers values
func NewPostOrgauthorizationPairingsGatewayTimeout() *PostOrgauthorizationPairingsGatewayTimeout {
	return &PostOrgauthorizationPairingsGatewayTimeout{}
}

/*
PostOrgauthorizationPairingsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostOrgauthorizationPairingsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post orgauthorization pairings gateway timeout response has a 2xx status code
func (o *PostOrgauthorizationPairingsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post orgauthorization pairings gateway timeout response has a 3xx status code
func (o *PostOrgauthorizationPairingsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post orgauthorization pairings gateway timeout response has a 4xx status code
func (o *PostOrgauthorizationPairingsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post orgauthorization pairings gateway timeout response has a 5xx status code
func (o *PostOrgauthorizationPairingsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post orgauthorization pairings gateway timeout response a status code equal to that given
func (o *PostOrgauthorizationPairingsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostOrgauthorizationPairingsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/orgauthorization/pairings][%d] postOrgauthorizationPairingsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostOrgauthorizationPairingsGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/orgauthorization/pairings][%d] postOrgauthorizationPairingsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostOrgauthorizationPairingsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOrgauthorizationPairingsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
