// Code generated by go-swagger; DO NOT EDIT.

package utilities

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetTimezonesReader is a Reader for the GetTimezones structure.
type GetTimezonesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTimezonesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTimezonesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTimezonesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetTimezonesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetTimezonesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTimezonesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetTimezonesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetTimezonesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetTimezonesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetTimezonesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTimezonesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetTimezonesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetTimezonesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTimezonesOK creates a GetTimezonesOK with default headers values
func NewGetTimezonesOK() *GetTimezonesOK {
	return &GetTimezonesOK{}
}

/*
GetTimezonesOK describes a response with status code 200, with default header values.

successful operation
*/
type GetTimezonesOK struct {
	Payload *models.TimeZoneEntityListing
}

// IsSuccess returns true when this get timezones o k response has a 2xx status code
func (o *GetTimezonesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get timezones o k response has a 3xx status code
func (o *GetTimezonesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get timezones o k response has a 4xx status code
func (o *GetTimezonesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get timezones o k response has a 5xx status code
func (o *GetTimezonesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get timezones o k response a status code equal to that given
func (o *GetTimezonesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetTimezonesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/timezones][%d] getTimezonesOK  %+v", 200, o.Payload)
}

func (o *GetTimezonesOK) String() string {
	return fmt.Sprintf("[GET /api/v2/timezones][%d] getTimezonesOK  %+v", 200, o.Payload)
}

func (o *GetTimezonesOK) GetPayload() *models.TimeZoneEntityListing {
	return o.Payload
}

func (o *GetTimezonesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TimeZoneEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTimezonesBadRequest creates a GetTimezonesBadRequest with default headers values
func NewGetTimezonesBadRequest() *GetTimezonesBadRequest {
	return &GetTimezonesBadRequest{}
}

/*
GetTimezonesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetTimezonesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get timezones bad request response has a 2xx status code
func (o *GetTimezonesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get timezones bad request response has a 3xx status code
func (o *GetTimezonesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get timezones bad request response has a 4xx status code
func (o *GetTimezonesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get timezones bad request response has a 5xx status code
func (o *GetTimezonesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get timezones bad request response a status code equal to that given
func (o *GetTimezonesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetTimezonesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/timezones][%d] getTimezonesBadRequest  %+v", 400, o.Payload)
}

func (o *GetTimezonesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/timezones][%d] getTimezonesBadRequest  %+v", 400, o.Payload)
}

func (o *GetTimezonesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTimezonesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTimezonesUnauthorized creates a GetTimezonesUnauthorized with default headers values
func NewGetTimezonesUnauthorized() *GetTimezonesUnauthorized {
	return &GetTimezonesUnauthorized{}
}

/*
GetTimezonesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetTimezonesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get timezones unauthorized response has a 2xx status code
func (o *GetTimezonesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get timezones unauthorized response has a 3xx status code
func (o *GetTimezonesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get timezones unauthorized response has a 4xx status code
func (o *GetTimezonesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get timezones unauthorized response has a 5xx status code
func (o *GetTimezonesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get timezones unauthorized response a status code equal to that given
func (o *GetTimezonesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetTimezonesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/timezones][%d] getTimezonesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetTimezonesUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/timezones][%d] getTimezonesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetTimezonesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTimezonesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTimezonesForbidden creates a GetTimezonesForbidden with default headers values
func NewGetTimezonesForbidden() *GetTimezonesForbidden {
	return &GetTimezonesForbidden{}
}

/*
GetTimezonesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetTimezonesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get timezones forbidden response has a 2xx status code
func (o *GetTimezonesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get timezones forbidden response has a 3xx status code
func (o *GetTimezonesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get timezones forbidden response has a 4xx status code
func (o *GetTimezonesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get timezones forbidden response has a 5xx status code
func (o *GetTimezonesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get timezones forbidden response a status code equal to that given
func (o *GetTimezonesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetTimezonesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/timezones][%d] getTimezonesForbidden  %+v", 403, o.Payload)
}

func (o *GetTimezonesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/timezones][%d] getTimezonesForbidden  %+v", 403, o.Payload)
}

func (o *GetTimezonesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTimezonesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTimezonesNotFound creates a GetTimezonesNotFound with default headers values
func NewGetTimezonesNotFound() *GetTimezonesNotFound {
	return &GetTimezonesNotFound{}
}

/*
GetTimezonesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetTimezonesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get timezones not found response has a 2xx status code
func (o *GetTimezonesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get timezones not found response has a 3xx status code
func (o *GetTimezonesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get timezones not found response has a 4xx status code
func (o *GetTimezonesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get timezones not found response has a 5xx status code
func (o *GetTimezonesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get timezones not found response a status code equal to that given
func (o *GetTimezonesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetTimezonesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/timezones][%d] getTimezonesNotFound  %+v", 404, o.Payload)
}

func (o *GetTimezonesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/timezones][%d] getTimezonesNotFound  %+v", 404, o.Payload)
}

func (o *GetTimezonesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTimezonesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTimezonesRequestTimeout creates a GetTimezonesRequestTimeout with default headers values
func NewGetTimezonesRequestTimeout() *GetTimezonesRequestTimeout {
	return &GetTimezonesRequestTimeout{}
}

/*
GetTimezonesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetTimezonesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get timezones request timeout response has a 2xx status code
func (o *GetTimezonesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get timezones request timeout response has a 3xx status code
func (o *GetTimezonesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get timezones request timeout response has a 4xx status code
func (o *GetTimezonesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get timezones request timeout response has a 5xx status code
func (o *GetTimezonesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get timezones request timeout response a status code equal to that given
func (o *GetTimezonesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetTimezonesRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/timezones][%d] getTimezonesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetTimezonesRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/timezones][%d] getTimezonesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetTimezonesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTimezonesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTimezonesRequestEntityTooLarge creates a GetTimezonesRequestEntityTooLarge with default headers values
func NewGetTimezonesRequestEntityTooLarge() *GetTimezonesRequestEntityTooLarge {
	return &GetTimezonesRequestEntityTooLarge{}
}

/*
GetTimezonesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetTimezonesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get timezones request entity too large response has a 2xx status code
func (o *GetTimezonesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get timezones request entity too large response has a 3xx status code
func (o *GetTimezonesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get timezones request entity too large response has a 4xx status code
func (o *GetTimezonesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get timezones request entity too large response has a 5xx status code
func (o *GetTimezonesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get timezones request entity too large response a status code equal to that given
func (o *GetTimezonesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetTimezonesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/timezones][%d] getTimezonesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetTimezonesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/timezones][%d] getTimezonesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetTimezonesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTimezonesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTimezonesUnsupportedMediaType creates a GetTimezonesUnsupportedMediaType with default headers values
func NewGetTimezonesUnsupportedMediaType() *GetTimezonesUnsupportedMediaType {
	return &GetTimezonesUnsupportedMediaType{}
}

/*
GetTimezonesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetTimezonesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get timezones unsupported media type response has a 2xx status code
func (o *GetTimezonesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get timezones unsupported media type response has a 3xx status code
func (o *GetTimezonesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get timezones unsupported media type response has a 4xx status code
func (o *GetTimezonesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get timezones unsupported media type response has a 5xx status code
func (o *GetTimezonesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get timezones unsupported media type response a status code equal to that given
func (o *GetTimezonesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetTimezonesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/timezones][%d] getTimezonesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetTimezonesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/timezones][%d] getTimezonesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetTimezonesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTimezonesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTimezonesTooManyRequests creates a GetTimezonesTooManyRequests with default headers values
func NewGetTimezonesTooManyRequests() *GetTimezonesTooManyRequests {
	return &GetTimezonesTooManyRequests{}
}

/*
GetTimezonesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetTimezonesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get timezones too many requests response has a 2xx status code
func (o *GetTimezonesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get timezones too many requests response has a 3xx status code
func (o *GetTimezonesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get timezones too many requests response has a 4xx status code
func (o *GetTimezonesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get timezones too many requests response has a 5xx status code
func (o *GetTimezonesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get timezones too many requests response a status code equal to that given
func (o *GetTimezonesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetTimezonesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/timezones][%d] getTimezonesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetTimezonesTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/timezones][%d] getTimezonesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetTimezonesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTimezonesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTimezonesInternalServerError creates a GetTimezonesInternalServerError with default headers values
func NewGetTimezonesInternalServerError() *GetTimezonesInternalServerError {
	return &GetTimezonesInternalServerError{}
}

/*
GetTimezonesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetTimezonesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get timezones internal server error response has a 2xx status code
func (o *GetTimezonesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get timezones internal server error response has a 3xx status code
func (o *GetTimezonesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get timezones internal server error response has a 4xx status code
func (o *GetTimezonesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get timezones internal server error response has a 5xx status code
func (o *GetTimezonesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get timezones internal server error response a status code equal to that given
func (o *GetTimezonesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetTimezonesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/timezones][%d] getTimezonesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTimezonesInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/timezones][%d] getTimezonesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTimezonesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTimezonesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTimezonesServiceUnavailable creates a GetTimezonesServiceUnavailable with default headers values
func NewGetTimezonesServiceUnavailable() *GetTimezonesServiceUnavailable {
	return &GetTimezonesServiceUnavailable{}
}

/*
GetTimezonesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetTimezonesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get timezones service unavailable response has a 2xx status code
func (o *GetTimezonesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get timezones service unavailable response has a 3xx status code
func (o *GetTimezonesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get timezones service unavailable response has a 4xx status code
func (o *GetTimezonesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get timezones service unavailable response has a 5xx status code
func (o *GetTimezonesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get timezones service unavailable response a status code equal to that given
func (o *GetTimezonesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetTimezonesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/timezones][%d] getTimezonesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetTimezonesServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/timezones][%d] getTimezonesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetTimezonesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTimezonesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTimezonesGatewayTimeout creates a GetTimezonesGatewayTimeout with default headers values
func NewGetTimezonesGatewayTimeout() *GetTimezonesGatewayTimeout {
	return &GetTimezonesGatewayTimeout{}
}

/*
GetTimezonesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetTimezonesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get timezones gateway timeout response has a 2xx status code
func (o *GetTimezonesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get timezones gateway timeout response has a 3xx status code
func (o *GetTimezonesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get timezones gateway timeout response has a 4xx status code
func (o *GetTimezonesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get timezones gateway timeout response has a 5xx status code
func (o *GetTimezonesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get timezones gateway timeout response a status code equal to that given
func (o *GetTimezonesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetTimezonesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/timezones][%d] getTimezonesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetTimezonesGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/timezones][%d] getTimezonesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetTimezonesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTimezonesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
