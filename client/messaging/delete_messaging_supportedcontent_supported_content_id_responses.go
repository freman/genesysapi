// Code generated by go-swagger; DO NOT EDIT.

package messaging

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteMessagingSupportedcontentSupportedContentIDReader is a Reader for the DeleteMessagingSupportedcontentSupportedContentID structure.
type DeleteMessagingSupportedcontentSupportedContentIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteMessagingSupportedcontentSupportedContentIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteMessagingSupportedcontentSupportedContentIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteMessagingSupportedcontentSupportedContentIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteMessagingSupportedcontentSupportedContentIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteMessagingSupportedcontentSupportedContentIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteMessagingSupportedcontentSupportedContentIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteMessagingSupportedcontentSupportedContentIDRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteMessagingSupportedcontentSupportedContentIDRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteMessagingSupportedcontentSupportedContentIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteMessagingSupportedcontentSupportedContentIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteMessagingSupportedcontentSupportedContentIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteMessagingSupportedcontentSupportedContentIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteMessagingSupportedcontentSupportedContentIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteMessagingSupportedcontentSupportedContentIDNoContent creates a DeleteMessagingSupportedcontentSupportedContentIDNoContent with default headers values
func NewDeleteMessagingSupportedcontentSupportedContentIDNoContent() *DeleteMessagingSupportedcontentSupportedContentIDNoContent {
	return &DeleteMessagingSupportedcontentSupportedContentIDNoContent{}
}

/*DeleteMessagingSupportedcontentSupportedContentIDNoContent handles this case with default header values.

Operation was successful
*/
type DeleteMessagingSupportedcontentSupportedContentIDNoContent struct {
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/messaging/supportedcontent/{supportedContentId}][%d] deleteMessagingSupportedcontentSupportedContentIdNoContent ", 204)
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteMessagingSupportedcontentSupportedContentIDBadRequest creates a DeleteMessagingSupportedcontentSupportedContentIDBadRequest with default headers values
func NewDeleteMessagingSupportedcontentSupportedContentIDBadRequest() *DeleteMessagingSupportedcontentSupportedContentIDBadRequest {
	return &DeleteMessagingSupportedcontentSupportedContentIDBadRequest{}
}

/*DeleteMessagingSupportedcontentSupportedContentIDBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteMessagingSupportedcontentSupportedContentIDBadRequest struct {
	Payload *models.ErrorBody
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/messaging/supportedcontent/{supportedContentId}][%d] deleteMessagingSupportedcontentSupportedContentIdBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteMessagingSupportedcontentSupportedContentIDUnauthorized creates a DeleteMessagingSupportedcontentSupportedContentIDUnauthorized with default headers values
func NewDeleteMessagingSupportedcontentSupportedContentIDUnauthorized() *DeleteMessagingSupportedcontentSupportedContentIDUnauthorized {
	return &DeleteMessagingSupportedcontentSupportedContentIDUnauthorized{}
}

/*DeleteMessagingSupportedcontentSupportedContentIDUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteMessagingSupportedcontentSupportedContentIDUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/messaging/supportedcontent/{supportedContentId}][%d] deleteMessagingSupportedcontentSupportedContentIdUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteMessagingSupportedcontentSupportedContentIDForbidden creates a DeleteMessagingSupportedcontentSupportedContentIDForbidden with default headers values
func NewDeleteMessagingSupportedcontentSupportedContentIDForbidden() *DeleteMessagingSupportedcontentSupportedContentIDForbidden {
	return &DeleteMessagingSupportedcontentSupportedContentIDForbidden{}
}

/*DeleteMessagingSupportedcontentSupportedContentIDForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type DeleteMessagingSupportedcontentSupportedContentIDForbidden struct {
	Payload *models.ErrorBody
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/messaging/supportedcontent/{supportedContentId}][%d] deleteMessagingSupportedcontentSupportedContentIdForbidden  %+v", 403, o.Payload)
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteMessagingSupportedcontentSupportedContentIDNotFound creates a DeleteMessagingSupportedcontentSupportedContentIDNotFound with default headers values
func NewDeleteMessagingSupportedcontentSupportedContentIDNotFound() *DeleteMessagingSupportedcontentSupportedContentIDNotFound {
	return &DeleteMessagingSupportedcontentSupportedContentIDNotFound{}
}

/*DeleteMessagingSupportedcontentSupportedContentIDNotFound handles this case with default header values.

The requested resource was not found.
*/
type DeleteMessagingSupportedcontentSupportedContentIDNotFound struct {
	Payload *models.ErrorBody
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/messaging/supportedcontent/{supportedContentId}][%d] deleteMessagingSupportedcontentSupportedContentIdNotFound  %+v", 404, o.Payload)
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteMessagingSupportedcontentSupportedContentIDRequestTimeout creates a DeleteMessagingSupportedcontentSupportedContentIDRequestTimeout with default headers values
func NewDeleteMessagingSupportedcontentSupportedContentIDRequestTimeout() *DeleteMessagingSupportedcontentSupportedContentIDRequestTimeout {
	return &DeleteMessagingSupportedcontentSupportedContentIDRequestTimeout{}
}

/*DeleteMessagingSupportedcontentSupportedContentIDRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteMessagingSupportedcontentSupportedContentIDRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/messaging/supportedcontent/{supportedContentId}][%d] deleteMessagingSupportedcontentSupportedContentIdRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteMessagingSupportedcontentSupportedContentIDRequestEntityTooLarge creates a DeleteMessagingSupportedcontentSupportedContentIDRequestEntityTooLarge with default headers values
func NewDeleteMessagingSupportedcontentSupportedContentIDRequestEntityTooLarge() *DeleteMessagingSupportedcontentSupportedContentIDRequestEntityTooLarge {
	return &DeleteMessagingSupportedcontentSupportedContentIDRequestEntityTooLarge{}
}

/*DeleteMessagingSupportedcontentSupportedContentIDRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type DeleteMessagingSupportedcontentSupportedContentIDRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/messaging/supportedcontent/{supportedContentId}][%d] deleteMessagingSupportedcontentSupportedContentIdRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteMessagingSupportedcontentSupportedContentIDUnsupportedMediaType creates a DeleteMessagingSupportedcontentSupportedContentIDUnsupportedMediaType with default headers values
func NewDeleteMessagingSupportedcontentSupportedContentIDUnsupportedMediaType() *DeleteMessagingSupportedcontentSupportedContentIDUnsupportedMediaType {
	return &DeleteMessagingSupportedcontentSupportedContentIDUnsupportedMediaType{}
}

/*DeleteMessagingSupportedcontentSupportedContentIDUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteMessagingSupportedcontentSupportedContentIDUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/messaging/supportedcontent/{supportedContentId}][%d] deleteMessagingSupportedcontentSupportedContentIdUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteMessagingSupportedcontentSupportedContentIDTooManyRequests creates a DeleteMessagingSupportedcontentSupportedContentIDTooManyRequests with default headers values
func NewDeleteMessagingSupportedcontentSupportedContentIDTooManyRequests() *DeleteMessagingSupportedcontentSupportedContentIDTooManyRequests {
	return &DeleteMessagingSupportedcontentSupportedContentIDTooManyRequests{}
}

/*DeleteMessagingSupportedcontentSupportedContentIDTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteMessagingSupportedcontentSupportedContentIDTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/messaging/supportedcontent/{supportedContentId}][%d] deleteMessagingSupportedcontentSupportedContentIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteMessagingSupportedcontentSupportedContentIDInternalServerError creates a DeleteMessagingSupportedcontentSupportedContentIDInternalServerError with default headers values
func NewDeleteMessagingSupportedcontentSupportedContentIDInternalServerError() *DeleteMessagingSupportedcontentSupportedContentIDInternalServerError {
	return &DeleteMessagingSupportedcontentSupportedContentIDInternalServerError{}
}

/*DeleteMessagingSupportedcontentSupportedContentIDInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteMessagingSupportedcontentSupportedContentIDInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/messaging/supportedcontent/{supportedContentId}][%d] deleteMessagingSupportedcontentSupportedContentIdInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteMessagingSupportedcontentSupportedContentIDServiceUnavailable creates a DeleteMessagingSupportedcontentSupportedContentIDServiceUnavailable with default headers values
func NewDeleteMessagingSupportedcontentSupportedContentIDServiceUnavailable() *DeleteMessagingSupportedcontentSupportedContentIDServiceUnavailable {
	return &DeleteMessagingSupportedcontentSupportedContentIDServiceUnavailable{}
}

/*DeleteMessagingSupportedcontentSupportedContentIDServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteMessagingSupportedcontentSupportedContentIDServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/messaging/supportedcontent/{supportedContentId}][%d] deleteMessagingSupportedcontentSupportedContentIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteMessagingSupportedcontentSupportedContentIDGatewayTimeout creates a DeleteMessagingSupportedcontentSupportedContentIDGatewayTimeout with default headers values
func NewDeleteMessagingSupportedcontentSupportedContentIDGatewayTimeout() *DeleteMessagingSupportedcontentSupportedContentIDGatewayTimeout {
	return &DeleteMessagingSupportedcontentSupportedContentIDGatewayTimeout{}
}

/*DeleteMessagingSupportedcontentSupportedContentIDGatewayTimeout handles this case with default header values.

The request timed out.
*/
type DeleteMessagingSupportedcontentSupportedContentIDGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/messaging/supportedcontent/{supportedContentId}][%d] deleteMessagingSupportedcontentSupportedContentIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteMessagingSupportedcontentSupportedContentIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
