// Code generated by go-swagger; DO NOT EDIT.

package o_auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetOauthClientUsageQueryResultReader is a Reader for the GetOauthClientUsageQueryResult structure.
type GetOauthClientUsageQueryResultReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOauthClientUsageQueryResultReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOauthClientUsageQueryResultOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOauthClientUsageQueryResultBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOauthClientUsageQueryResultUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOauthClientUsageQueryResultForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOauthClientUsageQueryResultNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetOauthClientUsageQueryResultRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetOauthClientUsageQueryResultRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetOauthClientUsageQueryResultUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetOauthClientUsageQueryResultTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOauthClientUsageQueryResultInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetOauthClientUsageQueryResultServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetOauthClientUsageQueryResultGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOauthClientUsageQueryResultOK creates a GetOauthClientUsageQueryResultOK with default headers values
func NewGetOauthClientUsageQueryResultOK() *GetOauthClientUsageQueryResultOK {
	return &GetOauthClientUsageQueryResultOK{}
}

/*
GetOauthClientUsageQueryResultOK describes a response with status code 200, with default header values.

successful operation
*/
type GetOauthClientUsageQueryResultOK struct {
	Payload *models.APIUsageQueryResult
}

// IsSuccess returns true when this get oauth client usage query result o k response has a 2xx status code
func (o *GetOauthClientUsageQueryResultOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get oauth client usage query result o k response has a 3xx status code
func (o *GetOauthClientUsageQueryResultOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get oauth client usage query result o k response has a 4xx status code
func (o *GetOauthClientUsageQueryResultOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get oauth client usage query result o k response has a 5xx status code
func (o *GetOauthClientUsageQueryResultOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get oauth client usage query result o k response a status code equal to that given
func (o *GetOauthClientUsageQueryResultOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetOauthClientUsageQueryResultOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}/usage/query/results/{executionId}][%d] getOauthClientUsageQueryResultOK  %+v", 200, o.Payload)
}

func (o *GetOauthClientUsageQueryResultOK) String() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}/usage/query/results/{executionId}][%d] getOauthClientUsageQueryResultOK  %+v", 200, o.Payload)
}

func (o *GetOauthClientUsageQueryResultOK) GetPayload() *models.APIUsageQueryResult {
	return o.Payload
}

func (o *GetOauthClientUsageQueryResultOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIUsageQueryResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOauthClientUsageQueryResultBadRequest creates a GetOauthClientUsageQueryResultBadRequest with default headers values
func NewGetOauthClientUsageQueryResultBadRequest() *GetOauthClientUsageQueryResultBadRequest {
	return &GetOauthClientUsageQueryResultBadRequest{}
}

/*
GetOauthClientUsageQueryResultBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetOauthClientUsageQueryResultBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get oauth client usage query result bad request response has a 2xx status code
func (o *GetOauthClientUsageQueryResultBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get oauth client usage query result bad request response has a 3xx status code
func (o *GetOauthClientUsageQueryResultBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get oauth client usage query result bad request response has a 4xx status code
func (o *GetOauthClientUsageQueryResultBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get oauth client usage query result bad request response has a 5xx status code
func (o *GetOauthClientUsageQueryResultBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get oauth client usage query result bad request response a status code equal to that given
func (o *GetOauthClientUsageQueryResultBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetOauthClientUsageQueryResultBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}/usage/query/results/{executionId}][%d] getOauthClientUsageQueryResultBadRequest  %+v", 400, o.Payload)
}

func (o *GetOauthClientUsageQueryResultBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}/usage/query/results/{executionId}][%d] getOauthClientUsageQueryResultBadRequest  %+v", 400, o.Payload)
}

func (o *GetOauthClientUsageQueryResultBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOauthClientUsageQueryResultBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOauthClientUsageQueryResultUnauthorized creates a GetOauthClientUsageQueryResultUnauthorized with default headers values
func NewGetOauthClientUsageQueryResultUnauthorized() *GetOauthClientUsageQueryResultUnauthorized {
	return &GetOauthClientUsageQueryResultUnauthorized{}
}

/*
GetOauthClientUsageQueryResultUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetOauthClientUsageQueryResultUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get oauth client usage query result unauthorized response has a 2xx status code
func (o *GetOauthClientUsageQueryResultUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get oauth client usage query result unauthorized response has a 3xx status code
func (o *GetOauthClientUsageQueryResultUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get oauth client usage query result unauthorized response has a 4xx status code
func (o *GetOauthClientUsageQueryResultUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get oauth client usage query result unauthorized response has a 5xx status code
func (o *GetOauthClientUsageQueryResultUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get oauth client usage query result unauthorized response a status code equal to that given
func (o *GetOauthClientUsageQueryResultUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetOauthClientUsageQueryResultUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}/usage/query/results/{executionId}][%d] getOauthClientUsageQueryResultUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOauthClientUsageQueryResultUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}/usage/query/results/{executionId}][%d] getOauthClientUsageQueryResultUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOauthClientUsageQueryResultUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOauthClientUsageQueryResultUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOauthClientUsageQueryResultForbidden creates a GetOauthClientUsageQueryResultForbidden with default headers values
func NewGetOauthClientUsageQueryResultForbidden() *GetOauthClientUsageQueryResultForbidden {
	return &GetOauthClientUsageQueryResultForbidden{}
}

/*
GetOauthClientUsageQueryResultForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetOauthClientUsageQueryResultForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get oauth client usage query result forbidden response has a 2xx status code
func (o *GetOauthClientUsageQueryResultForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get oauth client usage query result forbidden response has a 3xx status code
func (o *GetOauthClientUsageQueryResultForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get oauth client usage query result forbidden response has a 4xx status code
func (o *GetOauthClientUsageQueryResultForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get oauth client usage query result forbidden response has a 5xx status code
func (o *GetOauthClientUsageQueryResultForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get oauth client usage query result forbidden response a status code equal to that given
func (o *GetOauthClientUsageQueryResultForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetOauthClientUsageQueryResultForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}/usage/query/results/{executionId}][%d] getOauthClientUsageQueryResultForbidden  %+v", 403, o.Payload)
}

func (o *GetOauthClientUsageQueryResultForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}/usage/query/results/{executionId}][%d] getOauthClientUsageQueryResultForbidden  %+v", 403, o.Payload)
}

func (o *GetOauthClientUsageQueryResultForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOauthClientUsageQueryResultForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOauthClientUsageQueryResultNotFound creates a GetOauthClientUsageQueryResultNotFound with default headers values
func NewGetOauthClientUsageQueryResultNotFound() *GetOauthClientUsageQueryResultNotFound {
	return &GetOauthClientUsageQueryResultNotFound{}
}

/*
GetOauthClientUsageQueryResultNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetOauthClientUsageQueryResultNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get oauth client usage query result not found response has a 2xx status code
func (o *GetOauthClientUsageQueryResultNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get oauth client usage query result not found response has a 3xx status code
func (o *GetOauthClientUsageQueryResultNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get oauth client usage query result not found response has a 4xx status code
func (o *GetOauthClientUsageQueryResultNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get oauth client usage query result not found response has a 5xx status code
func (o *GetOauthClientUsageQueryResultNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get oauth client usage query result not found response a status code equal to that given
func (o *GetOauthClientUsageQueryResultNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetOauthClientUsageQueryResultNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}/usage/query/results/{executionId}][%d] getOauthClientUsageQueryResultNotFound  %+v", 404, o.Payload)
}

func (o *GetOauthClientUsageQueryResultNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}/usage/query/results/{executionId}][%d] getOauthClientUsageQueryResultNotFound  %+v", 404, o.Payload)
}

func (o *GetOauthClientUsageQueryResultNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOauthClientUsageQueryResultNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOauthClientUsageQueryResultRequestTimeout creates a GetOauthClientUsageQueryResultRequestTimeout with default headers values
func NewGetOauthClientUsageQueryResultRequestTimeout() *GetOauthClientUsageQueryResultRequestTimeout {
	return &GetOauthClientUsageQueryResultRequestTimeout{}
}

/*
GetOauthClientUsageQueryResultRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetOauthClientUsageQueryResultRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get oauth client usage query result request timeout response has a 2xx status code
func (o *GetOauthClientUsageQueryResultRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get oauth client usage query result request timeout response has a 3xx status code
func (o *GetOauthClientUsageQueryResultRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get oauth client usage query result request timeout response has a 4xx status code
func (o *GetOauthClientUsageQueryResultRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get oauth client usage query result request timeout response has a 5xx status code
func (o *GetOauthClientUsageQueryResultRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get oauth client usage query result request timeout response a status code equal to that given
func (o *GetOauthClientUsageQueryResultRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetOauthClientUsageQueryResultRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}/usage/query/results/{executionId}][%d] getOauthClientUsageQueryResultRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetOauthClientUsageQueryResultRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}/usage/query/results/{executionId}][%d] getOauthClientUsageQueryResultRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetOauthClientUsageQueryResultRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOauthClientUsageQueryResultRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOauthClientUsageQueryResultRequestEntityTooLarge creates a GetOauthClientUsageQueryResultRequestEntityTooLarge with default headers values
func NewGetOauthClientUsageQueryResultRequestEntityTooLarge() *GetOauthClientUsageQueryResultRequestEntityTooLarge {
	return &GetOauthClientUsageQueryResultRequestEntityTooLarge{}
}

/*
GetOauthClientUsageQueryResultRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetOauthClientUsageQueryResultRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get oauth client usage query result request entity too large response has a 2xx status code
func (o *GetOauthClientUsageQueryResultRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get oauth client usage query result request entity too large response has a 3xx status code
func (o *GetOauthClientUsageQueryResultRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get oauth client usage query result request entity too large response has a 4xx status code
func (o *GetOauthClientUsageQueryResultRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get oauth client usage query result request entity too large response has a 5xx status code
func (o *GetOauthClientUsageQueryResultRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get oauth client usage query result request entity too large response a status code equal to that given
func (o *GetOauthClientUsageQueryResultRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetOauthClientUsageQueryResultRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}/usage/query/results/{executionId}][%d] getOauthClientUsageQueryResultRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetOauthClientUsageQueryResultRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}/usage/query/results/{executionId}][%d] getOauthClientUsageQueryResultRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetOauthClientUsageQueryResultRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOauthClientUsageQueryResultRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOauthClientUsageQueryResultUnsupportedMediaType creates a GetOauthClientUsageQueryResultUnsupportedMediaType with default headers values
func NewGetOauthClientUsageQueryResultUnsupportedMediaType() *GetOauthClientUsageQueryResultUnsupportedMediaType {
	return &GetOauthClientUsageQueryResultUnsupportedMediaType{}
}

/*
GetOauthClientUsageQueryResultUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetOauthClientUsageQueryResultUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get oauth client usage query result unsupported media type response has a 2xx status code
func (o *GetOauthClientUsageQueryResultUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get oauth client usage query result unsupported media type response has a 3xx status code
func (o *GetOauthClientUsageQueryResultUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get oauth client usage query result unsupported media type response has a 4xx status code
func (o *GetOauthClientUsageQueryResultUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get oauth client usage query result unsupported media type response has a 5xx status code
func (o *GetOauthClientUsageQueryResultUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get oauth client usage query result unsupported media type response a status code equal to that given
func (o *GetOauthClientUsageQueryResultUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetOauthClientUsageQueryResultUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}/usage/query/results/{executionId}][%d] getOauthClientUsageQueryResultUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetOauthClientUsageQueryResultUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}/usage/query/results/{executionId}][%d] getOauthClientUsageQueryResultUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetOauthClientUsageQueryResultUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOauthClientUsageQueryResultUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOauthClientUsageQueryResultTooManyRequests creates a GetOauthClientUsageQueryResultTooManyRequests with default headers values
func NewGetOauthClientUsageQueryResultTooManyRequests() *GetOauthClientUsageQueryResultTooManyRequests {
	return &GetOauthClientUsageQueryResultTooManyRequests{}
}

/*
GetOauthClientUsageQueryResultTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetOauthClientUsageQueryResultTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get oauth client usage query result too many requests response has a 2xx status code
func (o *GetOauthClientUsageQueryResultTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get oauth client usage query result too many requests response has a 3xx status code
func (o *GetOauthClientUsageQueryResultTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get oauth client usage query result too many requests response has a 4xx status code
func (o *GetOauthClientUsageQueryResultTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get oauth client usage query result too many requests response has a 5xx status code
func (o *GetOauthClientUsageQueryResultTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get oauth client usage query result too many requests response a status code equal to that given
func (o *GetOauthClientUsageQueryResultTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetOauthClientUsageQueryResultTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}/usage/query/results/{executionId}][%d] getOauthClientUsageQueryResultTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOauthClientUsageQueryResultTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}/usage/query/results/{executionId}][%d] getOauthClientUsageQueryResultTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOauthClientUsageQueryResultTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOauthClientUsageQueryResultTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOauthClientUsageQueryResultInternalServerError creates a GetOauthClientUsageQueryResultInternalServerError with default headers values
func NewGetOauthClientUsageQueryResultInternalServerError() *GetOauthClientUsageQueryResultInternalServerError {
	return &GetOauthClientUsageQueryResultInternalServerError{}
}

/*
GetOauthClientUsageQueryResultInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetOauthClientUsageQueryResultInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get oauth client usage query result internal server error response has a 2xx status code
func (o *GetOauthClientUsageQueryResultInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get oauth client usage query result internal server error response has a 3xx status code
func (o *GetOauthClientUsageQueryResultInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get oauth client usage query result internal server error response has a 4xx status code
func (o *GetOauthClientUsageQueryResultInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get oauth client usage query result internal server error response has a 5xx status code
func (o *GetOauthClientUsageQueryResultInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get oauth client usage query result internal server error response a status code equal to that given
func (o *GetOauthClientUsageQueryResultInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetOauthClientUsageQueryResultInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}/usage/query/results/{executionId}][%d] getOauthClientUsageQueryResultInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOauthClientUsageQueryResultInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}/usage/query/results/{executionId}][%d] getOauthClientUsageQueryResultInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOauthClientUsageQueryResultInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOauthClientUsageQueryResultInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOauthClientUsageQueryResultServiceUnavailable creates a GetOauthClientUsageQueryResultServiceUnavailable with default headers values
func NewGetOauthClientUsageQueryResultServiceUnavailable() *GetOauthClientUsageQueryResultServiceUnavailable {
	return &GetOauthClientUsageQueryResultServiceUnavailable{}
}

/*
GetOauthClientUsageQueryResultServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetOauthClientUsageQueryResultServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get oauth client usage query result service unavailable response has a 2xx status code
func (o *GetOauthClientUsageQueryResultServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get oauth client usage query result service unavailable response has a 3xx status code
func (o *GetOauthClientUsageQueryResultServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get oauth client usage query result service unavailable response has a 4xx status code
func (o *GetOauthClientUsageQueryResultServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get oauth client usage query result service unavailable response has a 5xx status code
func (o *GetOauthClientUsageQueryResultServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get oauth client usage query result service unavailable response a status code equal to that given
func (o *GetOauthClientUsageQueryResultServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetOauthClientUsageQueryResultServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}/usage/query/results/{executionId}][%d] getOauthClientUsageQueryResultServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOauthClientUsageQueryResultServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}/usage/query/results/{executionId}][%d] getOauthClientUsageQueryResultServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOauthClientUsageQueryResultServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOauthClientUsageQueryResultServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOauthClientUsageQueryResultGatewayTimeout creates a GetOauthClientUsageQueryResultGatewayTimeout with default headers values
func NewGetOauthClientUsageQueryResultGatewayTimeout() *GetOauthClientUsageQueryResultGatewayTimeout {
	return &GetOauthClientUsageQueryResultGatewayTimeout{}
}

/*
GetOauthClientUsageQueryResultGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetOauthClientUsageQueryResultGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get oauth client usage query result gateway timeout response has a 2xx status code
func (o *GetOauthClientUsageQueryResultGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get oauth client usage query result gateway timeout response has a 3xx status code
func (o *GetOauthClientUsageQueryResultGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get oauth client usage query result gateway timeout response has a 4xx status code
func (o *GetOauthClientUsageQueryResultGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get oauth client usage query result gateway timeout response has a 5xx status code
func (o *GetOauthClientUsageQueryResultGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get oauth client usage query result gateway timeout response a status code equal to that given
func (o *GetOauthClientUsageQueryResultGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetOauthClientUsageQueryResultGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}/usage/query/results/{executionId}][%d] getOauthClientUsageQueryResultGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOauthClientUsageQueryResultGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}/usage/query/results/{executionId}][%d] getOauthClientUsageQueryResultGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOauthClientUsageQueryResultGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOauthClientUsageQueryResultGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
