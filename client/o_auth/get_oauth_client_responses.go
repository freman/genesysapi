// Code generated by go-swagger; DO NOT EDIT.

package o_auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetOauthClientReader is a Reader for the GetOauthClient structure.
type GetOauthClientReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOauthClientReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOauthClientOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOauthClientBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOauthClientUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOauthClientForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOauthClientNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetOauthClientRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetOauthClientRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetOauthClientUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetOauthClientTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOauthClientInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetOauthClientServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetOauthClientGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOauthClientOK creates a GetOauthClientOK with default headers values
func NewGetOauthClientOK() *GetOauthClientOK {
	return &GetOauthClientOK{}
}

/*GetOauthClientOK handles this case with default header values.

successful operation
*/
type GetOauthClientOK struct {
	Payload *models.OAuthClient
}

func (o *GetOauthClientOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}][%d] getOauthClientOK  %+v", 200, o.Payload)
}

func (o *GetOauthClientOK) GetPayload() *models.OAuthClient {
	return o.Payload
}

func (o *GetOauthClientOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OAuthClient)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOauthClientBadRequest creates a GetOauthClientBadRequest with default headers values
func NewGetOauthClientBadRequest() *GetOauthClientBadRequest {
	return &GetOauthClientBadRequest{}
}

/*GetOauthClientBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetOauthClientBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetOauthClientBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}][%d] getOauthClientBadRequest  %+v", 400, o.Payload)
}

func (o *GetOauthClientBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOauthClientBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOauthClientUnauthorized creates a GetOauthClientUnauthorized with default headers values
func NewGetOauthClientUnauthorized() *GetOauthClientUnauthorized {
	return &GetOauthClientUnauthorized{}
}

/*GetOauthClientUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetOauthClientUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetOauthClientUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}][%d] getOauthClientUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOauthClientUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOauthClientUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOauthClientForbidden creates a GetOauthClientForbidden with default headers values
func NewGetOauthClientForbidden() *GetOauthClientForbidden {
	return &GetOauthClientForbidden{}
}

/*GetOauthClientForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetOauthClientForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetOauthClientForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}][%d] getOauthClientForbidden  %+v", 403, o.Payload)
}

func (o *GetOauthClientForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOauthClientForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOauthClientNotFound creates a GetOauthClientNotFound with default headers values
func NewGetOauthClientNotFound() *GetOauthClientNotFound {
	return &GetOauthClientNotFound{}
}

/*GetOauthClientNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetOauthClientNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetOauthClientNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}][%d] getOauthClientNotFound  %+v", 404, o.Payload)
}

func (o *GetOauthClientNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOauthClientNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOauthClientRequestTimeout creates a GetOauthClientRequestTimeout with default headers values
func NewGetOauthClientRequestTimeout() *GetOauthClientRequestTimeout {
	return &GetOauthClientRequestTimeout{}
}

/*GetOauthClientRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetOauthClientRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetOauthClientRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}][%d] getOauthClientRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetOauthClientRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOauthClientRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOauthClientRequestEntityTooLarge creates a GetOauthClientRequestEntityTooLarge with default headers values
func NewGetOauthClientRequestEntityTooLarge() *GetOauthClientRequestEntityTooLarge {
	return &GetOauthClientRequestEntityTooLarge{}
}

/*GetOauthClientRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetOauthClientRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetOauthClientRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}][%d] getOauthClientRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetOauthClientRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOauthClientRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOauthClientUnsupportedMediaType creates a GetOauthClientUnsupportedMediaType with default headers values
func NewGetOauthClientUnsupportedMediaType() *GetOauthClientUnsupportedMediaType {
	return &GetOauthClientUnsupportedMediaType{}
}

/*GetOauthClientUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetOauthClientUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetOauthClientUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}][%d] getOauthClientUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetOauthClientUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOauthClientUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOauthClientTooManyRequests creates a GetOauthClientTooManyRequests with default headers values
func NewGetOauthClientTooManyRequests() *GetOauthClientTooManyRequests {
	return &GetOauthClientTooManyRequests{}
}

/*GetOauthClientTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetOauthClientTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetOauthClientTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}][%d] getOauthClientTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOauthClientTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOauthClientTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOauthClientInternalServerError creates a GetOauthClientInternalServerError with default headers values
func NewGetOauthClientInternalServerError() *GetOauthClientInternalServerError {
	return &GetOauthClientInternalServerError{}
}

/*GetOauthClientInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetOauthClientInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetOauthClientInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}][%d] getOauthClientInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOauthClientInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOauthClientInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOauthClientServiceUnavailable creates a GetOauthClientServiceUnavailable with default headers values
func NewGetOauthClientServiceUnavailable() *GetOauthClientServiceUnavailable {
	return &GetOauthClientServiceUnavailable{}
}

/*GetOauthClientServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetOauthClientServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetOauthClientServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}][%d] getOauthClientServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOauthClientServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOauthClientServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOauthClientGatewayTimeout creates a GetOauthClientGatewayTimeout with default headers values
func NewGetOauthClientGatewayTimeout() *GetOauthClientGatewayTimeout {
	return &GetOauthClientGatewayTimeout{}
}

/*GetOauthClientGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetOauthClientGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetOauthClientGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/oauth/clients/{clientId}][%d] getOauthClientGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOauthClientGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOauthClientGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
