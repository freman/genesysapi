// Code generated by go-swagger; DO NOT EDIT.

package o_auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostOauthClientSecretReader is a Reader for the PostOauthClientSecret structure.
type PostOauthClientSecretReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostOauthClientSecretReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostOauthClientSecretOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostOauthClientSecretBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostOauthClientSecretUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostOauthClientSecretForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostOauthClientSecretNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostOauthClientSecretRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostOauthClientSecretRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostOauthClientSecretUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostOauthClientSecretTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostOauthClientSecretInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostOauthClientSecretServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostOauthClientSecretGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostOauthClientSecretOK creates a PostOauthClientSecretOK with default headers values
func NewPostOauthClientSecretOK() *PostOauthClientSecretOK {
	return &PostOauthClientSecretOK{}
}

/*
PostOauthClientSecretOK describes a response with status code 200, with default header values.

successful operation
*/
type PostOauthClientSecretOK struct {
	Payload *models.OAuthClient
}

// IsSuccess returns true when this post oauth client secret o k response has a 2xx status code
func (o *PostOauthClientSecretOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post oauth client secret o k response has a 3xx status code
func (o *PostOauthClientSecretOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post oauth client secret o k response has a 4xx status code
func (o *PostOauthClientSecretOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post oauth client secret o k response has a 5xx status code
func (o *PostOauthClientSecretOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post oauth client secret o k response a status code equal to that given
func (o *PostOauthClientSecretOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostOauthClientSecretOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/oauth/clients/{clientId}/secret][%d] postOauthClientSecretOK  %+v", 200, o.Payload)
}

func (o *PostOauthClientSecretOK) String() string {
	return fmt.Sprintf("[POST /api/v2/oauth/clients/{clientId}/secret][%d] postOauthClientSecretOK  %+v", 200, o.Payload)
}

func (o *PostOauthClientSecretOK) GetPayload() *models.OAuthClient {
	return o.Payload
}

func (o *PostOauthClientSecretOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OAuthClient)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOauthClientSecretBadRequest creates a PostOauthClientSecretBadRequest with default headers values
func NewPostOauthClientSecretBadRequest() *PostOauthClientSecretBadRequest {
	return &PostOauthClientSecretBadRequest{}
}

/*
PostOauthClientSecretBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostOauthClientSecretBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post oauth client secret bad request response has a 2xx status code
func (o *PostOauthClientSecretBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post oauth client secret bad request response has a 3xx status code
func (o *PostOauthClientSecretBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post oauth client secret bad request response has a 4xx status code
func (o *PostOauthClientSecretBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post oauth client secret bad request response has a 5xx status code
func (o *PostOauthClientSecretBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post oauth client secret bad request response a status code equal to that given
func (o *PostOauthClientSecretBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostOauthClientSecretBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/oauth/clients/{clientId}/secret][%d] postOauthClientSecretBadRequest  %+v", 400, o.Payload)
}

func (o *PostOauthClientSecretBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/oauth/clients/{clientId}/secret][%d] postOauthClientSecretBadRequest  %+v", 400, o.Payload)
}

func (o *PostOauthClientSecretBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOauthClientSecretBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOauthClientSecretUnauthorized creates a PostOauthClientSecretUnauthorized with default headers values
func NewPostOauthClientSecretUnauthorized() *PostOauthClientSecretUnauthorized {
	return &PostOauthClientSecretUnauthorized{}
}

/*
PostOauthClientSecretUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostOauthClientSecretUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post oauth client secret unauthorized response has a 2xx status code
func (o *PostOauthClientSecretUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post oauth client secret unauthorized response has a 3xx status code
func (o *PostOauthClientSecretUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post oauth client secret unauthorized response has a 4xx status code
func (o *PostOauthClientSecretUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post oauth client secret unauthorized response has a 5xx status code
func (o *PostOauthClientSecretUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post oauth client secret unauthorized response a status code equal to that given
func (o *PostOauthClientSecretUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostOauthClientSecretUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/oauth/clients/{clientId}/secret][%d] postOauthClientSecretUnauthorized  %+v", 401, o.Payload)
}

func (o *PostOauthClientSecretUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/oauth/clients/{clientId}/secret][%d] postOauthClientSecretUnauthorized  %+v", 401, o.Payload)
}

func (o *PostOauthClientSecretUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOauthClientSecretUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOauthClientSecretForbidden creates a PostOauthClientSecretForbidden with default headers values
func NewPostOauthClientSecretForbidden() *PostOauthClientSecretForbidden {
	return &PostOauthClientSecretForbidden{}
}

/*
PostOauthClientSecretForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostOauthClientSecretForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post oauth client secret forbidden response has a 2xx status code
func (o *PostOauthClientSecretForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post oauth client secret forbidden response has a 3xx status code
func (o *PostOauthClientSecretForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post oauth client secret forbidden response has a 4xx status code
func (o *PostOauthClientSecretForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post oauth client secret forbidden response has a 5xx status code
func (o *PostOauthClientSecretForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post oauth client secret forbidden response a status code equal to that given
func (o *PostOauthClientSecretForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostOauthClientSecretForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/oauth/clients/{clientId}/secret][%d] postOauthClientSecretForbidden  %+v", 403, o.Payload)
}

func (o *PostOauthClientSecretForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/oauth/clients/{clientId}/secret][%d] postOauthClientSecretForbidden  %+v", 403, o.Payload)
}

func (o *PostOauthClientSecretForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOauthClientSecretForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOauthClientSecretNotFound creates a PostOauthClientSecretNotFound with default headers values
func NewPostOauthClientSecretNotFound() *PostOauthClientSecretNotFound {
	return &PostOauthClientSecretNotFound{}
}

/*
PostOauthClientSecretNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostOauthClientSecretNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post oauth client secret not found response has a 2xx status code
func (o *PostOauthClientSecretNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post oauth client secret not found response has a 3xx status code
func (o *PostOauthClientSecretNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post oauth client secret not found response has a 4xx status code
func (o *PostOauthClientSecretNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post oauth client secret not found response has a 5xx status code
func (o *PostOauthClientSecretNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post oauth client secret not found response a status code equal to that given
func (o *PostOauthClientSecretNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostOauthClientSecretNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/oauth/clients/{clientId}/secret][%d] postOauthClientSecretNotFound  %+v", 404, o.Payload)
}

func (o *PostOauthClientSecretNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/oauth/clients/{clientId}/secret][%d] postOauthClientSecretNotFound  %+v", 404, o.Payload)
}

func (o *PostOauthClientSecretNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOauthClientSecretNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOauthClientSecretRequestTimeout creates a PostOauthClientSecretRequestTimeout with default headers values
func NewPostOauthClientSecretRequestTimeout() *PostOauthClientSecretRequestTimeout {
	return &PostOauthClientSecretRequestTimeout{}
}

/*
PostOauthClientSecretRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostOauthClientSecretRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post oauth client secret request timeout response has a 2xx status code
func (o *PostOauthClientSecretRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post oauth client secret request timeout response has a 3xx status code
func (o *PostOauthClientSecretRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post oauth client secret request timeout response has a 4xx status code
func (o *PostOauthClientSecretRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post oauth client secret request timeout response has a 5xx status code
func (o *PostOauthClientSecretRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post oauth client secret request timeout response a status code equal to that given
func (o *PostOauthClientSecretRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostOauthClientSecretRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/oauth/clients/{clientId}/secret][%d] postOauthClientSecretRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostOauthClientSecretRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/oauth/clients/{clientId}/secret][%d] postOauthClientSecretRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostOauthClientSecretRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOauthClientSecretRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOauthClientSecretRequestEntityTooLarge creates a PostOauthClientSecretRequestEntityTooLarge with default headers values
func NewPostOauthClientSecretRequestEntityTooLarge() *PostOauthClientSecretRequestEntityTooLarge {
	return &PostOauthClientSecretRequestEntityTooLarge{}
}

/*
PostOauthClientSecretRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostOauthClientSecretRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post oauth client secret request entity too large response has a 2xx status code
func (o *PostOauthClientSecretRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post oauth client secret request entity too large response has a 3xx status code
func (o *PostOauthClientSecretRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post oauth client secret request entity too large response has a 4xx status code
func (o *PostOauthClientSecretRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post oauth client secret request entity too large response has a 5xx status code
func (o *PostOauthClientSecretRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post oauth client secret request entity too large response a status code equal to that given
func (o *PostOauthClientSecretRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostOauthClientSecretRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/oauth/clients/{clientId}/secret][%d] postOauthClientSecretRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostOauthClientSecretRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/oauth/clients/{clientId}/secret][%d] postOauthClientSecretRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostOauthClientSecretRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOauthClientSecretRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOauthClientSecretUnsupportedMediaType creates a PostOauthClientSecretUnsupportedMediaType with default headers values
func NewPostOauthClientSecretUnsupportedMediaType() *PostOauthClientSecretUnsupportedMediaType {
	return &PostOauthClientSecretUnsupportedMediaType{}
}

/*
PostOauthClientSecretUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostOauthClientSecretUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post oauth client secret unsupported media type response has a 2xx status code
func (o *PostOauthClientSecretUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post oauth client secret unsupported media type response has a 3xx status code
func (o *PostOauthClientSecretUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post oauth client secret unsupported media type response has a 4xx status code
func (o *PostOauthClientSecretUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post oauth client secret unsupported media type response has a 5xx status code
func (o *PostOauthClientSecretUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post oauth client secret unsupported media type response a status code equal to that given
func (o *PostOauthClientSecretUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostOauthClientSecretUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/oauth/clients/{clientId}/secret][%d] postOauthClientSecretUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostOauthClientSecretUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/oauth/clients/{clientId}/secret][%d] postOauthClientSecretUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostOauthClientSecretUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOauthClientSecretUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOauthClientSecretTooManyRequests creates a PostOauthClientSecretTooManyRequests with default headers values
func NewPostOauthClientSecretTooManyRequests() *PostOauthClientSecretTooManyRequests {
	return &PostOauthClientSecretTooManyRequests{}
}

/*
PostOauthClientSecretTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostOauthClientSecretTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post oauth client secret too many requests response has a 2xx status code
func (o *PostOauthClientSecretTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post oauth client secret too many requests response has a 3xx status code
func (o *PostOauthClientSecretTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post oauth client secret too many requests response has a 4xx status code
func (o *PostOauthClientSecretTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post oauth client secret too many requests response has a 5xx status code
func (o *PostOauthClientSecretTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post oauth client secret too many requests response a status code equal to that given
func (o *PostOauthClientSecretTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostOauthClientSecretTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/oauth/clients/{clientId}/secret][%d] postOauthClientSecretTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostOauthClientSecretTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/oauth/clients/{clientId}/secret][%d] postOauthClientSecretTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostOauthClientSecretTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOauthClientSecretTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOauthClientSecretInternalServerError creates a PostOauthClientSecretInternalServerError with default headers values
func NewPostOauthClientSecretInternalServerError() *PostOauthClientSecretInternalServerError {
	return &PostOauthClientSecretInternalServerError{}
}

/*
PostOauthClientSecretInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostOauthClientSecretInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post oauth client secret internal server error response has a 2xx status code
func (o *PostOauthClientSecretInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post oauth client secret internal server error response has a 3xx status code
func (o *PostOauthClientSecretInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post oauth client secret internal server error response has a 4xx status code
func (o *PostOauthClientSecretInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post oauth client secret internal server error response has a 5xx status code
func (o *PostOauthClientSecretInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post oauth client secret internal server error response a status code equal to that given
func (o *PostOauthClientSecretInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostOauthClientSecretInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/oauth/clients/{clientId}/secret][%d] postOauthClientSecretInternalServerError  %+v", 500, o.Payload)
}

func (o *PostOauthClientSecretInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/oauth/clients/{clientId}/secret][%d] postOauthClientSecretInternalServerError  %+v", 500, o.Payload)
}

func (o *PostOauthClientSecretInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOauthClientSecretInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOauthClientSecretServiceUnavailable creates a PostOauthClientSecretServiceUnavailable with default headers values
func NewPostOauthClientSecretServiceUnavailable() *PostOauthClientSecretServiceUnavailable {
	return &PostOauthClientSecretServiceUnavailable{}
}

/*
PostOauthClientSecretServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostOauthClientSecretServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post oauth client secret service unavailable response has a 2xx status code
func (o *PostOauthClientSecretServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post oauth client secret service unavailable response has a 3xx status code
func (o *PostOauthClientSecretServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post oauth client secret service unavailable response has a 4xx status code
func (o *PostOauthClientSecretServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post oauth client secret service unavailable response has a 5xx status code
func (o *PostOauthClientSecretServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post oauth client secret service unavailable response a status code equal to that given
func (o *PostOauthClientSecretServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostOauthClientSecretServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/oauth/clients/{clientId}/secret][%d] postOauthClientSecretServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostOauthClientSecretServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/oauth/clients/{clientId}/secret][%d] postOauthClientSecretServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostOauthClientSecretServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOauthClientSecretServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOauthClientSecretGatewayTimeout creates a PostOauthClientSecretGatewayTimeout with default headers values
func NewPostOauthClientSecretGatewayTimeout() *PostOauthClientSecretGatewayTimeout {
	return &PostOauthClientSecretGatewayTimeout{}
}

/*
PostOauthClientSecretGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostOauthClientSecretGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post oauth client secret gateway timeout response has a 2xx status code
func (o *PostOauthClientSecretGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post oauth client secret gateway timeout response has a 3xx status code
func (o *PostOauthClientSecretGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post oauth client secret gateway timeout response has a 4xx status code
func (o *PostOauthClientSecretGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post oauth client secret gateway timeout response has a 5xx status code
func (o *PostOauthClientSecretGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post oauth client secret gateway timeout response a status code equal to that given
func (o *PostOauthClientSecretGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostOauthClientSecretGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/oauth/clients/{clientId}/secret][%d] postOauthClientSecretGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostOauthClientSecretGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/oauth/clients/{clientId}/secret][%d] postOauthClientSecretGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostOauthClientSecretGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostOauthClientSecretGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
