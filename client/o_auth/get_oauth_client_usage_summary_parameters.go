// Code generated by go-swagger; DO NOT EDIT.

package o_auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetOauthClientUsageSummaryParams creates a new GetOauthClientUsageSummaryParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetOauthClientUsageSummaryParams() *GetOauthClientUsageSummaryParams {
	return &GetOauthClientUsageSummaryParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetOauthClientUsageSummaryParamsWithTimeout creates a new GetOauthClientUsageSummaryParams object
// with the ability to set a timeout on a request.
func NewGetOauthClientUsageSummaryParamsWithTimeout(timeout time.Duration) *GetOauthClientUsageSummaryParams {
	return &GetOauthClientUsageSummaryParams{
		timeout: timeout,
	}
}

// NewGetOauthClientUsageSummaryParamsWithContext creates a new GetOauthClientUsageSummaryParams object
// with the ability to set a context for a request.
func NewGetOauthClientUsageSummaryParamsWithContext(ctx context.Context) *GetOauthClientUsageSummaryParams {
	return &GetOauthClientUsageSummaryParams{
		Context: ctx,
	}
}

// NewGetOauthClientUsageSummaryParamsWithHTTPClient creates a new GetOauthClientUsageSummaryParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetOauthClientUsageSummaryParamsWithHTTPClient(client *http.Client) *GetOauthClientUsageSummaryParams {
	return &GetOauthClientUsageSummaryParams{
		HTTPClient: client,
	}
}

/*
GetOauthClientUsageSummaryParams contains all the parameters to send to the API endpoint

	for the get oauth client usage summary operation.

	Typically these are written to a http.Request.
*/
type GetOauthClientUsageSummaryParams struct {

	/* ClientID.

	   Client ID
	*/
	ClientID string

	/* Days.

	   Previous number of days to query

	   Default: "7"
	*/
	Days *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get oauth client usage summary params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOauthClientUsageSummaryParams) WithDefaults() *GetOauthClientUsageSummaryParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get oauth client usage summary params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOauthClientUsageSummaryParams) SetDefaults() {
	var (
		daysDefault = string("7")
	)

	val := GetOauthClientUsageSummaryParams{
		Days: &daysDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get oauth client usage summary params
func (o *GetOauthClientUsageSummaryParams) WithTimeout(timeout time.Duration) *GetOauthClientUsageSummaryParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get oauth client usage summary params
func (o *GetOauthClientUsageSummaryParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get oauth client usage summary params
func (o *GetOauthClientUsageSummaryParams) WithContext(ctx context.Context) *GetOauthClientUsageSummaryParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get oauth client usage summary params
func (o *GetOauthClientUsageSummaryParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get oauth client usage summary params
func (o *GetOauthClientUsageSummaryParams) WithHTTPClient(client *http.Client) *GetOauthClientUsageSummaryParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get oauth client usage summary params
func (o *GetOauthClientUsageSummaryParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClientID adds the clientID to the get oauth client usage summary params
func (o *GetOauthClientUsageSummaryParams) WithClientID(clientID string) *GetOauthClientUsageSummaryParams {
	o.SetClientID(clientID)
	return o
}

// SetClientID adds the clientId to the get oauth client usage summary params
func (o *GetOauthClientUsageSummaryParams) SetClientID(clientID string) {
	o.ClientID = clientID
}

// WithDays adds the days to the get oauth client usage summary params
func (o *GetOauthClientUsageSummaryParams) WithDays(days *string) *GetOauthClientUsageSummaryParams {
	o.SetDays(days)
	return o
}

// SetDays adds the days to the get oauth client usage summary params
func (o *GetOauthClientUsageSummaryParams) SetDays(days *string) {
	o.Days = days
}

// WriteToRequest writes these params to a swagger request
func (o *GetOauthClientUsageSummaryParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param clientId
	if err := r.SetPathParam("clientId", o.ClientID); err != nil {
		return err
	}

	if o.Days != nil {

		// query param days
		var qrDays string

		if o.Days != nil {
			qrDays = *o.Days
		}
		qDays := qrDays
		if qDays != "" {

			if err := r.SetQueryParam("days", qDays); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
