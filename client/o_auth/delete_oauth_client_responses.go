// Code generated by go-swagger; DO NOT EDIT.

package o_auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteOauthClientReader is a Reader for the DeleteOauthClient structure.
type DeleteOauthClientReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteOauthClientReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewDeleteOauthClientBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteOauthClientUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteOauthClientForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteOauthClientNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteOauthClientRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteOauthClientRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteOauthClientUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteOauthClientTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteOauthClientInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteOauthClientServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteOauthClientGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteOauthClientDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteOauthClientBadRequest creates a DeleteOauthClientBadRequest with default headers values
func NewDeleteOauthClientBadRequest() *DeleteOauthClientBadRequest {
	return &DeleteOauthClientBadRequest{}
}

/*
DeleteOauthClientBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteOauthClientBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete oauth client bad request response has a 2xx status code
func (o *DeleteOauthClientBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete oauth client bad request response has a 3xx status code
func (o *DeleteOauthClientBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete oauth client bad request response has a 4xx status code
func (o *DeleteOauthClientBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete oauth client bad request response has a 5xx status code
func (o *DeleteOauthClientBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete oauth client bad request response a status code equal to that given
func (o *DeleteOauthClientBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteOauthClientBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/oauth/clients/{clientId}][%d] deleteOauthClientBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteOauthClientBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v2/oauth/clients/{clientId}][%d] deleteOauthClientBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteOauthClientBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOauthClientBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOauthClientUnauthorized creates a DeleteOauthClientUnauthorized with default headers values
func NewDeleteOauthClientUnauthorized() *DeleteOauthClientUnauthorized {
	return &DeleteOauthClientUnauthorized{}
}

/*
DeleteOauthClientUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteOauthClientUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete oauth client unauthorized response has a 2xx status code
func (o *DeleteOauthClientUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete oauth client unauthorized response has a 3xx status code
func (o *DeleteOauthClientUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete oauth client unauthorized response has a 4xx status code
func (o *DeleteOauthClientUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete oauth client unauthorized response has a 5xx status code
func (o *DeleteOauthClientUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete oauth client unauthorized response a status code equal to that given
func (o *DeleteOauthClientUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteOauthClientUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/oauth/clients/{clientId}][%d] deleteOauthClientUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteOauthClientUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/oauth/clients/{clientId}][%d] deleteOauthClientUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteOauthClientUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOauthClientUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOauthClientForbidden creates a DeleteOauthClientForbidden with default headers values
func NewDeleteOauthClientForbidden() *DeleteOauthClientForbidden {
	return &DeleteOauthClientForbidden{}
}

/*
DeleteOauthClientForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type DeleteOauthClientForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete oauth client forbidden response has a 2xx status code
func (o *DeleteOauthClientForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete oauth client forbidden response has a 3xx status code
func (o *DeleteOauthClientForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete oauth client forbidden response has a 4xx status code
func (o *DeleteOauthClientForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete oauth client forbidden response has a 5xx status code
func (o *DeleteOauthClientForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete oauth client forbidden response a status code equal to that given
func (o *DeleteOauthClientForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteOauthClientForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/oauth/clients/{clientId}][%d] deleteOauthClientForbidden  %+v", 403, o.Payload)
}

func (o *DeleteOauthClientForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/oauth/clients/{clientId}][%d] deleteOauthClientForbidden  %+v", 403, o.Payload)
}

func (o *DeleteOauthClientForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOauthClientForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOauthClientNotFound creates a DeleteOauthClientNotFound with default headers values
func NewDeleteOauthClientNotFound() *DeleteOauthClientNotFound {
	return &DeleteOauthClientNotFound{}
}

/*
DeleteOauthClientNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type DeleteOauthClientNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete oauth client not found response has a 2xx status code
func (o *DeleteOauthClientNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete oauth client not found response has a 3xx status code
func (o *DeleteOauthClientNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete oauth client not found response has a 4xx status code
func (o *DeleteOauthClientNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete oauth client not found response has a 5xx status code
func (o *DeleteOauthClientNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete oauth client not found response a status code equal to that given
func (o *DeleteOauthClientNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteOauthClientNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/oauth/clients/{clientId}][%d] deleteOauthClientNotFound  %+v", 404, o.Payload)
}

func (o *DeleteOauthClientNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v2/oauth/clients/{clientId}][%d] deleteOauthClientNotFound  %+v", 404, o.Payload)
}

func (o *DeleteOauthClientNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOauthClientNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOauthClientRequestTimeout creates a DeleteOauthClientRequestTimeout with default headers values
func NewDeleteOauthClientRequestTimeout() *DeleteOauthClientRequestTimeout {
	return &DeleteOauthClientRequestTimeout{}
}

/*
DeleteOauthClientRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteOauthClientRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete oauth client request timeout response has a 2xx status code
func (o *DeleteOauthClientRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete oauth client request timeout response has a 3xx status code
func (o *DeleteOauthClientRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete oauth client request timeout response has a 4xx status code
func (o *DeleteOauthClientRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete oauth client request timeout response has a 5xx status code
func (o *DeleteOauthClientRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete oauth client request timeout response a status code equal to that given
func (o *DeleteOauthClientRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *DeleteOauthClientRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/oauth/clients/{clientId}][%d] deleteOauthClientRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteOauthClientRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/oauth/clients/{clientId}][%d] deleteOauthClientRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteOauthClientRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOauthClientRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOauthClientRequestEntityTooLarge creates a DeleteOauthClientRequestEntityTooLarge with default headers values
func NewDeleteOauthClientRequestEntityTooLarge() *DeleteOauthClientRequestEntityTooLarge {
	return &DeleteOauthClientRequestEntityTooLarge{}
}

/*
DeleteOauthClientRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type DeleteOauthClientRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete oauth client request entity too large response has a 2xx status code
func (o *DeleteOauthClientRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete oauth client request entity too large response has a 3xx status code
func (o *DeleteOauthClientRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete oauth client request entity too large response has a 4xx status code
func (o *DeleteOauthClientRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete oauth client request entity too large response has a 5xx status code
func (o *DeleteOauthClientRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this delete oauth client request entity too large response a status code equal to that given
func (o *DeleteOauthClientRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *DeleteOauthClientRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/oauth/clients/{clientId}][%d] deleteOauthClientRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteOauthClientRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[DELETE /api/v2/oauth/clients/{clientId}][%d] deleteOauthClientRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteOauthClientRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOauthClientRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOauthClientUnsupportedMediaType creates a DeleteOauthClientUnsupportedMediaType with default headers values
func NewDeleteOauthClientUnsupportedMediaType() *DeleteOauthClientUnsupportedMediaType {
	return &DeleteOauthClientUnsupportedMediaType{}
}

/*
DeleteOauthClientUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteOauthClientUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete oauth client unsupported media type response has a 2xx status code
func (o *DeleteOauthClientUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete oauth client unsupported media type response has a 3xx status code
func (o *DeleteOauthClientUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete oauth client unsupported media type response has a 4xx status code
func (o *DeleteOauthClientUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete oauth client unsupported media type response has a 5xx status code
func (o *DeleteOauthClientUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this delete oauth client unsupported media type response a status code equal to that given
func (o *DeleteOauthClientUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *DeleteOauthClientUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/oauth/clients/{clientId}][%d] deleteOauthClientUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteOauthClientUnsupportedMediaType) String() string {
	return fmt.Sprintf("[DELETE /api/v2/oauth/clients/{clientId}][%d] deleteOauthClientUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteOauthClientUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOauthClientUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOauthClientTooManyRequests creates a DeleteOauthClientTooManyRequests with default headers values
func NewDeleteOauthClientTooManyRequests() *DeleteOauthClientTooManyRequests {
	return &DeleteOauthClientTooManyRequests{}
}

/*
DeleteOauthClientTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteOauthClientTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete oauth client too many requests response has a 2xx status code
func (o *DeleteOauthClientTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete oauth client too many requests response has a 3xx status code
func (o *DeleteOauthClientTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete oauth client too many requests response has a 4xx status code
func (o *DeleteOauthClientTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete oauth client too many requests response has a 5xx status code
func (o *DeleteOauthClientTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete oauth client too many requests response a status code equal to that given
func (o *DeleteOauthClientTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteOauthClientTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/oauth/clients/{clientId}][%d] deleteOauthClientTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteOauthClientTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /api/v2/oauth/clients/{clientId}][%d] deleteOauthClientTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteOauthClientTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOauthClientTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOauthClientInternalServerError creates a DeleteOauthClientInternalServerError with default headers values
func NewDeleteOauthClientInternalServerError() *DeleteOauthClientInternalServerError {
	return &DeleteOauthClientInternalServerError{}
}

/*
DeleteOauthClientInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteOauthClientInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete oauth client internal server error response has a 2xx status code
func (o *DeleteOauthClientInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete oauth client internal server error response has a 3xx status code
func (o *DeleteOauthClientInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete oauth client internal server error response has a 4xx status code
func (o *DeleteOauthClientInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete oauth client internal server error response has a 5xx status code
func (o *DeleteOauthClientInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete oauth client internal server error response a status code equal to that given
func (o *DeleteOauthClientInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteOauthClientInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/oauth/clients/{clientId}][%d] deleteOauthClientInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteOauthClientInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v2/oauth/clients/{clientId}][%d] deleteOauthClientInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteOauthClientInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOauthClientInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOauthClientServiceUnavailable creates a DeleteOauthClientServiceUnavailable with default headers values
func NewDeleteOauthClientServiceUnavailable() *DeleteOauthClientServiceUnavailable {
	return &DeleteOauthClientServiceUnavailable{}
}

/*
DeleteOauthClientServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteOauthClientServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete oauth client service unavailable response has a 2xx status code
func (o *DeleteOauthClientServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete oauth client service unavailable response has a 3xx status code
func (o *DeleteOauthClientServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete oauth client service unavailable response has a 4xx status code
func (o *DeleteOauthClientServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete oauth client service unavailable response has a 5xx status code
func (o *DeleteOauthClientServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete oauth client service unavailable response a status code equal to that given
func (o *DeleteOauthClientServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *DeleteOauthClientServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/oauth/clients/{clientId}][%d] deleteOauthClientServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteOauthClientServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /api/v2/oauth/clients/{clientId}][%d] deleteOauthClientServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteOauthClientServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOauthClientServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOauthClientGatewayTimeout creates a DeleteOauthClientGatewayTimeout with default headers values
func NewDeleteOauthClientGatewayTimeout() *DeleteOauthClientGatewayTimeout {
	return &DeleteOauthClientGatewayTimeout{}
}

/*
DeleteOauthClientGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type DeleteOauthClientGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete oauth client gateway timeout response has a 2xx status code
func (o *DeleteOauthClientGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete oauth client gateway timeout response has a 3xx status code
func (o *DeleteOauthClientGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete oauth client gateway timeout response has a 4xx status code
func (o *DeleteOauthClientGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete oauth client gateway timeout response has a 5xx status code
func (o *DeleteOauthClientGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this delete oauth client gateway timeout response a status code equal to that given
func (o *DeleteOauthClientGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *DeleteOauthClientGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/oauth/clients/{clientId}][%d] deleteOauthClientGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteOauthClientGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/oauth/clients/{clientId}][%d] deleteOauthClientGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteOauthClientGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteOauthClientGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOauthClientDefault creates a DeleteOauthClientDefault with default headers values
func NewDeleteOauthClientDefault(code int) *DeleteOauthClientDefault {
	return &DeleteOauthClientDefault{
		_statusCode: code,
	}
}

/*
DeleteOauthClientDefault describes a response with status code -1, with default header values.

successful operation
*/
type DeleteOauthClientDefault struct {
	_statusCode int
}

// Code gets the status code for the delete oauth client default response
func (o *DeleteOauthClientDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this delete oauth client default response has a 2xx status code
func (o *DeleteOauthClientDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete oauth client default response has a 3xx status code
func (o *DeleteOauthClientDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete oauth client default response has a 4xx status code
func (o *DeleteOauthClientDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete oauth client default response has a 5xx status code
func (o *DeleteOauthClientDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete oauth client default response a status code equal to that given
func (o *DeleteOauthClientDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *DeleteOauthClientDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/oauth/clients/{clientId}][%d] deleteOauthClient default ", o._statusCode)
}

func (o *DeleteOauthClientDefault) String() string {
	return fmt.Sprintf("[DELETE /api/v2/oauth/clients/{clientId}][%d] deleteOauthClient default ", o._statusCode)
}

func (o *DeleteOauthClientDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
