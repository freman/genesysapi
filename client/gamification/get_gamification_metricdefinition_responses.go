// Code generated by go-swagger; DO NOT EDIT.

package gamification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetGamificationMetricdefinitionReader is a Reader for the GetGamificationMetricdefinition structure.
type GetGamificationMetricdefinitionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGamificationMetricdefinitionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGamificationMetricdefinitionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetGamificationMetricdefinitionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetGamificationMetricdefinitionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGamificationMetricdefinitionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGamificationMetricdefinitionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetGamificationMetricdefinitionRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetGamificationMetricdefinitionRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetGamificationMetricdefinitionUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetGamificationMetricdefinitionTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGamificationMetricdefinitionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetGamificationMetricdefinitionServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetGamificationMetricdefinitionGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGamificationMetricdefinitionOK creates a GetGamificationMetricdefinitionOK with default headers values
func NewGetGamificationMetricdefinitionOK() *GetGamificationMetricdefinitionOK {
	return &GetGamificationMetricdefinitionOK{}
}

/*
GetGamificationMetricdefinitionOK describes a response with status code 200, with default header values.

successful operation
*/
type GetGamificationMetricdefinitionOK struct {
	Payload *models.MetricDefinition
}

// IsSuccess returns true when this get gamification metricdefinition o k response has a 2xx status code
func (o *GetGamificationMetricdefinitionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get gamification metricdefinition o k response has a 3xx status code
func (o *GetGamificationMetricdefinitionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification metricdefinition o k response has a 4xx status code
func (o *GetGamificationMetricdefinitionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get gamification metricdefinition o k response has a 5xx status code
func (o *GetGamificationMetricdefinitionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification metricdefinition o k response a status code equal to that given
func (o *GetGamificationMetricdefinitionOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetGamificationMetricdefinitionOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/metricdefinitions/{metricDefinitionId}][%d] getGamificationMetricdefinitionOK  %+v", 200, o.Payload)
}

func (o *GetGamificationMetricdefinitionOK) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/metricdefinitions/{metricDefinitionId}][%d] getGamificationMetricdefinitionOK  %+v", 200, o.Payload)
}

func (o *GetGamificationMetricdefinitionOK) GetPayload() *models.MetricDefinition {
	return o.Payload
}

func (o *GetGamificationMetricdefinitionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MetricDefinition)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationMetricdefinitionBadRequest creates a GetGamificationMetricdefinitionBadRequest with default headers values
func NewGetGamificationMetricdefinitionBadRequest() *GetGamificationMetricdefinitionBadRequest {
	return &GetGamificationMetricdefinitionBadRequest{}
}

/*
GetGamificationMetricdefinitionBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetGamificationMetricdefinitionBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification metricdefinition bad request response has a 2xx status code
func (o *GetGamificationMetricdefinitionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification metricdefinition bad request response has a 3xx status code
func (o *GetGamificationMetricdefinitionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification metricdefinition bad request response has a 4xx status code
func (o *GetGamificationMetricdefinitionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification metricdefinition bad request response has a 5xx status code
func (o *GetGamificationMetricdefinitionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification metricdefinition bad request response a status code equal to that given
func (o *GetGamificationMetricdefinitionBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetGamificationMetricdefinitionBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/metricdefinitions/{metricDefinitionId}][%d] getGamificationMetricdefinitionBadRequest  %+v", 400, o.Payload)
}

func (o *GetGamificationMetricdefinitionBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/metricdefinitions/{metricDefinitionId}][%d] getGamificationMetricdefinitionBadRequest  %+v", 400, o.Payload)
}

func (o *GetGamificationMetricdefinitionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationMetricdefinitionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationMetricdefinitionUnauthorized creates a GetGamificationMetricdefinitionUnauthorized with default headers values
func NewGetGamificationMetricdefinitionUnauthorized() *GetGamificationMetricdefinitionUnauthorized {
	return &GetGamificationMetricdefinitionUnauthorized{}
}

/*
GetGamificationMetricdefinitionUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetGamificationMetricdefinitionUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification metricdefinition unauthorized response has a 2xx status code
func (o *GetGamificationMetricdefinitionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification metricdefinition unauthorized response has a 3xx status code
func (o *GetGamificationMetricdefinitionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification metricdefinition unauthorized response has a 4xx status code
func (o *GetGamificationMetricdefinitionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification metricdefinition unauthorized response has a 5xx status code
func (o *GetGamificationMetricdefinitionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification metricdefinition unauthorized response a status code equal to that given
func (o *GetGamificationMetricdefinitionUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetGamificationMetricdefinitionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/metricdefinitions/{metricDefinitionId}][%d] getGamificationMetricdefinitionUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGamificationMetricdefinitionUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/metricdefinitions/{metricDefinitionId}][%d] getGamificationMetricdefinitionUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGamificationMetricdefinitionUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationMetricdefinitionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationMetricdefinitionForbidden creates a GetGamificationMetricdefinitionForbidden with default headers values
func NewGetGamificationMetricdefinitionForbidden() *GetGamificationMetricdefinitionForbidden {
	return &GetGamificationMetricdefinitionForbidden{}
}

/*
GetGamificationMetricdefinitionForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetGamificationMetricdefinitionForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification metricdefinition forbidden response has a 2xx status code
func (o *GetGamificationMetricdefinitionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification metricdefinition forbidden response has a 3xx status code
func (o *GetGamificationMetricdefinitionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification metricdefinition forbidden response has a 4xx status code
func (o *GetGamificationMetricdefinitionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification metricdefinition forbidden response has a 5xx status code
func (o *GetGamificationMetricdefinitionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification metricdefinition forbidden response a status code equal to that given
func (o *GetGamificationMetricdefinitionForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetGamificationMetricdefinitionForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/metricdefinitions/{metricDefinitionId}][%d] getGamificationMetricdefinitionForbidden  %+v", 403, o.Payload)
}

func (o *GetGamificationMetricdefinitionForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/metricdefinitions/{metricDefinitionId}][%d] getGamificationMetricdefinitionForbidden  %+v", 403, o.Payload)
}

func (o *GetGamificationMetricdefinitionForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationMetricdefinitionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationMetricdefinitionNotFound creates a GetGamificationMetricdefinitionNotFound with default headers values
func NewGetGamificationMetricdefinitionNotFound() *GetGamificationMetricdefinitionNotFound {
	return &GetGamificationMetricdefinitionNotFound{}
}

/*
GetGamificationMetricdefinitionNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetGamificationMetricdefinitionNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification metricdefinition not found response has a 2xx status code
func (o *GetGamificationMetricdefinitionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification metricdefinition not found response has a 3xx status code
func (o *GetGamificationMetricdefinitionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification metricdefinition not found response has a 4xx status code
func (o *GetGamificationMetricdefinitionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification metricdefinition not found response has a 5xx status code
func (o *GetGamificationMetricdefinitionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification metricdefinition not found response a status code equal to that given
func (o *GetGamificationMetricdefinitionNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetGamificationMetricdefinitionNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/metricdefinitions/{metricDefinitionId}][%d] getGamificationMetricdefinitionNotFound  %+v", 404, o.Payload)
}

func (o *GetGamificationMetricdefinitionNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/metricdefinitions/{metricDefinitionId}][%d] getGamificationMetricdefinitionNotFound  %+v", 404, o.Payload)
}

func (o *GetGamificationMetricdefinitionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationMetricdefinitionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationMetricdefinitionRequestTimeout creates a GetGamificationMetricdefinitionRequestTimeout with default headers values
func NewGetGamificationMetricdefinitionRequestTimeout() *GetGamificationMetricdefinitionRequestTimeout {
	return &GetGamificationMetricdefinitionRequestTimeout{}
}

/*
GetGamificationMetricdefinitionRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetGamificationMetricdefinitionRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification metricdefinition request timeout response has a 2xx status code
func (o *GetGamificationMetricdefinitionRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification metricdefinition request timeout response has a 3xx status code
func (o *GetGamificationMetricdefinitionRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification metricdefinition request timeout response has a 4xx status code
func (o *GetGamificationMetricdefinitionRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification metricdefinition request timeout response has a 5xx status code
func (o *GetGamificationMetricdefinitionRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification metricdefinition request timeout response a status code equal to that given
func (o *GetGamificationMetricdefinitionRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetGamificationMetricdefinitionRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/metricdefinitions/{metricDefinitionId}][%d] getGamificationMetricdefinitionRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetGamificationMetricdefinitionRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/metricdefinitions/{metricDefinitionId}][%d] getGamificationMetricdefinitionRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetGamificationMetricdefinitionRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationMetricdefinitionRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationMetricdefinitionRequestEntityTooLarge creates a GetGamificationMetricdefinitionRequestEntityTooLarge with default headers values
func NewGetGamificationMetricdefinitionRequestEntityTooLarge() *GetGamificationMetricdefinitionRequestEntityTooLarge {
	return &GetGamificationMetricdefinitionRequestEntityTooLarge{}
}

/*
GetGamificationMetricdefinitionRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetGamificationMetricdefinitionRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification metricdefinition request entity too large response has a 2xx status code
func (o *GetGamificationMetricdefinitionRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification metricdefinition request entity too large response has a 3xx status code
func (o *GetGamificationMetricdefinitionRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification metricdefinition request entity too large response has a 4xx status code
func (o *GetGamificationMetricdefinitionRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification metricdefinition request entity too large response has a 5xx status code
func (o *GetGamificationMetricdefinitionRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification metricdefinition request entity too large response a status code equal to that given
func (o *GetGamificationMetricdefinitionRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetGamificationMetricdefinitionRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/metricdefinitions/{metricDefinitionId}][%d] getGamificationMetricdefinitionRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetGamificationMetricdefinitionRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/metricdefinitions/{metricDefinitionId}][%d] getGamificationMetricdefinitionRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetGamificationMetricdefinitionRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationMetricdefinitionRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationMetricdefinitionUnsupportedMediaType creates a GetGamificationMetricdefinitionUnsupportedMediaType with default headers values
func NewGetGamificationMetricdefinitionUnsupportedMediaType() *GetGamificationMetricdefinitionUnsupportedMediaType {
	return &GetGamificationMetricdefinitionUnsupportedMediaType{}
}

/*
GetGamificationMetricdefinitionUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetGamificationMetricdefinitionUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification metricdefinition unsupported media type response has a 2xx status code
func (o *GetGamificationMetricdefinitionUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification metricdefinition unsupported media type response has a 3xx status code
func (o *GetGamificationMetricdefinitionUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification metricdefinition unsupported media type response has a 4xx status code
func (o *GetGamificationMetricdefinitionUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification metricdefinition unsupported media type response has a 5xx status code
func (o *GetGamificationMetricdefinitionUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification metricdefinition unsupported media type response a status code equal to that given
func (o *GetGamificationMetricdefinitionUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetGamificationMetricdefinitionUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/metricdefinitions/{metricDefinitionId}][%d] getGamificationMetricdefinitionUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetGamificationMetricdefinitionUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/metricdefinitions/{metricDefinitionId}][%d] getGamificationMetricdefinitionUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetGamificationMetricdefinitionUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationMetricdefinitionUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationMetricdefinitionTooManyRequests creates a GetGamificationMetricdefinitionTooManyRequests with default headers values
func NewGetGamificationMetricdefinitionTooManyRequests() *GetGamificationMetricdefinitionTooManyRequests {
	return &GetGamificationMetricdefinitionTooManyRequests{}
}

/*
GetGamificationMetricdefinitionTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetGamificationMetricdefinitionTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification metricdefinition too many requests response has a 2xx status code
func (o *GetGamificationMetricdefinitionTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification metricdefinition too many requests response has a 3xx status code
func (o *GetGamificationMetricdefinitionTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification metricdefinition too many requests response has a 4xx status code
func (o *GetGamificationMetricdefinitionTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification metricdefinition too many requests response has a 5xx status code
func (o *GetGamificationMetricdefinitionTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification metricdefinition too many requests response a status code equal to that given
func (o *GetGamificationMetricdefinitionTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetGamificationMetricdefinitionTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/metricdefinitions/{metricDefinitionId}][%d] getGamificationMetricdefinitionTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetGamificationMetricdefinitionTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/metricdefinitions/{metricDefinitionId}][%d] getGamificationMetricdefinitionTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetGamificationMetricdefinitionTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationMetricdefinitionTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationMetricdefinitionInternalServerError creates a GetGamificationMetricdefinitionInternalServerError with default headers values
func NewGetGamificationMetricdefinitionInternalServerError() *GetGamificationMetricdefinitionInternalServerError {
	return &GetGamificationMetricdefinitionInternalServerError{}
}

/*
GetGamificationMetricdefinitionInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetGamificationMetricdefinitionInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification metricdefinition internal server error response has a 2xx status code
func (o *GetGamificationMetricdefinitionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification metricdefinition internal server error response has a 3xx status code
func (o *GetGamificationMetricdefinitionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification metricdefinition internal server error response has a 4xx status code
func (o *GetGamificationMetricdefinitionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get gamification metricdefinition internal server error response has a 5xx status code
func (o *GetGamificationMetricdefinitionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get gamification metricdefinition internal server error response a status code equal to that given
func (o *GetGamificationMetricdefinitionInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetGamificationMetricdefinitionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/metricdefinitions/{metricDefinitionId}][%d] getGamificationMetricdefinitionInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGamificationMetricdefinitionInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/metricdefinitions/{metricDefinitionId}][%d] getGamificationMetricdefinitionInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGamificationMetricdefinitionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationMetricdefinitionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationMetricdefinitionServiceUnavailable creates a GetGamificationMetricdefinitionServiceUnavailable with default headers values
func NewGetGamificationMetricdefinitionServiceUnavailable() *GetGamificationMetricdefinitionServiceUnavailable {
	return &GetGamificationMetricdefinitionServiceUnavailable{}
}

/*
GetGamificationMetricdefinitionServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetGamificationMetricdefinitionServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification metricdefinition service unavailable response has a 2xx status code
func (o *GetGamificationMetricdefinitionServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification metricdefinition service unavailable response has a 3xx status code
func (o *GetGamificationMetricdefinitionServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification metricdefinition service unavailable response has a 4xx status code
func (o *GetGamificationMetricdefinitionServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get gamification metricdefinition service unavailable response has a 5xx status code
func (o *GetGamificationMetricdefinitionServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get gamification metricdefinition service unavailable response a status code equal to that given
func (o *GetGamificationMetricdefinitionServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetGamificationMetricdefinitionServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/metricdefinitions/{metricDefinitionId}][%d] getGamificationMetricdefinitionServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetGamificationMetricdefinitionServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/metricdefinitions/{metricDefinitionId}][%d] getGamificationMetricdefinitionServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetGamificationMetricdefinitionServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationMetricdefinitionServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationMetricdefinitionGatewayTimeout creates a GetGamificationMetricdefinitionGatewayTimeout with default headers values
func NewGetGamificationMetricdefinitionGatewayTimeout() *GetGamificationMetricdefinitionGatewayTimeout {
	return &GetGamificationMetricdefinitionGatewayTimeout{}
}

/*
GetGamificationMetricdefinitionGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetGamificationMetricdefinitionGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification metricdefinition gateway timeout response has a 2xx status code
func (o *GetGamificationMetricdefinitionGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification metricdefinition gateway timeout response has a 3xx status code
func (o *GetGamificationMetricdefinitionGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification metricdefinition gateway timeout response has a 4xx status code
func (o *GetGamificationMetricdefinitionGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get gamification metricdefinition gateway timeout response has a 5xx status code
func (o *GetGamificationMetricdefinitionGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get gamification metricdefinition gateway timeout response a status code equal to that given
func (o *GetGamificationMetricdefinitionGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetGamificationMetricdefinitionGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/metricdefinitions/{metricDefinitionId}][%d] getGamificationMetricdefinitionGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetGamificationMetricdefinitionGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/metricdefinitions/{metricDefinitionId}][%d] getGamificationMetricdefinitionGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetGamificationMetricdefinitionGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationMetricdefinitionGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
