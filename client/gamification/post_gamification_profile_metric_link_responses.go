// Code generated by go-swagger; DO NOT EDIT.

package gamification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostGamificationProfileMetricLinkReader is a Reader for the PostGamificationProfileMetricLink structure.
type PostGamificationProfileMetricLinkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostGamificationProfileMetricLinkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostGamificationProfileMetricLinkCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostGamificationProfileMetricLinkBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostGamificationProfileMetricLinkUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostGamificationProfileMetricLinkForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostGamificationProfileMetricLinkNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostGamificationProfileMetricLinkRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostGamificationProfileMetricLinkRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostGamificationProfileMetricLinkUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostGamificationProfileMetricLinkTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostGamificationProfileMetricLinkInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostGamificationProfileMetricLinkServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostGamificationProfileMetricLinkGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostGamificationProfileMetricLinkCreated creates a PostGamificationProfileMetricLinkCreated with default headers values
func NewPostGamificationProfileMetricLinkCreated() *PostGamificationProfileMetricLinkCreated {
	return &PostGamificationProfileMetricLinkCreated{}
}

/*
PostGamificationProfileMetricLinkCreated describes a response with status code 201, with default header values.

Linked Metric successfully created
*/
type PostGamificationProfileMetricLinkCreated struct {
	Payload *models.Metric
}

// IsSuccess returns true when this post gamification profile metric link created response has a 2xx status code
func (o *PostGamificationProfileMetricLinkCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post gamification profile metric link created response has a 3xx status code
func (o *PostGamificationProfileMetricLinkCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profile metric link created response has a 4xx status code
func (o *PostGamificationProfileMetricLinkCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post gamification profile metric link created response has a 5xx status code
func (o *PostGamificationProfileMetricLinkCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post gamification profile metric link created response a status code equal to that given
func (o *PostGamificationProfileMetricLinkCreated) IsCode(code int) bool {
	return code == 201
}

func (o *PostGamificationProfileMetricLinkCreated) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{sourceProfileId}/metrics/{sourceMetricId}/link][%d] postGamificationProfileMetricLinkCreated  %+v", 201, o.Payload)
}

func (o *PostGamificationProfileMetricLinkCreated) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{sourceProfileId}/metrics/{sourceMetricId}/link][%d] postGamificationProfileMetricLinkCreated  %+v", 201, o.Payload)
}

func (o *PostGamificationProfileMetricLinkCreated) GetPayload() *models.Metric {
	return o.Payload
}

func (o *PostGamificationProfileMetricLinkCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Metric)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfileMetricLinkBadRequest creates a PostGamificationProfileMetricLinkBadRequest with default headers values
func NewPostGamificationProfileMetricLinkBadRequest() *PostGamificationProfileMetricLinkBadRequest {
	return &PostGamificationProfileMetricLinkBadRequest{}
}

/*
PostGamificationProfileMetricLinkBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostGamificationProfileMetricLinkBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profile metric link bad request response has a 2xx status code
func (o *PostGamificationProfileMetricLinkBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profile metric link bad request response has a 3xx status code
func (o *PostGamificationProfileMetricLinkBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profile metric link bad request response has a 4xx status code
func (o *PostGamificationProfileMetricLinkBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post gamification profile metric link bad request response has a 5xx status code
func (o *PostGamificationProfileMetricLinkBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post gamification profile metric link bad request response a status code equal to that given
func (o *PostGamificationProfileMetricLinkBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostGamificationProfileMetricLinkBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{sourceProfileId}/metrics/{sourceMetricId}/link][%d] postGamificationProfileMetricLinkBadRequest  %+v", 400, o.Payload)
}

func (o *PostGamificationProfileMetricLinkBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{sourceProfileId}/metrics/{sourceMetricId}/link][%d] postGamificationProfileMetricLinkBadRequest  %+v", 400, o.Payload)
}

func (o *PostGamificationProfileMetricLinkBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfileMetricLinkBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfileMetricLinkUnauthorized creates a PostGamificationProfileMetricLinkUnauthorized with default headers values
func NewPostGamificationProfileMetricLinkUnauthorized() *PostGamificationProfileMetricLinkUnauthorized {
	return &PostGamificationProfileMetricLinkUnauthorized{}
}

/*
PostGamificationProfileMetricLinkUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostGamificationProfileMetricLinkUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profile metric link unauthorized response has a 2xx status code
func (o *PostGamificationProfileMetricLinkUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profile metric link unauthorized response has a 3xx status code
func (o *PostGamificationProfileMetricLinkUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profile metric link unauthorized response has a 4xx status code
func (o *PostGamificationProfileMetricLinkUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post gamification profile metric link unauthorized response has a 5xx status code
func (o *PostGamificationProfileMetricLinkUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post gamification profile metric link unauthorized response a status code equal to that given
func (o *PostGamificationProfileMetricLinkUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostGamificationProfileMetricLinkUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{sourceProfileId}/metrics/{sourceMetricId}/link][%d] postGamificationProfileMetricLinkUnauthorized  %+v", 401, o.Payload)
}

func (o *PostGamificationProfileMetricLinkUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{sourceProfileId}/metrics/{sourceMetricId}/link][%d] postGamificationProfileMetricLinkUnauthorized  %+v", 401, o.Payload)
}

func (o *PostGamificationProfileMetricLinkUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfileMetricLinkUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfileMetricLinkForbidden creates a PostGamificationProfileMetricLinkForbidden with default headers values
func NewPostGamificationProfileMetricLinkForbidden() *PostGamificationProfileMetricLinkForbidden {
	return &PostGamificationProfileMetricLinkForbidden{}
}

/*
PostGamificationProfileMetricLinkForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostGamificationProfileMetricLinkForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profile metric link forbidden response has a 2xx status code
func (o *PostGamificationProfileMetricLinkForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profile metric link forbidden response has a 3xx status code
func (o *PostGamificationProfileMetricLinkForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profile metric link forbidden response has a 4xx status code
func (o *PostGamificationProfileMetricLinkForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post gamification profile metric link forbidden response has a 5xx status code
func (o *PostGamificationProfileMetricLinkForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post gamification profile metric link forbidden response a status code equal to that given
func (o *PostGamificationProfileMetricLinkForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostGamificationProfileMetricLinkForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{sourceProfileId}/metrics/{sourceMetricId}/link][%d] postGamificationProfileMetricLinkForbidden  %+v", 403, o.Payload)
}

func (o *PostGamificationProfileMetricLinkForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{sourceProfileId}/metrics/{sourceMetricId}/link][%d] postGamificationProfileMetricLinkForbidden  %+v", 403, o.Payload)
}

func (o *PostGamificationProfileMetricLinkForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfileMetricLinkForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfileMetricLinkNotFound creates a PostGamificationProfileMetricLinkNotFound with default headers values
func NewPostGamificationProfileMetricLinkNotFound() *PostGamificationProfileMetricLinkNotFound {
	return &PostGamificationProfileMetricLinkNotFound{}
}

/*
PostGamificationProfileMetricLinkNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostGamificationProfileMetricLinkNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profile metric link not found response has a 2xx status code
func (o *PostGamificationProfileMetricLinkNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profile metric link not found response has a 3xx status code
func (o *PostGamificationProfileMetricLinkNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profile metric link not found response has a 4xx status code
func (o *PostGamificationProfileMetricLinkNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post gamification profile metric link not found response has a 5xx status code
func (o *PostGamificationProfileMetricLinkNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post gamification profile metric link not found response a status code equal to that given
func (o *PostGamificationProfileMetricLinkNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostGamificationProfileMetricLinkNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{sourceProfileId}/metrics/{sourceMetricId}/link][%d] postGamificationProfileMetricLinkNotFound  %+v", 404, o.Payload)
}

func (o *PostGamificationProfileMetricLinkNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{sourceProfileId}/metrics/{sourceMetricId}/link][%d] postGamificationProfileMetricLinkNotFound  %+v", 404, o.Payload)
}

func (o *PostGamificationProfileMetricLinkNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfileMetricLinkNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfileMetricLinkRequestTimeout creates a PostGamificationProfileMetricLinkRequestTimeout with default headers values
func NewPostGamificationProfileMetricLinkRequestTimeout() *PostGamificationProfileMetricLinkRequestTimeout {
	return &PostGamificationProfileMetricLinkRequestTimeout{}
}

/*
PostGamificationProfileMetricLinkRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostGamificationProfileMetricLinkRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profile metric link request timeout response has a 2xx status code
func (o *PostGamificationProfileMetricLinkRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profile metric link request timeout response has a 3xx status code
func (o *PostGamificationProfileMetricLinkRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profile metric link request timeout response has a 4xx status code
func (o *PostGamificationProfileMetricLinkRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post gamification profile metric link request timeout response has a 5xx status code
func (o *PostGamificationProfileMetricLinkRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post gamification profile metric link request timeout response a status code equal to that given
func (o *PostGamificationProfileMetricLinkRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostGamificationProfileMetricLinkRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{sourceProfileId}/metrics/{sourceMetricId}/link][%d] postGamificationProfileMetricLinkRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostGamificationProfileMetricLinkRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{sourceProfileId}/metrics/{sourceMetricId}/link][%d] postGamificationProfileMetricLinkRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostGamificationProfileMetricLinkRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfileMetricLinkRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfileMetricLinkRequestEntityTooLarge creates a PostGamificationProfileMetricLinkRequestEntityTooLarge with default headers values
func NewPostGamificationProfileMetricLinkRequestEntityTooLarge() *PostGamificationProfileMetricLinkRequestEntityTooLarge {
	return &PostGamificationProfileMetricLinkRequestEntityTooLarge{}
}

/*
PostGamificationProfileMetricLinkRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostGamificationProfileMetricLinkRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profile metric link request entity too large response has a 2xx status code
func (o *PostGamificationProfileMetricLinkRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profile metric link request entity too large response has a 3xx status code
func (o *PostGamificationProfileMetricLinkRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profile metric link request entity too large response has a 4xx status code
func (o *PostGamificationProfileMetricLinkRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post gamification profile metric link request entity too large response has a 5xx status code
func (o *PostGamificationProfileMetricLinkRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post gamification profile metric link request entity too large response a status code equal to that given
func (o *PostGamificationProfileMetricLinkRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostGamificationProfileMetricLinkRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{sourceProfileId}/metrics/{sourceMetricId}/link][%d] postGamificationProfileMetricLinkRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostGamificationProfileMetricLinkRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{sourceProfileId}/metrics/{sourceMetricId}/link][%d] postGamificationProfileMetricLinkRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostGamificationProfileMetricLinkRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfileMetricLinkRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfileMetricLinkUnsupportedMediaType creates a PostGamificationProfileMetricLinkUnsupportedMediaType with default headers values
func NewPostGamificationProfileMetricLinkUnsupportedMediaType() *PostGamificationProfileMetricLinkUnsupportedMediaType {
	return &PostGamificationProfileMetricLinkUnsupportedMediaType{}
}

/*
PostGamificationProfileMetricLinkUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostGamificationProfileMetricLinkUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profile metric link unsupported media type response has a 2xx status code
func (o *PostGamificationProfileMetricLinkUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profile metric link unsupported media type response has a 3xx status code
func (o *PostGamificationProfileMetricLinkUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profile metric link unsupported media type response has a 4xx status code
func (o *PostGamificationProfileMetricLinkUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post gamification profile metric link unsupported media type response has a 5xx status code
func (o *PostGamificationProfileMetricLinkUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post gamification profile metric link unsupported media type response a status code equal to that given
func (o *PostGamificationProfileMetricLinkUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostGamificationProfileMetricLinkUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{sourceProfileId}/metrics/{sourceMetricId}/link][%d] postGamificationProfileMetricLinkUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostGamificationProfileMetricLinkUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{sourceProfileId}/metrics/{sourceMetricId}/link][%d] postGamificationProfileMetricLinkUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostGamificationProfileMetricLinkUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfileMetricLinkUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfileMetricLinkTooManyRequests creates a PostGamificationProfileMetricLinkTooManyRequests with default headers values
func NewPostGamificationProfileMetricLinkTooManyRequests() *PostGamificationProfileMetricLinkTooManyRequests {
	return &PostGamificationProfileMetricLinkTooManyRequests{}
}

/*
PostGamificationProfileMetricLinkTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostGamificationProfileMetricLinkTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profile metric link too many requests response has a 2xx status code
func (o *PostGamificationProfileMetricLinkTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profile metric link too many requests response has a 3xx status code
func (o *PostGamificationProfileMetricLinkTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profile metric link too many requests response has a 4xx status code
func (o *PostGamificationProfileMetricLinkTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post gamification profile metric link too many requests response has a 5xx status code
func (o *PostGamificationProfileMetricLinkTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post gamification profile metric link too many requests response a status code equal to that given
func (o *PostGamificationProfileMetricLinkTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostGamificationProfileMetricLinkTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{sourceProfileId}/metrics/{sourceMetricId}/link][%d] postGamificationProfileMetricLinkTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostGamificationProfileMetricLinkTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{sourceProfileId}/metrics/{sourceMetricId}/link][%d] postGamificationProfileMetricLinkTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostGamificationProfileMetricLinkTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfileMetricLinkTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfileMetricLinkInternalServerError creates a PostGamificationProfileMetricLinkInternalServerError with default headers values
func NewPostGamificationProfileMetricLinkInternalServerError() *PostGamificationProfileMetricLinkInternalServerError {
	return &PostGamificationProfileMetricLinkInternalServerError{}
}

/*
PostGamificationProfileMetricLinkInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostGamificationProfileMetricLinkInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profile metric link internal server error response has a 2xx status code
func (o *PostGamificationProfileMetricLinkInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profile metric link internal server error response has a 3xx status code
func (o *PostGamificationProfileMetricLinkInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profile metric link internal server error response has a 4xx status code
func (o *PostGamificationProfileMetricLinkInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post gamification profile metric link internal server error response has a 5xx status code
func (o *PostGamificationProfileMetricLinkInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post gamification profile metric link internal server error response a status code equal to that given
func (o *PostGamificationProfileMetricLinkInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostGamificationProfileMetricLinkInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{sourceProfileId}/metrics/{sourceMetricId}/link][%d] postGamificationProfileMetricLinkInternalServerError  %+v", 500, o.Payload)
}

func (o *PostGamificationProfileMetricLinkInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{sourceProfileId}/metrics/{sourceMetricId}/link][%d] postGamificationProfileMetricLinkInternalServerError  %+v", 500, o.Payload)
}

func (o *PostGamificationProfileMetricLinkInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfileMetricLinkInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfileMetricLinkServiceUnavailable creates a PostGamificationProfileMetricLinkServiceUnavailable with default headers values
func NewPostGamificationProfileMetricLinkServiceUnavailable() *PostGamificationProfileMetricLinkServiceUnavailable {
	return &PostGamificationProfileMetricLinkServiceUnavailable{}
}

/*
PostGamificationProfileMetricLinkServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostGamificationProfileMetricLinkServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profile metric link service unavailable response has a 2xx status code
func (o *PostGamificationProfileMetricLinkServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profile metric link service unavailable response has a 3xx status code
func (o *PostGamificationProfileMetricLinkServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profile metric link service unavailable response has a 4xx status code
func (o *PostGamificationProfileMetricLinkServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post gamification profile metric link service unavailable response has a 5xx status code
func (o *PostGamificationProfileMetricLinkServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post gamification profile metric link service unavailable response a status code equal to that given
func (o *PostGamificationProfileMetricLinkServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostGamificationProfileMetricLinkServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{sourceProfileId}/metrics/{sourceMetricId}/link][%d] postGamificationProfileMetricLinkServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostGamificationProfileMetricLinkServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{sourceProfileId}/metrics/{sourceMetricId}/link][%d] postGamificationProfileMetricLinkServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostGamificationProfileMetricLinkServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfileMetricLinkServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfileMetricLinkGatewayTimeout creates a PostGamificationProfileMetricLinkGatewayTimeout with default headers values
func NewPostGamificationProfileMetricLinkGatewayTimeout() *PostGamificationProfileMetricLinkGatewayTimeout {
	return &PostGamificationProfileMetricLinkGatewayTimeout{}
}

/*
PostGamificationProfileMetricLinkGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostGamificationProfileMetricLinkGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profile metric link gateway timeout response has a 2xx status code
func (o *PostGamificationProfileMetricLinkGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profile metric link gateway timeout response has a 3xx status code
func (o *PostGamificationProfileMetricLinkGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profile metric link gateway timeout response has a 4xx status code
func (o *PostGamificationProfileMetricLinkGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post gamification profile metric link gateway timeout response has a 5xx status code
func (o *PostGamificationProfileMetricLinkGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post gamification profile metric link gateway timeout response a status code equal to that given
func (o *PostGamificationProfileMetricLinkGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostGamificationProfileMetricLinkGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{sourceProfileId}/metrics/{sourceMetricId}/link][%d] postGamificationProfileMetricLinkGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostGamificationProfileMetricLinkGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{sourceProfileId}/metrics/{sourceMetricId}/link][%d] postGamificationProfileMetricLinkGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostGamificationProfileMetricLinkGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfileMetricLinkGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
