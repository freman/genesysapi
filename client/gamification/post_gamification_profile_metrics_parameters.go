// Code generated by go-swagger; DO NOT EDIT.

package gamification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// NewPostGamificationProfileMetricsParams creates a new PostGamificationProfileMetricsParams object
// with the default values initialized.
func NewPostGamificationProfileMetricsParams() *PostGamificationProfileMetricsParams {
	var ()
	return &PostGamificationProfileMetricsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostGamificationProfileMetricsParamsWithTimeout creates a new PostGamificationProfileMetricsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostGamificationProfileMetricsParamsWithTimeout(timeout time.Duration) *PostGamificationProfileMetricsParams {
	var ()
	return &PostGamificationProfileMetricsParams{

		timeout: timeout,
	}
}

// NewPostGamificationProfileMetricsParamsWithContext creates a new PostGamificationProfileMetricsParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostGamificationProfileMetricsParamsWithContext(ctx context.Context) *PostGamificationProfileMetricsParams {
	var ()
	return &PostGamificationProfileMetricsParams{

		Context: ctx,
	}
}

// NewPostGamificationProfileMetricsParamsWithHTTPClient creates a new PostGamificationProfileMetricsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostGamificationProfileMetricsParamsWithHTTPClient(client *http.Client) *PostGamificationProfileMetricsParams {
	var ()
	return &PostGamificationProfileMetricsParams{
		HTTPClient: client,
	}
}

/*PostGamificationProfileMetricsParams contains all the parameters to send to the API endpoint
for the post gamification profile metrics operation typically these are written to a http.Request
*/
type PostGamificationProfileMetricsParams struct {

	/*Body
	  Metric

	*/
	Body *models.Metric
	/*ProfileID
	  Performance Profile Id

	*/
	ProfileID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post gamification profile metrics params
func (o *PostGamificationProfileMetricsParams) WithTimeout(timeout time.Duration) *PostGamificationProfileMetricsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post gamification profile metrics params
func (o *PostGamificationProfileMetricsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post gamification profile metrics params
func (o *PostGamificationProfileMetricsParams) WithContext(ctx context.Context) *PostGamificationProfileMetricsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post gamification profile metrics params
func (o *PostGamificationProfileMetricsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post gamification profile metrics params
func (o *PostGamificationProfileMetricsParams) WithHTTPClient(client *http.Client) *PostGamificationProfileMetricsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post gamification profile metrics params
func (o *PostGamificationProfileMetricsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the post gamification profile metrics params
func (o *PostGamificationProfileMetricsParams) WithBody(body *models.Metric) *PostGamificationProfileMetricsParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the post gamification profile metrics params
func (o *PostGamificationProfileMetricsParams) SetBody(body *models.Metric) {
	o.Body = body
}

// WithProfileID adds the profileID to the post gamification profile metrics params
func (o *PostGamificationProfileMetricsParams) WithProfileID(profileID string) *PostGamificationProfileMetricsParams {
	o.SetProfileID(profileID)
	return o
}

// SetProfileID adds the profileId to the post gamification profile metrics params
func (o *PostGamificationProfileMetricsParams) SetProfileID(profileID string) {
	o.ProfileID = profileID
}

// WriteToRequest writes these params to a swagger request
func (o *PostGamificationProfileMetricsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param profileId
	if err := r.SetPathParam("profileId", o.ProfileID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
