// Code generated by go-swagger; DO NOT EDIT.

package gamification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetGamificationScorecardsBestpointsReader is a Reader for the GetGamificationScorecardsBestpoints structure.
type GetGamificationScorecardsBestpointsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGamificationScorecardsBestpointsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGamificationScorecardsBestpointsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetGamificationScorecardsBestpointsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetGamificationScorecardsBestpointsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGamificationScorecardsBestpointsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGamificationScorecardsBestpointsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetGamificationScorecardsBestpointsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetGamificationScorecardsBestpointsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetGamificationScorecardsBestpointsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGamificationScorecardsBestpointsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetGamificationScorecardsBestpointsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetGamificationScorecardsBestpointsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGamificationScorecardsBestpointsOK creates a GetGamificationScorecardsBestpointsOK with default headers values
func NewGetGamificationScorecardsBestpointsOK() *GetGamificationScorecardsBestpointsOK {
	return &GetGamificationScorecardsBestpointsOK{}
}

/*GetGamificationScorecardsBestpointsOK handles this case with default header values.

successful operation
*/
type GetGamificationScorecardsBestpointsOK struct {
	Payload *models.UserBestPoints
}

func (o *GetGamificationScorecardsBestpointsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/bestpoints][%d] getGamificationScorecardsBestpointsOK  %+v", 200, o.Payload)
}

func (o *GetGamificationScorecardsBestpointsOK) GetPayload() *models.UserBestPoints {
	return o.Payload
}

func (o *GetGamificationScorecardsBestpointsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserBestPoints)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsBestpointsBadRequest creates a GetGamificationScorecardsBestpointsBadRequest with default headers values
func NewGetGamificationScorecardsBestpointsBadRequest() *GetGamificationScorecardsBestpointsBadRequest {
	return &GetGamificationScorecardsBestpointsBadRequest{}
}

/*GetGamificationScorecardsBestpointsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetGamificationScorecardsBestpointsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationScorecardsBestpointsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/bestpoints][%d] getGamificationScorecardsBestpointsBadRequest  %+v", 400, o.Payload)
}

func (o *GetGamificationScorecardsBestpointsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsBestpointsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsBestpointsUnauthorized creates a GetGamificationScorecardsBestpointsUnauthorized with default headers values
func NewGetGamificationScorecardsBestpointsUnauthorized() *GetGamificationScorecardsBestpointsUnauthorized {
	return &GetGamificationScorecardsBestpointsUnauthorized{}
}

/*GetGamificationScorecardsBestpointsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetGamificationScorecardsBestpointsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationScorecardsBestpointsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/bestpoints][%d] getGamificationScorecardsBestpointsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGamificationScorecardsBestpointsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsBestpointsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsBestpointsForbidden creates a GetGamificationScorecardsBestpointsForbidden with default headers values
func NewGetGamificationScorecardsBestpointsForbidden() *GetGamificationScorecardsBestpointsForbidden {
	return &GetGamificationScorecardsBestpointsForbidden{}
}

/*GetGamificationScorecardsBestpointsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetGamificationScorecardsBestpointsForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationScorecardsBestpointsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/bestpoints][%d] getGamificationScorecardsBestpointsForbidden  %+v", 403, o.Payload)
}

func (o *GetGamificationScorecardsBestpointsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsBestpointsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsBestpointsNotFound creates a GetGamificationScorecardsBestpointsNotFound with default headers values
func NewGetGamificationScorecardsBestpointsNotFound() *GetGamificationScorecardsBestpointsNotFound {
	return &GetGamificationScorecardsBestpointsNotFound{}
}

/*GetGamificationScorecardsBestpointsNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetGamificationScorecardsBestpointsNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationScorecardsBestpointsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/bestpoints][%d] getGamificationScorecardsBestpointsNotFound  %+v", 404, o.Payload)
}

func (o *GetGamificationScorecardsBestpointsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsBestpointsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsBestpointsRequestEntityTooLarge creates a GetGamificationScorecardsBestpointsRequestEntityTooLarge with default headers values
func NewGetGamificationScorecardsBestpointsRequestEntityTooLarge() *GetGamificationScorecardsBestpointsRequestEntityTooLarge {
	return &GetGamificationScorecardsBestpointsRequestEntityTooLarge{}
}

/*GetGamificationScorecardsBestpointsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetGamificationScorecardsBestpointsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationScorecardsBestpointsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/bestpoints][%d] getGamificationScorecardsBestpointsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetGamificationScorecardsBestpointsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsBestpointsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsBestpointsUnsupportedMediaType creates a GetGamificationScorecardsBestpointsUnsupportedMediaType with default headers values
func NewGetGamificationScorecardsBestpointsUnsupportedMediaType() *GetGamificationScorecardsBestpointsUnsupportedMediaType {
	return &GetGamificationScorecardsBestpointsUnsupportedMediaType{}
}

/*GetGamificationScorecardsBestpointsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetGamificationScorecardsBestpointsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationScorecardsBestpointsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/bestpoints][%d] getGamificationScorecardsBestpointsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetGamificationScorecardsBestpointsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsBestpointsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsBestpointsTooManyRequests creates a GetGamificationScorecardsBestpointsTooManyRequests with default headers values
func NewGetGamificationScorecardsBestpointsTooManyRequests() *GetGamificationScorecardsBestpointsTooManyRequests {
	return &GetGamificationScorecardsBestpointsTooManyRequests{}
}

/*GetGamificationScorecardsBestpointsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type GetGamificationScorecardsBestpointsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationScorecardsBestpointsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/bestpoints][%d] getGamificationScorecardsBestpointsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetGamificationScorecardsBestpointsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsBestpointsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsBestpointsInternalServerError creates a GetGamificationScorecardsBestpointsInternalServerError with default headers values
func NewGetGamificationScorecardsBestpointsInternalServerError() *GetGamificationScorecardsBestpointsInternalServerError {
	return &GetGamificationScorecardsBestpointsInternalServerError{}
}

/*GetGamificationScorecardsBestpointsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetGamificationScorecardsBestpointsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationScorecardsBestpointsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/bestpoints][%d] getGamificationScorecardsBestpointsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGamificationScorecardsBestpointsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsBestpointsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsBestpointsServiceUnavailable creates a GetGamificationScorecardsBestpointsServiceUnavailable with default headers values
func NewGetGamificationScorecardsBestpointsServiceUnavailable() *GetGamificationScorecardsBestpointsServiceUnavailable {
	return &GetGamificationScorecardsBestpointsServiceUnavailable{}
}

/*GetGamificationScorecardsBestpointsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetGamificationScorecardsBestpointsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationScorecardsBestpointsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/bestpoints][%d] getGamificationScorecardsBestpointsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetGamificationScorecardsBestpointsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsBestpointsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsBestpointsGatewayTimeout creates a GetGamificationScorecardsBestpointsGatewayTimeout with default headers values
func NewGetGamificationScorecardsBestpointsGatewayTimeout() *GetGamificationScorecardsBestpointsGatewayTimeout {
	return &GetGamificationScorecardsBestpointsGatewayTimeout{}
}

/*GetGamificationScorecardsBestpointsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetGamificationScorecardsBestpointsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationScorecardsBestpointsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/bestpoints][%d] getGamificationScorecardsBestpointsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetGamificationScorecardsBestpointsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsBestpointsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
