// Code generated by go-swagger; DO NOT EDIT.

package gamification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetGamificationScorecardsReader is a Reader for the GetGamificationScorecards structure.
type GetGamificationScorecardsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGamificationScorecardsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGamificationScorecardsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetGamificationScorecardsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetGamificationScorecardsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGamificationScorecardsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGamificationScorecardsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetGamificationScorecardsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetGamificationScorecardsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetGamificationScorecardsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetGamificationScorecardsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGamificationScorecardsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetGamificationScorecardsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetGamificationScorecardsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGamificationScorecardsOK creates a GetGamificationScorecardsOK with default headers values
func NewGetGamificationScorecardsOK() *GetGamificationScorecardsOK {
	return &GetGamificationScorecardsOK{}
}

/*GetGamificationScorecardsOK handles this case with default header values.

successful operation
*/
type GetGamificationScorecardsOK struct {
	Payload *models.WorkdayMetricListing
}

func (o *GetGamificationScorecardsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards][%d] getGamificationScorecardsOK  %+v", 200, o.Payload)
}

func (o *GetGamificationScorecardsOK) GetPayload() *models.WorkdayMetricListing {
	return o.Payload
}

func (o *GetGamificationScorecardsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WorkdayMetricListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsBadRequest creates a GetGamificationScorecardsBadRequest with default headers values
func NewGetGamificationScorecardsBadRequest() *GetGamificationScorecardsBadRequest {
	return &GetGamificationScorecardsBadRequest{}
}

/*GetGamificationScorecardsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetGamificationScorecardsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationScorecardsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards][%d] getGamificationScorecardsBadRequest  %+v", 400, o.Payload)
}

func (o *GetGamificationScorecardsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsUnauthorized creates a GetGamificationScorecardsUnauthorized with default headers values
func NewGetGamificationScorecardsUnauthorized() *GetGamificationScorecardsUnauthorized {
	return &GetGamificationScorecardsUnauthorized{}
}

/*GetGamificationScorecardsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetGamificationScorecardsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationScorecardsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards][%d] getGamificationScorecardsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGamificationScorecardsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsForbidden creates a GetGamificationScorecardsForbidden with default headers values
func NewGetGamificationScorecardsForbidden() *GetGamificationScorecardsForbidden {
	return &GetGamificationScorecardsForbidden{}
}

/*GetGamificationScorecardsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetGamificationScorecardsForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationScorecardsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards][%d] getGamificationScorecardsForbidden  %+v", 403, o.Payload)
}

func (o *GetGamificationScorecardsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsNotFound creates a GetGamificationScorecardsNotFound with default headers values
func NewGetGamificationScorecardsNotFound() *GetGamificationScorecardsNotFound {
	return &GetGamificationScorecardsNotFound{}
}

/*GetGamificationScorecardsNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetGamificationScorecardsNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationScorecardsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards][%d] getGamificationScorecardsNotFound  %+v", 404, o.Payload)
}

func (o *GetGamificationScorecardsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsRequestTimeout creates a GetGamificationScorecardsRequestTimeout with default headers values
func NewGetGamificationScorecardsRequestTimeout() *GetGamificationScorecardsRequestTimeout {
	return &GetGamificationScorecardsRequestTimeout{}
}

/*GetGamificationScorecardsRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetGamificationScorecardsRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationScorecardsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards][%d] getGamificationScorecardsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetGamificationScorecardsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsRequestEntityTooLarge creates a GetGamificationScorecardsRequestEntityTooLarge with default headers values
func NewGetGamificationScorecardsRequestEntityTooLarge() *GetGamificationScorecardsRequestEntityTooLarge {
	return &GetGamificationScorecardsRequestEntityTooLarge{}
}

/*GetGamificationScorecardsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetGamificationScorecardsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationScorecardsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards][%d] getGamificationScorecardsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetGamificationScorecardsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsUnsupportedMediaType creates a GetGamificationScorecardsUnsupportedMediaType with default headers values
func NewGetGamificationScorecardsUnsupportedMediaType() *GetGamificationScorecardsUnsupportedMediaType {
	return &GetGamificationScorecardsUnsupportedMediaType{}
}

/*GetGamificationScorecardsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetGamificationScorecardsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationScorecardsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards][%d] getGamificationScorecardsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetGamificationScorecardsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsTooManyRequests creates a GetGamificationScorecardsTooManyRequests with default headers values
func NewGetGamificationScorecardsTooManyRequests() *GetGamificationScorecardsTooManyRequests {
	return &GetGamificationScorecardsTooManyRequests{}
}

/*GetGamificationScorecardsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetGamificationScorecardsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationScorecardsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards][%d] getGamificationScorecardsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetGamificationScorecardsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsInternalServerError creates a GetGamificationScorecardsInternalServerError with default headers values
func NewGetGamificationScorecardsInternalServerError() *GetGamificationScorecardsInternalServerError {
	return &GetGamificationScorecardsInternalServerError{}
}

/*GetGamificationScorecardsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetGamificationScorecardsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationScorecardsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards][%d] getGamificationScorecardsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGamificationScorecardsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsServiceUnavailable creates a GetGamificationScorecardsServiceUnavailable with default headers values
func NewGetGamificationScorecardsServiceUnavailable() *GetGamificationScorecardsServiceUnavailable {
	return &GetGamificationScorecardsServiceUnavailable{}
}

/*GetGamificationScorecardsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetGamificationScorecardsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationScorecardsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards][%d] getGamificationScorecardsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetGamificationScorecardsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsGatewayTimeout creates a GetGamificationScorecardsGatewayTimeout with default headers values
func NewGetGamificationScorecardsGatewayTimeout() *GetGamificationScorecardsGatewayTimeout {
	return &GetGamificationScorecardsGatewayTimeout{}
}

/*GetGamificationScorecardsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetGamificationScorecardsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationScorecardsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards][%d] getGamificationScorecardsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetGamificationScorecardsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
