// Code generated by go-swagger; DO NOT EDIT.

package gamification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetGamificationScorecardsAttendanceReader is a Reader for the GetGamificationScorecardsAttendance structure.
type GetGamificationScorecardsAttendanceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGamificationScorecardsAttendanceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGamificationScorecardsAttendanceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetGamificationScorecardsAttendanceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetGamificationScorecardsAttendanceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGamificationScorecardsAttendanceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGamificationScorecardsAttendanceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetGamificationScorecardsAttendanceRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetGamificationScorecardsAttendanceRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetGamificationScorecardsAttendanceUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetGamificationScorecardsAttendanceTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGamificationScorecardsAttendanceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetGamificationScorecardsAttendanceServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetGamificationScorecardsAttendanceGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGamificationScorecardsAttendanceOK creates a GetGamificationScorecardsAttendanceOK with default headers values
func NewGetGamificationScorecardsAttendanceOK() *GetGamificationScorecardsAttendanceOK {
	return &GetGamificationScorecardsAttendanceOK{}
}

/*
GetGamificationScorecardsAttendanceOK describes a response with status code 200, with default header values.

successful operation
*/
type GetGamificationScorecardsAttendanceOK struct {
	Payload *models.AttendanceStatusListing
}

// IsSuccess returns true when this get gamification scorecards attendance o k response has a 2xx status code
func (o *GetGamificationScorecardsAttendanceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get gamification scorecards attendance o k response has a 3xx status code
func (o *GetGamificationScorecardsAttendanceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards attendance o k response has a 4xx status code
func (o *GetGamificationScorecardsAttendanceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get gamification scorecards attendance o k response has a 5xx status code
func (o *GetGamificationScorecardsAttendanceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification scorecards attendance o k response a status code equal to that given
func (o *GetGamificationScorecardsAttendanceOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetGamificationScorecardsAttendanceOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/attendance][%d] getGamificationScorecardsAttendanceOK  %+v", 200, o.Payload)
}

func (o *GetGamificationScorecardsAttendanceOK) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/attendance][%d] getGamificationScorecardsAttendanceOK  %+v", 200, o.Payload)
}

func (o *GetGamificationScorecardsAttendanceOK) GetPayload() *models.AttendanceStatusListing {
	return o.Payload
}

func (o *GetGamificationScorecardsAttendanceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AttendanceStatusListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsAttendanceBadRequest creates a GetGamificationScorecardsAttendanceBadRequest with default headers values
func NewGetGamificationScorecardsAttendanceBadRequest() *GetGamificationScorecardsAttendanceBadRequest {
	return &GetGamificationScorecardsAttendanceBadRequest{}
}

/*
GetGamificationScorecardsAttendanceBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetGamificationScorecardsAttendanceBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards attendance bad request response has a 2xx status code
func (o *GetGamificationScorecardsAttendanceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards attendance bad request response has a 3xx status code
func (o *GetGamificationScorecardsAttendanceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards attendance bad request response has a 4xx status code
func (o *GetGamificationScorecardsAttendanceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification scorecards attendance bad request response has a 5xx status code
func (o *GetGamificationScorecardsAttendanceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification scorecards attendance bad request response a status code equal to that given
func (o *GetGamificationScorecardsAttendanceBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetGamificationScorecardsAttendanceBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/attendance][%d] getGamificationScorecardsAttendanceBadRequest  %+v", 400, o.Payload)
}

func (o *GetGamificationScorecardsAttendanceBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/attendance][%d] getGamificationScorecardsAttendanceBadRequest  %+v", 400, o.Payload)
}

func (o *GetGamificationScorecardsAttendanceBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsAttendanceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsAttendanceUnauthorized creates a GetGamificationScorecardsAttendanceUnauthorized with default headers values
func NewGetGamificationScorecardsAttendanceUnauthorized() *GetGamificationScorecardsAttendanceUnauthorized {
	return &GetGamificationScorecardsAttendanceUnauthorized{}
}

/*
GetGamificationScorecardsAttendanceUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetGamificationScorecardsAttendanceUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards attendance unauthorized response has a 2xx status code
func (o *GetGamificationScorecardsAttendanceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards attendance unauthorized response has a 3xx status code
func (o *GetGamificationScorecardsAttendanceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards attendance unauthorized response has a 4xx status code
func (o *GetGamificationScorecardsAttendanceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification scorecards attendance unauthorized response has a 5xx status code
func (o *GetGamificationScorecardsAttendanceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification scorecards attendance unauthorized response a status code equal to that given
func (o *GetGamificationScorecardsAttendanceUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetGamificationScorecardsAttendanceUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/attendance][%d] getGamificationScorecardsAttendanceUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGamificationScorecardsAttendanceUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/attendance][%d] getGamificationScorecardsAttendanceUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGamificationScorecardsAttendanceUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsAttendanceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsAttendanceForbidden creates a GetGamificationScorecardsAttendanceForbidden with default headers values
func NewGetGamificationScorecardsAttendanceForbidden() *GetGamificationScorecardsAttendanceForbidden {
	return &GetGamificationScorecardsAttendanceForbidden{}
}

/*
GetGamificationScorecardsAttendanceForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetGamificationScorecardsAttendanceForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards attendance forbidden response has a 2xx status code
func (o *GetGamificationScorecardsAttendanceForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards attendance forbidden response has a 3xx status code
func (o *GetGamificationScorecardsAttendanceForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards attendance forbidden response has a 4xx status code
func (o *GetGamificationScorecardsAttendanceForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification scorecards attendance forbidden response has a 5xx status code
func (o *GetGamificationScorecardsAttendanceForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification scorecards attendance forbidden response a status code equal to that given
func (o *GetGamificationScorecardsAttendanceForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetGamificationScorecardsAttendanceForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/attendance][%d] getGamificationScorecardsAttendanceForbidden  %+v", 403, o.Payload)
}

func (o *GetGamificationScorecardsAttendanceForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/attendance][%d] getGamificationScorecardsAttendanceForbidden  %+v", 403, o.Payload)
}

func (o *GetGamificationScorecardsAttendanceForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsAttendanceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsAttendanceNotFound creates a GetGamificationScorecardsAttendanceNotFound with default headers values
func NewGetGamificationScorecardsAttendanceNotFound() *GetGamificationScorecardsAttendanceNotFound {
	return &GetGamificationScorecardsAttendanceNotFound{}
}

/*
GetGamificationScorecardsAttendanceNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetGamificationScorecardsAttendanceNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards attendance not found response has a 2xx status code
func (o *GetGamificationScorecardsAttendanceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards attendance not found response has a 3xx status code
func (o *GetGamificationScorecardsAttendanceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards attendance not found response has a 4xx status code
func (o *GetGamificationScorecardsAttendanceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification scorecards attendance not found response has a 5xx status code
func (o *GetGamificationScorecardsAttendanceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification scorecards attendance not found response a status code equal to that given
func (o *GetGamificationScorecardsAttendanceNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetGamificationScorecardsAttendanceNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/attendance][%d] getGamificationScorecardsAttendanceNotFound  %+v", 404, o.Payload)
}

func (o *GetGamificationScorecardsAttendanceNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/attendance][%d] getGamificationScorecardsAttendanceNotFound  %+v", 404, o.Payload)
}

func (o *GetGamificationScorecardsAttendanceNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsAttendanceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsAttendanceRequestTimeout creates a GetGamificationScorecardsAttendanceRequestTimeout with default headers values
func NewGetGamificationScorecardsAttendanceRequestTimeout() *GetGamificationScorecardsAttendanceRequestTimeout {
	return &GetGamificationScorecardsAttendanceRequestTimeout{}
}

/*
GetGamificationScorecardsAttendanceRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetGamificationScorecardsAttendanceRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards attendance request timeout response has a 2xx status code
func (o *GetGamificationScorecardsAttendanceRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards attendance request timeout response has a 3xx status code
func (o *GetGamificationScorecardsAttendanceRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards attendance request timeout response has a 4xx status code
func (o *GetGamificationScorecardsAttendanceRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification scorecards attendance request timeout response has a 5xx status code
func (o *GetGamificationScorecardsAttendanceRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification scorecards attendance request timeout response a status code equal to that given
func (o *GetGamificationScorecardsAttendanceRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetGamificationScorecardsAttendanceRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/attendance][%d] getGamificationScorecardsAttendanceRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetGamificationScorecardsAttendanceRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/attendance][%d] getGamificationScorecardsAttendanceRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetGamificationScorecardsAttendanceRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsAttendanceRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsAttendanceRequestEntityTooLarge creates a GetGamificationScorecardsAttendanceRequestEntityTooLarge with default headers values
func NewGetGamificationScorecardsAttendanceRequestEntityTooLarge() *GetGamificationScorecardsAttendanceRequestEntityTooLarge {
	return &GetGamificationScorecardsAttendanceRequestEntityTooLarge{}
}

/*
GetGamificationScorecardsAttendanceRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetGamificationScorecardsAttendanceRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards attendance request entity too large response has a 2xx status code
func (o *GetGamificationScorecardsAttendanceRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards attendance request entity too large response has a 3xx status code
func (o *GetGamificationScorecardsAttendanceRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards attendance request entity too large response has a 4xx status code
func (o *GetGamificationScorecardsAttendanceRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification scorecards attendance request entity too large response has a 5xx status code
func (o *GetGamificationScorecardsAttendanceRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification scorecards attendance request entity too large response a status code equal to that given
func (o *GetGamificationScorecardsAttendanceRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetGamificationScorecardsAttendanceRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/attendance][%d] getGamificationScorecardsAttendanceRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetGamificationScorecardsAttendanceRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/attendance][%d] getGamificationScorecardsAttendanceRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetGamificationScorecardsAttendanceRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsAttendanceRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsAttendanceUnsupportedMediaType creates a GetGamificationScorecardsAttendanceUnsupportedMediaType with default headers values
func NewGetGamificationScorecardsAttendanceUnsupportedMediaType() *GetGamificationScorecardsAttendanceUnsupportedMediaType {
	return &GetGamificationScorecardsAttendanceUnsupportedMediaType{}
}

/*
GetGamificationScorecardsAttendanceUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetGamificationScorecardsAttendanceUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards attendance unsupported media type response has a 2xx status code
func (o *GetGamificationScorecardsAttendanceUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards attendance unsupported media type response has a 3xx status code
func (o *GetGamificationScorecardsAttendanceUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards attendance unsupported media type response has a 4xx status code
func (o *GetGamificationScorecardsAttendanceUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification scorecards attendance unsupported media type response has a 5xx status code
func (o *GetGamificationScorecardsAttendanceUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification scorecards attendance unsupported media type response a status code equal to that given
func (o *GetGamificationScorecardsAttendanceUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetGamificationScorecardsAttendanceUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/attendance][%d] getGamificationScorecardsAttendanceUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetGamificationScorecardsAttendanceUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/attendance][%d] getGamificationScorecardsAttendanceUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetGamificationScorecardsAttendanceUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsAttendanceUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsAttendanceTooManyRequests creates a GetGamificationScorecardsAttendanceTooManyRequests with default headers values
func NewGetGamificationScorecardsAttendanceTooManyRequests() *GetGamificationScorecardsAttendanceTooManyRequests {
	return &GetGamificationScorecardsAttendanceTooManyRequests{}
}

/*
GetGamificationScorecardsAttendanceTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetGamificationScorecardsAttendanceTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards attendance too many requests response has a 2xx status code
func (o *GetGamificationScorecardsAttendanceTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards attendance too many requests response has a 3xx status code
func (o *GetGamificationScorecardsAttendanceTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards attendance too many requests response has a 4xx status code
func (o *GetGamificationScorecardsAttendanceTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification scorecards attendance too many requests response has a 5xx status code
func (o *GetGamificationScorecardsAttendanceTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification scorecards attendance too many requests response a status code equal to that given
func (o *GetGamificationScorecardsAttendanceTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetGamificationScorecardsAttendanceTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/attendance][%d] getGamificationScorecardsAttendanceTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetGamificationScorecardsAttendanceTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/attendance][%d] getGamificationScorecardsAttendanceTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetGamificationScorecardsAttendanceTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsAttendanceTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsAttendanceInternalServerError creates a GetGamificationScorecardsAttendanceInternalServerError with default headers values
func NewGetGamificationScorecardsAttendanceInternalServerError() *GetGamificationScorecardsAttendanceInternalServerError {
	return &GetGamificationScorecardsAttendanceInternalServerError{}
}

/*
GetGamificationScorecardsAttendanceInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetGamificationScorecardsAttendanceInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards attendance internal server error response has a 2xx status code
func (o *GetGamificationScorecardsAttendanceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards attendance internal server error response has a 3xx status code
func (o *GetGamificationScorecardsAttendanceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards attendance internal server error response has a 4xx status code
func (o *GetGamificationScorecardsAttendanceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get gamification scorecards attendance internal server error response has a 5xx status code
func (o *GetGamificationScorecardsAttendanceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get gamification scorecards attendance internal server error response a status code equal to that given
func (o *GetGamificationScorecardsAttendanceInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetGamificationScorecardsAttendanceInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/attendance][%d] getGamificationScorecardsAttendanceInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGamificationScorecardsAttendanceInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/attendance][%d] getGamificationScorecardsAttendanceInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGamificationScorecardsAttendanceInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsAttendanceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsAttendanceServiceUnavailable creates a GetGamificationScorecardsAttendanceServiceUnavailable with default headers values
func NewGetGamificationScorecardsAttendanceServiceUnavailable() *GetGamificationScorecardsAttendanceServiceUnavailable {
	return &GetGamificationScorecardsAttendanceServiceUnavailable{}
}

/*
GetGamificationScorecardsAttendanceServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetGamificationScorecardsAttendanceServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards attendance service unavailable response has a 2xx status code
func (o *GetGamificationScorecardsAttendanceServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards attendance service unavailable response has a 3xx status code
func (o *GetGamificationScorecardsAttendanceServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards attendance service unavailable response has a 4xx status code
func (o *GetGamificationScorecardsAttendanceServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get gamification scorecards attendance service unavailable response has a 5xx status code
func (o *GetGamificationScorecardsAttendanceServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get gamification scorecards attendance service unavailable response a status code equal to that given
func (o *GetGamificationScorecardsAttendanceServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetGamificationScorecardsAttendanceServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/attendance][%d] getGamificationScorecardsAttendanceServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetGamificationScorecardsAttendanceServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/attendance][%d] getGamificationScorecardsAttendanceServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetGamificationScorecardsAttendanceServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsAttendanceServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsAttendanceGatewayTimeout creates a GetGamificationScorecardsAttendanceGatewayTimeout with default headers values
func NewGetGamificationScorecardsAttendanceGatewayTimeout() *GetGamificationScorecardsAttendanceGatewayTimeout {
	return &GetGamificationScorecardsAttendanceGatewayTimeout{}
}

/*
GetGamificationScorecardsAttendanceGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetGamificationScorecardsAttendanceGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards attendance gateway timeout response has a 2xx status code
func (o *GetGamificationScorecardsAttendanceGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards attendance gateway timeout response has a 3xx status code
func (o *GetGamificationScorecardsAttendanceGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards attendance gateway timeout response has a 4xx status code
func (o *GetGamificationScorecardsAttendanceGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get gamification scorecards attendance gateway timeout response has a 5xx status code
func (o *GetGamificationScorecardsAttendanceGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get gamification scorecards attendance gateway timeout response a status code equal to that given
func (o *GetGamificationScorecardsAttendanceGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetGamificationScorecardsAttendanceGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/attendance][%d] getGamificationScorecardsAttendanceGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetGamificationScorecardsAttendanceGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/attendance][%d] getGamificationScorecardsAttendanceGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetGamificationScorecardsAttendanceGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsAttendanceGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
