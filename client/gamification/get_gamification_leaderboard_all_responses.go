// Code generated by go-swagger; DO NOT EDIT.

package gamification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetGamificationLeaderboardAllReader is a Reader for the GetGamificationLeaderboardAll structure.
type GetGamificationLeaderboardAllReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGamificationLeaderboardAllReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGamificationLeaderboardAllOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetGamificationLeaderboardAllBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetGamificationLeaderboardAllUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGamificationLeaderboardAllForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGamificationLeaderboardAllNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetGamificationLeaderboardAllRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetGamificationLeaderboardAllRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetGamificationLeaderboardAllUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetGamificationLeaderboardAllTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGamificationLeaderboardAllInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetGamificationLeaderboardAllServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetGamificationLeaderboardAllGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGamificationLeaderboardAllOK creates a GetGamificationLeaderboardAllOK with default headers values
func NewGetGamificationLeaderboardAllOK() *GetGamificationLeaderboardAllOK {
	return &GetGamificationLeaderboardAllOK{}
}

/*GetGamificationLeaderboardAllOK handles this case with default header values.

successful operation
*/
type GetGamificationLeaderboardAllOK struct {
	Payload *models.Leaderboard
}

func (o *GetGamificationLeaderboardAllOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/leaderboard/all][%d] getGamificationLeaderboardAllOK  %+v", 200, o.Payload)
}

func (o *GetGamificationLeaderboardAllOK) GetPayload() *models.Leaderboard {
	return o.Payload
}

func (o *GetGamificationLeaderboardAllOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Leaderboard)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationLeaderboardAllBadRequest creates a GetGamificationLeaderboardAllBadRequest with default headers values
func NewGetGamificationLeaderboardAllBadRequest() *GetGamificationLeaderboardAllBadRequest {
	return &GetGamificationLeaderboardAllBadRequest{}
}

/*GetGamificationLeaderboardAllBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetGamificationLeaderboardAllBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationLeaderboardAllBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/leaderboard/all][%d] getGamificationLeaderboardAllBadRequest  %+v", 400, o.Payload)
}

func (o *GetGamificationLeaderboardAllBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationLeaderboardAllBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationLeaderboardAllUnauthorized creates a GetGamificationLeaderboardAllUnauthorized with default headers values
func NewGetGamificationLeaderboardAllUnauthorized() *GetGamificationLeaderboardAllUnauthorized {
	return &GetGamificationLeaderboardAllUnauthorized{}
}

/*GetGamificationLeaderboardAllUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetGamificationLeaderboardAllUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationLeaderboardAllUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/leaderboard/all][%d] getGamificationLeaderboardAllUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGamificationLeaderboardAllUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationLeaderboardAllUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationLeaderboardAllForbidden creates a GetGamificationLeaderboardAllForbidden with default headers values
func NewGetGamificationLeaderboardAllForbidden() *GetGamificationLeaderboardAllForbidden {
	return &GetGamificationLeaderboardAllForbidden{}
}

/*GetGamificationLeaderboardAllForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetGamificationLeaderboardAllForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationLeaderboardAllForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/leaderboard/all][%d] getGamificationLeaderboardAllForbidden  %+v", 403, o.Payload)
}

func (o *GetGamificationLeaderboardAllForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationLeaderboardAllForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationLeaderboardAllNotFound creates a GetGamificationLeaderboardAllNotFound with default headers values
func NewGetGamificationLeaderboardAllNotFound() *GetGamificationLeaderboardAllNotFound {
	return &GetGamificationLeaderboardAllNotFound{}
}

/*GetGamificationLeaderboardAllNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetGamificationLeaderboardAllNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationLeaderboardAllNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/leaderboard/all][%d] getGamificationLeaderboardAllNotFound  %+v", 404, o.Payload)
}

func (o *GetGamificationLeaderboardAllNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationLeaderboardAllNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationLeaderboardAllRequestTimeout creates a GetGamificationLeaderboardAllRequestTimeout with default headers values
func NewGetGamificationLeaderboardAllRequestTimeout() *GetGamificationLeaderboardAllRequestTimeout {
	return &GetGamificationLeaderboardAllRequestTimeout{}
}

/*GetGamificationLeaderboardAllRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetGamificationLeaderboardAllRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationLeaderboardAllRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/leaderboard/all][%d] getGamificationLeaderboardAllRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetGamificationLeaderboardAllRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationLeaderboardAllRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationLeaderboardAllRequestEntityTooLarge creates a GetGamificationLeaderboardAllRequestEntityTooLarge with default headers values
func NewGetGamificationLeaderboardAllRequestEntityTooLarge() *GetGamificationLeaderboardAllRequestEntityTooLarge {
	return &GetGamificationLeaderboardAllRequestEntityTooLarge{}
}

/*GetGamificationLeaderboardAllRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetGamificationLeaderboardAllRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationLeaderboardAllRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/leaderboard/all][%d] getGamificationLeaderboardAllRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetGamificationLeaderboardAllRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationLeaderboardAllRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationLeaderboardAllUnsupportedMediaType creates a GetGamificationLeaderboardAllUnsupportedMediaType with default headers values
func NewGetGamificationLeaderboardAllUnsupportedMediaType() *GetGamificationLeaderboardAllUnsupportedMediaType {
	return &GetGamificationLeaderboardAllUnsupportedMediaType{}
}

/*GetGamificationLeaderboardAllUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetGamificationLeaderboardAllUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationLeaderboardAllUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/leaderboard/all][%d] getGamificationLeaderboardAllUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetGamificationLeaderboardAllUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationLeaderboardAllUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationLeaderboardAllTooManyRequests creates a GetGamificationLeaderboardAllTooManyRequests with default headers values
func NewGetGamificationLeaderboardAllTooManyRequests() *GetGamificationLeaderboardAllTooManyRequests {
	return &GetGamificationLeaderboardAllTooManyRequests{}
}

/*GetGamificationLeaderboardAllTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetGamificationLeaderboardAllTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationLeaderboardAllTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/leaderboard/all][%d] getGamificationLeaderboardAllTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetGamificationLeaderboardAllTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationLeaderboardAllTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationLeaderboardAllInternalServerError creates a GetGamificationLeaderboardAllInternalServerError with default headers values
func NewGetGamificationLeaderboardAllInternalServerError() *GetGamificationLeaderboardAllInternalServerError {
	return &GetGamificationLeaderboardAllInternalServerError{}
}

/*GetGamificationLeaderboardAllInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetGamificationLeaderboardAllInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationLeaderboardAllInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/leaderboard/all][%d] getGamificationLeaderboardAllInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGamificationLeaderboardAllInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationLeaderboardAllInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationLeaderboardAllServiceUnavailable creates a GetGamificationLeaderboardAllServiceUnavailable with default headers values
func NewGetGamificationLeaderboardAllServiceUnavailable() *GetGamificationLeaderboardAllServiceUnavailable {
	return &GetGamificationLeaderboardAllServiceUnavailable{}
}

/*GetGamificationLeaderboardAllServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetGamificationLeaderboardAllServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationLeaderboardAllServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/leaderboard/all][%d] getGamificationLeaderboardAllServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetGamificationLeaderboardAllServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationLeaderboardAllServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationLeaderboardAllGatewayTimeout creates a GetGamificationLeaderboardAllGatewayTimeout with default headers values
func NewGetGamificationLeaderboardAllGatewayTimeout() *GetGamificationLeaderboardAllGatewayTimeout {
	return &GetGamificationLeaderboardAllGatewayTimeout{}
}

/*GetGamificationLeaderboardAllGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetGamificationLeaderboardAllGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationLeaderboardAllGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/leaderboard/all][%d] getGamificationLeaderboardAllGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetGamificationLeaderboardAllGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationLeaderboardAllGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
