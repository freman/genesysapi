// Code generated by go-swagger; DO NOT EDIT.

package gamification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetGamificationProfilesUserReader is a Reader for the GetGamificationProfilesUser structure.
type GetGamificationProfilesUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGamificationProfilesUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGamificationProfilesUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetGamificationProfilesUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetGamificationProfilesUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGamificationProfilesUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGamificationProfilesUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetGamificationProfilesUserRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetGamificationProfilesUserRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetGamificationProfilesUserUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetGamificationProfilesUserTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGamificationProfilesUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetGamificationProfilesUserServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetGamificationProfilesUserGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGamificationProfilesUserOK creates a GetGamificationProfilesUserOK with default headers values
func NewGetGamificationProfilesUserOK() *GetGamificationProfilesUserOK {
	return &GetGamificationProfilesUserOK{}
}

/*
GetGamificationProfilesUserOK describes a response with status code 200, with default header values.

successful operation
*/
type GetGamificationProfilesUserOK struct {
	Payload *models.PerformanceProfile
}

// IsSuccess returns true when this get gamification profiles user o k response has a 2xx status code
func (o *GetGamificationProfilesUserOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get gamification profiles user o k response has a 3xx status code
func (o *GetGamificationProfilesUserOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification profiles user o k response has a 4xx status code
func (o *GetGamificationProfilesUserOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get gamification profiles user o k response has a 5xx status code
func (o *GetGamificationProfilesUserOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification profiles user o k response a status code equal to that given
func (o *GetGamificationProfilesUserOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetGamificationProfilesUserOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/users/{userId}][%d] getGamificationProfilesUserOK  %+v", 200, o.Payload)
}

func (o *GetGamificationProfilesUserOK) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/users/{userId}][%d] getGamificationProfilesUserOK  %+v", 200, o.Payload)
}

func (o *GetGamificationProfilesUserOK) GetPayload() *models.PerformanceProfile {
	return o.Payload
}

func (o *GetGamificationProfilesUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PerformanceProfile)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationProfilesUserBadRequest creates a GetGamificationProfilesUserBadRequest with default headers values
func NewGetGamificationProfilesUserBadRequest() *GetGamificationProfilesUserBadRequest {
	return &GetGamificationProfilesUserBadRequest{}
}

/*
GetGamificationProfilesUserBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetGamificationProfilesUserBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification profiles user bad request response has a 2xx status code
func (o *GetGamificationProfilesUserBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification profiles user bad request response has a 3xx status code
func (o *GetGamificationProfilesUserBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification profiles user bad request response has a 4xx status code
func (o *GetGamificationProfilesUserBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification profiles user bad request response has a 5xx status code
func (o *GetGamificationProfilesUserBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification profiles user bad request response a status code equal to that given
func (o *GetGamificationProfilesUserBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetGamificationProfilesUserBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/users/{userId}][%d] getGamificationProfilesUserBadRequest  %+v", 400, o.Payload)
}

func (o *GetGamificationProfilesUserBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/users/{userId}][%d] getGamificationProfilesUserBadRequest  %+v", 400, o.Payload)
}

func (o *GetGamificationProfilesUserBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationProfilesUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationProfilesUserUnauthorized creates a GetGamificationProfilesUserUnauthorized with default headers values
func NewGetGamificationProfilesUserUnauthorized() *GetGamificationProfilesUserUnauthorized {
	return &GetGamificationProfilesUserUnauthorized{}
}

/*
GetGamificationProfilesUserUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetGamificationProfilesUserUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification profiles user unauthorized response has a 2xx status code
func (o *GetGamificationProfilesUserUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification profiles user unauthorized response has a 3xx status code
func (o *GetGamificationProfilesUserUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification profiles user unauthorized response has a 4xx status code
func (o *GetGamificationProfilesUserUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification profiles user unauthorized response has a 5xx status code
func (o *GetGamificationProfilesUserUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification profiles user unauthorized response a status code equal to that given
func (o *GetGamificationProfilesUserUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetGamificationProfilesUserUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/users/{userId}][%d] getGamificationProfilesUserUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGamificationProfilesUserUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/users/{userId}][%d] getGamificationProfilesUserUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGamificationProfilesUserUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationProfilesUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationProfilesUserForbidden creates a GetGamificationProfilesUserForbidden with default headers values
func NewGetGamificationProfilesUserForbidden() *GetGamificationProfilesUserForbidden {
	return &GetGamificationProfilesUserForbidden{}
}

/*
GetGamificationProfilesUserForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetGamificationProfilesUserForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification profiles user forbidden response has a 2xx status code
func (o *GetGamificationProfilesUserForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification profiles user forbidden response has a 3xx status code
func (o *GetGamificationProfilesUserForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification profiles user forbidden response has a 4xx status code
func (o *GetGamificationProfilesUserForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification profiles user forbidden response has a 5xx status code
func (o *GetGamificationProfilesUserForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification profiles user forbidden response a status code equal to that given
func (o *GetGamificationProfilesUserForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetGamificationProfilesUserForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/users/{userId}][%d] getGamificationProfilesUserForbidden  %+v", 403, o.Payload)
}

func (o *GetGamificationProfilesUserForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/users/{userId}][%d] getGamificationProfilesUserForbidden  %+v", 403, o.Payload)
}

func (o *GetGamificationProfilesUserForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationProfilesUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationProfilesUserNotFound creates a GetGamificationProfilesUserNotFound with default headers values
func NewGetGamificationProfilesUserNotFound() *GetGamificationProfilesUserNotFound {
	return &GetGamificationProfilesUserNotFound{}
}

/*
GetGamificationProfilesUserNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetGamificationProfilesUserNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification profiles user not found response has a 2xx status code
func (o *GetGamificationProfilesUserNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification profiles user not found response has a 3xx status code
func (o *GetGamificationProfilesUserNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification profiles user not found response has a 4xx status code
func (o *GetGamificationProfilesUserNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification profiles user not found response has a 5xx status code
func (o *GetGamificationProfilesUserNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification profiles user not found response a status code equal to that given
func (o *GetGamificationProfilesUserNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetGamificationProfilesUserNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/users/{userId}][%d] getGamificationProfilesUserNotFound  %+v", 404, o.Payload)
}

func (o *GetGamificationProfilesUserNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/users/{userId}][%d] getGamificationProfilesUserNotFound  %+v", 404, o.Payload)
}

func (o *GetGamificationProfilesUserNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationProfilesUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationProfilesUserRequestTimeout creates a GetGamificationProfilesUserRequestTimeout with default headers values
func NewGetGamificationProfilesUserRequestTimeout() *GetGamificationProfilesUserRequestTimeout {
	return &GetGamificationProfilesUserRequestTimeout{}
}

/*
GetGamificationProfilesUserRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetGamificationProfilesUserRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification profiles user request timeout response has a 2xx status code
func (o *GetGamificationProfilesUserRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification profiles user request timeout response has a 3xx status code
func (o *GetGamificationProfilesUserRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification profiles user request timeout response has a 4xx status code
func (o *GetGamificationProfilesUserRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification profiles user request timeout response has a 5xx status code
func (o *GetGamificationProfilesUserRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification profiles user request timeout response a status code equal to that given
func (o *GetGamificationProfilesUserRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetGamificationProfilesUserRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/users/{userId}][%d] getGamificationProfilesUserRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetGamificationProfilesUserRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/users/{userId}][%d] getGamificationProfilesUserRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetGamificationProfilesUserRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationProfilesUserRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationProfilesUserRequestEntityTooLarge creates a GetGamificationProfilesUserRequestEntityTooLarge with default headers values
func NewGetGamificationProfilesUserRequestEntityTooLarge() *GetGamificationProfilesUserRequestEntityTooLarge {
	return &GetGamificationProfilesUserRequestEntityTooLarge{}
}

/*
GetGamificationProfilesUserRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetGamificationProfilesUserRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification profiles user request entity too large response has a 2xx status code
func (o *GetGamificationProfilesUserRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification profiles user request entity too large response has a 3xx status code
func (o *GetGamificationProfilesUserRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification profiles user request entity too large response has a 4xx status code
func (o *GetGamificationProfilesUserRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification profiles user request entity too large response has a 5xx status code
func (o *GetGamificationProfilesUserRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification profiles user request entity too large response a status code equal to that given
func (o *GetGamificationProfilesUserRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetGamificationProfilesUserRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/users/{userId}][%d] getGamificationProfilesUserRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetGamificationProfilesUserRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/users/{userId}][%d] getGamificationProfilesUserRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetGamificationProfilesUserRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationProfilesUserRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationProfilesUserUnsupportedMediaType creates a GetGamificationProfilesUserUnsupportedMediaType with default headers values
func NewGetGamificationProfilesUserUnsupportedMediaType() *GetGamificationProfilesUserUnsupportedMediaType {
	return &GetGamificationProfilesUserUnsupportedMediaType{}
}

/*
GetGamificationProfilesUserUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetGamificationProfilesUserUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification profiles user unsupported media type response has a 2xx status code
func (o *GetGamificationProfilesUserUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification profiles user unsupported media type response has a 3xx status code
func (o *GetGamificationProfilesUserUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification profiles user unsupported media type response has a 4xx status code
func (o *GetGamificationProfilesUserUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification profiles user unsupported media type response has a 5xx status code
func (o *GetGamificationProfilesUserUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification profiles user unsupported media type response a status code equal to that given
func (o *GetGamificationProfilesUserUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetGamificationProfilesUserUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/users/{userId}][%d] getGamificationProfilesUserUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetGamificationProfilesUserUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/users/{userId}][%d] getGamificationProfilesUserUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetGamificationProfilesUserUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationProfilesUserUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationProfilesUserTooManyRequests creates a GetGamificationProfilesUserTooManyRequests with default headers values
func NewGetGamificationProfilesUserTooManyRequests() *GetGamificationProfilesUserTooManyRequests {
	return &GetGamificationProfilesUserTooManyRequests{}
}

/*
GetGamificationProfilesUserTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetGamificationProfilesUserTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification profiles user too many requests response has a 2xx status code
func (o *GetGamificationProfilesUserTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification profiles user too many requests response has a 3xx status code
func (o *GetGamificationProfilesUserTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification profiles user too many requests response has a 4xx status code
func (o *GetGamificationProfilesUserTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification profiles user too many requests response has a 5xx status code
func (o *GetGamificationProfilesUserTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification profiles user too many requests response a status code equal to that given
func (o *GetGamificationProfilesUserTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetGamificationProfilesUserTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/users/{userId}][%d] getGamificationProfilesUserTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetGamificationProfilesUserTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/users/{userId}][%d] getGamificationProfilesUserTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetGamificationProfilesUserTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationProfilesUserTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationProfilesUserInternalServerError creates a GetGamificationProfilesUserInternalServerError with default headers values
func NewGetGamificationProfilesUserInternalServerError() *GetGamificationProfilesUserInternalServerError {
	return &GetGamificationProfilesUserInternalServerError{}
}

/*
GetGamificationProfilesUserInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetGamificationProfilesUserInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification profiles user internal server error response has a 2xx status code
func (o *GetGamificationProfilesUserInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification profiles user internal server error response has a 3xx status code
func (o *GetGamificationProfilesUserInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification profiles user internal server error response has a 4xx status code
func (o *GetGamificationProfilesUserInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get gamification profiles user internal server error response has a 5xx status code
func (o *GetGamificationProfilesUserInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get gamification profiles user internal server error response a status code equal to that given
func (o *GetGamificationProfilesUserInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetGamificationProfilesUserInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/users/{userId}][%d] getGamificationProfilesUserInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGamificationProfilesUserInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/users/{userId}][%d] getGamificationProfilesUserInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGamificationProfilesUserInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationProfilesUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationProfilesUserServiceUnavailable creates a GetGamificationProfilesUserServiceUnavailable with default headers values
func NewGetGamificationProfilesUserServiceUnavailable() *GetGamificationProfilesUserServiceUnavailable {
	return &GetGamificationProfilesUserServiceUnavailable{}
}

/*
GetGamificationProfilesUserServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetGamificationProfilesUserServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification profiles user service unavailable response has a 2xx status code
func (o *GetGamificationProfilesUserServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification profiles user service unavailable response has a 3xx status code
func (o *GetGamificationProfilesUserServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification profiles user service unavailable response has a 4xx status code
func (o *GetGamificationProfilesUserServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get gamification profiles user service unavailable response has a 5xx status code
func (o *GetGamificationProfilesUserServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get gamification profiles user service unavailable response a status code equal to that given
func (o *GetGamificationProfilesUserServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetGamificationProfilesUserServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/users/{userId}][%d] getGamificationProfilesUserServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetGamificationProfilesUserServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/users/{userId}][%d] getGamificationProfilesUserServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetGamificationProfilesUserServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationProfilesUserServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationProfilesUserGatewayTimeout creates a GetGamificationProfilesUserGatewayTimeout with default headers values
func NewGetGamificationProfilesUserGatewayTimeout() *GetGamificationProfilesUserGatewayTimeout {
	return &GetGamificationProfilesUserGatewayTimeout{}
}

/*
GetGamificationProfilesUserGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetGamificationProfilesUserGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification profiles user gateway timeout response has a 2xx status code
func (o *GetGamificationProfilesUserGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification profiles user gateway timeout response has a 3xx status code
func (o *GetGamificationProfilesUserGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification profiles user gateway timeout response has a 4xx status code
func (o *GetGamificationProfilesUserGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get gamification profiles user gateway timeout response has a 5xx status code
func (o *GetGamificationProfilesUserGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get gamification profiles user gateway timeout response a status code equal to that given
func (o *GetGamificationProfilesUserGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetGamificationProfilesUserGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/users/{userId}][%d] getGamificationProfilesUserGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetGamificationProfilesUserGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/users/{userId}][%d] getGamificationProfilesUserGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetGamificationProfilesUserGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationProfilesUserGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
