// Code generated by go-swagger; DO NOT EDIT.

package gamification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetGamificationScorecardsValuesAverageReader is a Reader for the GetGamificationScorecardsValuesAverage structure.
type GetGamificationScorecardsValuesAverageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGamificationScorecardsValuesAverageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGamificationScorecardsValuesAverageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetGamificationScorecardsValuesAverageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetGamificationScorecardsValuesAverageUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGamificationScorecardsValuesAverageForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGamificationScorecardsValuesAverageNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetGamificationScorecardsValuesAverageRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetGamificationScorecardsValuesAverageRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetGamificationScorecardsValuesAverageUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetGamificationScorecardsValuesAverageTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGamificationScorecardsValuesAverageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetGamificationScorecardsValuesAverageServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetGamificationScorecardsValuesAverageGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGamificationScorecardsValuesAverageOK creates a GetGamificationScorecardsValuesAverageOK with default headers values
func NewGetGamificationScorecardsValuesAverageOK() *GetGamificationScorecardsValuesAverageOK {
	return &GetGamificationScorecardsValuesAverageOK{}
}

/*
GetGamificationScorecardsValuesAverageOK describes a response with status code 200, with default header values.

successful operation
*/
type GetGamificationScorecardsValuesAverageOK struct {
	Payload *models.SingleWorkdayAverageValues
}

// IsSuccess returns true when this get gamification scorecards values average o k response has a 2xx status code
func (o *GetGamificationScorecardsValuesAverageOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get gamification scorecards values average o k response has a 3xx status code
func (o *GetGamificationScorecardsValuesAverageOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards values average o k response has a 4xx status code
func (o *GetGamificationScorecardsValuesAverageOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get gamification scorecards values average o k response has a 5xx status code
func (o *GetGamificationScorecardsValuesAverageOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification scorecards values average o k response a status code equal to that given
func (o *GetGamificationScorecardsValuesAverageOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetGamificationScorecardsValuesAverageOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/values/average][%d] getGamificationScorecardsValuesAverageOK  %+v", 200, o.Payload)
}

func (o *GetGamificationScorecardsValuesAverageOK) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/values/average][%d] getGamificationScorecardsValuesAverageOK  %+v", 200, o.Payload)
}

func (o *GetGamificationScorecardsValuesAverageOK) GetPayload() *models.SingleWorkdayAverageValues {
	return o.Payload
}

func (o *GetGamificationScorecardsValuesAverageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SingleWorkdayAverageValues)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsValuesAverageBadRequest creates a GetGamificationScorecardsValuesAverageBadRequest with default headers values
func NewGetGamificationScorecardsValuesAverageBadRequest() *GetGamificationScorecardsValuesAverageBadRequest {
	return &GetGamificationScorecardsValuesAverageBadRequest{}
}

/*
GetGamificationScorecardsValuesAverageBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetGamificationScorecardsValuesAverageBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards values average bad request response has a 2xx status code
func (o *GetGamificationScorecardsValuesAverageBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards values average bad request response has a 3xx status code
func (o *GetGamificationScorecardsValuesAverageBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards values average bad request response has a 4xx status code
func (o *GetGamificationScorecardsValuesAverageBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification scorecards values average bad request response has a 5xx status code
func (o *GetGamificationScorecardsValuesAverageBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification scorecards values average bad request response a status code equal to that given
func (o *GetGamificationScorecardsValuesAverageBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetGamificationScorecardsValuesAverageBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/values/average][%d] getGamificationScorecardsValuesAverageBadRequest  %+v", 400, o.Payload)
}

func (o *GetGamificationScorecardsValuesAverageBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/values/average][%d] getGamificationScorecardsValuesAverageBadRequest  %+v", 400, o.Payload)
}

func (o *GetGamificationScorecardsValuesAverageBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsValuesAverageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsValuesAverageUnauthorized creates a GetGamificationScorecardsValuesAverageUnauthorized with default headers values
func NewGetGamificationScorecardsValuesAverageUnauthorized() *GetGamificationScorecardsValuesAverageUnauthorized {
	return &GetGamificationScorecardsValuesAverageUnauthorized{}
}

/*
GetGamificationScorecardsValuesAverageUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetGamificationScorecardsValuesAverageUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards values average unauthorized response has a 2xx status code
func (o *GetGamificationScorecardsValuesAverageUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards values average unauthorized response has a 3xx status code
func (o *GetGamificationScorecardsValuesAverageUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards values average unauthorized response has a 4xx status code
func (o *GetGamificationScorecardsValuesAverageUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification scorecards values average unauthorized response has a 5xx status code
func (o *GetGamificationScorecardsValuesAverageUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification scorecards values average unauthorized response a status code equal to that given
func (o *GetGamificationScorecardsValuesAverageUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetGamificationScorecardsValuesAverageUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/values/average][%d] getGamificationScorecardsValuesAverageUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGamificationScorecardsValuesAverageUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/values/average][%d] getGamificationScorecardsValuesAverageUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGamificationScorecardsValuesAverageUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsValuesAverageUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsValuesAverageForbidden creates a GetGamificationScorecardsValuesAverageForbidden with default headers values
func NewGetGamificationScorecardsValuesAverageForbidden() *GetGamificationScorecardsValuesAverageForbidden {
	return &GetGamificationScorecardsValuesAverageForbidden{}
}

/*
GetGamificationScorecardsValuesAverageForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetGamificationScorecardsValuesAverageForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards values average forbidden response has a 2xx status code
func (o *GetGamificationScorecardsValuesAverageForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards values average forbidden response has a 3xx status code
func (o *GetGamificationScorecardsValuesAverageForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards values average forbidden response has a 4xx status code
func (o *GetGamificationScorecardsValuesAverageForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification scorecards values average forbidden response has a 5xx status code
func (o *GetGamificationScorecardsValuesAverageForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification scorecards values average forbidden response a status code equal to that given
func (o *GetGamificationScorecardsValuesAverageForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetGamificationScorecardsValuesAverageForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/values/average][%d] getGamificationScorecardsValuesAverageForbidden  %+v", 403, o.Payload)
}

func (o *GetGamificationScorecardsValuesAverageForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/values/average][%d] getGamificationScorecardsValuesAverageForbidden  %+v", 403, o.Payload)
}

func (o *GetGamificationScorecardsValuesAverageForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsValuesAverageForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsValuesAverageNotFound creates a GetGamificationScorecardsValuesAverageNotFound with default headers values
func NewGetGamificationScorecardsValuesAverageNotFound() *GetGamificationScorecardsValuesAverageNotFound {
	return &GetGamificationScorecardsValuesAverageNotFound{}
}

/*
GetGamificationScorecardsValuesAverageNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetGamificationScorecardsValuesAverageNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards values average not found response has a 2xx status code
func (o *GetGamificationScorecardsValuesAverageNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards values average not found response has a 3xx status code
func (o *GetGamificationScorecardsValuesAverageNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards values average not found response has a 4xx status code
func (o *GetGamificationScorecardsValuesAverageNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification scorecards values average not found response has a 5xx status code
func (o *GetGamificationScorecardsValuesAverageNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification scorecards values average not found response a status code equal to that given
func (o *GetGamificationScorecardsValuesAverageNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetGamificationScorecardsValuesAverageNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/values/average][%d] getGamificationScorecardsValuesAverageNotFound  %+v", 404, o.Payload)
}

func (o *GetGamificationScorecardsValuesAverageNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/values/average][%d] getGamificationScorecardsValuesAverageNotFound  %+v", 404, o.Payload)
}

func (o *GetGamificationScorecardsValuesAverageNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsValuesAverageNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsValuesAverageRequestTimeout creates a GetGamificationScorecardsValuesAverageRequestTimeout with default headers values
func NewGetGamificationScorecardsValuesAverageRequestTimeout() *GetGamificationScorecardsValuesAverageRequestTimeout {
	return &GetGamificationScorecardsValuesAverageRequestTimeout{}
}

/*
GetGamificationScorecardsValuesAverageRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetGamificationScorecardsValuesAverageRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards values average request timeout response has a 2xx status code
func (o *GetGamificationScorecardsValuesAverageRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards values average request timeout response has a 3xx status code
func (o *GetGamificationScorecardsValuesAverageRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards values average request timeout response has a 4xx status code
func (o *GetGamificationScorecardsValuesAverageRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification scorecards values average request timeout response has a 5xx status code
func (o *GetGamificationScorecardsValuesAverageRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification scorecards values average request timeout response a status code equal to that given
func (o *GetGamificationScorecardsValuesAverageRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetGamificationScorecardsValuesAverageRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/values/average][%d] getGamificationScorecardsValuesAverageRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetGamificationScorecardsValuesAverageRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/values/average][%d] getGamificationScorecardsValuesAverageRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetGamificationScorecardsValuesAverageRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsValuesAverageRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsValuesAverageRequestEntityTooLarge creates a GetGamificationScorecardsValuesAverageRequestEntityTooLarge with default headers values
func NewGetGamificationScorecardsValuesAverageRequestEntityTooLarge() *GetGamificationScorecardsValuesAverageRequestEntityTooLarge {
	return &GetGamificationScorecardsValuesAverageRequestEntityTooLarge{}
}

/*
GetGamificationScorecardsValuesAverageRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetGamificationScorecardsValuesAverageRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards values average request entity too large response has a 2xx status code
func (o *GetGamificationScorecardsValuesAverageRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards values average request entity too large response has a 3xx status code
func (o *GetGamificationScorecardsValuesAverageRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards values average request entity too large response has a 4xx status code
func (o *GetGamificationScorecardsValuesAverageRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification scorecards values average request entity too large response has a 5xx status code
func (o *GetGamificationScorecardsValuesAverageRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification scorecards values average request entity too large response a status code equal to that given
func (o *GetGamificationScorecardsValuesAverageRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetGamificationScorecardsValuesAverageRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/values/average][%d] getGamificationScorecardsValuesAverageRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetGamificationScorecardsValuesAverageRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/values/average][%d] getGamificationScorecardsValuesAverageRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetGamificationScorecardsValuesAverageRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsValuesAverageRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsValuesAverageUnsupportedMediaType creates a GetGamificationScorecardsValuesAverageUnsupportedMediaType with default headers values
func NewGetGamificationScorecardsValuesAverageUnsupportedMediaType() *GetGamificationScorecardsValuesAverageUnsupportedMediaType {
	return &GetGamificationScorecardsValuesAverageUnsupportedMediaType{}
}

/*
GetGamificationScorecardsValuesAverageUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetGamificationScorecardsValuesAverageUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards values average unsupported media type response has a 2xx status code
func (o *GetGamificationScorecardsValuesAverageUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards values average unsupported media type response has a 3xx status code
func (o *GetGamificationScorecardsValuesAverageUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards values average unsupported media type response has a 4xx status code
func (o *GetGamificationScorecardsValuesAverageUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification scorecards values average unsupported media type response has a 5xx status code
func (o *GetGamificationScorecardsValuesAverageUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification scorecards values average unsupported media type response a status code equal to that given
func (o *GetGamificationScorecardsValuesAverageUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetGamificationScorecardsValuesAverageUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/values/average][%d] getGamificationScorecardsValuesAverageUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetGamificationScorecardsValuesAverageUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/values/average][%d] getGamificationScorecardsValuesAverageUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetGamificationScorecardsValuesAverageUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsValuesAverageUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsValuesAverageTooManyRequests creates a GetGamificationScorecardsValuesAverageTooManyRequests with default headers values
func NewGetGamificationScorecardsValuesAverageTooManyRequests() *GetGamificationScorecardsValuesAverageTooManyRequests {
	return &GetGamificationScorecardsValuesAverageTooManyRequests{}
}

/*
GetGamificationScorecardsValuesAverageTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetGamificationScorecardsValuesAverageTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards values average too many requests response has a 2xx status code
func (o *GetGamificationScorecardsValuesAverageTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards values average too many requests response has a 3xx status code
func (o *GetGamificationScorecardsValuesAverageTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards values average too many requests response has a 4xx status code
func (o *GetGamificationScorecardsValuesAverageTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification scorecards values average too many requests response has a 5xx status code
func (o *GetGamificationScorecardsValuesAverageTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification scorecards values average too many requests response a status code equal to that given
func (o *GetGamificationScorecardsValuesAverageTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetGamificationScorecardsValuesAverageTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/values/average][%d] getGamificationScorecardsValuesAverageTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetGamificationScorecardsValuesAverageTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/values/average][%d] getGamificationScorecardsValuesAverageTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetGamificationScorecardsValuesAverageTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsValuesAverageTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsValuesAverageInternalServerError creates a GetGamificationScorecardsValuesAverageInternalServerError with default headers values
func NewGetGamificationScorecardsValuesAverageInternalServerError() *GetGamificationScorecardsValuesAverageInternalServerError {
	return &GetGamificationScorecardsValuesAverageInternalServerError{}
}

/*
GetGamificationScorecardsValuesAverageInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetGamificationScorecardsValuesAverageInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards values average internal server error response has a 2xx status code
func (o *GetGamificationScorecardsValuesAverageInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards values average internal server error response has a 3xx status code
func (o *GetGamificationScorecardsValuesAverageInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards values average internal server error response has a 4xx status code
func (o *GetGamificationScorecardsValuesAverageInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get gamification scorecards values average internal server error response has a 5xx status code
func (o *GetGamificationScorecardsValuesAverageInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get gamification scorecards values average internal server error response a status code equal to that given
func (o *GetGamificationScorecardsValuesAverageInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetGamificationScorecardsValuesAverageInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/values/average][%d] getGamificationScorecardsValuesAverageInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGamificationScorecardsValuesAverageInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/values/average][%d] getGamificationScorecardsValuesAverageInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGamificationScorecardsValuesAverageInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsValuesAverageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsValuesAverageServiceUnavailable creates a GetGamificationScorecardsValuesAverageServiceUnavailable with default headers values
func NewGetGamificationScorecardsValuesAverageServiceUnavailable() *GetGamificationScorecardsValuesAverageServiceUnavailable {
	return &GetGamificationScorecardsValuesAverageServiceUnavailable{}
}

/*
GetGamificationScorecardsValuesAverageServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetGamificationScorecardsValuesAverageServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards values average service unavailable response has a 2xx status code
func (o *GetGamificationScorecardsValuesAverageServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards values average service unavailable response has a 3xx status code
func (o *GetGamificationScorecardsValuesAverageServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards values average service unavailable response has a 4xx status code
func (o *GetGamificationScorecardsValuesAverageServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get gamification scorecards values average service unavailable response has a 5xx status code
func (o *GetGamificationScorecardsValuesAverageServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get gamification scorecards values average service unavailable response a status code equal to that given
func (o *GetGamificationScorecardsValuesAverageServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetGamificationScorecardsValuesAverageServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/values/average][%d] getGamificationScorecardsValuesAverageServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetGamificationScorecardsValuesAverageServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/values/average][%d] getGamificationScorecardsValuesAverageServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetGamificationScorecardsValuesAverageServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsValuesAverageServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsValuesAverageGatewayTimeout creates a GetGamificationScorecardsValuesAverageGatewayTimeout with default headers values
func NewGetGamificationScorecardsValuesAverageGatewayTimeout() *GetGamificationScorecardsValuesAverageGatewayTimeout {
	return &GetGamificationScorecardsValuesAverageGatewayTimeout{}
}

/*
GetGamificationScorecardsValuesAverageGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetGamificationScorecardsValuesAverageGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards values average gateway timeout response has a 2xx status code
func (o *GetGamificationScorecardsValuesAverageGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards values average gateway timeout response has a 3xx status code
func (o *GetGamificationScorecardsValuesAverageGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards values average gateway timeout response has a 4xx status code
func (o *GetGamificationScorecardsValuesAverageGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get gamification scorecards values average gateway timeout response has a 5xx status code
func (o *GetGamificationScorecardsValuesAverageGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get gamification scorecards values average gateway timeout response a status code equal to that given
func (o *GetGamificationScorecardsValuesAverageGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetGamificationScorecardsValuesAverageGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/values/average][%d] getGamificationScorecardsValuesAverageGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetGamificationScorecardsValuesAverageGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/values/average][%d] getGamificationScorecardsValuesAverageGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetGamificationScorecardsValuesAverageGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsValuesAverageGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
