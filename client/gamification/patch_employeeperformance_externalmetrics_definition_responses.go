// Code generated by go-swagger; DO NOT EDIT.

package gamification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PatchEmployeeperformanceExternalmetricsDefinitionReader is a Reader for the PatchEmployeeperformanceExternalmetricsDefinition structure.
type PatchEmployeeperformanceExternalmetricsDefinitionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchEmployeeperformanceExternalmetricsDefinitionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchEmployeeperformanceExternalmetricsDefinitionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchEmployeeperformanceExternalmetricsDefinitionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchEmployeeperformanceExternalmetricsDefinitionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchEmployeeperformanceExternalmetricsDefinitionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchEmployeeperformanceExternalmetricsDefinitionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPatchEmployeeperformanceExternalmetricsDefinitionRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPatchEmployeeperformanceExternalmetricsDefinitionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPatchEmployeeperformanceExternalmetricsDefinitionRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchEmployeeperformanceExternalmetricsDefinitionUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPatchEmployeeperformanceExternalmetricsDefinitionTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchEmployeeperformanceExternalmetricsDefinitionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPatchEmployeeperformanceExternalmetricsDefinitionServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPatchEmployeeperformanceExternalmetricsDefinitionGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchEmployeeperformanceExternalmetricsDefinitionOK creates a PatchEmployeeperformanceExternalmetricsDefinitionOK with default headers values
func NewPatchEmployeeperformanceExternalmetricsDefinitionOK() *PatchEmployeeperformanceExternalmetricsDefinitionOK {
	return &PatchEmployeeperformanceExternalmetricsDefinitionOK{}
}

/*PatchEmployeeperformanceExternalmetricsDefinitionOK handles this case with default header values.

successful operation
*/
type PatchEmployeeperformanceExternalmetricsDefinitionOK struct {
	Payload *models.ExternalMetricDefinition
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/employeeperformance/externalmetrics/definitions/{metricId}][%d] patchEmployeeperformanceExternalmetricsDefinitionOK  %+v", 200, o.Payload)
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionOK) GetPayload() *models.ExternalMetricDefinition {
	return o.Payload
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExternalMetricDefinition)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchEmployeeperformanceExternalmetricsDefinitionBadRequest creates a PatchEmployeeperformanceExternalmetricsDefinitionBadRequest with default headers values
func NewPatchEmployeeperformanceExternalmetricsDefinitionBadRequest() *PatchEmployeeperformanceExternalmetricsDefinitionBadRequest {
	return &PatchEmployeeperformanceExternalmetricsDefinitionBadRequest{}
}

/*PatchEmployeeperformanceExternalmetricsDefinitionBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PatchEmployeeperformanceExternalmetricsDefinitionBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/employeeperformance/externalmetrics/definitions/{metricId}][%d] patchEmployeeperformanceExternalmetricsDefinitionBadRequest  %+v", 400, o.Payload)
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchEmployeeperformanceExternalmetricsDefinitionUnauthorized creates a PatchEmployeeperformanceExternalmetricsDefinitionUnauthorized with default headers values
func NewPatchEmployeeperformanceExternalmetricsDefinitionUnauthorized() *PatchEmployeeperformanceExternalmetricsDefinitionUnauthorized {
	return &PatchEmployeeperformanceExternalmetricsDefinitionUnauthorized{}
}

/*PatchEmployeeperformanceExternalmetricsDefinitionUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PatchEmployeeperformanceExternalmetricsDefinitionUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/employeeperformance/externalmetrics/definitions/{metricId}][%d] patchEmployeeperformanceExternalmetricsDefinitionUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchEmployeeperformanceExternalmetricsDefinitionForbidden creates a PatchEmployeeperformanceExternalmetricsDefinitionForbidden with default headers values
func NewPatchEmployeeperformanceExternalmetricsDefinitionForbidden() *PatchEmployeeperformanceExternalmetricsDefinitionForbidden {
	return &PatchEmployeeperformanceExternalmetricsDefinitionForbidden{}
}

/*PatchEmployeeperformanceExternalmetricsDefinitionForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PatchEmployeeperformanceExternalmetricsDefinitionForbidden struct {
	Payload *models.ErrorBody
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/employeeperformance/externalmetrics/definitions/{metricId}][%d] patchEmployeeperformanceExternalmetricsDefinitionForbidden  %+v", 403, o.Payload)
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchEmployeeperformanceExternalmetricsDefinitionNotFound creates a PatchEmployeeperformanceExternalmetricsDefinitionNotFound with default headers values
func NewPatchEmployeeperformanceExternalmetricsDefinitionNotFound() *PatchEmployeeperformanceExternalmetricsDefinitionNotFound {
	return &PatchEmployeeperformanceExternalmetricsDefinitionNotFound{}
}

/*PatchEmployeeperformanceExternalmetricsDefinitionNotFound handles this case with default header values.

The requested resource was not found.
*/
type PatchEmployeeperformanceExternalmetricsDefinitionNotFound struct {
	Payload *models.ErrorBody
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/employeeperformance/externalmetrics/definitions/{metricId}][%d] patchEmployeeperformanceExternalmetricsDefinitionNotFound  %+v", 404, o.Payload)
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchEmployeeperformanceExternalmetricsDefinitionRequestTimeout creates a PatchEmployeeperformanceExternalmetricsDefinitionRequestTimeout with default headers values
func NewPatchEmployeeperformanceExternalmetricsDefinitionRequestTimeout() *PatchEmployeeperformanceExternalmetricsDefinitionRequestTimeout {
	return &PatchEmployeeperformanceExternalmetricsDefinitionRequestTimeout{}
}

/*PatchEmployeeperformanceExternalmetricsDefinitionRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PatchEmployeeperformanceExternalmetricsDefinitionRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionRequestTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/employeeperformance/externalmetrics/definitions/{metricId}][%d] patchEmployeeperformanceExternalmetricsDefinitionRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchEmployeeperformanceExternalmetricsDefinitionConflict creates a PatchEmployeeperformanceExternalmetricsDefinitionConflict with default headers values
func NewPatchEmployeeperformanceExternalmetricsDefinitionConflict() *PatchEmployeeperformanceExternalmetricsDefinitionConflict {
	return &PatchEmployeeperformanceExternalmetricsDefinitionConflict{}
}

/*PatchEmployeeperformanceExternalmetricsDefinitionConflict handles this case with default header values.

Conflict
*/
type PatchEmployeeperformanceExternalmetricsDefinitionConflict struct {
	Payload *models.ErrorBody
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionConflict) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/employeeperformance/externalmetrics/definitions/{metricId}][%d] patchEmployeeperformanceExternalmetricsDefinitionConflict  %+v", 409, o.Payload)
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchEmployeeperformanceExternalmetricsDefinitionRequestEntityTooLarge creates a PatchEmployeeperformanceExternalmetricsDefinitionRequestEntityTooLarge with default headers values
func NewPatchEmployeeperformanceExternalmetricsDefinitionRequestEntityTooLarge() *PatchEmployeeperformanceExternalmetricsDefinitionRequestEntityTooLarge {
	return &PatchEmployeeperformanceExternalmetricsDefinitionRequestEntityTooLarge{}
}

/*PatchEmployeeperformanceExternalmetricsDefinitionRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PatchEmployeeperformanceExternalmetricsDefinitionRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/employeeperformance/externalmetrics/definitions/{metricId}][%d] patchEmployeeperformanceExternalmetricsDefinitionRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchEmployeeperformanceExternalmetricsDefinitionUnsupportedMediaType creates a PatchEmployeeperformanceExternalmetricsDefinitionUnsupportedMediaType with default headers values
func NewPatchEmployeeperformanceExternalmetricsDefinitionUnsupportedMediaType() *PatchEmployeeperformanceExternalmetricsDefinitionUnsupportedMediaType {
	return &PatchEmployeeperformanceExternalmetricsDefinitionUnsupportedMediaType{}
}

/*PatchEmployeeperformanceExternalmetricsDefinitionUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PatchEmployeeperformanceExternalmetricsDefinitionUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/employeeperformance/externalmetrics/definitions/{metricId}][%d] patchEmployeeperformanceExternalmetricsDefinitionUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchEmployeeperformanceExternalmetricsDefinitionTooManyRequests creates a PatchEmployeeperformanceExternalmetricsDefinitionTooManyRequests with default headers values
func NewPatchEmployeeperformanceExternalmetricsDefinitionTooManyRequests() *PatchEmployeeperformanceExternalmetricsDefinitionTooManyRequests {
	return &PatchEmployeeperformanceExternalmetricsDefinitionTooManyRequests{}
}

/*PatchEmployeeperformanceExternalmetricsDefinitionTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PatchEmployeeperformanceExternalmetricsDefinitionTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/employeeperformance/externalmetrics/definitions/{metricId}][%d] patchEmployeeperformanceExternalmetricsDefinitionTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchEmployeeperformanceExternalmetricsDefinitionInternalServerError creates a PatchEmployeeperformanceExternalmetricsDefinitionInternalServerError with default headers values
func NewPatchEmployeeperformanceExternalmetricsDefinitionInternalServerError() *PatchEmployeeperformanceExternalmetricsDefinitionInternalServerError {
	return &PatchEmployeeperformanceExternalmetricsDefinitionInternalServerError{}
}

/*PatchEmployeeperformanceExternalmetricsDefinitionInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PatchEmployeeperformanceExternalmetricsDefinitionInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/employeeperformance/externalmetrics/definitions/{metricId}][%d] patchEmployeeperformanceExternalmetricsDefinitionInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchEmployeeperformanceExternalmetricsDefinitionServiceUnavailable creates a PatchEmployeeperformanceExternalmetricsDefinitionServiceUnavailable with default headers values
func NewPatchEmployeeperformanceExternalmetricsDefinitionServiceUnavailable() *PatchEmployeeperformanceExternalmetricsDefinitionServiceUnavailable {
	return &PatchEmployeeperformanceExternalmetricsDefinitionServiceUnavailable{}
}

/*PatchEmployeeperformanceExternalmetricsDefinitionServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PatchEmployeeperformanceExternalmetricsDefinitionServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionServiceUnavailable) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/employeeperformance/externalmetrics/definitions/{metricId}][%d] patchEmployeeperformanceExternalmetricsDefinitionServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchEmployeeperformanceExternalmetricsDefinitionGatewayTimeout creates a PatchEmployeeperformanceExternalmetricsDefinitionGatewayTimeout with default headers values
func NewPatchEmployeeperformanceExternalmetricsDefinitionGatewayTimeout() *PatchEmployeeperformanceExternalmetricsDefinitionGatewayTimeout {
	return &PatchEmployeeperformanceExternalmetricsDefinitionGatewayTimeout{}
}

/*PatchEmployeeperformanceExternalmetricsDefinitionGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PatchEmployeeperformanceExternalmetricsDefinitionGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionGatewayTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/employeeperformance/externalmetrics/definitions/{metricId}][%d] patchEmployeeperformanceExternalmetricsDefinitionGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchEmployeeperformanceExternalmetricsDefinitionGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
