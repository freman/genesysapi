// Code generated by go-swagger; DO NOT EDIT.

package gamification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetEmployeeperformanceExternalmetricsDefinitionReader is a Reader for the GetEmployeeperformanceExternalmetricsDefinition structure.
type GetEmployeeperformanceExternalmetricsDefinitionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEmployeeperformanceExternalmetricsDefinitionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEmployeeperformanceExternalmetricsDefinitionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetEmployeeperformanceExternalmetricsDefinitionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetEmployeeperformanceExternalmetricsDefinitionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetEmployeeperformanceExternalmetricsDefinitionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetEmployeeperformanceExternalmetricsDefinitionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetEmployeeperformanceExternalmetricsDefinitionRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetEmployeeperformanceExternalmetricsDefinitionRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetEmployeeperformanceExternalmetricsDefinitionUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetEmployeeperformanceExternalmetricsDefinitionTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetEmployeeperformanceExternalmetricsDefinitionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetEmployeeperformanceExternalmetricsDefinitionServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetEmployeeperformanceExternalmetricsDefinitionGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetEmployeeperformanceExternalmetricsDefinitionOK creates a GetEmployeeperformanceExternalmetricsDefinitionOK with default headers values
func NewGetEmployeeperformanceExternalmetricsDefinitionOK() *GetEmployeeperformanceExternalmetricsDefinitionOK {
	return &GetEmployeeperformanceExternalmetricsDefinitionOK{}
}

/*GetEmployeeperformanceExternalmetricsDefinitionOK handles this case with default header values.

successful operation
*/
type GetEmployeeperformanceExternalmetricsDefinitionOK struct {
	Payload *models.ExternalMetricDefinition
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/employeeperformance/externalmetrics/definitions/{metricId}][%d] getEmployeeperformanceExternalmetricsDefinitionOK  %+v", 200, o.Payload)
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionOK) GetPayload() *models.ExternalMetricDefinition {
	return o.Payload
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExternalMetricDefinition)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEmployeeperformanceExternalmetricsDefinitionBadRequest creates a GetEmployeeperformanceExternalmetricsDefinitionBadRequest with default headers values
func NewGetEmployeeperformanceExternalmetricsDefinitionBadRequest() *GetEmployeeperformanceExternalmetricsDefinitionBadRequest {
	return &GetEmployeeperformanceExternalmetricsDefinitionBadRequest{}
}

/*GetEmployeeperformanceExternalmetricsDefinitionBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetEmployeeperformanceExternalmetricsDefinitionBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/employeeperformance/externalmetrics/definitions/{metricId}][%d] getEmployeeperformanceExternalmetricsDefinitionBadRequest  %+v", 400, o.Payload)
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEmployeeperformanceExternalmetricsDefinitionUnauthorized creates a GetEmployeeperformanceExternalmetricsDefinitionUnauthorized with default headers values
func NewGetEmployeeperformanceExternalmetricsDefinitionUnauthorized() *GetEmployeeperformanceExternalmetricsDefinitionUnauthorized {
	return &GetEmployeeperformanceExternalmetricsDefinitionUnauthorized{}
}

/*GetEmployeeperformanceExternalmetricsDefinitionUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetEmployeeperformanceExternalmetricsDefinitionUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/employeeperformance/externalmetrics/definitions/{metricId}][%d] getEmployeeperformanceExternalmetricsDefinitionUnauthorized  %+v", 401, o.Payload)
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEmployeeperformanceExternalmetricsDefinitionForbidden creates a GetEmployeeperformanceExternalmetricsDefinitionForbidden with default headers values
func NewGetEmployeeperformanceExternalmetricsDefinitionForbidden() *GetEmployeeperformanceExternalmetricsDefinitionForbidden {
	return &GetEmployeeperformanceExternalmetricsDefinitionForbidden{}
}

/*GetEmployeeperformanceExternalmetricsDefinitionForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetEmployeeperformanceExternalmetricsDefinitionForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/employeeperformance/externalmetrics/definitions/{metricId}][%d] getEmployeeperformanceExternalmetricsDefinitionForbidden  %+v", 403, o.Payload)
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEmployeeperformanceExternalmetricsDefinitionNotFound creates a GetEmployeeperformanceExternalmetricsDefinitionNotFound with default headers values
func NewGetEmployeeperformanceExternalmetricsDefinitionNotFound() *GetEmployeeperformanceExternalmetricsDefinitionNotFound {
	return &GetEmployeeperformanceExternalmetricsDefinitionNotFound{}
}

/*GetEmployeeperformanceExternalmetricsDefinitionNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetEmployeeperformanceExternalmetricsDefinitionNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/employeeperformance/externalmetrics/definitions/{metricId}][%d] getEmployeeperformanceExternalmetricsDefinitionNotFound  %+v", 404, o.Payload)
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEmployeeperformanceExternalmetricsDefinitionRequestTimeout creates a GetEmployeeperformanceExternalmetricsDefinitionRequestTimeout with default headers values
func NewGetEmployeeperformanceExternalmetricsDefinitionRequestTimeout() *GetEmployeeperformanceExternalmetricsDefinitionRequestTimeout {
	return &GetEmployeeperformanceExternalmetricsDefinitionRequestTimeout{}
}

/*GetEmployeeperformanceExternalmetricsDefinitionRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetEmployeeperformanceExternalmetricsDefinitionRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/employeeperformance/externalmetrics/definitions/{metricId}][%d] getEmployeeperformanceExternalmetricsDefinitionRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEmployeeperformanceExternalmetricsDefinitionRequestEntityTooLarge creates a GetEmployeeperformanceExternalmetricsDefinitionRequestEntityTooLarge with default headers values
func NewGetEmployeeperformanceExternalmetricsDefinitionRequestEntityTooLarge() *GetEmployeeperformanceExternalmetricsDefinitionRequestEntityTooLarge {
	return &GetEmployeeperformanceExternalmetricsDefinitionRequestEntityTooLarge{}
}

/*GetEmployeeperformanceExternalmetricsDefinitionRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetEmployeeperformanceExternalmetricsDefinitionRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/employeeperformance/externalmetrics/definitions/{metricId}][%d] getEmployeeperformanceExternalmetricsDefinitionRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEmployeeperformanceExternalmetricsDefinitionUnsupportedMediaType creates a GetEmployeeperformanceExternalmetricsDefinitionUnsupportedMediaType with default headers values
func NewGetEmployeeperformanceExternalmetricsDefinitionUnsupportedMediaType() *GetEmployeeperformanceExternalmetricsDefinitionUnsupportedMediaType {
	return &GetEmployeeperformanceExternalmetricsDefinitionUnsupportedMediaType{}
}

/*GetEmployeeperformanceExternalmetricsDefinitionUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetEmployeeperformanceExternalmetricsDefinitionUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/employeeperformance/externalmetrics/definitions/{metricId}][%d] getEmployeeperformanceExternalmetricsDefinitionUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEmployeeperformanceExternalmetricsDefinitionTooManyRequests creates a GetEmployeeperformanceExternalmetricsDefinitionTooManyRequests with default headers values
func NewGetEmployeeperformanceExternalmetricsDefinitionTooManyRequests() *GetEmployeeperformanceExternalmetricsDefinitionTooManyRequests {
	return &GetEmployeeperformanceExternalmetricsDefinitionTooManyRequests{}
}

/*GetEmployeeperformanceExternalmetricsDefinitionTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetEmployeeperformanceExternalmetricsDefinitionTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/employeeperformance/externalmetrics/definitions/{metricId}][%d] getEmployeeperformanceExternalmetricsDefinitionTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEmployeeperformanceExternalmetricsDefinitionInternalServerError creates a GetEmployeeperformanceExternalmetricsDefinitionInternalServerError with default headers values
func NewGetEmployeeperformanceExternalmetricsDefinitionInternalServerError() *GetEmployeeperformanceExternalmetricsDefinitionInternalServerError {
	return &GetEmployeeperformanceExternalmetricsDefinitionInternalServerError{}
}

/*GetEmployeeperformanceExternalmetricsDefinitionInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetEmployeeperformanceExternalmetricsDefinitionInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/employeeperformance/externalmetrics/definitions/{metricId}][%d] getEmployeeperformanceExternalmetricsDefinitionInternalServerError  %+v", 500, o.Payload)
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEmployeeperformanceExternalmetricsDefinitionServiceUnavailable creates a GetEmployeeperformanceExternalmetricsDefinitionServiceUnavailable with default headers values
func NewGetEmployeeperformanceExternalmetricsDefinitionServiceUnavailable() *GetEmployeeperformanceExternalmetricsDefinitionServiceUnavailable {
	return &GetEmployeeperformanceExternalmetricsDefinitionServiceUnavailable{}
}

/*GetEmployeeperformanceExternalmetricsDefinitionServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetEmployeeperformanceExternalmetricsDefinitionServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/employeeperformance/externalmetrics/definitions/{metricId}][%d] getEmployeeperformanceExternalmetricsDefinitionServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEmployeeperformanceExternalmetricsDefinitionGatewayTimeout creates a GetEmployeeperformanceExternalmetricsDefinitionGatewayTimeout with default headers values
func NewGetEmployeeperformanceExternalmetricsDefinitionGatewayTimeout() *GetEmployeeperformanceExternalmetricsDefinitionGatewayTimeout {
	return &GetEmployeeperformanceExternalmetricsDefinitionGatewayTimeout{}
}

/*GetEmployeeperformanceExternalmetricsDefinitionGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetEmployeeperformanceExternalmetricsDefinitionGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/employeeperformance/externalmetrics/definitions/{metricId}][%d] getEmployeeperformanceExternalmetricsDefinitionGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetEmployeeperformanceExternalmetricsDefinitionGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
