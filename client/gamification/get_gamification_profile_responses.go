// Code generated by go-swagger; DO NOT EDIT.

package gamification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetGamificationProfileReader is a Reader for the GetGamificationProfile structure.
type GetGamificationProfileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGamificationProfileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGamificationProfileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetGamificationProfileBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetGamificationProfileUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGamificationProfileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGamificationProfileNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetGamificationProfileRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetGamificationProfileRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetGamificationProfileUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetGamificationProfileTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGamificationProfileInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetGamificationProfileServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetGamificationProfileGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGamificationProfileOK creates a GetGamificationProfileOK with default headers values
func NewGetGamificationProfileOK() *GetGamificationProfileOK {
	return &GetGamificationProfileOK{}
}

/*
GetGamificationProfileOK describes a response with status code 200, with default header values.

successful operation
*/
type GetGamificationProfileOK struct {
	Payload *models.PerformanceProfile
}

// IsSuccess returns true when this get gamification profile o k response has a 2xx status code
func (o *GetGamificationProfileOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get gamification profile o k response has a 3xx status code
func (o *GetGamificationProfileOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification profile o k response has a 4xx status code
func (o *GetGamificationProfileOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get gamification profile o k response has a 5xx status code
func (o *GetGamificationProfileOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification profile o k response a status code equal to that given
func (o *GetGamificationProfileOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetGamificationProfileOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/{profileId}][%d] getGamificationProfileOK  %+v", 200, o.Payload)
}

func (o *GetGamificationProfileOK) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/{profileId}][%d] getGamificationProfileOK  %+v", 200, o.Payload)
}

func (o *GetGamificationProfileOK) GetPayload() *models.PerformanceProfile {
	return o.Payload
}

func (o *GetGamificationProfileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PerformanceProfile)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationProfileBadRequest creates a GetGamificationProfileBadRequest with default headers values
func NewGetGamificationProfileBadRequest() *GetGamificationProfileBadRequest {
	return &GetGamificationProfileBadRequest{}
}

/*
GetGamificationProfileBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetGamificationProfileBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification profile bad request response has a 2xx status code
func (o *GetGamificationProfileBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification profile bad request response has a 3xx status code
func (o *GetGamificationProfileBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification profile bad request response has a 4xx status code
func (o *GetGamificationProfileBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification profile bad request response has a 5xx status code
func (o *GetGamificationProfileBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification profile bad request response a status code equal to that given
func (o *GetGamificationProfileBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetGamificationProfileBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/{profileId}][%d] getGamificationProfileBadRequest  %+v", 400, o.Payload)
}

func (o *GetGamificationProfileBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/{profileId}][%d] getGamificationProfileBadRequest  %+v", 400, o.Payload)
}

func (o *GetGamificationProfileBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationProfileBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationProfileUnauthorized creates a GetGamificationProfileUnauthorized with default headers values
func NewGetGamificationProfileUnauthorized() *GetGamificationProfileUnauthorized {
	return &GetGamificationProfileUnauthorized{}
}

/*
GetGamificationProfileUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetGamificationProfileUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification profile unauthorized response has a 2xx status code
func (o *GetGamificationProfileUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification profile unauthorized response has a 3xx status code
func (o *GetGamificationProfileUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification profile unauthorized response has a 4xx status code
func (o *GetGamificationProfileUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification profile unauthorized response has a 5xx status code
func (o *GetGamificationProfileUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification profile unauthorized response a status code equal to that given
func (o *GetGamificationProfileUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetGamificationProfileUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/{profileId}][%d] getGamificationProfileUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGamificationProfileUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/{profileId}][%d] getGamificationProfileUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGamificationProfileUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationProfileUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationProfileForbidden creates a GetGamificationProfileForbidden with default headers values
func NewGetGamificationProfileForbidden() *GetGamificationProfileForbidden {
	return &GetGamificationProfileForbidden{}
}

/*
GetGamificationProfileForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetGamificationProfileForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification profile forbidden response has a 2xx status code
func (o *GetGamificationProfileForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification profile forbidden response has a 3xx status code
func (o *GetGamificationProfileForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification profile forbidden response has a 4xx status code
func (o *GetGamificationProfileForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification profile forbidden response has a 5xx status code
func (o *GetGamificationProfileForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification profile forbidden response a status code equal to that given
func (o *GetGamificationProfileForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetGamificationProfileForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/{profileId}][%d] getGamificationProfileForbidden  %+v", 403, o.Payload)
}

func (o *GetGamificationProfileForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/{profileId}][%d] getGamificationProfileForbidden  %+v", 403, o.Payload)
}

func (o *GetGamificationProfileForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationProfileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationProfileNotFound creates a GetGamificationProfileNotFound with default headers values
func NewGetGamificationProfileNotFound() *GetGamificationProfileNotFound {
	return &GetGamificationProfileNotFound{}
}

/*
GetGamificationProfileNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetGamificationProfileNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification profile not found response has a 2xx status code
func (o *GetGamificationProfileNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification profile not found response has a 3xx status code
func (o *GetGamificationProfileNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification profile not found response has a 4xx status code
func (o *GetGamificationProfileNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification profile not found response has a 5xx status code
func (o *GetGamificationProfileNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification profile not found response a status code equal to that given
func (o *GetGamificationProfileNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetGamificationProfileNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/{profileId}][%d] getGamificationProfileNotFound  %+v", 404, o.Payload)
}

func (o *GetGamificationProfileNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/{profileId}][%d] getGamificationProfileNotFound  %+v", 404, o.Payload)
}

func (o *GetGamificationProfileNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationProfileNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationProfileRequestTimeout creates a GetGamificationProfileRequestTimeout with default headers values
func NewGetGamificationProfileRequestTimeout() *GetGamificationProfileRequestTimeout {
	return &GetGamificationProfileRequestTimeout{}
}

/*
GetGamificationProfileRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetGamificationProfileRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification profile request timeout response has a 2xx status code
func (o *GetGamificationProfileRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification profile request timeout response has a 3xx status code
func (o *GetGamificationProfileRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification profile request timeout response has a 4xx status code
func (o *GetGamificationProfileRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification profile request timeout response has a 5xx status code
func (o *GetGamificationProfileRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification profile request timeout response a status code equal to that given
func (o *GetGamificationProfileRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetGamificationProfileRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/{profileId}][%d] getGamificationProfileRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetGamificationProfileRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/{profileId}][%d] getGamificationProfileRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetGamificationProfileRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationProfileRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationProfileRequestEntityTooLarge creates a GetGamificationProfileRequestEntityTooLarge with default headers values
func NewGetGamificationProfileRequestEntityTooLarge() *GetGamificationProfileRequestEntityTooLarge {
	return &GetGamificationProfileRequestEntityTooLarge{}
}

/*
GetGamificationProfileRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetGamificationProfileRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification profile request entity too large response has a 2xx status code
func (o *GetGamificationProfileRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification profile request entity too large response has a 3xx status code
func (o *GetGamificationProfileRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification profile request entity too large response has a 4xx status code
func (o *GetGamificationProfileRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification profile request entity too large response has a 5xx status code
func (o *GetGamificationProfileRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification profile request entity too large response a status code equal to that given
func (o *GetGamificationProfileRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetGamificationProfileRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/{profileId}][%d] getGamificationProfileRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetGamificationProfileRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/{profileId}][%d] getGamificationProfileRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetGamificationProfileRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationProfileRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationProfileUnsupportedMediaType creates a GetGamificationProfileUnsupportedMediaType with default headers values
func NewGetGamificationProfileUnsupportedMediaType() *GetGamificationProfileUnsupportedMediaType {
	return &GetGamificationProfileUnsupportedMediaType{}
}

/*
GetGamificationProfileUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetGamificationProfileUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification profile unsupported media type response has a 2xx status code
func (o *GetGamificationProfileUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification profile unsupported media type response has a 3xx status code
func (o *GetGamificationProfileUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification profile unsupported media type response has a 4xx status code
func (o *GetGamificationProfileUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification profile unsupported media type response has a 5xx status code
func (o *GetGamificationProfileUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification profile unsupported media type response a status code equal to that given
func (o *GetGamificationProfileUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetGamificationProfileUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/{profileId}][%d] getGamificationProfileUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetGamificationProfileUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/{profileId}][%d] getGamificationProfileUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetGamificationProfileUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationProfileUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationProfileTooManyRequests creates a GetGamificationProfileTooManyRequests with default headers values
func NewGetGamificationProfileTooManyRequests() *GetGamificationProfileTooManyRequests {
	return &GetGamificationProfileTooManyRequests{}
}

/*
GetGamificationProfileTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetGamificationProfileTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification profile too many requests response has a 2xx status code
func (o *GetGamificationProfileTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification profile too many requests response has a 3xx status code
func (o *GetGamificationProfileTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification profile too many requests response has a 4xx status code
func (o *GetGamificationProfileTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification profile too many requests response has a 5xx status code
func (o *GetGamificationProfileTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification profile too many requests response a status code equal to that given
func (o *GetGamificationProfileTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetGamificationProfileTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/{profileId}][%d] getGamificationProfileTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetGamificationProfileTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/{profileId}][%d] getGamificationProfileTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetGamificationProfileTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationProfileTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationProfileInternalServerError creates a GetGamificationProfileInternalServerError with default headers values
func NewGetGamificationProfileInternalServerError() *GetGamificationProfileInternalServerError {
	return &GetGamificationProfileInternalServerError{}
}

/*
GetGamificationProfileInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetGamificationProfileInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification profile internal server error response has a 2xx status code
func (o *GetGamificationProfileInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification profile internal server error response has a 3xx status code
func (o *GetGamificationProfileInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification profile internal server error response has a 4xx status code
func (o *GetGamificationProfileInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get gamification profile internal server error response has a 5xx status code
func (o *GetGamificationProfileInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get gamification profile internal server error response a status code equal to that given
func (o *GetGamificationProfileInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetGamificationProfileInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/{profileId}][%d] getGamificationProfileInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGamificationProfileInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/{profileId}][%d] getGamificationProfileInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGamificationProfileInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationProfileInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationProfileServiceUnavailable creates a GetGamificationProfileServiceUnavailable with default headers values
func NewGetGamificationProfileServiceUnavailable() *GetGamificationProfileServiceUnavailable {
	return &GetGamificationProfileServiceUnavailable{}
}

/*
GetGamificationProfileServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetGamificationProfileServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification profile service unavailable response has a 2xx status code
func (o *GetGamificationProfileServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification profile service unavailable response has a 3xx status code
func (o *GetGamificationProfileServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification profile service unavailable response has a 4xx status code
func (o *GetGamificationProfileServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get gamification profile service unavailable response has a 5xx status code
func (o *GetGamificationProfileServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get gamification profile service unavailable response a status code equal to that given
func (o *GetGamificationProfileServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetGamificationProfileServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/{profileId}][%d] getGamificationProfileServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetGamificationProfileServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/{profileId}][%d] getGamificationProfileServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetGamificationProfileServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationProfileServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationProfileGatewayTimeout creates a GetGamificationProfileGatewayTimeout with default headers values
func NewGetGamificationProfileGatewayTimeout() *GetGamificationProfileGatewayTimeout {
	return &GetGamificationProfileGatewayTimeout{}
}

/*
GetGamificationProfileGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetGamificationProfileGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification profile gateway timeout response has a 2xx status code
func (o *GetGamificationProfileGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification profile gateway timeout response has a 3xx status code
func (o *GetGamificationProfileGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification profile gateway timeout response has a 4xx status code
func (o *GetGamificationProfileGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get gamification profile gateway timeout response has a 5xx status code
func (o *GetGamificationProfileGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get gamification profile gateway timeout response a status code equal to that given
func (o *GetGamificationProfileGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetGamificationProfileGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/{profileId}][%d] getGamificationProfileGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetGamificationProfileGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/profiles/{profileId}][%d] getGamificationProfileGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetGamificationProfileGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationProfileGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
