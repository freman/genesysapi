// Code generated by go-swagger; DO NOT EDIT.

package gamification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostGamificationProfilesReader is a Reader for the PostGamificationProfiles structure.
type PostGamificationProfilesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostGamificationProfilesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostGamificationProfilesCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostGamificationProfilesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostGamificationProfilesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostGamificationProfilesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostGamificationProfilesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostGamificationProfilesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostGamificationProfilesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostGamificationProfilesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostGamificationProfilesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostGamificationProfilesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostGamificationProfilesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostGamificationProfilesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostGamificationProfilesCreated creates a PostGamificationProfilesCreated with default headers values
func NewPostGamificationProfilesCreated() *PostGamificationProfilesCreated {
	return &PostGamificationProfilesCreated{}
}

/*
PostGamificationProfilesCreated describes a response with status code 201, with default header values.

Performance Profile successfully created
*/
type PostGamificationProfilesCreated struct {
	Payload *models.PerformanceProfile
}

// IsSuccess returns true when this post gamification profiles created response has a 2xx status code
func (o *PostGamificationProfilesCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post gamification profiles created response has a 3xx status code
func (o *PostGamificationProfilesCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profiles created response has a 4xx status code
func (o *PostGamificationProfilesCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post gamification profiles created response has a 5xx status code
func (o *PostGamificationProfilesCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post gamification profiles created response a status code equal to that given
func (o *PostGamificationProfilesCreated) IsCode(code int) bool {
	return code == 201
}

func (o *PostGamificationProfilesCreated) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles][%d] postGamificationProfilesCreated  %+v", 201, o.Payload)
}

func (o *PostGamificationProfilesCreated) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles][%d] postGamificationProfilesCreated  %+v", 201, o.Payload)
}

func (o *PostGamificationProfilesCreated) GetPayload() *models.PerformanceProfile {
	return o.Payload
}

func (o *PostGamificationProfilesCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PerformanceProfile)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfilesBadRequest creates a PostGamificationProfilesBadRequest with default headers values
func NewPostGamificationProfilesBadRequest() *PostGamificationProfilesBadRequest {
	return &PostGamificationProfilesBadRequest{}
}

/*
PostGamificationProfilesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostGamificationProfilesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profiles bad request response has a 2xx status code
func (o *PostGamificationProfilesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profiles bad request response has a 3xx status code
func (o *PostGamificationProfilesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profiles bad request response has a 4xx status code
func (o *PostGamificationProfilesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post gamification profiles bad request response has a 5xx status code
func (o *PostGamificationProfilesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post gamification profiles bad request response a status code equal to that given
func (o *PostGamificationProfilesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostGamificationProfilesBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles][%d] postGamificationProfilesBadRequest  %+v", 400, o.Payload)
}

func (o *PostGamificationProfilesBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles][%d] postGamificationProfilesBadRequest  %+v", 400, o.Payload)
}

func (o *PostGamificationProfilesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfilesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfilesUnauthorized creates a PostGamificationProfilesUnauthorized with default headers values
func NewPostGamificationProfilesUnauthorized() *PostGamificationProfilesUnauthorized {
	return &PostGamificationProfilesUnauthorized{}
}

/*
PostGamificationProfilesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostGamificationProfilesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profiles unauthorized response has a 2xx status code
func (o *PostGamificationProfilesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profiles unauthorized response has a 3xx status code
func (o *PostGamificationProfilesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profiles unauthorized response has a 4xx status code
func (o *PostGamificationProfilesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post gamification profiles unauthorized response has a 5xx status code
func (o *PostGamificationProfilesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post gamification profiles unauthorized response a status code equal to that given
func (o *PostGamificationProfilesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostGamificationProfilesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles][%d] postGamificationProfilesUnauthorized  %+v", 401, o.Payload)
}

func (o *PostGamificationProfilesUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles][%d] postGamificationProfilesUnauthorized  %+v", 401, o.Payload)
}

func (o *PostGamificationProfilesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfilesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfilesForbidden creates a PostGamificationProfilesForbidden with default headers values
func NewPostGamificationProfilesForbidden() *PostGamificationProfilesForbidden {
	return &PostGamificationProfilesForbidden{}
}

/*
PostGamificationProfilesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostGamificationProfilesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profiles forbidden response has a 2xx status code
func (o *PostGamificationProfilesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profiles forbidden response has a 3xx status code
func (o *PostGamificationProfilesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profiles forbidden response has a 4xx status code
func (o *PostGamificationProfilesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post gamification profiles forbidden response has a 5xx status code
func (o *PostGamificationProfilesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post gamification profiles forbidden response a status code equal to that given
func (o *PostGamificationProfilesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostGamificationProfilesForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles][%d] postGamificationProfilesForbidden  %+v", 403, o.Payload)
}

func (o *PostGamificationProfilesForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles][%d] postGamificationProfilesForbidden  %+v", 403, o.Payload)
}

func (o *PostGamificationProfilesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfilesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfilesNotFound creates a PostGamificationProfilesNotFound with default headers values
func NewPostGamificationProfilesNotFound() *PostGamificationProfilesNotFound {
	return &PostGamificationProfilesNotFound{}
}

/*
PostGamificationProfilesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostGamificationProfilesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profiles not found response has a 2xx status code
func (o *PostGamificationProfilesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profiles not found response has a 3xx status code
func (o *PostGamificationProfilesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profiles not found response has a 4xx status code
func (o *PostGamificationProfilesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post gamification profiles not found response has a 5xx status code
func (o *PostGamificationProfilesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post gamification profiles not found response a status code equal to that given
func (o *PostGamificationProfilesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostGamificationProfilesNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles][%d] postGamificationProfilesNotFound  %+v", 404, o.Payload)
}

func (o *PostGamificationProfilesNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles][%d] postGamificationProfilesNotFound  %+v", 404, o.Payload)
}

func (o *PostGamificationProfilesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfilesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfilesRequestTimeout creates a PostGamificationProfilesRequestTimeout with default headers values
func NewPostGamificationProfilesRequestTimeout() *PostGamificationProfilesRequestTimeout {
	return &PostGamificationProfilesRequestTimeout{}
}

/*
PostGamificationProfilesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostGamificationProfilesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profiles request timeout response has a 2xx status code
func (o *PostGamificationProfilesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profiles request timeout response has a 3xx status code
func (o *PostGamificationProfilesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profiles request timeout response has a 4xx status code
func (o *PostGamificationProfilesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post gamification profiles request timeout response has a 5xx status code
func (o *PostGamificationProfilesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post gamification profiles request timeout response a status code equal to that given
func (o *PostGamificationProfilesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostGamificationProfilesRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles][%d] postGamificationProfilesRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostGamificationProfilesRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles][%d] postGamificationProfilesRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostGamificationProfilesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfilesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfilesRequestEntityTooLarge creates a PostGamificationProfilesRequestEntityTooLarge with default headers values
func NewPostGamificationProfilesRequestEntityTooLarge() *PostGamificationProfilesRequestEntityTooLarge {
	return &PostGamificationProfilesRequestEntityTooLarge{}
}

/*
PostGamificationProfilesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostGamificationProfilesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profiles request entity too large response has a 2xx status code
func (o *PostGamificationProfilesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profiles request entity too large response has a 3xx status code
func (o *PostGamificationProfilesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profiles request entity too large response has a 4xx status code
func (o *PostGamificationProfilesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post gamification profiles request entity too large response has a 5xx status code
func (o *PostGamificationProfilesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post gamification profiles request entity too large response a status code equal to that given
func (o *PostGamificationProfilesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostGamificationProfilesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles][%d] postGamificationProfilesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostGamificationProfilesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles][%d] postGamificationProfilesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostGamificationProfilesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfilesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfilesUnsupportedMediaType creates a PostGamificationProfilesUnsupportedMediaType with default headers values
func NewPostGamificationProfilesUnsupportedMediaType() *PostGamificationProfilesUnsupportedMediaType {
	return &PostGamificationProfilesUnsupportedMediaType{}
}

/*
PostGamificationProfilesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostGamificationProfilesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profiles unsupported media type response has a 2xx status code
func (o *PostGamificationProfilesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profiles unsupported media type response has a 3xx status code
func (o *PostGamificationProfilesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profiles unsupported media type response has a 4xx status code
func (o *PostGamificationProfilesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post gamification profiles unsupported media type response has a 5xx status code
func (o *PostGamificationProfilesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post gamification profiles unsupported media type response a status code equal to that given
func (o *PostGamificationProfilesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostGamificationProfilesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles][%d] postGamificationProfilesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostGamificationProfilesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles][%d] postGamificationProfilesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostGamificationProfilesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfilesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfilesTooManyRequests creates a PostGamificationProfilesTooManyRequests with default headers values
func NewPostGamificationProfilesTooManyRequests() *PostGamificationProfilesTooManyRequests {
	return &PostGamificationProfilesTooManyRequests{}
}

/*
PostGamificationProfilesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostGamificationProfilesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profiles too many requests response has a 2xx status code
func (o *PostGamificationProfilesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profiles too many requests response has a 3xx status code
func (o *PostGamificationProfilesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profiles too many requests response has a 4xx status code
func (o *PostGamificationProfilesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post gamification profiles too many requests response has a 5xx status code
func (o *PostGamificationProfilesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post gamification profiles too many requests response a status code equal to that given
func (o *PostGamificationProfilesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostGamificationProfilesTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles][%d] postGamificationProfilesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostGamificationProfilesTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles][%d] postGamificationProfilesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostGamificationProfilesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfilesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfilesInternalServerError creates a PostGamificationProfilesInternalServerError with default headers values
func NewPostGamificationProfilesInternalServerError() *PostGamificationProfilesInternalServerError {
	return &PostGamificationProfilesInternalServerError{}
}

/*
PostGamificationProfilesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostGamificationProfilesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profiles internal server error response has a 2xx status code
func (o *PostGamificationProfilesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profiles internal server error response has a 3xx status code
func (o *PostGamificationProfilesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profiles internal server error response has a 4xx status code
func (o *PostGamificationProfilesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post gamification profiles internal server error response has a 5xx status code
func (o *PostGamificationProfilesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post gamification profiles internal server error response a status code equal to that given
func (o *PostGamificationProfilesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostGamificationProfilesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles][%d] postGamificationProfilesInternalServerError  %+v", 500, o.Payload)
}

func (o *PostGamificationProfilesInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles][%d] postGamificationProfilesInternalServerError  %+v", 500, o.Payload)
}

func (o *PostGamificationProfilesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfilesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfilesServiceUnavailable creates a PostGamificationProfilesServiceUnavailable with default headers values
func NewPostGamificationProfilesServiceUnavailable() *PostGamificationProfilesServiceUnavailable {
	return &PostGamificationProfilesServiceUnavailable{}
}

/*
PostGamificationProfilesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostGamificationProfilesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profiles service unavailable response has a 2xx status code
func (o *PostGamificationProfilesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profiles service unavailable response has a 3xx status code
func (o *PostGamificationProfilesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profiles service unavailable response has a 4xx status code
func (o *PostGamificationProfilesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post gamification profiles service unavailable response has a 5xx status code
func (o *PostGamificationProfilesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post gamification profiles service unavailable response a status code equal to that given
func (o *PostGamificationProfilesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostGamificationProfilesServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles][%d] postGamificationProfilesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostGamificationProfilesServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles][%d] postGamificationProfilesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostGamificationProfilesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfilesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfilesGatewayTimeout creates a PostGamificationProfilesGatewayTimeout with default headers values
func NewPostGamificationProfilesGatewayTimeout() *PostGamificationProfilesGatewayTimeout {
	return &PostGamificationProfilesGatewayTimeout{}
}

/*
PostGamificationProfilesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostGamificationProfilesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profiles gateway timeout response has a 2xx status code
func (o *PostGamificationProfilesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profiles gateway timeout response has a 3xx status code
func (o *PostGamificationProfilesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profiles gateway timeout response has a 4xx status code
func (o *PostGamificationProfilesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post gamification profiles gateway timeout response has a 5xx status code
func (o *PostGamificationProfilesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post gamification profiles gateway timeout response a status code equal to that given
func (o *PostGamificationProfilesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostGamificationProfilesGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles][%d] postGamificationProfilesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostGamificationProfilesGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles][%d] postGamificationProfilesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostGamificationProfilesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfilesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
