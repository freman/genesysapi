// Code generated by go-swagger; DO NOT EDIT.

package gamification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetGamificationScorecardsPointsAlltimeReader is a Reader for the GetGamificationScorecardsPointsAlltime structure.
type GetGamificationScorecardsPointsAlltimeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGamificationScorecardsPointsAlltimeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGamificationScorecardsPointsAlltimeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetGamificationScorecardsPointsAlltimeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetGamificationScorecardsPointsAlltimeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGamificationScorecardsPointsAlltimeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGamificationScorecardsPointsAlltimeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetGamificationScorecardsPointsAlltimeRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetGamificationScorecardsPointsAlltimeUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetGamificationScorecardsPointsAlltimeTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGamificationScorecardsPointsAlltimeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetGamificationScorecardsPointsAlltimeServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetGamificationScorecardsPointsAlltimeGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGamificationScorecardsPointsAlltimeOK creates a GetGamificationScorecardsPointsAlltimeOK with default headers values
func NewGetGamificationScorecardsPointsAlltimeOK() *GetGamificationScorecardsPointsAlltimeOK {
	return &GetGamificationScorecardsPointsAlltimeOK{}
}

/*GetGamificationScorecardsPointsAlltimeOK handles this case with default header values.

successful operation
*/
type GetGamificationScorecardsPointsAlltimeOK struct {
	Payload *models.AllTimePoints
}

func (o *GetGamificationScorecardsPointsAlltimeOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/points/alltime][%d] getGamificationScorecardsPointsAlltimeOK  %+v", 200, o.Payload)
}

func (o *GetGamificationScorecardsPointsAlltimeOK) GetPayload() *models.AllTimePoints {
	return o.Payload
}

func (o *GetGamificationScorecardsPointsAlltimeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AllTimePoints)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsPointsAlltimeBadRequest creates a GetGamificationScorecardsPointsAlltimeBadRequest with default headers values
func NewGetGamificationScorecardsPointsAlltimeBadRequest() *GetGamificationScorecardsPointsAlltimeBadRequest {
	return &GetGamificationScorecardsPointsAlltimeBadRequest{}
}

/*GetGamificationScorecardsPointsAlltimeBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetGamificationScorecardsPointsAlltimeBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationScorecardsPointsAlltimeBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/points/alltime][%d] getGamificationScorecardsPointsAlltimeBadRequest  %+v", 400, o.Payload)
}

func (o *GetGamificationScorecardsPointsAlltimeBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsPointsAlltimeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsPointsAlltimeUnauthorized creates a GetGamificationScorecardsPointsAlltimeUnauthorized with default headers values
func NewGetGamificationScorecardsPointsAlltimeUnauthorized() *GetGamificationScorecardsPointsAlltimeUnauthorized {
	return &GetGamificationScorecardsPointsAlltimeUnauthorized{}
}

/*GetGamificationScorecardsPointsAlltimeUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetGamificationScorecardsPointsAlltimeUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationScorecardsPointsAlltimeUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/points/alltime][%d] getGamificationScorecardsPointsAlltimeUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGamificationScorecardsPointsAlltimeUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsPointsAlltimeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsPointsAlltimeForbidden creates a GetGamificationScorecardsPointsAlltimeForbidden with default headers values
func NewGetGamificationScorecardsPointsAlltimeForbidden() *GetGamificationScorecardsPointsAlltimeForbidden {
	return &GetGamificationScorecardsPointsAlltimeForbidden{}
}

/*GetGamificationScorecardsPointsAlltimeForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetGamificationScorecardsPointsAlltimeForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationScorecardsPointsAlltimeForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/points/alltime][%d] getGamificationScorecardsPointsAlltimeForbidden  %+v", 403, o.Payload)
}

func (o *GetGamificationScorecardsPointsAlltimeForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsPointsAlltimeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsPointsAlltimeNotFound creates a GetGamificationScorecardsPointsAlltimeNotFound with default headers values
func NewGetGamificationScorecardsPointsAlltimeNotFound() *GetGamificationScorecardsPointsAlltimeNotFound {
	return &GetGamificationScorecardsPointsAlltimeNotFound{}
}

/*GetGamificationScorecardsPointsAlltimeNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetGamificationScorecardsPointsAlltimeNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationScorecardsPointsAlltimeNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/points/alltime][%d] getGamificationScorecardsPointsAlltimeNotFound  %+v", 404, o.Payload)
}

func (o *GetGamificationScorecardsPointsAlltimeNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsPointsAlltimeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsPointsAlltimeRequestEntityTooLarge creates a GetGamificationScorecardsPointsAlltimeRequestEntityTooLarge with default headers values
func NewGetGamificationScorecardsPointsAlltimeRequestEntityTooLarge() *GetGamificationScorecardsPointsAlltimeRequestEntityTooLarge {
	return &GetGamificationScorecardsPointsAlltimeRequestEntityTooLarge{}
}

/*GetGamificationScorecardsPointsAlltimeRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetGamificationScorecardsPointsAlltimeRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationScorecardsPointsAlltimeRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/points/alltime][%d] getGamificationScorecardsPointsAlltimeRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetGamificationScorecardsPointsAlltimeRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsPointsAlltimeRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsPointsAlltimeUnsupportedMediaType creates a GetGamificationScorecardsPointsAlltimeUnsupportedMediaType with default headers values
func NewGetGamificationScorecardsPointsAlltimeUnsupportedMediaType() *GetGamificationScorecardsPointsAlltimeUnsupportedMediaType {
	return &GetGamificationScorecardsPointsAlltimeUnsupportedMediaType{}
}

/*GetGamificationScorecardsPointsAlltimeUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetGamificationScorecardsPointsAlltimeUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationScorecardsPointsAlltimeUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/points/alltime][%d] getGamificationScorecardsPointsAlltimeUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetGamificationScorecardsPointsAlltimeUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsPointsAlltimeUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsPointsAlltimeTooManyRequests creates a GetGamificationScorecardsPointsAlltimeTooManyRequests with default headers values
func NewGetGamificationScorecardsPointsAlltimeTooManyRequests() *GetGamificationScorecardsPointsAlltimeTooManyRequests {
	return &GetGamificationScorecardsPointsAlltimeTooManyRequests{}
}

/*GetGamificationScorecardsPointsAlltimeTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type GetGamificationScorecardsPointsAlltimeTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationScorecardsPointsAlltimeTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/points/alltime][%d] getGamificationScorecardsPointsAlltimeTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetGamificationScorecardsPointsAlltimeTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsPointsAlltimeTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsPointsAlltimeInternalServerError creates a GetGamificationScorecardsPointsAlltimeInternalServerError with default headers values
func NewGetGamificationScorecardsPointsAlltimeInternalServerError() *GetGamificationScorecardsPointsAlltimeInternalServerError {
	return &GetGamificationScorecardsPointsAlltimeInternalServerError{}
}

/*GetGamificationScorecardsPointsAlltimeInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetGamificationScorecardsPointsAlltimeInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationScorecardsPointsAlltimeInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/points/alltime][%d] getGamificationScorecardsPointsAlltimeInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGamificationScorecardsPointsAlltimeInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsPointsAlltimeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsPointsAlltimeServiceUnavailable creates a GetGamificationScorecardsPointsAlltimeServiceUnavailable with default headers values
func NewGetGamificationScorecardsPointsAlltimeServiceUnavailable() *GetGamificationScorecardsPointsAlltimeServiceUnavailable {
	return &GetGamificationScorecardsPointsAlltimeServiceUnavailable{}
}

/*GetGamificationScorecardsPointsAlltimeServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetGamificationScorecardsPointsAlltimeServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationScorecardsPointsAlltimeServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/points/alltime][%d] getGamificationScorecardsPointsAlltimeServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetGamificationScorecardsPointsAlltimeServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsPointsAlltimeServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsPointsAlltimeGatewayTimeout creates a GetGamificationScorecardsPointsAlltimeGatewayTimeout with default headers values
func NewGetGamificationScorecardsPointsAlltimeGatewayTimeout() *GetGamificationScorecardsPointsAlltimeGatewayTimeout {
	return &GetGamificationScorecardsPointsAlltimeGatewayTimeout{}
}

/*GetGamificationScorecardsPointsAlltimeGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetGamificationScorecardsPointsAlltimeGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationScorecardsPointsAlltimeGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/points/alltime][%d] getGamificationScorecardsPointsAlltimeGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetGamificationScorecardsPointsAlltimeGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsPointsAlltimeGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
