// Code generated by go-swagger; DO NOT EDIT.

package gamification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetGamificationTemplateReader is a Reader for the GetGamificationTemplate structure.
type GetGamificationTemplateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGamificationTemplateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGamificationTemplateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetGamificationTemplateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetGamificationTemplateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGamificationTemplateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGamificationTemplateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetGamificationTemplateRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetGamificationTemplateRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetGamificationTemplateUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetGamificationTemplateTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGamificationTemplateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetGamificationTemplateServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetGamificationTemplateGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGamificationTemplateOK creates a GetGamificationTemplateOK with default headers values
func NewGetGamificationTemplateOK() *GetGamificationTemplateOK {
	return &GetGamificationTemplateOK{}
}

/*GetGamificationTemplateOK handles this case with default header values.

successful operation
*/
type GetGamificationTemplateOK struct {
	Payload *models.ObjectiveTemplate
}

func (o *GetGamificationTemplateOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/templates/{templateId}][%d] getGamificationTemplateOK  %+v", 200, o.Payload)
}

func (o *GetGamificationTemplateOK) GetPayload() *models.ObjectiveTemplate {
	return o.Payload
}

func (o *GetGamificationTemplateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ObjectiveTemplate)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationTemplateBadRequest creates a GetGamificationTemplateBadRequest with default headers values
func NewGetGamificationTemplateBadRequest() *GetGamificationTemplateBadRequest {
	return &GetGamificationTemplateBadRequest{}
}

/*GetGamificationTemplateBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetGamificationTemplateBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationTemplateBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/templates/{templateId}][%d] getGamificationTemplateBadRequest  %+v", 400, o.Payload)
}

func (o *GetGamificationTemplateBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationTemplateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationTemplateUnauthorized creates a GetGamificationTemplateUnauthorized with default headers values
func NewGetGamificationTemplateUnauthorized() *GetGamificationTemplateUnauthorized {
	return &GetGamificationTemplateUnauthorized{}
}

/*GetGamificationTemplateUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetGamificationTemplateUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationTemplateUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/templates/{templateId}][%d] getGamificationTemplateUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGamificationTemplateUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationTemplateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationTemplateForbidden creates a GetGamificationTemplateForbidden with default headers values
func NewGetGamificationTemplateForbidden() *GetGamificationTemplateForbidden {
	return &GetGamificationTemplateForbidden{}
}

/*GetGamificationTemplateForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetGamificationTemplateForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationTemplateForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/templates/{templateId}][%d] getGamificationTemplateForbidden  %+v", 403, o.Payload)
}

func (o *GetGamificationTemplateForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationTemplateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationTemplateNotFound creates a GetGamificationTemplateNotFound with default headers values
func NewGetGamificationTemplateNotFound() *GetGamificationTemplateNotFound {
	return &GetGamificationTemplateNotFound{}
}

/*GetGamificationTemplateNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetGamificationTemplateNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationTemplateNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/templates/{templateId}][%d] getGamificationTemplateNotFound  %+v", 404, o.Payload)
}

func (o *GetGamificationTemplateNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationTemplateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationTemplateRequestTimeout creates a GetGamificationTemplateRequestTimeout with default headers values
func NewGetGamificationTemplateRequestTimeout() *GetGamificationTemplateRequestTimeout {
	return &GetGamificationTemplateRequestTimeout{}
}

/*GetGamificationTemplateRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetGamificationTemplateRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationTemplateRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/templates/{templateId}][%d] getGamificationTemplateRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetGamificationTemplateRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationTemplateRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationTemplateRequestEntityTooLarge creates a GetGamificationTemplateRequestEntityTooLarge with default headers values
func NewGetGamificationTemplateRequestEntityTooLarge() *GetGamificationTemplateRequestEntityTooLarge {
	return &GetGamificationTemplateRequestEntityTooLarge{}
}

/*GetGamificationTemplateRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetGamificationTemplateRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationTemplateRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/templates/{templateId}][%d] getGamificationTemplateRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetGamificationTemplateRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationTemplateRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationTemplateUnsupportedMediaType creates a GetGamificationTemplateUnsupportedMediaType with default headers values
func NewGetGamificationTemplateUnsupportedMediaType() *GetGamificationTemplateUnsupportedMediaType {
	return &GetGamificationTemplateUnsupportedMediaType{}
}

/*GetGamificationTemplateUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetGamificationTemplateUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationTemplateUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/templates/{templateId}][%d] getGamificationTemplateUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetGamificationTemplateUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationTemplateUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationTemplateTooManyRequests creates a GetGamificationTemplateTooManyRequests with default headers values
func NewGetGamificationTemplateTooManyRequests() *GetGamificationTemplateTooManyRequests {
	return &GetGamificationTemplateTooManyRequests{}
}

/*GetGamificationTemplateTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetGamificationTemplateTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationTemplateTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/templates/{templateId}][%d] getGamificationTemplateTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetGamificationTemplateTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationTemplateTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationTemplateInternalServerError creates a GetGamificationTemplateInternalServerError with default headers values
func NewGetGamificationTemplateInternalServerError() *GetGamificationTemplateInternalServerError {
	return &GetGamificationTemplateInternalServerError{}
}

/*GetGamificationTemplateInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetGamificationTemplateInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationTemplateInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/templates/{templateId}][%d] getGamificationTemplateInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGamificationTemplateInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationTemplateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationTemplateServiceUnavailable creates a GetGamificationTemplateServiceUnavailable with default headers values
func NewGetGamificationTemplateServiceUnavailable() *GetGamificationTemplateServiceUnavailable {
	return &GetGamificationTemplateServiceUnavailable{}
}

/*GetGamificationTemplateServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetGamificationTemplateServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationTemplateServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/templates/{templateId}][%d] getGamificationTemplateServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetGamificationTemplateServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationTemplateServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationTemplateGatewayTimeout creates a GetGamificationTemplateGatewayTimeout with default headers values
func NewGetGamificationTemplateGatewayTimeout() *GetGamificationTemplateGatewayTimeout {
	return &GetGamificationTemplateGatewayTimeout{}
}

/*GetGamificationTemplateGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetGamificationTemplateGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationTemplateGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/templates/{templateId}][%d] getGamificationTemplateGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetGamificationTemplateGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationTemplateGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
