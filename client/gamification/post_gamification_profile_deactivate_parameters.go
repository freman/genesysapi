// Code generated by go-swagger; DO NOT EDIT.

package gamification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPostGamificationProfileDeactivateParams creates a new PostGamificationProfileDeactivateParams object
// with the default values initialized.
func NewPostGamificationProfileDeactivateParams() *PostGamificationProfileDeactivateParams {
	var ()
	return &PostGamificationProfileDeactivateParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostGamificationProfileDeactivateParamsWithTimeout creates a new PostGamificationProfileDeactivateParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostGamificationProfileDeactivateParamsWithTimeout(timeout time.Duration) *PostGamificationProfileDeactivateParams {
	var ()
	return &PostGamificationProfileDeactivateParams{

		timeout: timeout,
	}
}

// NewPostGamificationProfileDeactivateParamsWithContext creates a new PostGamificationProfileDeactivateParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostGamificationProfileDeactivateParamsWithContext(ctx context.Context) *PostGamificationProfileDeactivateParams {
	var ()
	return &PostGamificationProfileDeactivateParams{

		Context: ctx,
	}
}

// NewPostGamificationProfileDeactivateParamsWithHTTPClient creates a new PostGamificationProfileDeactivateParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostGamificationProfileDeactivateParamsWithHTTPClient(client *http.Client) *PostGamificationProfileDeactivateParams {
	var ()
	return &PostGamificationProfileDeactivateParams{
		HTTPClient: client,
	}
}

/*PostGamificationProfileDeactivateParams contains all the parameters to send to the API endpoint
for the post gamification profile deactivate operation typically these are written to a http.Request
*/
type PostGamificationProfileDeactivateParams struct {

	/*PerformanceProfileID
	  Performance Profile Id

	*/
	PerformanceProfileID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post gamification profile deactivate params
func (o *PostGamificationProfileDeactivateParams) WithTimeout(timeout time.Duration) *PostGamificationProfileDeactivateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post gamification profile deactivate params
func (o *PostGamificationProfileDeactivateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post gamification profile deactivate params
func (o *PostGamificationProfileDeactivateParams) WithContext(ctx context.Context) *PostGamificationProfileDeactivateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post gamification profile deactivate params
func (o *PostGamificationProfileDeactivateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post gamification profile deactivate params
func (o *PostGamificationProfileDeactivateParams) WithHTTPClient(client *http.Client) *PostGamificationProfileDeactivateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post gamification profile deactivate params
func (o *PostGamificationProfileDeactivateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPerformanceProfileID adds the performanceProfileID to the post gamification profile deactivate params
func (o *PostGamificationProfileDeactivateParams) WithPerformanceProfileID(performanceProfileID string) *PostGamificationProfileDeactivateParams {
	o.SetPerformanceProfileID(performanceProfileID)
	return o
}

// SetPerformanceProfileID adds the performanceProfileId to the post gamification profile deactivate params
func (o *PostGamificationProfileDeactivateParams) SetPerformanceProfileID(performanceProfileID string) {
	o.PerformanceProfileID = performanceProfileID
}

// WriteToRequest writes these params to a swagger request
func (o *PostGamificationProfileDeactivateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param performanceProfileId
	if err := r.SetPathParam("performanceProfileId", o.PerformanceProfileID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
