// Code generated by go-swagger; DO NOT EDIT.

package gamification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// NewPutGamificationProfileMetricParams creates a new PutGamificationProfileMetricParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPutGamificationProfileMetricParams() *PutGamificationProfileMetricParams {
	return &PutGamificationProfileMetricParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPutGamificationProfileMetricParamsWithTimeout creates a new PutGamificationProfileMetricParams object
// with the ability to set a timeout on a request.
func NewPutGamificationProfileMetricParamsWithTimeout(timeout time.Duration) *PutGamificationProfileMetricParams {
	return &PutGamificationProfileMetricParams{
		timeout: timeout,
	}
}

// NewPutGamificationProfileMetricParamsWithContext creates a new PutGamificationProfileMetricParams object
// with the ability to set a context for a request.
func NewPutGamificationProfileMetricParamsWithContext(ctx context.Context) *PutGamificationProfileMetricParams {
	return &PutGamificationProfileMetricParams{
		Context: ctx,
	}
}

// NewPutGamificationProfileMetricParamsWithHTTPClient creates a new PutGamificationProfileMetricParams object
// with the ability to set a custom HTTPClient for a request.
func NewPutGamificationProfileMetricParamsWithHTTPClient(client *http.Client) *PutGamificationProfileMetricParams {
	return &PutGamificationProfileMetricParams{
		HTTPClient: client,
	}
}

/*
PutGamificationProfileMetricParams contains all the parameters to send to the API endpoint

	for the put gamification profile metric operation.

	Typically these are written to a http.Request.
*/
type PutGamificationProfileMetricParams struct {

	/* Body.

	   Metric
	*/
	Body *models.CreateMetric

	/* MetricID.

	   Metric Id
	*/
	MetricID string

	/* ProfileID.

	   Performance Profile Id
	*/
	ProfileID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the put gamification profile metric params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutGamificationProfileMetricParams) WithDefaults() *PutGamificationProfileMetricParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the put gamification profile metric params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutGamificationProfileMetricParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the put gamification profile metric params
func (o *PutGamificationProfileMetricParams) WithTimeout(timeout time.Duration) *PutGamificationProfileMetricParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put gamification profile metric params
func (o *PutGamificationProfileMetricParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put gamification profile metric params
func (o *PutGamificationProfileMetricParams) WithContext(ctx context.Context) *PutGamificationProfileMetricParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put gamification profile metric params
func (o *PutGamificationProfileMetricParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put gamification profile metric params
func (o *PutGamificationProfileMetricParams) WithHTTPClient(client *http.Client) *PutGamificationProfileMetricParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put gamification profile metric params
func (o *PutGamificationProfileMetricParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the put gamification profile metric params
func (o *PutGamificationProfileMetricParams) WithBody(body *models.CreateMetric) *PutGamificationProfileMetricParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the put gamification profile metric params
func (o *PutGamificationProfileMetricParams) SetBody(body *models.CreateMetric) {
	o.Body = body
}

// WithMetricID adds the metricID to the put gamification profile metric params
func (o *PutGamificationProfileMetricParams) WithMetricID(metricID string) *PutGamificationProfileMetricParams {
	o.SetMetricID(metricID)
	return o
}

// SetMetricID adds the metricId to the put gamification profile metric params
func (o *PutGamificationProfileMetricParams) SetMetricID(metricID string) {
	o.MetricID = metricID
}

// WithProfileID adds the profileID to the put gamification profile metric params
func (o *PutGamificationProfileMetricParams) WithProfileID(profileID string) *PutGamificationProfileMetricParams {
	o.SetProfileID(profileID)
	return o
}

// SetProfileID adds the profileId to the put gamification profile metric params
func (o *PutGamificationProfileMetricParams) SetProfileID(profileID string) {
	o.ProfileID = profileID
}

// WriteToRequest writes these params to a swagger request
func (o *PutGamificationProfileMetricParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param metricId
	if err := r.SetPathParam("metricId", o.MetricID); err != nil {
		return err
	}

	// path param profileId
	if err := r.SetPathParam("profileId", o.ProfileID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
