// Code generated by go-swagger; DO NOT EDIT.

package gamification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetGamificationLeaderboardBestpointsReader is a Reader for the GetGamificationLeaderboardBestpoints structure.
type GetGamificationLeaderboardBestpointsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGamificationLeaderboardBestpointsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGamificationLeaderboardBestpointsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetGamificationLeaderboardBestpointsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetGamificationLeaderboardBestpointsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGamificationLeaderboardBestpointsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGamificationLeaderboardBestpointsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetGamificationLeaderboardBestpointsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetGamificationLeaderboardBestpointsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetGamificationLeaderboardBestpointsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetGamificationLeaderboardBestpointsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGamificationLeaderboardBestpointsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetGamificationLeaderboardBestpointsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetGamificationLeaderboardBestpointsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGamificationLeaderboardBestpointsOK creates a GetGamificationLeaderboardBestpointsOK with default headers values
func NewGetGamificationLeaderboardBestpointsOK() *GetGamificationLeaderboardBestpointsOK {
	return &GetGamificationLeaderboardBestpointsOK{}
}

/*GetGamificationLeaderboardBestpointsOK handles this case with default header values.

successful operation
*/
type GetGamificationLeaderboardBestpointsOK struct {
	Payload *models.OverallBestPoints
}

func (o *GetGamificationLeaderboardBestpointsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/leaderboard/bestpoints][%d] getGamificationLeaderboardBestpointsOK  %+v", 200, o.Payload)
}

func (o *GetGamificationLeaderboardBestpointsOK) GetPayload() *models.OverallBestPoints {
	return o.Payload
}

func (o *GetGamificationLeaderboardBestpointsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OverallBestPoints)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationLeaderboardBestpointsBadRequest creates a GetGamificationLeaderboardBestpointsBadRequest with default headers values
func NewGetGamificationLeaderboardBestpointsBadRequest() *GetGamificationLeaderboardBestpointsBadRequest {
	return &GetGamificationLeaderboardBestpointsBadRequest{}
}

/*GetGamificationLeaderboardBestpointsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetGamificationLeaderboardBestpointsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationLeaderboardBestpointsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/leaderboard/bestpoints][%d] getGamificationLeaderboardBestpointsBadRequest  %+v", 400, o.Payload)
}

func (o *GetGamificationLeaderboardBestpointsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationLeaderboardBestpointsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationLeaderboardBestpointsUnauthorized creates a GetGamificationLeaderboardBestpointsUnauthorized with default headers values
func NewGetGamificationLeaderboardBestpointsUnauthorized() *GetGamificationLeaderboardBestpointsUnauthorized {
	return &GetGamificationLeaderboardBestpointsUnauthorized{}
}

/*GetGamificationLeaderboardBestpointsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetGamificationLeaderboardBestpointsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationLeaderboardBestpointsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/leaderboard/bestpoints][%d] getGamificationLeaderboardBestpointsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGamificationLeaderboardBestpointsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationLeaderboardBestpointsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationLeaderboardBestpointsForbidden creates a GetGamificationLeaderboardBestpointsForbidden with default headers values
func NewGetGamificationLeaderboardBestpointsForbidden() *GetGamificationLeaderboardBestpointsForbidden {
	return &GetGamificationLeaderboardBestpointsForbidden{}
}

/*GetGamificationLeaderboardBestpointsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetGamificationLeaderboardBestpointsForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationLeaderboardBestpointsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/leaderboard/bestpoints][%d] getGamificationLeaderboardBestpointsForbidden  %+v", 403, o.Payload)
}

func (o *GetGamificationLeaderboardBestpointsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationLeaderboardBestpointsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationLeaderboardBestpointsNotFound creates a GetGamificationLeaderboardBestpointsNotFound with default headers values
func NewGetGamificationLeaderboardBestpointsNotFound() *GetGamificationLeaderboardBestpointsNotFound {
	return &GetGamificationLeaderboardBestpointsNotFound{}
}

/*GetGamificationLeaderboardBestpointsNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetGamificationLeaderboardBestpointsNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationLeaderboardBestpointsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/leaderboard/bestpoints][%d] getGamificationLeaderboardBestpointsNotFound  %+v", 404, o.Payload)
}

func (o *GetGamificationLeaderboardBestpointsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationLeaderboardBestpointsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationLeaderboardBestpointsRequestTimeout creates a GetGamificationLeaderboardBestpointsRequestTimeout with default headers values
func NewGetGamificationLeaderboardBestpointsRequestTimeout() *GetGamificationLeaderboardBestpointsRequestTimeout {
	return &GetGamificationLeaderboardBestpointsRequestTimeout{}
}

/*GetGamificationLeaderboardBestpointsRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetGamificationLeaderboardBestpointsRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationLeaderboardBestpointsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/leaderboard/bestpoints][%d] getGamificationLeaderboardBestpointsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetGamificationLeaderboardBestpointsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationLeaderboardBestpointsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationLeaderboardBestpointsRequestEntityTooLarge creates a GetGamificationLeaderboardBestpointsRequestEntityTooLarge with default headers values
func NewGetGamificationLeaderboardBestpointsRequestEntityTooLarge() *GetGamificationLeaderboardBestpointsRequestEntityTooLarge {
	return &GetGamificationLeaderboardBestpointsRequestEntityTooLarge{}
}

/*GetGamificationLeaderboardBestpointsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetGamificationLeaderboardBestpointsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationLeaderboardBestpointsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/leaderboard/bestpoints][%d] getGamificationLeaderboardBestpointsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetGamificationLeaderboardBestpointsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationLeaderboardBestpointsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationLeaderboardBestpointsUnsupportedMediaType creates a GetGamificationLeaderboardBestpointsUnsupportedMediaType with default headers values
func NewGetGamificationLeaderboardBestpointsUnsupportedMediaType() *GetGamificationLeaderboardBestpointsUnsupportedMediaType {
	return &GetGamificationLeaderboardBestpointsUnsupportedMediaType{}
}

/*GetGamificationLeaderboardBestpointsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetGamificationLeaderboardBestpointsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationLeaderboardBestpointsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/leaderboard/bestpoints][%d] getGamificationLeaderboardBestpointsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetGamificationLeaderboardBestpointsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationLeaderboardBestpointsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationLeaderboardBestpointsTooManyRequests creates a GetGamificationLeaderboardBestpointsTooManyRequests with default headers values
func NewGetGamificationLeaderboardBestpointsTooManyRequests() *GetGamificationLeaderboardBestpointsTooManyRequests {
	return &GetGamificationLeaderboardBestpointsTooManyRequests{}
}

/*GetGamificationLeaderboardBestpointsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetGamificationLeaderboardBestpointsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationLeaderboardBestpointsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/leaderboard/bestpoints][%d] getGamificationLeaderboardBestpointsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetGamificationLeaderboardBestpointsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationLeaderboardBestpointsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationLeaderboardBestpointsInternalServerError creates a GetGamificationLeaderboardBestpointsInternalServerError with default headers values
func NewGetGamificationLeaderboardBestpointsInternalServerError() *GetGamificationLeaderboardBestpointsInternalServerError {
	return &GetGamificationLeaderboardBestpointsInternalServerError{}
}

/*GetGamificationLeaderboardBestpointsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetGamificationLeaderboardBestpointsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationLeaderboardBestpointsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/leaderboard/bestpoints][%d] getGamificationLeaderboardBestpointsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGamificationLeaderboardBestpointsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationLeaderboardBestpointsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationLeaderboardBestpointsServiceUnavailable creates a GetGamificationLeaderboardBestpointsServiceUnavailable with default headers values
func NewGetGamificationLeaderboardBestpointsServiceUnavailable() *GetGamificationLeaderboardBestpointsServiceUnavailable {
	return &GetGamificationLeaderboardBestpointsServiceUnavailable{}
}

/*GetGamificationLeaderboardBestpointsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetGamificationLeaderboardBestpointsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationLeaderboardBestpointsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/leaderboard/bestpoints][%d] getGamificationLeaderboardBestpointsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetGamificationLeaderboardBestpointsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationLeaderboardBestpointsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationLeaderboardBestpointsGatewayTimeout creates a GetGamificationLeaderboardBestpointsGatewayTimeout with default headers values
func NewGetGamificationLeaderboardBestpointsGatewayTimeout() *GetGamificationLeaderboardBestpointsGatewayTimeout {
	return &GetGamificationLeaderboardBestpointsGatewayTimeout{}
}

/*GetGamificationLeaderboardBestpointsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetGamificationLeaderboardBestpointsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetGamificationLeaderboardBestpointsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/leaderboard/bestpoints][%d] getGamificationLeaderboardBestpointsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetGamificationLeaderboardBestpointsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationLeaderboardBestpointsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
