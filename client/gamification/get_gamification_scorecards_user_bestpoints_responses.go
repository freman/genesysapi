// Code generated by go-swagger; DO NOT EDIT.

package gamification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetGamificationScorecardsUserBestpointsReader is a Reader for the GetGamificationScorecardsUserBestpoints structure.
type GetGamificationScorecardsUserBestpointsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGamificationScorecardsUserBestpointsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGamificationScorecardsUserBestpointsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetGamificationScorecardsUserBestpointsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetGamificationScorecardsUserBestpointsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGamificationScorecardsUserBestpointsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGamificationScorecardsUserBestpointsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetGamificationScorecardsUserBestpointsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetGamificationScorecardsUserBestpointsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetGamificationScorecardsUserBestpointsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetGamificationScorecardsUserBestpointsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGamificationScorecardsUserBestpointsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetGamificationScorecardsUserBestpointsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetGamificationScorecardsUserBestpointsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGamificationScorecardsUserBestpointsOK creates a GetGamificationScorecardsUserBestpointsOK with default headers values
func NewGetGamificationScorecardsUserBestpointsOK() *GetGamificationScorecardsUserBestpointsOK {
	return &GetGamificationScorecardsUserBestpointsOK{}
}

/*
GetGamificationScorecardsUserBestpointsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetGamificationScorecardsUserBestpointsOK struct {
	Payload *models.UserBestPoints
}

// IsSuccess returns true when this get gamification scorecards user bestpoints o k response has a 2xx status code
func (o *GetGamificationScorecardsUserBestpointsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get gamification scorecards user bestpoints o k response has a 3xx status code
func (o *GetGamificationScorecardsUserBestpointsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards user bestpoints o k response has a 4xx status code
func (o *GetGamificationScorecardsUserBestpointsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get gamification scorecards user bestpoints o k response has a 5xx status code
func (o *GetGamificationScorecardsUserBestpointsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification scorecards user bestpoints o k response a status code equal to that given
func (o *GetGamificationScorecardsUserBestpointsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetGamificationScorecardsUserBestpointsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/users/{userId}/bestpoints][%d] getGamificationScorecardsUserBestpointsOK  %+v", 200, o.Payload)
}

func (o *GetGamificationScorecardsUserBestpointsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/users/{userId}/bestpoints][%d] getGamificationScorecardsUserBestpointsOK  %+v", 200, o.Payload)
}

func (o *GetGamificationScorecardsUserBestpointsOK) GetPayload() *models.UserBestPoints {
	return o.Payload
}

func (o *GetGamificationScorecardsUserBestpointsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserBestPoints)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsUserBestpointsBadRequest creates a GetGamificationScorecardsUserBestpointsBadRequest with default headers values
func NewGetGamificationScorecardsUserBestpointsBadRequest() *GetGamificationScorecardsUserBestpointsBadRequest {
	return &GetGamificationScorecardsUserBestpointsBadRequest{}
}

/*
GetGamificationScorecardsUserBestpointsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetGamificationScorecardsUserBestpointsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards user bestpoints bad request response has a 2xx status code
func (o *GetGamificationScorecardsUserBestpointsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards user bestpoints bad request response has a 3xx status code
func (o *GetGamificationScorecardsUserBestpointsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards user bestpoints bad request response has a 4xx status code
func (o *GetGamificationScorecardsUserBestpointsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification scorecards user bestpoints bad request response has a 5xx status code
func (o *GetGamificationScorecardsUserBestpointsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification scorecards user bestpoints bad request response a status code equal to that given
func (o *GetGamificationScorecardsUserBestpointsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetGamificationScorecardsUserBestpointsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/users/{userId}/bestpoints][%d] getGamificationScorecardsUserBestpointsBadRequest  %+v", 400, o.Payload)
}

func (o *GetGamificationScorecardsUserBestpointsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/users/{userId}/bestpoints][%d] getGamificationScorecardsUserBestpointsBadRequest  %+v", 400, o.Payload)
}

func (o *GetGamificationScorecardsUserBestpointsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsUserBestpointsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsUserBestpointsUnauthorized creates a GetGamificationScorecardsUserBestpointsUnauthorized with default headers values
func NewGetGamificationScorecardsUserBestpointsUnauthorized() *GetGamificationScorecardsUserBestpointsUnauthorized {
	return &GetGamificationScorecardsUserBestpointsUnauthorized{}
}

/*
GetGamificationScorecardsUserBestpointsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetGamificationScorecardsUserBestpointsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards user bestpoints unauthorized response has a 2xx status code
func (o *GetGamificationScorecardsUserBestpointsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards user bestpoints unauthorized response has a 3xx status code
func (o *GetGamificationScorecardsUserBestpointsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards user bestpoints unauthorized response has a 4xx status code
func (o *GetGamificationScorecardsUserBestpointsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification scorecards user bestpoints unauthorized response has a 5xx status code
func (o *GetGamificationScorecardsUserBestpointsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification scorecards user bestpoints unauthorized response a status code equal to that given
func (o *GetGamificationScorecardsUserBestpointsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetGamificationScorecardsUserBestpointsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/users/{userId}/bestpoints][%d] getGamificationScorecardsUserBestpointsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGamificationScorecardsUserBestpointsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/users/{userId}/bestpoints][%d] getGamificationScorecardsUserBestpointsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGamificationScorecardsUserBestpointsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsUserBestpointsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsUserBestpointsForbidden creates a GetGamificationScorecardsUserBestpointsForbidden with default headers values
func NewGetGamificationScorecardsUserBestpointsForbidden() *GetGamificationScorecardsUserBestpointsForbidden {
	return &GetGamificationScorecardsUserBestpointsForbidden{}
}

/*
GetGamificationScorecardsUserBestpointsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetGamificationScorecardsUserBestpointsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards user bestpoints forbidden response has a 2xx status code
func (o *GetGamificationScorecardsUserBestpointsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards user bestpoints forbidden response has a 3xx status code
func (o *GetGamificationScorecardsUserBestpointsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards user bestpoints forbidden response has a 4xx status code
func (o *GetGamificationScorecardsUserBestpointsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification scorecards user bestpoints forbidden response has a 5xx status code
func (o *GetGamificationScorecardsUserBestpointsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification scorecards user bestpoints forbidden response a status code equal to that given
func (o *GetGamificationScorecardsUserBestpointsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetGamificationScorecardsUserBestpointsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/users/{userId}/bestpoints][%d] getGamificationScorecardsUserBestpointsForbidden  %+v", 403, o.Payload)
}

func (o *GetGamificationScorecardsUserBestpointsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/users/{userId}/bestpoints][%d] getGamificationScorecardsUserBestpointsForbidden  %+v", 403, o.Payload)
}

func (o *GetGamificationScorecardsUserBestpointsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsUserBestpointsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsUserBestpointsNotFound creates a GetGamificationScorecardsUserBestpointsNotFound with default headers values
func NewGetGamificationScorecardsUserBestpointsNotFound() *GetGamificationScorecardsUserBestpointsNotFound {
	return &GetGamificationScorecardsUserBestpointsNotFound{}
}

/*
GetGamificationScorecardsUserBestpointsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetGamificationScorecardsUserBestpointsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards user bestpoints not found response has a 2xx status code
func (o *GetGamificationScorecardsUserBestpointsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards user bestpoints not found response has a 3xx status code
func (o *GetGamificationScorecardsUserBestpointsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards user bestpoints not found response has a 4xx status code
func (o *GetGamificationScorecardsUserBestpointsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification scorecards user bestpoints not found response has a 5xx status code
func (o *GetGamificationScorecardsUserBestpointsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification scorecards user bestpoints not found response a status code equal to that given
func (o *GetGamificationScorecardsUserBestpointsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetGamificationScorecardsUserBestpointsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/users/{userId}/bestpoints][%d] getGamificationScorecardsUserBestpointsNotFound  %+v", 404, o.Payload)
}

func (o *GetGamificationScorecardsUserBestpointsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/users/{userId}/bestpoints][%d] getGamificationScorecardsUserBestpointsNotFound  %+v", 404, o.Payload)
}

func (o *GetGamificationScorecardsUserBestpointsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsUserBestpointsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsUserBestpointsRequestTimeout creates a GetGamificationScorecardsUserBestpointsRequestTimeout with default headers values
func NewGetGamificationScorecardsUserBestpointsRequestTimeout() *GetGamificationScorecardsUserBestpointsRequestTimeout {
	return &GetGamificationScorecardsUserBestpointsRequestTimeout{}
}

/*
GetGamificationScorecardsUserBestpointsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetGamificationScorecardsUserBestpointsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards user bestpoints request timeout response has a 2xx status code
func (o *GetGamificationScorecardsUserBestpointsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards user bestpoints request timeout response has a 3xx status code
func (o *GetGamificationScorecardsUserBestpointsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards user bestpoints request timeout response has a 4xx status code
func (o *GetGamificationScorecardsUserBestpointsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification scorecards user bestpoints request timeout response has a 5xx status code
func (o *GetGamificationScorecardsUserBestpointsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification scorecards user bestpoints request timeout response a status code equal to that given
func (o *GetGamificationScorecardsUserBestpointsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetGamificationScorecardsUserBestpointsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/users/{userId}/bestpoints][%d] getGamificationScorecardsUserBestpointsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetGamificationScorecardsUserBestpointsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/users/{userId}/bestpoints][%d] getGamificationScorecardsUserBestpointsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetGamificationScorecardsUserBestpointsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsUserBestpointsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsUserBestpointsRequestEntityTooLarge creates a GetGamificationScorecardsUserBestpointsRequestEntityTooLarge with default headers values
func NewGetGamificationScorecardsUserBestpointsRequestEntityTooLarge() *GetGamificationScorecardsUserBestpointsRequestEntityTooLarge {
	return &GetGamificationScorecardsUserBestpointsRequestEntityTooLarge{}
}

/*
GetGamificationScorecardsUserBestpointsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetGamificationScorecardsUserBestpointsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards user bestpoints request entity too large response has a 2xx status code
func (o *GetGamificationScorecardsUserBestpointsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards user bestpoints request entity too large response has a 3xx status code
func (o *GetGamificationScorecardsUserBestpointsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards user bestpoints request entity too large response has a 4xx status code
func (o *GetGamificationScorecardsUserBestpointsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification scorecards user bestpoints request entity too large response has a 5xx status code
func (o *GetGamificationScorecardsUserBestpointsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification scorecards user bestpoints request entity too large response a status code equal to that given
func (o *GetGamificationScorecardsUserBestpointsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetGamificationScorecardsUserBestpointsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/users/{userId}/bestpoints][%d] getGamificationScorecardsUserBestpointsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetGamificationScorecardsUserBestpointsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/users/{userId}/bestpoints][%d] getGamificationScorecardsUserBestpointsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetGamificationScorecardsUserBestpointsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsUserBestpointsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsUserBestpointsUnsupportedMediaType creates a GetGamificationScorecardsUserBestpointsUnsupportedMediaType with default headers values
func NewGetGamificationScorecardsUserBestpointsUnsupportedMediaType() *GetGamificationScorecardsUserBestpointsUnsupportedMediaType {
	return &GetGamificationScorecardsUserBestpointsUnsupportedMediaType{}
}

/*
GetGamificationScorecardsUserBestpointsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetGamificationScorecardsUserBestpointsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards user bestpoints unsupported media type response has a 2xx status code
func (o *GetGamificationScorecardsUserBestpointsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards user bestpoints unsupported media type response has a 3xx status code
func (o *GetGamificationScorecardsUserBestpointsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards user bestpoints unsupported media type response has a 4xx status code
func (o *GetGamificationScorecardsUserBestpointsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification scorecards user bestpoints unsupported media type response has a 5xx status code
func (o *GetGamificationScorecardsUserBestpointsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification scorecards user bestpoints unsupported media type response a status code equal to that given
func (o *GetGamificationScorecardsUserBestpointsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetGamificationScorecardsUserBestpointsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/users/{userId}/bestpoints][%d] getGamificationScorecardsUserBestpointsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetGamificationScorecardsUserBestpointsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/users/{userId}/bestpoints][%d] getGamificationScorecardsUserBestpointsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetGamificationScorecardsUserBestpointsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsUserBestpointsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsUserBestpointsTooManyRequests creates a GetGamificationScorecardsUserBestpointsTooManyRequests with default headers values
func NewGetGamificationScorecardsUserBestpointsTooManyRequests() *GetGamificationScorecardsUserBestpointsTooManyRequests {
	return &GetGamificationScorecardsUserBestpointsTooManyRequests{}
}

/*
GetGamificationScorecardsUserBestpointsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetGamificationScorecardsUserBestpointsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards user bestpoints too many requests response has a 2xx status code
func (o *GetGamificationScorecardsUserBestpointsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards user bestpoints too many requests response has a 3xx status code
func (o *GetGamificationScorecardsUserBestpointsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards user bestpoints too many requests response has a 4xx status code
func (o *GetGamificationScorecardsUserBestpointsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gamification scorecards user bestpoints too many requests response has a 5xx status code
func (o *GetGamificationScorecardsUserBestpointsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get gamification scorecards user bestpoints too many requests response a status code equal to that given
func (o *GetGamificationScorecardsUserBestpointsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetGamificationScorecardsUserBestpointsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/users/{userId}/bestpoints][%d] getGamificationScorecardsUserBestpointsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetGamificationScorecardsUserBestpointsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/users/{userId}/bestpoints][%d] getGamificationScorecardsUserBestpointsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetGamificationScorecardsUserBestpointsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsUserBestpointsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsUserBestpointsInternalServerError creates a GetGamificationScorecardsUserBestpointsInternalServerError with default headers values
func NewGetGamificationScorecardsUserBestpointsInternalServerError() *GetGamificationScorecardsUserBestpointsInternalServerError {
	return &GetGamificationScorecardsUserBestpointsInternalServerError{}
}

/*
GetGamificationScorecardsUserBestpointsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetGamificationScorecardsUserBestpointsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards user bestpoints internal server error response has a 2xx status code
func (o *GetGamificationScorecardsUserBestpointsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards user bestpoints internal server error response has a 3xx status code
func (o *GetGamificationScorecardsUserBestpointsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards user bestpoints internal server error response has a 4xx status code
func (o *GetGamificationScorecardsUserBestpointsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get gamification scorecards user bestpoints internal server error response has a 5xx status code
func (o *GetGamificationScorecardsUserBestpointsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get gamification scorecards user bestpoints internal server error response a status code equal to that given
func (o *GetGamificationScorecardsUserBestpointsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetGamificationScorecardsUserBestpointsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/users/{userId}/bestpoints][%d] getGamificationScorecardsUserBestpointsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGamificationScorecardsUserBestpointsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/users/{userId}/bestpoints][%d] getGamificationScorecardsUserBestpointsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGamificationScorecardsUserBestpointsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsUserBestpointsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsUserBestpointsServiceUnavailable creates a GetGamificationScorecardsUserBestpointsServiceUnavailable with default headers values
func NewGetGamificationScorecardsUserBestpointsServiceUnavailable() *GetGamificationScorecardsUserBestpointsServiceUnavailable {
	return &GetGamificationScorecardsUserBestpointsServiceUnavailable{}
}

/*
GetGamificationScorecardsUserBestpointsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetGamificationScorecardsUserBestpointsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards user bestpoints service unavailable response has a 2xx status code
func (o *GetGamificationScorecardsUserBestpointsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards user bestpoints service unavailable response has a 3xx status code
func (o *GetGamificationScorecardsUserBestpointsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards user bestpoints service unavailable response has a 4xx status code
func (o *GetGamificationScorecardsUserBestpointsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get gamification scorecards user bestpoints service unavailable response has a 5xx status code
func (o *GetGamificationScorecardsUserBestpointsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get gamification scorecards user bestpoints service unavailable response a status code equal to that given
func (o *GetGamificationScorecardsUserBestpointsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetGamificationScorecardsUserBestpointsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/users/{userId}/bestpoints][%d] getGamificationScorecardsUserBestpointsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetGamificationScorecardsUserBestpointsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/users/{userId}/bestpoints][%d] getGamificationScorecardsUserBestpointsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetGamificationScorecardsUserBestpointsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsUserBestpointsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGamificationScorecardsUserBestpointsGatewayTimeout creates a GetGamificationScorecardsUserBestpointsGatewayTimeout with default headers values
func NewGetGamificationScorecardsUserBestpointsGatewayTimeout() *GetGamificationScorecardsUserBestpointsGatewayTimeout {
	return &GetGamificationScorecardsUserBestpointsGatewayTimeout{}
}

/*
GetGamificationScorecardsUserBestpointsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetGamificationScorecardsUserBestpointsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get gamification scorecards user bestpoints gateway timeout response has a 2xx status code
func (o *GetGamificationScorecardsUserBestpointsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gamification scorecards user bestpoints gateway timeout response has a 3xx status code
func (o *GetGamificationScorecardsUserBestpointsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gamification scorecards user bestpoints gateway timeout response has a 4xx status code
func (o *GetGamificationScorecardsUserBestpointsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get gamification scorecards user bestpoints gateway timeout response has a 5xx status code
func (o *GetGamificationScorecardsUserBestpointsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get gamification scorecards user bestpoints gateway timeout response a status code equal to that given
func (o *GetGamificationScorecardsUserBestpointsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetGamificationScorecardsUserBestpointsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/users/{userId}/bestpoints][%d] getGamificationScorecardsUserBestpointsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetGamificationScorecardsUserBestpointsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/gamification/scorecards/users/{userId}/bestpoints][%d] getGamificationScorecardsUserBestpointsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetGamificationScorecardsUserBestpointsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGamificationScorecardsUserBestpointsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
