// Code generated by go-swagger; DO NOT EDIT.

package gamification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostGamificationProfileMembersValidateReader is a Reader for the PostGamificationProfileMembersValidate structure.
type PostGamificationProfileMembersValidateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostGamificationProfileMembersValidateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostGamificationProfileMembersValidateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostGamificationProfileMembersValidateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostGamificationProfileMembersValidateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostGamificationProfileMembersValidateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostGamificationProfileMembersValidateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostGamificationProfileMembersValidateRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostGamificationProfileMembersValidateRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostGamificationProfileMembersValidateUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostGamificationProfileMembersValidateTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostGamificationProfileMembersValidateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostGamificationProfileMembersValidateServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostGamificationProfileMembersValidateGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostGamificationProfileMembersValidateOK creates a PostGamificationProfileMembersValidateOK with default headers values
func NewPostGamificationProfileMembersValidateOK() *PostGamificationProfileMembersValidateOK {
	return &PostGamificationProfileMembersValidateOK{}
}

/*
PostGamificationProfileMembersValidateOK describes a response with status code 200, with default header values.

successful operation
*/
type PostGamificationProfileMembersValidateOK struct {
	Payload *models.AssignmentValidation
}

// IsSuccess returns true when this post gamification profile members validate o k response has a 2xx status code
func (o *PostGamificationProfileMembersValidateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post gamification profile members validate o k response has a 3xx status code
func (o *PostGamificationProfileMembersValidateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profile members validate o k response has a 4xx status code
func (o *PostGamificationProfileMembersValidateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post gamification profile members validate o k response has a 5xx status code
func (o *PostGamificationProfileMembersValidateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post gamification profile members validate o k response a status code equal to that given
func (o *PostGamificationProfileMembersValidateOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostGamificationProfileMembersValidateOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{profileId}/members/validate][%d] postGamificationProfileMembersValidateOK  %+v", 200, o.Payload)
}

func (o *PostGamificationProfileMembersValidateOK) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{profileId}/members/validate][%d] postGamificationProfileMembersValidateOK  %+v", 200, o.Payload)
}

func (o *PostGamificationProfileMembersValidateOK) GetPayload() *models.AssignmentValidation {
	return o.Payload
}

func (o *PostGamificationProfileMembersValidateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AssignmentValidation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfileMembersValidateBadRequest creates a PostGamificationProfileMembersValidateBadRequest with default headers values
func NewPostGamificationProfileMembersValidateBadRequest() *PostGamificationProfileMembersValidateBadRequest {
	return &PostGamificationProfileMembersValidateBadRequest{}
}

/*
PostGamificationProfileMembersValidateBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostGamificationProfileMembersValidateBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profile members validate bad request response has a 2xx status code
func (o *PostGamificationProfileMembersValidateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profile members validate bad request response has a 3xx status code
func (o *PostGamificationProfileMembersValidateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profile members validate bad request response has a 4xx status code
func (o *PostGamificationProfileMembersValidateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post gamification profile members validate bad request response has a 5xx status code
func (o *PostGamificationProfileMembersValidateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post gamification profile members validate bad request response a status code equal to that given
func (o *PostGamificationProfileMembersValidateBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostGamificationProfileMembersValidateBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{profileId}/members/validate][%d] postGamificationProfileMembersValidateBadRequest  %+v", 400, o.Payload)
}

func (o *PostGamificationProfileMembersValidateBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{profileId}/members/validate][%d] postGamificationProfileMembersValidateBadRequest  %+v", 400, o.Payload)
}

func (o *PostGamificationProfileMembersValidateBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfileMembersValidateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfileMembersValidateUnauthorized creates a PostGamificationProfileMembersValidateUnauthorized with default headers values
func NewPostGamificationProfileMembersValidateUnauthorized() *PostGamificationProfileMembersValidateUnauthorized {
	return &PostGamificationProfileMembersValidateUnauthorized{}
}

/*
PostGamificationProfileMembersValidateUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostGamificationProfileMembersValidateUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profile members validate unauthorized response has a 2xx status code
func (o *PostGamificationProfileMembersValidateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profile members validate unauthorized response has a 3xx status code
func (o *PostGamificationProfileMembersValidateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profile members validate unauthorized response has a 4xx status code
func (o *PostGamificationProfileMembersValidateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post gamification profile members validate unauthorized response has a 5xx status code
func (o *PostGamificationProfileMembersValidateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post gamification profile members validate unauthorized response a status code equal to that given
func (o *PostGamificationProfileMembersValidateUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostGamificationProfileMembersValidateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{profileId}/members/validate][%d] postGamificationProfileMembersValidateUnauthorized  %+v", 401, o.Payload)
}

func (o *PostGamificationProfileMembersValidateUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{profileId}/members/validate][%d] postGamificationProfileMembersValidateUnauthorized  %+v", 401, o.Payload)
}

func (o *PostGamificationProfileMembersValidateUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfileMembersValidateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfileMembersValidateForbidden creates a PostGamificationProfileMembersValidateForbidden with default headers values
func NewPostGamificationProfileMembersValidateForbidden() *PostGamificationProfileMembersValidateForbidden {
	return &PostGamificationProfileMembersValidateForbidden{}
}

/*
PostGamificationProfileMembersValidateForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostGamificationProfileMembersValidateForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profile members validate forbidden response has a 2xx status code
func (o *PostGamificationProfileMembersValidateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profile members validate forbidden response has a 3xx status code
func (o *PostGamificationProfileMembersValidateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profile members validate forbidden response has a 4xx status code
func (o *PostGamificationProfileMembersValidateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post gamification profile members validate forbidden response has a 5xx status code
func (o *PostGamificationProfileMembersValidateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post gamification profile members validate forbidden response a status code equal to that given
func (o *PostGamificationProfileMembersValidateForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostGamificationProfileMembersValidateForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{profileId}/members/validate][%d] postGamificationProfileMembersValidateForbidden  %+v", 403, o.Payload)
}

func (o *PostGamificationProfileMembersValidateForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{profileId}/members/validate][%d] postGamificationProfileMembersValidateForbidden  %+v", 403, o.Payload)
}

func (o *PostGamificationProfileMembersValidateForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfileMembersValidateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfileMembersValidateNotFound creates a PostGamificationProfileMembersValidateNotFound with default headers values
func NewPostGamificationProfileMembersValidateNotFound() *PostGamificationProfileMembersValidateNotFound {
	return &PostGamificationProfileMembersValidateNotFound{}
}

/*
PostGamificationProfileMembersValidateNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostGamificationProfileMembersValidateNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profile members validate not found response has a 2xx status code
func (o *PostGamificationProfileMembersValidateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profile members validate not found response has a 3xx status code
func (o *PostGamificationProfileMembersValidateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profile members validate not found response has a 4xx status code
func (o *PostGamificationProfileMembersValidateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post gamification profile members validate not found response has a 5xx status code
func (o *PostGamificationProfileMembersValidateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post gamification profile members validate not found response a status code equal to that given
func (o *PostGamificationProfileMembersValidateNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostGamificationProfileMembersValidateNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{profileId}/members/validate][%d] postGamificationProfileMembersValidateNotFound  %+v", 404, o.Payload)
}

func (o *PostGamificationProfileMembersValidateNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{profileId}/members/validate][%d] postGamificationProfileMembersValidateNotFound  %+v", 404, o.Payload)
}

func (o *PostGamificationProfileMembersValidateNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfileMembersValidateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfileMembersValidateRequestTimeout creates a PostGamificationProfileMembersValidateRequestTimeout with default headers values
func NewPostGamificationProfileMembersValidateRequestTimeout() *PostGamificationProfileMembersValidateRequestTimeout {
	return &PostGamificationProfileMembersValidateRequestTimeout{}
}

/*
PostGamificationProfileMembersValidateRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostGamificationProfileMembersValidateRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profile members validate request timeout response has a 2xx status code
func (o *PostGamificationProfileMembersValidateRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profile members validate request timeout response has a 3xx status code
func (o *PostGamificationProfileMembersValidateRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profile members validate request timeout response has a 4xx status code
func (o *PostGamificationProfileMembersValidateRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post gamification profile members validate request timeout response has a 5xx status code
func (o *PostGamificationProfileMembersValidateRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post gamification profile members validate request timeout response a status code equal to that given
func (o *PostGamificationProfileMembersValidateRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostGamificationProfileMembersValidateRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{profileId}/members/validate][%d] postGamificationProfileMembersValidateRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostGamificationProfileMembersValidateRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{profileId}/members/validate][%d] postGamificationProfileMembersValidateRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostGamificationProfileMembersValidateRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfileMembersValidateRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfileMembersValidateRequestEntityTooLarge creates a PostGamificationProfileMembersValidateRequestEntityTooLarge with default headers values
func NewPostGamificationProfileMembersValidateRequestEntityTooLarge() *PostGamificationProfileMembersValidateRequestEntityTooLarge {
	return &PostGamificationProfileMembersValidateRequestEntityTooLarge{}
}

/*
PostGamificationProfileMembersValidateRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostGamificationProfileMembersValidateRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profile members validate request entity too large response has a 2xx status code
func (o *PostGamificationProfileMembersValidateRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profile members validate request entity too large response has a 3xx status code
func (o *PostGamificationProfileMembersValidateRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profile members validate request entity too large response has a 4xx status code
func (o *PostGamificationProfileMembersValidateRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post gamification profile members validate request entity too large response has a 5xx status code
func (o *PostGamificationProfileMembersValidateRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post gamification profile members validate request entity too large response a status code equal to that given
func (o *PostGamificationProfileMembersValidateRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostGamificationProfileMembersValidateRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{profileId}/members/validate][%d] postGamificationProfileMembersValidateRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostGamificationProfileMembersValidateRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{profileId}/members/validate][%d] postGamificationProfileMembersValidateRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostGamificationProfileMembersValidateRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfileMembersValidateRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfileMembersValidateUnsupportedMediaType creates a PostGamificationProfileMembersValidateUnsupportedMediaType with default headers values
func NewPostGamificationProfileMembersValidateUnsupportedMediaType() *PostGamificationProfileMembersValidateUnsupportedMediaType {
	return &PostGamificationProfileMembersValidateUnsupportedMediaType{}
}

/*
PostGamificationProfileMembersValidateUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostGamificationProfileMembersValidateUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profile members validate unsupported media type response has a 2xx status code
func (o *PostGamificationProfileMembersValidateUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profile members validate unsupported media type response has a 3xx status code
func (o *PostGamificationProfileMembersValidateUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profile members validate unsupported media type response has a 4xx status code
func (o *PostGamificationProfileMembersValidateUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post gamification profile members validate unsupported media type response has a 5xx status code
func (o *PostGamificationProfileMembersValidateUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post gamification profile members validate unsupported media type response a status code equal to that given
func (o *PostGamificationProfileMembersValidateUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostGamificationProfileMembersValidateUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{profileId}/members/validate][%d] postGamificationProfileMembersValidateUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostGamificationProfileMembersValidateUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{profileId}/members/validate][%d] postGamificationProfileMembersValidateUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostGamificationProfileMembersValidateUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfileMembersValidateUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfileMembersValidateTooManyRequests creates a PostGamificationProfileMembersValidateTooManyRequests with default headers values
func NewPostGamificationProfileMembersValidateTooManyRequests() *PostGamificationProfileMembersValidateTooManyRequests {
	return &PostGamificationProfileMembersValidateTooManyRequests{}
}

/*
PostGamificationProfileMembersValidateTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostGamificationProfileMembersValidateTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profile members validate too many requests response has a 2xx status code
func (o *PostGamificationProfileMembersValidateTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profile members validate too many requests response has a 3xx status code
func (o *PostGamificationProfileMembersValidateTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profile members validate too many requests response has a 4xx status code
func (o *PostGamificationProfileMembersValidateTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post gamification profile members validate too many requests response has a 5xx status code
func (o *PostGamificationProfileMembersValidateTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post gamification profile members validate too many requests response a status code equal to that given
func (o *PostGamificationProfileMembersValidateTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostGamificationProfileMembersValidateTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{profileId}/members/validate][%d] postGamificationProfileMembersValidateTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostGamificationProfileMembersValidateTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{profileId}/members/validate][%d] postGamificationProfileMembersValidateTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostGamificationProfileMembersValidateTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfileMembersValidateTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfileMembersValidateInternalServerError creates a PostGamificationProfileMembersValidateInternalServerError with default headers values
func NewPostGamificationProfileMembersValidateInternalServerError() *PostGamificationProfileMembersValidateInternalServerError {
	return &PostGamificationProfileMembersValidateInternalServerError{}
}

/*
PostGamificationProfileMembersValidateInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostGamificationProfileMembersValidateInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profile members validate internal server error response has a 2xx status code
func (o *PostGamificationProfileMembersValidateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profile members validate internal server error response has a 3xx status code
func (o *PostGamificationProfileMembersValidateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profile members validate internal server error response has a 4xx status code
func (o *PostGamificationProfileMembersValidateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post gamification profile members validate internal server error response has a 5xx status code
func (o *PostGamificationProfileMembersValidateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post gamification profile members validate internal server error response a status code equal to that given
func (o *PostGamificationProfileMembersValidateInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostGamificationProfileMembersValidateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{profileId}/members/validate][%d] postGamificationProfileMembersValidateInternalServerError  %+v", 500, o.Payload)
}

func (o *PostGamificationProfileMembersValidateInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{profileId}/members/validate][%d] postGamificationProfileMembersValidateInternalServerError  %+v", 500, o.Payload)
}

func (o *PostGamificationProfileMembersValidateInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfileMembersValidateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfileMembersValidateServiceUnavailable creates a PostGamificationProfileMembersValidateServiceUnavailable with default headers values
func NewPostGamificationProfileMembersValidateServiceUnavailable() *PostGamificationProfileMembersValidateServiceUnavailable {
	return &PostGamificationProfileMembersValidateServiceUnavailable{}
}

/*
PostGamificationProfileMembersValidateServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostGamificationProfileMembersValidateServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profile members validate service unavailable response has a 2xx status code
func (o *PostGamificationProfileMembersValidateServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profile members validate service unavailable response has a 3xx status code
func (o *PostGamificationProfileMembersValidateServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profile members validate service unavailable response has a 4xx status code
func (o *PostGamificationProfileMembersValidateServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post gamification profile members validate service unavailable response has a 5xx status code
func (o *PostGamificationProfileMembersValidateServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post gamification profile members validate service unavailable response a status code equal to that given
func (o *PostGamificationProfileMembersValidateServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostGamificationProfileMembersValidateServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{profileId}/members/validate][%d] postGamificationProfileMembersValidateServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostGamificationProfileMembersValidateServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{profileId}/members/validate][%d] postGamificationProfileMembersValidateServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostGamificationProfileMembersValidateServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfileMembersValidateServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGamificationProfileMembersValidateGatewayTimeout creates a PostGamificationProfileMembersValidateGatewayTimeout with default headers values
func NewPostGamificationProfileMembersValidateGatewayTimeout() *PostGamificationProfileMembersValidateGatewayTimeout {
	return &PostGamificationProfileMembersValidateGatewayTimeout{}
}

/*
PostGamificationProfileMembersValidateGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostGamificationProfileMembersValidateGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post gamification profile members validate gateway timeout response has a 2xx status code
func (o *PostGamificationProfileMembersValidateGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post gamification profile members validate gateway timeout response has a 3xx status code
func (o *PostGamificationProfileMembersValidateGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post gamification profile members validate gateway timeout response has a 4xx status code
func (o *PostGamificationProfileMembersValidateGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post gamification profile members validate gateway timeout response has a 5xx status code
func (o *PostGamificationProfileMembersValidateGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post gamification profile members validate gateway timeout response a status code equal to that given
func (o *PostGamificationProfileMembersValidateGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostGamificationProfileMembersValidateGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{profileId}/members/validate][%d] postGamificationProfileMembersValidateGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostGamificationProfileMembersValidateGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/gamification/profiles/{profileId}/members/validate][%d] postGamificationProfileMembersValidateGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostGamificationProfileMembersValidateGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostGamificationProfileMembersValidateGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
