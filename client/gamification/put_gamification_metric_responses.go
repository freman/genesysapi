// Code generated by go-swagger; DO NOT EDIT.

package gamification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutGamificationMetricReader is a Reader for the PutGamificationMetric structure.
type PutGamificationMetricReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutGamificationMetricReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutGamificationMetricOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutGamificationMetricBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutGamificationMetricUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutGamificationMetricForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutGamificationMetricNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutGamificationMetricRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutGamificationMetricUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutGamificationMetricTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutGamificationMetricInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutGamificationMetricServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutGamificationMetricGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutGamificationMetricOK creates a PutGamificationMetricOK with default headers values
func NewPutGamificationMetricOK() *PutGamificationMetricOK {
	return &PutGamificationMetricOK{}
}

/*PutGamificationMetricOK handles this case with default header values.

successful operation
*/
type PutGamificationMetricOK struct {
	Payload *models.Metric
}

func (o *PutGamificationMetricOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/gamification/metrics/{metricId}][%d] putGamificationMetricOK  %+v", 200, o.Payload)
}

func (o *PutGamificationMetricOK) GetPayload() *models.Metric {
	return o.Payload
}

func (o *PutGamificationMetricOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Metric)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutGamificationMetricBadRequest creates a PutGamificationMetricBadRequest with default headers values
func NewPutGamificationMetricBadRequest() *PutGamificationMetricBadRequest {
	return &PutGamificationMetricBadRequest{}
}

/*PutGamificationMetricBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutGamificationMetricBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PutGamificationMetricBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/gamification/metrics/{metricId}][%d] putGamificationMetricBadRequest  %+v", 400, o.Payload)
}

func (o *PutGamificationMetricBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutGamificationMetricBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutGamificationMetricUnauthorized creates a PutGamificationMetricUnauthorized with default headers values
func NewPutGamificationMetricUnauthorized() *PutGamificationMetricUnauthorized {
	return &PutGamificationMetricUnauthorized{}
}

/*PutGamificationMetricUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PutGamificationMetricUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PutGamificationMetricUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/gamification/metrics/{metricId}][%d] putGamificationMetricUnauthorized  %+v", 401, o.Payload)
}

func (o *PutGamificationMetricUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutGamificationMetricUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutGamificationMetricForbidden creates a PutGamificationMetricForbidden with default headers values
func NewPutGamificationMetricForbidden() *PutGamificationMetricForbidden {
	return &PutGamificationMetricForbidden{}
}

/*PutGamificationMetricForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PutGamificationMetricForbidden struct {
	Payload *models.ErrorBody
}

func (o *PutGamificationMetricForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/gamification/metrics/{metricId}][%d] putGamificationMetricForbidden  %+v", 403, o.Payload)
}

func (o *PutGamificationMetricForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutGamificationMetricForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutGamificationMetricNotFound creates a PutGamificationMetricNotFound with default headers values
func NewPutGamificationMetricNotFound() *PutGamificationMetricNotFound {
	return &PutGamificationMetricNotFound{}
}

/*PutGamificationMetricNotFound handles this case with default header values.

The requested resource was not found.
*/
type PutGamificationMetricNotFound struct {
	Payload *models.ErrorBody
}

func (o *PutGamificationMetricNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/gamification/metrics/{metricId}][%d] putGamificationMetricNotFound  %+v", 404, o.Payload)
}

func (o *PutGamificationMetricNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutGamificationMetricNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutGamificationMetricRequestEntityTooLarge creates a PutGamificationMetricRequestEntityTooLarge with default headers values
func NewPutGamificationMetricRequestEntityTooLarge() *PutGamificationMetricRequestEntityTooLarge {
	return &PutGamificationMetricRequestEntityTooLarge{}
}

/*PutGamificationMetricRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type PutGamificationMetricRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PutGamificationMetricRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/gamification/metrics/{metricId}][%d] putGamificationMetricRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutGamificationMetricRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutGamificationMetricRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutGamificationMetricUnsupportedMediaType creates a PutGamificationMetricUnsupportedMediaType with default headers values
func NewPutGamificationMetricUnsupportedMediaType() *PutGamificationMetricUnsupportedMediaType {
	return &PutGamificationMetricUnsupportedMediaType{}
}

/*PutGamificationMetricUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutGamificationMetricUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PutGamificationMetricUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/gamification/metrics/{metricId}][%d] putGamificationMetricUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutGamificationMetricUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutGamificationMetricUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutGamificationMetricTooManyRequests creates a PutGamificationMetricTooManyRequests with default headers values
func NewPutGamificationMetricTooManyRequests() *PutGamificationMetricTooManyRequests {
	return &PutGamificationMetricTooManyRequests{}
}

/*PutGamificationMetricTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type PutGamificationMetricTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PutGamificationMetricTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/gamification/metrics/{metricId}][%d] putGamificationMetricTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutGamificationMetricTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutGamificationMetricTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutGamificationMetricInternalServerError creates a PutGamificationMetricInternalServerError with default headers values
func NewPutGamificationMetricInternalServerError() *PutGamificationMetricInternalServerError {
	return &PutGamificationMetricInternalServerError{}
}

/*PutGamificationMetricInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutGamificationMetricInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PutGamificationMetricInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/gamification/metrics/{metricId}][%d] putGamificationMetricInternalServerError  %+v", 500, o.Payload)
}

func (o *PutGamificationMetricInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutGamificationMetricInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutGamificationMetricServiceUnavailable creates a PutGamificationMetricServiceUnavailable with default headers values
func NewPutGamificationMetricServiceUnavailable() *PutGamificationMetricServiceUnavailable {
	return &PutGamificationMetricServiceUnavailable{}
}

/*PutGamificationMetricServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutGamificationMetricServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PutGamificationMetricServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/gamification/metrics/{metricId}][%d] putGamificationMetricServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutGamificationMetricServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutGamificationMetricServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutGamificationMetricGatewayTimeout creates a PutGamificationMetricGatewayTimeout with default headers values
func NewPutGamificationMetricGatewayTimeout() *PutGamificationMetricGatewayTimeout {
	return &PutGamificationMetricGatewayTimeout{}
}

/*PutGamificationMetricGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PutGamificationMetricGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutGamificationMetricGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/gamification/metrics/{metricId}][%d] putGamificationMetricGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutGamificationMetricGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutGamificationMetricGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
