// Code generated by go-swagger; DO NOT EDIT.

package quality

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PatchQualityFormsSurveyReader is a Reader for the PatchQualityFormsSurvey structure.
type PatchQualityFormsSurveyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchQualityFormsSurveyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchQualityFormsSurveyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchQualityFormsSurveyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchQualityFormsSurveyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchQualityFormsSurveyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchQualityFormsSurveyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPatchQualityFormsSurveyRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPatchQualityFormsSurveyRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchQualityFormsSurveyUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPatchQualityFormsSurveyTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchQualityFormsSurveyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPatchQualityFormsSurveyServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPatchQualityFormsSurveyGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchQualityFormsSurveyOK creates a PatchQualityFormsSurveyOK with default headers values
func NewPatchQualityFormsSurveyOK() *PatchQualityFormsSurveyOK {
	return &PatchQualityFormsSurveyOK{}
}

/*PatchQualityFormsSurveyOK handles this case with default header values.

successful operation
*/
type PatchQualityFormsSurveyOK struct {
	Payload *models.SurveyForm
}

func (o *PatchQualityFormsSurveyOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyOK  %+v", 200, o.Payload)
}

func (o *PatchQualityFormsSurveyOK) GetPayload() *models.SurveyForm {
	return o.Payload
}

func (o *PatchQualityFormsSurveyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SurveyForm)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchQualityFormsSurveyBadRequest creates a PatchQualityFormsSurveyBadRequest with default headers values
func NewPatchQualityFormsSurveyBadRequest() *PatchQualityFormsSurveyBadRequest {
	return &PatchQualityFormsSurveyBadRequest{}
}

/*PatchQualityFormsSurveyBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PatchQualityFormsSurveyBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PatchQualityFormsSurveyBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyBadRequest  %+v", 400, o.Payload)
}

func (o *PatchQualityFormsSurveyBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchQualityFormsSurveyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchQualityFormsSurveyUnauthorized creates a PatchQualityFormsSurveyUnauthorized with default headers values
func NewPatchQualityFormsSurveyUnauthorized() *PatchQualityFormsSurveyUnauthorized {
	return &PatchQualityFormsSurveyUnauthorized{}
}

/*PatchQualityFormsSurveyUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PatchQualityFormsSurveyUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PatchQualityFormsSurveyUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchQualityFormsSurveyUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchQualityFormsSurveyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchQualityFormsSurveyForbidden creates a PatchQualityFormsSurveyForbidden with default headers values
func NewPatchQualityFormsSurveyForbidden() *PatchQualityFormsSurveyForbidden {
	return &PatchQualityFormsSurveyForbidden{}
}

/*PatchQualityFormsSurveyForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PatchQualityFormsSurveyForbidden struct {
	Payload *models.ErrorBody
}

func (o *PatchQualityFormsSurveyForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyForbidden  %+v", 403, o.Payload)
}

func (o *PatchQualityFormsSurveyForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchQualityFormsSurveyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchQualityFormsSurveyNotFound creates a PatchQualityFormsSurveyNotFound with default headers values
func NewPatchQualityFormsSurveyNotFound() *PatchQualityFormsSurveyNotFound {
	return &PatchQualityFormsSurveyNotFound{}
}

/*PatchQualityFormsSurveyNotFound handles this case with default header values.

The requested resource was not found.
*/
type PatchQualityFormsSurveyNotFound struct {
	Payload *models.ErrorBody
}

func (o *PatchQualityFormsSurveyNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyNotFound  %+v", 404, o.Payload)
}

func (o *PatchQualityFormsSurveyNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchQualityFormsSurveyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchQualityFormsSurveyRequestTimeout creates a PatchQualityFormsSurveyRequestTimeout with default headers values
func NewPatchQualityFormsSurveyRequestTimeout() *PatchQualityFormsSurveyRequestTimeout {
	return &PatchQualityFormsSurveyRequestTimeout{}
}

/*PatchQualityFormsSurveyRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PatchQualityFormsSurveyRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PatchQualityFormsSurveyRequestTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchQualityFormsSurveyRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchQualityFormsSurveyRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchQualityFormsSurveyRequestEntityTooLarge creates a PatchQualityFormsSurveyRequestEntityTooLarge with default headers values
func NewPatchQualityFormsSurveyRequestEntityTooLarge() *PatchQualityFormsSurveyRequestEntityTooLarge {
	return &PatchQualityFormsSurveyRequestEntityTooLarge{}
}

/*PatchQualityFormsSurveyRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type PatchQualityFormsSurveyRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PatchQualityFormsSurveyRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchQualityFormsSurveyRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchQualityFormsSurveyRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchQualityFormsSurveyUnsupportedMediaType creates a PatchQualityFormsSurveyUnsupportedMediaType with default headers values
func NewPatchQualityFormsSurveyUnsupportedMediaType() *PatchQualityFormsSurveyUnsupportedMediaType {
	return &PatchQualityFormsSurveyUnsupportedMediaType{}
}

/*PatchQualityFormsSurveyUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PatchQualityFormsSurveyUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PatchQualityFormsSurveyUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchQualityFormsSurveyUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchQualityFormsSurveyUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchQualityFormsSurveyTooManyRequests creates a PatchQualityFormsSurveyTooManyRequests with default headers values
func NewPatchQualityFormsSurveyTooManyRequests() *PatchQualityFormsSurveyTooManyRequests {
	return &PatchQualityFormsSurveyTooManyRequests{}
}

/*PatchQualityFormsSurveyTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PatchQualityFormsSurveyTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PatchQualityFormsSurveyTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchQualityFormsSurveyTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchQualityFormsSurveyTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchQualityFormsSurveyInternalServerError creates a PatchQualityFormsSurveyInternalServerError with default headers values
func NewPatchQualityFormsSurveyInternalServerError() *PatchQualityFormsSurveyInternalServerError {
	return &PatchQualityFormsSurveyInternalServerError{}
}

/*PatchQualityFormsSurveyInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PatchQualityFormsSurveyInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PatchQualityFormsSurveyInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchQualityFormsSurveyInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchQualityFormsSurveyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchQualityFormsSurveyServiceUnavailable creates a PatchQualityFormsSurveyServiceUnavailable with default headers values
func NewPatchQualityFormsSurveyServiceUnavailable() *PatchQualityFormsSurveyServiceUnavailable {
	return &PatchQualityFormsSurveyServiceUnavailable{}
}

/*PatchQualityFormsSurveyServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PatchQualityFormsSurveyServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PatchQualityFormsSurveyServiceUnavailable) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchQualityFormsSurveyServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchQualityFormsSurveyServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchQualityFormsSurveyGatewayTimeout creates a PatchQualityFormsSurveyGatewayTimeout with default headers values
func NewPatchQualityFormsSurveyGatewayTimeout() *PatchQualityFormsSurveyGatewayTimeout {
	return &PatchQualityFormsSurveyGatewayTimeout{}
}

/*PatchQualityFormsSurveyGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PatchQualityFormsSurveyGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PatchQualityFormsSurveyGatewayTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchQualityFormsSurveyGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchQualityFormsSurveyGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
