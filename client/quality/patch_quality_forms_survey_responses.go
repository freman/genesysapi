// Code generated by go-swagger; DO NOT EDIT.

package quality

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PatchQualityFormsSurveyReader is a Reader for the PatchQualityFormsSurvey structure.
type PatchQualityFormsSurveyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchQualityFormsSurveyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchQualityFormsSurveyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchQualityFormsSurveyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchQualityFormsSurveyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchQualityFormsSurveyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchQualityFormsSurveyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPatchQualityFormsSurveyRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPatchQualityFormsSurveyRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchQualityFormsSurveyUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPatchQualityFormsSurveyTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchQualityFormsSurveyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPatchQualityFormsSurveyServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPatchQualityFormsSurveyGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchQualityFormsSurveyOK creates a PatchQualityFormsSurveyOK with default headers values
func NewPatchQualityFormsSurveyOK() *PatchQualityFormsSurveyOK {
	return &PatchQualityFormsSurveyOK{}
}

/*
PatchQualityFormsSurveyOK describes a response with status code 200, with default header values.

successful operation
*/
type PatchQualityFormsSurveyOK struct {
	Payload *models.SurveyForm
}

// IsSuccess returns true when this patch quality forms survey o k response has a 2xx status code
func (o *PatchQualityFormsSurveyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch quality forms survey o k response has a 3xx status code
func (o *PatchQualityFormsSurveyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch quality forms survey o k response has a 4xx status code
func (o *PatchQualityFormsSurveyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch quality forms survey o k response has a 5xx status code
func (o *PatchQualityFormsSurveyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this patch quality forms survey o k response a status code equal to that given
func (o *PatchQualityFormsSurveyOK) IsCode(code int) bool {
	return code == 200
}

func (o *PatchQualityFormsSurveyOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyOK  %+v", 200, o.Payload)
}

func (o *PatchQualityFormsSurveyOK) String() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyOK  %+v", 200, o.Payload)
}

func (o *PatchQualityFormsSurveyOK) GetPayload() *models.SurveyForm {
	return o.Payload
}

func (o *PatchQualityFormsSurveyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SurveyForm)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchQualityFormsSurveyBadRequest creates a PatchQualityFormsSurveyBadRequest with default headers values
func NewPatchQualityFormsSurveyBadRequest() *PatchQualityFormsSurveyBadRequest {
	return &PatchQualityFormsSurveyBadRequest{}
}

/*
PatchQualityFormsSurveyBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PatchQualityFormsSurveyBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch quality forms survey bad request response has a 2xx status code
func (o *PatchQualityFormsSurveyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch quality forms survey bad request response has a 3xx status code
func (o *PatchQualityFormsSurveyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch quality forms survey bad request response has a 4xx status code
func (o *PatchQualityFormsSurveyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch quality forms survey bad request response has a 5xx status code
func (o *PatchQualityFormsSurveyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this patch quality forms survey bad request response a status code equal to that given
func (o *PatchQualityFormsSurveyBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PatchQualityFormsSurveyBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyBadRequest  %+v", 400, o.Payload)
}

func (o *PatchQualityFormsSurveyBadRequest) String() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyBadRequest  %+v", 400, o.Payload)
}

func (o *PatchQualityFormsSurveyBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchQualityFormsSurveyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchQualityFormsSurveyUnauthorized creates a PatchQualityFormsSurveyUnauthorized with default headers values
func NewPatchQualityFormsSurveyUnauthorized() *PatchQualityFormsSurveyUnauthorized {
	return &PatchQualityFormsSurveyUnauthorized{}
}

/*
PatchQualityFormsSurveyUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PatchQualityFormsSurveyUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch quality forms survey unauthorized response has a 2xx status code
func (o *PatchQualityFormsSurveyUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch quality forms survey unauthorized response has a 3xx status code
func (o *PatchQualityFormsSurveyUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch quality forms survey unauthorized response has a 4xx status code
func (o *PatchQualityFormsSurveyUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch quality forms survey unauthorized response has a 5xx status code
func (o *PatchQualityFormsSurveyUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this patch quality forms survey unauthorized response a status code equal to that given
func (o *PatchQualityFormsSurveyUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PatchQualityFormsSurveyUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchQualityFormsSurveyUnauthorized) String() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchQualityFormsSurveyUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchQualityFormsSurveyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchQualityFormsSurveyForbidden creates a PatchQualityFormsSurveyForbidden with default headers values
func NewPatchQualityFormsSurveyForbidden() *PatchQualityFormsSurveyForbidden {
	return &PatchQualityFormsSurveyForbidden{}
}

/*
PatchQualityFormsSurveyForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PatchQualityFormsSurveyForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch quality forms survey forbidden response has a 2xx status code
func (o *PatchQualityFormsSurveyForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch quality forms survey forbidden response has a 3xx status code
func (o *PatchQualityFormsSurveyForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch quality forms survey forbidden response has a 4xx status code
func (o *PatchQualityFormsSurveyForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch quality forms survey forbidden response has a 5xx status code
func (o *PatchQualityFormsSurveyForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this patch quality forms survey forbidden response a status code equal to that given
func (o *PatchQualityFormsSurveyForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PatchQualityFormsSurveyForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyForbidden  %+v", 403, o.Payload)
}

func (o *PatchQualityFormsSurveyForbidden) String() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyForbidden  %+v", 403, o.Payload)
}

func (o *PatchQualityFormsSurveyForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchQualityFormsSurveyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchQualityFormsSurveyNotFound creates a PatchQualityFormsSurveyNotFound with default headers values
func NewPatchQualityFormsSurveyNotFound() *PatchQualityFormsSurveyNotFound {
	return &PatchQualityFormsSurveyNotFound{}
}

/*
PatchQualityFormsSurveyNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PatchQualityFormsSurveyNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch quality forms survey not found response has a 2xx status code
func (o *PatchQualityFormsSurveyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch quality forms survey not found response has a 3xx status code
func (o *PatchQualityFormsSurveyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch quality forms survey not found response has a 4xx status code
func (o *PatchQualityFormsSurveyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch quality forms survey not found response has a 5xx status code
func (o *PatchQualityFormsSurveyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this patch quality forms survey not found response a status code equal to that given
func (o *PatchQualityFormsSurveyNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PatchQualityFormsSurveyNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyNotFound  %+v", 404, o.Payload)
}

func (o *PatchQualityFormsSurveyNotFound) String() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyNotFound  %+v", 404, o.Payload)
}

func (o *PatchQualityFormsSurveyNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchQualityFormsSurveyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchQualityFormsSurveyRequestTimeout creates a PatchQualityFormsSurveyRequestTimeout with default headers values
func NewPatchQualityFormsSurveyRequestTimeout() *PatchQualityFormsSurveyRequestTimeout {
	return &PatchQualityFormsSurveyRequestTimeout{}
}

/*
PatchQualityFormsSurveyRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PatchQualityFormsSurveyRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch quality forms survey request timeout response has a 2xx status code
func (o *PatchQualityFormsSurveyRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch quality forms survey request timeout response has a 3xx status code
func (o *PatchQualityFormsSurveyRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch quality forms survey request timeout response has a 4xx status code
func (o *PatchQualityFormsSurveyRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch quality forms survey request timeout response has a 5xx status code
func (o *PatchQualityFormsSurveyRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this patch quality forms survey request timeout response a status code equal to that given
func (o *PatchQualityFormsSurveyRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PatchQualityFormsSurveyRequestTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchQualityFormsSurveyRequestTimeout) String() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyRequestTimeout  %+v", 408, o.Payload)
}

func (o *PatchQualityFormsSurveyRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchQualityFormsSurveyRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchQualityFormsSurveyRequestEntityTooLarge creates a PatchQualityFormsSurveyRequestEntityTooLarge with default headers values
func NewPatchQualityFormsSurveyRequestEntityTooLarge() *PatchQualityFormsSurveyRequestEntityTooLarge {
	return &PatchQualityFormsSurveyRequestEntityTooLarge{}
}

/*
PatchQualityFormsSurveyRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PatchQualityFormsSurveyRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch quality forms survey request entity too large response has a 2xx status code
func (o *PatchQualityFormsSurveyRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch quality forms survey request entity too large response has a 3xx status code
func (o *PatchQualityFormsSurveyRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch quality forms survey request entity too large response has a 4xx status code
func (o *PatchQualityFormsSurveyRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch quality forms survey request entity too large response has a 5xx status code
func (o *PatchQualityFormsSurveyRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this patch quality forms survey request entity too large response a status code equal to that given
func (o *PatchQualityFormsSurveyRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PatchQualityFormsSurveyRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchQualityFormsSurveyRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchQualityFormsSurveyRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchQualityFormsSurveyRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchQualityFormsSurveyUnsupportedMediaType creates a PatchQualityFormsSurveyUnsupportedMediaType with default headers values
func NewPatchQualityFormsSurveyUnsupportedMediaType() *PatchQualityFormsSurveyUnsupportedMediaType {
	return &PatchQualityFormsSurveyUnsupportedMediaType{}
}

/*
PatchQualityFormsSurveyUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PatchQualityFormsSurveyUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch quality forms survey unsupported media type response has a 2xx status code
func (o *PatchQualityFormsSurveyUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch quality forms survey unsupported media type response has a 3xx status code
func (o *PatchQualityFormsSurveyUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch quality forms survey unsupported media type response has a 4xx status code
func (o *PatchQualityFormsSurveyUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch quality forms survey unsupported media type response has a 5xx status code
func (o *PatchQualityFormsSurveyUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this patch quality forms survey unsupported media type response a status code equal to that given
func (o *PatchQualityFormsSurveyUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PatchQualityFormsSurveyUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchQualityFormsSurveyUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchQualityFormsSurveyUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchQualityFormsSurveyUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchQualityFormsSurveyTooManyRequests creates a PatchQualityFormsSurveyTooManyRequests with default headers values
func NewPatchQualityFormsSurveyTooManyRequests() *PatchQualityFormsSurveyTooManyRequests {
	return &PatchQualityFormsSurveyTooManyRequests{}
}

/*
PatchQualityFormsSurveyTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PatchQualityFormsSurveyTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch quality forms survey too many requests response has a 2xx status code
func (o *PatchQualityFormsSurveyTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch quality forms survey too many requests response has a 3xx status code
func (o *PatchQualityFormsSurveyTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch quality forms survey too many requests response has a 4xx status code
func (o *PatchQualityFormsSurveyTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch quality forms survey too many requests response has a 5xx status code
func (o *PatchQualityFormsSurveyTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this patch quality forms survey too many requests response a status code equal to that given
func (o *PatchQualityFormsSurveyTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PatchQualityFormsSurveyTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchQualityFormsSurveyTooManyRequests) String() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchQualityFormsSurveyTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchQualityFormsSurveyTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchQualityFormsSurveyInternalServerError creates a PatchQualityFormsSurveyInternalServerError with default headers values
func NewPatchQualityFormsSurveyInternalServerError() *PatchQualityFormsSurveyInternalServerError {
	return &PatchQualityFormsSurveyInternalServerError{}
}

/*
PatchQualityFormsSurveyInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PatchQualityFormsSurveyInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch quality forms survey internal server error response has a 2xx status code
func (o *PatchQualityFormsSurveyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch quality forms survey internal server error response has a 3xx status code
func (o *PatchQualityFormsSurveyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch quality forms survey internal server error response has a 4xx status code
func (o *PatchQualityFormsSurveyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch quality forms survey internal server error response has a 5xx status code
func (o *PatchQualityFormsSurveyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this patch quality forms survey internal server error response a status code equal to that given
func (o *PatchQualityFormsSurveyInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PatchQualityFormsSurveyInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchQualityFormsSurveyInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchQualityFormsSurveyInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchQualityFormsSurveyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchQualityFormsSurveyServiceUnavailable creates a PatchQualityFormsSurveyServiceUnavailable with default headers values
func NewPatchQualityFormsSurveyServiceUnavailable() *PatchQualityFormsSurveyServiceUnavailable {
	return &PatchQualityFormsSurveyServiceUnavailable{}
}

/*
PatchQualityFormsSurveyServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PatchQualityFormsSurveyServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch quality forms survey service unavailable response has a 2xx status code
func (o *PatchQualityFormsSurveyServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch quality forms survey service unavailable response has a 3xx status code
func (o *PatchQualityFormsSurveyServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch quality forms survey service unavailable response has a 4xx status code
func (o *PatchQualityFormsSurveyServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch quality forms survey service unavailable response has a 5xx status code
func (o *PatchQualityFormsSurveyServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this patch quality forms survey service unavailable response a status code equal to that given
func (o *PatchQualityFormsSurveyServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PatchQualityFormsSurveyServiceUnavailable) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchQualityFormsSurveyServiceUnavailable) String() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchQualityFormsSurveyServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchQualityFormsSurveyServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchQualityFormsSurveyGatewayTimeout creates a PatchQualityFormsSurveyGatewayTimeout with default headers values
func NewPatchQualityFormsSurveyGatewayTimeout() *PatchQualityFormsSurveyGatewayTimeout {
	return &PatchQualityFormsSurveyGatewayTimeout{}
}

/*
PatchQualityFormsSurveyGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PatchQualityFormsSurveyGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this patch quality forms survey gateway timeout response has a 2xx status code
func (o *PatchQualityFormsSurveyGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch quality forms survey gateway timeout response has a 3xx status code
func (o *PatchQualityFormsSurveyGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch quality forms survey gateway timeout response has a 4xx status code
func (o *PatchQualityFormsSurveyGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch quality forms survey gateway timeout response has a 5xx status code
func (o *PatchQualityFormsSurveyGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this patch quality forms survey gateway timeout response a status code equal to that given
func (o *PatchQualityFormsSurveyGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PatchQualityFormsSurveyGatewayTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchQualityFormsSurveyGatewayTimeout) String() string {
	return fmt.Sprintf("[PATCH /api/v2/quality/forms/surveys/{formId}][%d] patchQualityFormsSurveyGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchQualityFormsSurveyGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchQualityFormsSurveyGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
