// Code generated by go-swagger; DO NOT EDIT.

package quality

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetQualityConversationsAuditsQueryTransactionIDResultsReader is a Reader for the GetQualityConversationsAuditsQueryTransactionIDResults structure.
type GetQualityConversationsAuditsQueryTransactionIDResultsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetQualityConversationsAuditsQueryTransactionIDResultsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetQualityConversationsAuditsQueryTransactionIDResultsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetQualityConversationsAuditsQueryTransactionIDResultsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetQualityConversationsAuditsQueryTransactionIDResultsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetQualityConversationsAuditsQueryTransactionIDResultsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetQualityConversationsAuditsQueryTransactionIDResultsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetQualityConversationsAuditsQueryTransactionIDResultsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetQualityConversationsAuditsQueryTransactionIDResultsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetQualityConversationsAuditsQueryTransactionIDResultsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetQualityConversationsAuditsQueryTransactionIDResultsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetQualityConversationsAuditsQueryTransactionIDResultsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetQualityConversationsAuditsQueryTransactionIDResultsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetQualityConversationsAuditsQueryTransactionIDResultsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetQualityConversationsAuditsQueryTransactionIDResultsOK creates a GetQualityConversationsAuditsQueryTransactionIDResultsOK with default headers values
func NewGetQualityConversationsAuditsQueryTransactionIDResultsOK() *GetQualityConversationsAuditsQueryTransactionIDResultsOK {
	return &GetQualityConversationsAuditsQueryTransactionIDResultsOK{}
}

/*GetQualityConversationsAuditsQueryTransactionIDResultsOK handles this case with default header values.

successful operation
*/
type GetQualityConversationsAuditsQueryTransactionIDResultsOK struct {
	Payload *models.QualityAuditQueryExecutionResultsResponse
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/conversations/audits/query/{transactionId}/results][%d] getQualityConversationsAuditsQueryTransactionIdResultsOK  %+v", 200, o.Payload)
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsOK) GetPayload() *models.QualityAuditQueryExecutionResultsResponse {
	return o.Payload
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.QualityAuditQueryExecutionResultsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityConversationsAuditsQueryTransactionIDResultsBadRequest creates a GetQualityConversationsAuditsQueryTransactionIDResultsBadRequest with default headers values
func NewGetQualityConversationsAuditsQueryTransactionIDResultsBadRequest() *GetQualityConversationsAuditsQueryTransactionIDResultsBadRequest {
	return &GetQualityConversationsAuditsQueryTransactionIDResultsBadRequest{}
}

/*GetQualityConversationsAuditsQueryTransactionIDResultsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetQualityConversationsAuditsQueryTransactionIDResultsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/conversations/audits/query/{transactionId}/results][%d] getQualityConversationsAuditsQueryTransactionIdResultsBadRequest  %+v", 400, o.Payload)
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityConversationsAuditsQueryTransactionIDResultsUnauthorized creates a GetQualityConversationsAuditsQueryTransactionIDResultsUnauthorized with default headers values
func NewGetQualityConversationsAuditsQueryTransactionIDResultsUnauthorized() *GetQualityConversationsAuditsQueryTransactionIDResultsUnauthorized {
	return &GetQualityConversationsAuditsQueryTransactionIDResultsUnauthorized{}
}

/*GetQualityConversationsAuditsQueryTransactionIDResultsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetQualityConversationsAuditsQueryTransactionIDResultsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/conversations/audits/query/{transactionId}/results][%d] getQualityConversationsAuditsQueryTransactionIdResultsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityConversationsAuditsQueryTransactionIDResultsForbidden creates a GetQualityConversationsAuditsQueryTransactionIDResultsForbidden with default headers values
func NewGetQualityConversationsAuditsQueryTransactionIDResultsForbidden() *GetQualityConversationsAuditsQueryTransactionIDResultsForbidden {
	return &GetQualityConversationsAuditsQueryTransactionIDResultsForbidden{}
}

/*GetQualityConversationsAuditsQueryTransactionIDResultsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetQualityConversationsAuditsQueryTransactionIDResultsForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/conversations/audits/query/{transactionId}/results][%d] getQualityConversationsAuditsQueryTransactionIdResultsForbidden  %+v", 403, o.Payload)
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityConversationsAuditsQueryTransactionIDResultsNotFound creates a GetQualityConversationsAuditsQueryTransactionIDResultsNotFound with default headers values
func NewGetQualityConversationsAuditsQueryTransactionIDResultsNotFound() *GetQualityConversationsAuditsQueryTransactionIDResultsNotFound {
	return &GetQualityConversationsAuditsQueryTransactionIDResultsNotFound{}
}

/*GetQualityConversationsAuditsQueryTransactionIDResultsNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetQualityConversationsAuditsQueryTransactionIDResultsNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/conversations/audits/query/{transactionId}/results][%d] getQualityConversationsAuditsQueryTransactionIdResultsNotFound  %+v", 404, o.Payload)
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityConversationsAuditsQueryTransactionIDResultsRequestTimeout creates a GetQualityConversationsAuditsQueryTransactionIDResultsRequestTimeout with default headers values
func NewGetQualityConversationsAuditsQueryTransactionIDResultsRequestTimeout() *GetQualityConversationsAuditsQueryTransactionIDResultsRequestTimeout {
	return &GetQualityConversationsAuditsQueryTransactionIDResultsRequestTimeout{}
}

/*GetQualityConversationsAuditsQueryTransactionIDResultsRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetQualityConversationsAuditsQueryTransactionIDResultsRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/conversations/audits/query/{transactionId}/results][%d] getQualityConversationsAuditsQueryTransactionIdResultsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityConversationsAuditsQueryTransactionIDResultsRequestEntityTooLarge creates a GetQualityConversationsAuditsQueryTransactionIDResultsRequestEntityTooLarge with default headers values
func NewGetQualityConversationsAuditsQueryTransactionIDResultsRequestEntityTooLarge() *GetQualityConversationsAuditsQueryTransactionIDResultsRequestEntityTooLarge {
	return &GetQualityConversationsAuditsQueryTransactionIDResultsRequestEntityTooLarge{}
}

/*GetQualityConversationsAuditsQueryTransactionIDResultsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetQualityConversationsAuditsQueryTransactionIDResultsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/conversations/audits/query/{transactionId}/results][%d] getQualityConversationsAuditsQueryTransactionIdResultsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityConversationsAuditsQueryTransactionIDResultsUnsupportedMediaType creates a GetQualityConversationsAuditsQueryTransactionIDResultsUnsupportedMediaType with default headers values
func NewGetQualityConversationsAuditsQueryTransactionIDResultsUnsupportedMediaType() *GetQualityConversationsAuditsQueryTransactionIDResultsUnsupportedMediaType {
	return &GetQualityConversationsAuditsQueryTransactionIDResultsUnsupportedMediaType{}
}

/*GetQualityConversationsAuditsQueryTransactionIDResultsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetQualityConversationsAuditsQueryTransactionIDResultsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/conversations/audits/query/{transactionId}/results][%d] getQualityConversationsAuditsQueryTransactionIdResultsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityConversationsAuditsQueryTransactionIDResultsTooManyRequests creates a GetQualityConversationsAuditsQueryTransactionIDResultsTooManyRequests with default headers values
func NewGetQualityConversationsAuditsQueryTransactionIDResultsTooManyRequests() *GetQualityConversationsAuditsQueryTransactionIDResultsTooManyRequests {
	return &GetQualityConversationsAuditsQueryTransactionIDResultsTooManyRequests{}
}

/*GetQualityConversationsAuditsQueryTransactionIDResultsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetQualityConversationsAuditsQueryTransactionIDResultsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/conversations/audits/query/{transactionId}/results][%d] getQualityConversationsAuditsQueryTransactionIdResultsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityConversationsAuditsQueryTransactionIDResultsInternalServerError creates a GetQualityConversationsAuditsQueryTransactionIDResultsInternalServerError with default headers values
func NewGetQualityConversationsAuditsQueryTransactionIDResultsInternalServerError() *GetQualityConversationsAuditsQueryTransactionIDResultsInternalServerError {
	return &GetQualityConversationsAuditsQueryTransactionIDResultsInternalServerError{}
}

/*GetQualityConversationsAuditsQueryTransactionIDResultsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetQualityConversationsAuditsQueryTransactionIDResultsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/conversations/audits/query/{transactionId}/results][%d] getQualityConversationsAuditsQueryTransactionIdResultsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityConversationsAuditsQueryTransactionIDResultsServiceUnavailable creates a GetQualityConversationsAuditsQueryTransactionIDResultsServiceUnavailable with default headers values
func NewGetQualityConversationsAuditsQueryTransactionIDResultsServiceUnavailable() *GetQualityConversationsAuditsQueryTransactionIDResultsServiceUnavailable {
	return &GetQualityConversationsAuditsQueryTransactionIDResultsServiceUnavailable{}
}

/*GetQualityConversationsAuditsQueryTransactionIDResultsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetQualityConversationsAuditsQueryTransactionIDResultsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/conversations/audits/query/{transactionId}/results][%d] getQualityConversationsAuditsQueryTransactionIdResultsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityConversationsAuditsQueryTransactionIDResultsGatewayTimeout creates a GetQualityConversationsAuditsQueryTransactionIDResultsGatewayTimeout with default headers values
func NewGetQualityConversationsAuditsQueryTransactionIDResultsGatewayTimeout() *GetQualityConversationsAuditsQueryTransactionIDResultsGatewayTimeout {
	return &GetQualityConversationsAuditsQueryTransactionIDResultsGatewayTimeout{}
}

/*GetQualityConversationsAuditsQueryTransactionIDResultsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetQualityConversationsAuditsQueryTransactionIDResultsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/conversations/audits/query/{transactionId}/results][%d] getQualityConversationsAuditsQueryTransactionIdResultsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityConversationsAuditsQueryTransactionIDResultsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
