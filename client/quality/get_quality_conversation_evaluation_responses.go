// Code generated by go-swagger; DO NOT EDIT.

package quality

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetQualityConversationEvaluationReader is a Reader for the GetQualityConversationEvaluation structure.
type GetQualityConversationEvaluationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetQualityConversationEvaluationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetQualityConversationEvaluationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetQualityConversationEvaluationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetQualityConversationEvaluationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetQualityConversationEvaluationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetQualityConversationEvaluationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetQualityConversationEvaluationRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetQualityConversationEvaluationRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetQualityConversationEvaluationUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetQualityConversationEvaluationTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetQualityConversationEvaluationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetQualityConversationEvaluationServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetQualityConversationEvaluationGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetQualityConversationEvaluationOK creates a GetQualityConversationEvaluationOK with default headers values
func NewGetQualityConversationEvaluationOK() *GetQualityConversationEvaluationOK {
	return &GetQualityConversationEvaluationOK{}
}

/*GetQualityConversationEvaluationOK handles this case with default header values.

successful operation
*/
type GetQualityConversationEvaluationOK struct {
	Payload *models.Evaluation
}

func (o *GetQualityConversationEvaluationOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] getQualityConversationEvaluationOK  %+v", 200, o.Payload)
}

func (o *GetQualityConversationEvaluationOK) GetPayload() *models.Evaluation {
	return o.Payload
}

func (o *GetQualityConversationEvaluationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Evaluation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityConversationEvaluationBadRequest creates a GetQualityConversationEvaluationBadRequest with default headers values
func NewGetQualityConversationEvaluationBadRequest() *GetQualityConversationEvaluationBadRequest {
	return &GetQualityConversationEvaluationBadRequest{}
}

/*GetQualityConversationEvaluationBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetQualityConversationEvaluationBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetQualityConversationEvaluationBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] getQualityConversationEvaluationBadRequest  %+v", 400, o.Payload)
}

func (o *GetQualityConversationEvaluationBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityConversationEvaluationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityConversationEvaluationUnauthorized creates a GetQualityConversationEvaluationUnauthorized with default headers values
func NewGetQualityConversationEvaluationUnauthorized() *GetQualityConversationEvaluationUnauthorized {
	return &GetQualityConversationEvaluationUnauthorized{}
}

/*GetQualityConversationEvaluationUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetQualityConversationEvaluationUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetQualityConversationEvaluationUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] getQualityConversationEvaluationUnauthorized  %+v", 401, o.Payload)
}

func (o *GetQualityConversationEvaluationUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityConversationEvaluationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityConversationEvaluationForbidden creates a GetQualityConversationEvaluationForbidden with default headers values
func NewGetQualityConversationEvaluationForbidden() *GetQualityConversationEvaluationForbidden {
	return &GetQualityConversationEvaluationForbidden{}
}

/*GetQualityConversationEvaluationForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetQualityConversationEvaluationForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetQualityConversationEvaluationForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] getQualityConversationEvaluationForbidden  %+v", 403, o.Payload)
}

func (o *GetQualityConversationEvaluationForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityConversationEvaluationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityConversationEvaluationNotFound creates a GetQualityConversationEvaluationNotFound with default headers values
func NewGetQualityConversationEvaluationNotFound() *GetQualityConversationEvaluationNotFound {
	return &GetQualityConversationEvaluationNotFound{}
}

/*GetQualityConversationEvaluationNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetQualityConversationEvaluationNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetQualityConversationEvaluationNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] getQualityConversationEvaluationNotFound  %+v", 404, o.Payload)
}

func (o *GetQualityConversationEvaluationNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityConversationEvaluationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityConversationEvaluationRequestTimeout creates a GetQualityConversationEvaluationRequestTimeout with default headers values
func NewGetQualityConversationEvaluationRequestTimeout() *GetQualityConversationEvaluationRequestTimeout {
	return &GetQualityConversationEvaluationRequestTimeout{}
}

/*GetQualityConversationEvaluationRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetQualityConversationEvaluationRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetQualityConversationEvaluationRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] getQualityConversationEvaluationRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetQualityConversationEvaluationRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityConversationEvaluationRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityConversationEvaluationRequestEntityTooLarge creates a GetQualityConversationEvaluationRequestEntityTooLarge with default headers values
func NewGetQualityConversationEvaluationRequestEntityTooLarge() *GetQualityConversationEvaluationRequestEntityTooLarge {
	return &GetQualityConversationEvaluationRequestEntityTooLarge{}
}

/*GetQualityConversationEvaluationRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetQualityConversationEvaluationRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetQualityConversationEvaluationRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] getQualityConversationEvaluationRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetQualityConversationEvaluationRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityConversationEvaluationRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityConversationEvaluationUnsupportedMediaType creates a GetQualityConversationEvaluationUnsupportedMediaType with default headers values
func NewGetQualityConversationEvaluationUnsupportedMediaType() *GetQualityConversationEvaluationUnsupportedMediaType {
	return &GetQualityConversationEvaluationUnsupportedMediaType{}
}

/*GetQualityConversationEvaluationUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetQualityConversationEvaluationUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetQualityConversationEvaluationUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] getQualityConversationEvaluationUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetQualityConversationEvaluationUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityConversationEvaluationUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityConversationEvaluationTooManyRequests creates a GetQualityConversationEvaluationTooManyRequests with default headers values
func NewGetQualityConversationEvaluationTooManyRequests() *GetQualityConversationEvaluationTooManyRequests {
	return &GetQualityConversationEvaluationTooManyRequests{}
}

/*GetQualityConversationEvaluationTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetQualityConversationEvaluationTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetQualityConversationEvaluationTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] getQualityConversationEvaluationTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetQualityConversationEvaluationTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityConversationEvaluationTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityConversationEvaluationInternalServerError creates a GetQualityConversationEvaluationInternalServerError with default headers values
func NewGetQualityConversationEvaluationInternalServerError() *GetQualityConversationEvaluationInternalServerError {
	return &GetQualityConversationEvaluationInternalServerError{}
}

/*GetQualityConversationEvaluationInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetQualityConversationEvaluationInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetQualityConversationEvaluationInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] getQualityConversationEvaluationInternalServerError  %+v", 500, o.Payload)
}

func (o *GetQualityConversationEvaluationInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityConversationEvaluationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityConversationEvaluationServiceUnavailable creates a GetQualityConversationEvaluationServiceUnavailable with default headers values
func NewGetQualityConversationEvaluationServiceUnavailable() *GetQualityConversationEvaluationServiceUnavailable {
	return &GetQualityConversationEvaluationServiceUnavailable{}
}

/*GetQualityConversationEvaluationServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetQualityConversationEvaluationServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetQualityConversationEvaluationServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] getQualityConversationEvaluationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetQualityConversationEvaluationServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityConversationEvaluationServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityConversationEvaluationGatewayTimeout creates a GetQualityConversationEvaluationGatewayTimeout with default headers values
func NewGetQualityConversationEvaluationGatewayTimeout() *GetQualityConversationEvaluationGatewayTimeout {
	return &GetQualityConversationEvaluationGatewayTimeout{}
}

/*GetQualityConversationEvaluationGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetQualityConversationEvaluationGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetQualityConversationEvaluationGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] getQualityConversationEvaluationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetQualityConversationEvaluationGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityConversationEvaluationGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
