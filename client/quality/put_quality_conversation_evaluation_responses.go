// Code generated by go-swagger; DO NOT EDIT.

package quality

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutQualityConversationEvaluationReader is a Reader for the PutQualityConversationEvaluation structure.
type PutQualityConversationEvaluationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutQualityConversationEvaluationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutQualityConversationEvaluationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutQualityConversationEvaluationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutQualityConversationEvaluationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutQualityConversationEvaluationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutQualityConversationEvaluationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutQualityConversationEvaluationRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutQualityConversationEvaluationRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutQualityConversationEvaluationUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutQualityConversationEvaluationTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutQualityConversationEvaluationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutQualityConversationEvaluationServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutQualityConversationEvaluationGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutQualityConversationEvaluationOK creates a PutQualityConversationEvaluationOK with default headers values
func NewPutQualityConversationEvaluationOK() *PutQualityConversationEvaluationOK {
	return &PutQualityConversationEvaluationOK{}
}

/*
PutQualityConversationEvaluationOK describes a response with status code 200, with default header values.

successful operation
*/
type PutQualityConversationEvaluationOK struct {
	Payload *models.EvaluationResponse
}

// IsSuccess returns true when this put quality conversation evaluation o k response has a 2xx status code
func (o *PutQualityConversationEvaluationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put quality conversation evaluation o k response has a 3xx status code
func (o *PutQualityConversationEvaluationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put quality conversation evaluation o k response has a 4xx status code
func (o *PutQualityConversationEvaluationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put quality conversation evaluation o k response has a 5xx status code
func (o *PutQualityConversationEvaluationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put quality conversation evaluation o k response a status code equal to that given
func (o *PutQualityConversationEvaluationOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutQualityConversationEvaluationOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] putQualityConversationEvaluationOK  %+v", 200, o.Payload)
}

func (o *PutQualityConversationEvaluationOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] putQualityConversationEvaluationOK  %+v", 200, o.Payload)
}

func (o *PutQualityConversationEvaluationOK) GetPayload() *models.EvaluationResponse {
	return o.Payload
}

func (o *PutQualityConversationEvaluationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EvaluationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualityConversationEvaluationBadRequest creates a PutQualityConversationEvaluationBadRequest with default headers values
func NewPutQualityConversationEvaluationBadRequest() *PutQualityConversationEvaluationBadRequest {
	return &PutQualityConversationEvaluationBadRequest{}
}

/*
PutQualityConversationEvaluationBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutQualityConversationEvaluationBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put quality conversation evaluation bad request response has a 2xx status code
func (o *PutQualityConversationEvaluationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put quality conversation evaluation bad request response has a 3xx status code
func (o *PutQualityConversationEvaluationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put quality conversation evaluation bad request response has a 4xx status code
func (o *PutQualityConversationEvaluationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put quality conversation evaluation bad request response has a 5xx status code
func (o *PutQualityConversationEvaluationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put quality conversation evaluation bad request response a status code equal to that given
func (o *PutQualityConversationEvaluationBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutQualityConversationEvaluationBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] putQualityConversationEvaluationBadRequest  %+v", 400, o.Payload)
}

func (o *PutQualityConversationEvaluationBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] putQualityConversationEvaluationBadRequest  %+v", 400, o.Payload)
}

func (o *PutQualityConversationEvaluationBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualityConversationEvaluationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualityConversationEvaluationUnauthorized creates a PutQualityConversationEvaluationUnauthorized with default headers values
func NewPutQualityConversationEvaluationUnauthorized() *PutQualityConversationEvaluationUnauthorized {
	return &PutQualityConversationEvaluationUnauthorized{}
}

/*
PutQualityConversationEvaluationUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutQualityConversationEvaluationUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put quality conversation evaluation unauthorized response has a 2xx status code
func (o *PutQualityConversationEvaluationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put quality conversation evaluation unauthorized response has a 3xx status code
func (o *PutQualityConversationEvaluationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put quality conversation evaluation unauthorized response has a 4xx status code
func (o *PutQualityConversationEvaluationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put quality conversation evaluation unauthorized response has a 5xx status code
func (o *PutQualityConversationEvaluationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put quality conversation evaluation unauthorized response a status code equal to that given
func (o *PutQualityConversationEvaluationUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutQualityConversationEvaluationUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] putQualityConversationEvaluationUnauthorized  %+v", 401, o.Payload)
}

func (o *PutQualityConversationEvaluationUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] putQualityConversationEvaluationUnauthorized  %+v", 401, o.Payload)
}

func (o *PutQualityConversationEvaluationUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualityConversationEvaluationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualityConversationEvaluationForbidden creates a PutQualityConversationEvaluationForbidden with default headers values
func NewPutQualityConversationEvaluationForbidden() *PutQualityConversationEvaluationForbidden {
	return &PutQualityConversationEvaluationForbidden{}
}

/*
PutQualityConversationEvaluationForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutQualityConversationEvaluationForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put quality conversation evaluation forbidden response has a 2xx status code
func (o *PutQualityConversationEvaluationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put quality conversation evaluation forbidden response has a 3xx status code
func (o *PutQualityConversationEvaluationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put quality conversation evaluation forbidden response has a 4xx status code
func (o *PutQualityConversationEvaluationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put quality conversation evaluation forbidden response has a 5xx status code
func (o *PutQualityConversationEvaluationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put quality conversation evaluation forbidden response a status code equal to that given
func (o *PutQualityConversationEvaluationForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutQualityConversationEvaluationForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] putQualityConversationEvaluationForbidden  %+v", 403, o.Payload)
}

func (o *PutQualityConversationEvaluationForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] putQualityConversationEvaluationForbidden  %+v", 403, o.Payload)
}

func (o *PutQualityConversationEvaluationForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualityConversationEvaluationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualityConversationEvaluationNotFound creates a PutQualityConversationEvaluationNotFound with default headers values
func NewPutQualityConversationEvaluationNotFound() *PutQualityConversationEvaluationNotFound {
	return &PutQualityConversationEvaluationNotFound{}
}

/*
PutQualityConversationEvaluationNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutQualityConversationEvaluationNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put quality conversation evaluation not found response has a 2xx status code
func (o *PutQualityConversationEvaluationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put quality conversation evaluation not found response has a 3xx status code
func (o *PutQualityConversationEvaluationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put quality conversation evaluation not found response has a 4xx status code
func (o *PutQualityConversationEvaluationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put quality conversation evaluation not found response has a 5xx status code
func (o *PutQualityConversationEvaluationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put quality conversation evaluation not found response a status code equal to that given
func (o *PutQualityConversationEvaluationNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutQualityConversationEvaluationNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] putQualityConversationEvaluationNotFound  %+v", 404, o.Payload)
}

func (o *PutQualityConversationEvaluationNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] putQualityConversationEvaluationNotFound  %+v", 404, o.Payload)
}

func (o *PutQualityConversationEvaluationNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualityConversationEvaluationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualityConversationEvaluationRequestTimeout creates a PutQualityConversationEvaluationRequestTimeout with default headers values
func NewPutQualityConversationEvaluationRequestTimeout() *PutQualityConversationEvaluationRequestTimeout {
	return &PutQualityConversationEvaluationRequestTimeout{}
}

/*
PutQualityConversationEvaluationRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutQualityConversationEvaluationRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put quality conversation evaluation request timeout response has a 2xx status code
func (o *PutQualityConversationEvaluationRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put quality conversation evaluation request timeout response has a 3xx status code
func (o *PutQualityConversationEvaluationRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put quality conversation evaluation request timeout response has a 4xx status code
func (o *PutQualityConversationEvaluationRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put quality conversation evaluation request timeout response has a 5xx status code
func (o *PutQualityConversationEvaluationRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put quality conversation evaluation request timeout response a status code equal to that given
func (o *PutQualityConversationEvaluationRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutQualityConversationEvaluationRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] putQualityConversationEvaluationRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutQualityConversationEvaluationRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] putQualityConversationEvaluationRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutQualityConversationEvaluationRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualityConversationEvaluationRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualityConversationEvaluationRequestEntityTooLarge creates a PutQualityConversationEvaluationRequestEntityTooLarge with default headers values
func NewPutQualityConversationEvaluationRequestEntityTooLarge() *PutQualityConversationEvaluationRequestEntityTooLarge {
	return &PutQualityConversationEvaluationRequestEntityTooLarge{}
}

/*
PutQualityConversationEvaluationRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PutQualityConversationEvaluationRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put quality conversation evaluation request entity too large response has a 2xx status code
func (o *PutQualityConversationEvaluationRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put quality conversation evaluation request entity too large response has a 3xx status code
func (o *PutQualityConversationEvaluationRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put quality conversation evaluation request entity too large response has a 4xx status code
func (o *PutQualityConversationEvaluationRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put quality conversation evaluation request entity too large response has a 5xx status code
func (o *PutQualityConversationEvaluationRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put quality conversation evaluation request entity too large response a status code equal to that given
func (o *PutQualityConversationEvaluationRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutQualityConversationEvaluationRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] putQualityConversationEvaluationRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutQualityConversationEvaluationRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] putQualityConversationEvaluationRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutQualityConversationEvaluationRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualityConversationEvaluationRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualityConversationEvaluationUnsupportedMediaType creates a PutQualityConversationEvaluationUnsupportedMediaType with default headers values
func NewPutQualityConversationEvaluationUnsupportedMediaType() *PutQualityConversationEvaluationUnsupportedMediaType {
	return &PutQualityConversationEvaluationUnsupportedMediaType{}
}

/*
PutQualityConversationEvaluationUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutQualityConversationEvaluationUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put quality conversation evaluation unsupported media type response has a 2xx status code
func (o *PutQualityConversationEvaluationUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put quality conversation evaluation unsupported media type response has a 3xx status code
func (o *PutQualityConversationEvaluationUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put quality conversation evaluation unsupported media type response has a 4xx status code
func (o *PutQualityConversationEvaluationUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put quality conversation evaluation unsupported media type response has a 5xx status code
func (o *PutQualityConversationEvaluationUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put quality conversation evaluation unsupported media type response a status code equal to that given
func (o *PutQualityConversationEvaluationUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutQualityConversationEvaluationUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] putQualityConversationEvaluationUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutQualityConversationEvaluationUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] putQualityConversationEvaluationUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutQualityConversationEvaluationUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualityConversationEvaluationUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualityConversationEvaluationTooManyRequests creates a PutQualityConversationEvaluationTooManyRequests with default headers values
func NewPutQualityConversationEvaluationTooManyRequests() *PutQualityConversationEvaluationTooManyRequests {
	return &PutQualityConversationEvaluationTooManyRequests{}
}

/*
PutQualityConversationEvaluationTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutQualityConversationEvaluationTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put quality conversation evaluation too many requests response has a 2xx status code
func (o *PutQualityConversationEvaluationTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put quality conversation evaluation too many requests response has a 3xx status code
func (o *PutQualityConversationEvaluationTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put quality conversation evaluation too many requests response has a 4xx status code
func (o *PutQualityConversationEvaluationTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put quality conversation evaluation too many requests response has a 5xx status code
func (o *PutQualityConversationEvaluationTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put quality conversation evaluation too many requests response a status code equal to that given
func (o *PutQualityConversationEvaluationTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutQualityConversationEvaluationTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] putQualityConversationEvaluationTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutQualityConversationEvaluationTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] putQualityConversationEvaluationTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutQualityConversationEvaluationTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualityConversationEvaluationTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualityConversationEvaluationInternalServerError creates a PutQualityConversationEvaluationInternalServerError with default headers values
func NewPutQualityConversationEvaluationInternalServerError() *PutQualityConversationEvaluationInternalServerError {
	return &PutQualityConversationEvaluationInternalServerError{}
}

/*
PutQualityConversationEvaluationInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutQualityConversationEvaluationInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put quality conversation evaluation internal server error response has a 2xx status code
func (o *PutQualityConversationEvaluationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put quality conversation evaluation internal server error response has a 3xx status code
func (o *PutQualityConversationEvaluationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put quality conversation evaluation internal server error response has a 4xx status code
func (o *PutQualityConversationEvaluationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put quality conversation evaluation internal server error response has a 5xx status code
func (o *PutQualityConversationEvaluationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put quality conversation evaluation internal server error response a status code equal to that given
func (o *PutQualityConversationEvaluationInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutQualityConversationEvaluationInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] putQualityConversationEvaluationInternalServerError  %+v", 500, o.Payload)
}

func (o *PutQualityConversationEvaluationInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] putQualityConversationEvaluationInternalServerError  %+v", 500, o.Payload)
}

func (o *PutQualityConversationEvaluationInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualityConversationEvaluationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualityConversationEvaluationServiceUnavailable creates a PutQualityConversationEvaluationServiceUnavailable with default headers values
func NewPutQualityConversationEvaluationServiceUnavailable() *PutQualityConversationEvaluationServiceUnavailable {
	return &PutQualityConversationEvaluationServiceUnavailable{}
}

/*
PutQualityConversationEvaluationServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutQualityConversationEvaluationServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put quality conversation evaluation service unavailable response has a 2xx status code
func (o *PutQualityConversationEvaluationServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put quality conversation evaluation service unavailable response has a 3xx status code
func (o *PutQualityConversationEvaluationServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put quality conversation evaluation service unavailable response has a 4xx status code
func (o *PutQualityConversationEvaluationServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put quality conversation evaluation service unavailable response has a 5xx status code
func (o *PutQualityConversationEvaluationServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put quality conversation evaluation service unavailable response a status code equal to that given
func (o *PutQualityConversationEvaluationServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutQualityConversationEvaluationServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] putQualityConversationEvaluationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutQualityConversationEvaluationServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] putQualityConversationEvaluationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutQualityConversationEvaluationServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualityConversationEvaluationServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualityConversationEvaluationGatewayTimeout creates a PutQualityConversationEvaluationGatewayTimeout with default headers values
func NewPutQualityConversationEvaluationGatewayTimeout() *PutQualityConversationEvaluationGatewayTimeout {
	return &PutQualityConversationEvaluationGatewayTimeout{}
}

/*
PutQualityConversationEvaluationGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutQualityConversationEvaluationGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put quality conversation evaluation gateway timeout response has a 2xx status code
func (o *PutQualityConversationEvaluationGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put quality conversation evaluation gateway timeout response has a 3xx status code
func (o *PutQualityConversationEvaluationGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put quality conversation evaluation gateway timeout response has a 4xx status code
func (o *PutQualityConversationEvaluationGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put quality conversation evaluation gateway timeout response has a 5xx status code
func (o *PutQualityConversationEvaluationGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put quality conversation evaluation gateway timeout response a status code equal to that given
func (o *PutQualityConversationEvaluationGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutQualityConversationEvaluationGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] putQualityConversationEvaluationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutQualityConversationEvaluationGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/quality/conversations/{conversationId}/evaluations/{evaluationId}][%d] putQualityConversationEvaluationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutQualityConversationEvaluationGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualityConversationEvaluationGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
