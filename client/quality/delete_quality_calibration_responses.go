// Code generated by go-swagger; DO NOT EDIT.

package quality

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteQualityCalibrationReader is a Reader for the DeleteQualityCalibration structure.
type DeleteQualityCalibrationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteQualityCalibrationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteQualityCalibrationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteQualityCalibrationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteQualityCalibrationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteQualityCalibrationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteQualityCalibrationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteQualityCalibrationRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteQualityCalibrationUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteQualityCalibrationTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteQualityCalibrationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteQualityCalibrationServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteQualityCalibrationGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteQualityCalibrationOK creates a DeleteQualityCalibrationOK with default headers values
func NewDeleteQualityCalibrationOK() *DeleteQualityCalibrationOK {
	return &DeleteQualityCalibrationOK{}
}

/*DeleteQualityCalibrationOK handles this case with default header values.

successful operation
*/
type DeleteQualityCalibrationOK struct {
	Payload *models.Calibration
}

func (o *DeleteQualityCalibrationOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/calibrations/{calibrationId}][%d] deleteQualityCalibrationOK  %+v", 200, o.Payload)
}

func (o *DeleteQualityCalibrationOK) GetPayload() *models.Calibration {
	return o.Payload
}

func (o *DeleteQualityCalibrationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Calibration)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteQualityCalibrationBadRequest creates a DeleteQualityCalibrationBadRequest with default headers values
func NewDeleteQualityCalibrationBadRequest() *DeleteQualityCalibrationBadRequest {
	return &DeleteQualityCalibrationBadRequest{}
}

/*DeleteQualityCalibrationBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteQualityCalibrationBadRequest struct {
	Payload *models.ErrorBody
}

func (o *DeleteQualityCalibrationBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/calibrations/{calibrationId}][%d] deleteQualityCalibrationBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteQualityCalibrationBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteQualityCalibrationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteQualityCalibrationUnauthorized creates a DeleteQualityCalibrationUnauthorized with default headers values
func NewDeleteQualityCalibrationUnauthorized() *DeleteQualityCalibrationUnauthorized {
	return &DeleteQualityCalibrationUnauthorized{}
}

/*DeleteQualityCalibrationUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteQualityCalibrationUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *DeleteQualityCalibrationUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/calibrations/{calibrationId}][%d] deleteQualityCalibrationUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteQualityCalibrationUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteQualityCalibrationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteQualityCalibrationForbidden creates a DeleteQualityCalibrationForbidden with default headers values
func NewDeleteQualityCalibrationForbidden() *DeleteQualityCalibrationForbidden {
	return &DeleteQualityCalibrationForbidden{}
}

/*DeleteQualityCalibrationForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type DeleteQualityCalibrationForbidden struct {
	Payload *models.ErrorBody
}

func (o *DeleteQualityCalibrationForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/calibrations/{calibrationId}][%d] deleteQualityCalibrationForbidden  %+v", 403, o.Payload)
}

func (o *DeleteQualityCalibrationForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteQualityCalibrationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteQualityCalibrationNotFound creates a DeleteQualityCalibrationNotFound with default headers values
func NewDeleteQualityCalibrationNotFound() *DeleteQualityCalibrationNotFound {
	return &DeleteQualityCalibrationNotFound{}
}

/*DeleteQualityCalibrationNotFound handles this case with default header values.

The requested resource was not found.
*/
type DeleteQualityCalibrationNotFound struct {
	Payload *models.ErrorBody
}

func (o *DeleteQualityCalibrationNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/calibrations/{calibrationId}][%d] deleteQualityCalibrationNotFound  %+v", 404, o.Payload)
}

func (o *DeleteQualityCalibrationNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteQualityCalibrationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteQualityCalibrationRequestEntityTooLarge creates a DeleteQualityCalibrationRequestEntityTooLarge with default headers values
func NewDeleteQualityCalibrationRequestEntityTooLarge() *DeleteQualityCalibrationRequestEntityTooLarge {
	return &DeleteQualityCalibrationRequestEntityTooLarge{}
}

/*DeleteQualityCalibrationRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type DeleteQualityCalibrationRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *DeleteQualityCalibrationRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/calibrations/{calibrationId}][%d] deleteQualityCalibrationRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteQualityCalibrationRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteQualityCalibrationRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteQualityCalibrationUnsupportedMediaType creates a DeleteQualityCalibrationUnsupportedMediaType with default headers values
func NewDeleteQualityCalibrationUnsupportedMediaType() *DeleteQualityCalibrationUnsupportedMediaType {
	return &DeleteQualityCalibrationUnsupportedMediaType{}
}

/*DeleteQualityCalibrationUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteQualityCalibrationUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *DeleteQualityCalibrationUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/calibrations/{calibrationId}][%d] deleteQualityCalibrationUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteQualityCalibrationUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteQualityCalibrationUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteQualityCalibrationTooManyRequests creates a DeleteQualityCalibrationTooManyRequests with default headers values
func NewDeleteQualityCalibrationTooManyRequests() *DeleteQualityCalibrationTooManyRequests {
	return &DeleteQualityCalibrationTooManyRequests{}
}

/*DeleteQualityCalibrationTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type DeleteQualityCalibrationTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *DeleteQualityCalibrationTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/calibrations/{calibrationId}][%d] deleteQualityCalibrationTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteQualityCalibrationTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteQualityCalibrationTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteQualityCalibrationInternalServerError creates a DeleteQualityCalibrationInternalServerError with default headers values
func NewDeleteQualityCalibrationInternalServerError() *DeleteQualityCalibrationInternalServerError {
	return &DeleteQualityCalibrationInternalServerError{}
}

/*DeleteQualityCalibrationInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteQualityCalibrationInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *DeleteQualityCalibrationInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/calibrations/{calibrationId}][%d] deleteQualityCalibrationInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteQualityCalibrationInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteQualityCalibrationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteQualityCalibrationServiceUnavailable creates a DeleteQualityCalibrationServiceUnavailable with default headers values
func NewDeleteQualityCalibrationServiceUnavailable() *DeleteQualityCalibrationServiceUnavailable {
	return &DeleteQualityCalibrationServiceUnavailable{}
}

/*DeleteQualityCalibrationServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteQualityCalibrationServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *DeleteQualityCalibrationServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/calibrations/{calibrationId}][%d] deleteQualityCalibrationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteQualityCalibrationServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteQualityCalibrationServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteQualityCalibrationGatewayTimeout creates a DeleteQualityCalibrationGatewayTimeout with default headers values
func NewDeleteQualityCalibrationGatewayTimeout() *DeleteQualityCalibrationGatewayTimeout {
	return &DeleteQualityCalibrationGatewayTimeout{}
}

/*DeleteQualityCalibrationGatewayTimeout handles this case with default header values.

The request timed out.
*/
type DeleteQualityCalibrationGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *DeleteQualityCalibrationGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/calibrations/{calibrationId}][%d] deleteQualityCalibrationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteQualityCalibrationGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteQualityCalibrationGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
