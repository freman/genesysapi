// Code generated by go-swagger; DO NOT EDIT.

package quality

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetQualityKeywordsetsReader is a Reader for the GetQualityKeywordsets structure.
type GetQualityKeywordsetsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetQualityKeywordsetsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetQualityKeywordsetsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetQualityKeywordsetsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetQualityKeywordsetsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetQualityKeywordsetsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetQualityKeywordsetsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetQualityKeywordsetsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetQualityKeywordsetsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetQualityKeywordsetsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetQualityKeywordsetsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetQualityKeywordsetsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetQualityKeywordsetsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetQualityKeywordsetsOK creates a GetQualityKeywordsetsOK with default headers values
func NewGetQualityKeywordsetsOK() *GetQualityKeywordsetsOK {
	return &GetQualityKeywordsetsOK{}
}

/*GetQualityKeywordsetsOK handles this case with default header values.

successful operation
*/
type GetQualityKeywordsetsOK struct {
	Payload *models.KeywordSetEntityListing
}

func (o *GetQualityKeywordsetsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/keywordsets][%d] getQualityKeywordsetsOK  %+v", 200, o.Payload)
}

func (o *GetQualityKeywordsetsOK) GetPayload() *models.KeywordSetEntityListing {
	return o.Payload
}

func (o *GetQualityKeywordsetsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KeywordSetEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityKeywordsetsBadRequest creates a GetQualityKeywordsetsBadRequest with default headers values
func NewGetQualityKeywordsetsBadRequest() *GetQualityKeywordsetsBadRequest {
	return &GetQualityKeywordsetsBadRequest{}
}

/*GetQualityKeywordsetsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetQualityKeywordsetsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetQualityKeywordsetsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/keywordsets][%d] getQualityKeywordsetsBadRequest  %+v", 400, o.Payload)
}

func (o *GetQualityKeywordsetsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityKeywordsetsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityKeywordsetsUnauthorized creates a GetQualityKeywordsetsUnauthorized with default headers values
func NewGetQualityKeywordsetsUnauthorized() *GetQualityKeywordsetsUnauthorized {
	return &GetQualityKeywordsetsUnauthorized{}
}

/*GetQualityKeywordsetsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetQualityKeywordsetsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetQualityKeywordsetsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/keywordsets][%d] getQualityKeywordsetsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetQualityKeywordsetsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityKeywordsetsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityKeywordsetsForbidden creates a GetQualityKeywordsetsForbidden with default headers values
func NewGetQualityKeywordsetsForbidden() *GetQualityKeywordsetsForbidden {
	return &GetQualityKeywordsetsForbidden{}
}

/*GetQualityKeywordsetsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetQualityKeywordsetsForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetQualityKeywordsetsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/keywordsets][%d] getQualityKeywordsetsForbidden  %+v", 403, o.Payload)
}

func (o *GetQualityKeywordsetsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityKeywordsetsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityKeywordsetsNotFound creates a GetQualityKeywordsetsNotFound with default headers values
func NewGetQualityKeywordsetsNotFound() *GetQualityKeywordsetsNotFound {
	return &GetQualityKeywordsetsNotFound{}
}

/*GetQualityKeywordsetsNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetQualityKeywordsetsNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetQualityKeywordsetsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/keywordsets][%d] getQualityKeywordsetsNotFound  %+v", 404, o.Payload)
}

func (o *GetQualityKeywordsetsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityKeywordsetsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityKeywordsetsRequestEntityTooLarge creates a GetQualityKeywordsetsRequestEntityTooLarge with default headers values
func NewGetQualityKeywordsetsRequestEntityTooLarge() *GetQualityKeywordsetsRequestEntityTooLarge {
	return &GetQualityKeywordsetsRequestEntityTooLarge{}
}

/*GetQualityKeywordsetsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetQualityKeywordsetsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetQualityKeywordsetsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/keywordsets][%d] getQualityKeywordsetsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetQualityKeywordsetsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityKeywordsetsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityKeywordsetsUnsupportedMediaType creates a GetQualityKeywordsetsUnsupportedMediaType with default headers values
func NewGetQualityKeywordsetsUnsupportedMediaType() *GetQualityKeywordsetsUnsupportedMediaType {
	return &GetQualityKeywordsetsUnsupportedMediaType{}
}

/*GetQualityKeywordsetsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetQualityKeywordsetsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetQualityKeywordsetsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/keywordsets][%d] getQualityKeywordsetsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetQualityKeywordsetsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityKeywordsetsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityKeywordsetsTooManyRequests creates a GetQualityKeywordsetsTooManyRequests with default headers values
func NewGetQualityKeywordsetsTooManyRequests() *GetQualityKeywordsetsTooManyRequests {
	return &GetQualityKeywordsetsTooManyRequests{}
}

/*GetQualityKeywordsetsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type GetQualityKeywordsetsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetQualityKeywordsetsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/keywordsets][%d] getQualityKeywordsetsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetQualityKeywordsetsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityKeywordsetsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityKeywordsetsInternalServerError creates a GetQualityKeywordsetsInternalServerError with default headers values
func NewGetQualityKeywordsetsInternalServerError() *GetQualityKeywordsetsInternalServerError {
	return &GetQualityKeywordsetsInternalServerError{}
}

/*GetQualityKeywordsetsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetQualityKeywordsetsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetQualityKeywordsetsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/keywordsets][%d] getQualityKeywordsetsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetQualityKeywordsetsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityKeywordsetsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityKeywordsetsServiceUnavailable creates a GetQualityKeywordsetsServiceUnavailable with default headers values
func NewGetQualityKeywordsetsServiceUnavailable() *GetQualityKeywordsetsServiceUnavailable {
	return &GetQualityKeywordsetsServiceUnavailable{}
}

/*GetQualityKeywordsetsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetQualityKeywordsetsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetQualityKeywordsetsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/keywordsets][%d] getQualityKeywordsetsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetQualityKeywordsetsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityKeywordsetsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityKeywordsetsGatewayTimeout creates a GetQualityKeywordsetsGatewayTimeout with default headers values
func NewGetQualityKeywordsetsGatewayTimeout() *GetQualityKeywordsetsGatewayTimeout {
	return &GetQualityKeywordsetsGatewayTimeout{}
}

/*GetQualityKeywordsetsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetQualityKeywordsetsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetQualityKeywordsetsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/keywordsets][%d] getQualityKeywordsetsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetQualityKeywordsetsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityKeywordsetsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
