// Code generated by go-swagger; DO NOT EDIT.

package quality

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// DeleteQualityFormReader is a Reader for the DeleteQualityForm structure.
type DeleteQualityFormReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteQualityFormReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteQualityFormOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteQualityFormBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteQualityFormUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteQualityFormForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteQualityFormNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteQualityFormRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteQualityFormConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewDeleteQualityFormRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteQualityFormUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteQualityFormTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteQualityFormInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteQualityFormServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteQualityFormGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteQualityFormOK creates a DeleteQualityFormOK with default headers values
func NewDeleteQualityFormOK() *DeleteQualityFormOK {
	return &DeleteQualityFormOK{}
}

/*
DeleteQualityFormOK describes a response with status code 200, with default header values.

Operation was successful.
*/
type DeleteQualityFormOK struct {
}

// IsSuccess returns true when this delete quality form o k response has a 2xx status code
func (o *DeleteQualityFormOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete quality form o k response has a 3xx status code
func (o *DeleteQualityFormOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete quality form o k response has a 4xx status code
func (o *DeleteQualityFormOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete quality form o k response has a 5xx status code
func (o *DeleteQualityFormOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete quality form o k response a status code equal to that given
func (o *DeleteQualityFormOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeleteQualityFormOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/forms/{formId}][%d] deleteQualityFormOK ", 200)
}

func (o *DeleteQualityFormOK) String() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/forms/{formId}][%d] deleteQualityFormOK ", 200)
}

func (o *DeleteQualityFormOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteQualityFormBadRequest creates a DeleteQualityFormBadRequest with default headers values
func NewDeleteQualityFormBadRequest() *DeleteQualityFormBadRequest {
	return &DeleteQualityFormBadRequest{}
}

/*
DeleteQualityFormBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type DeleteQualityFormBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete quality form bad request response has a 2xx status code
func (o *DeleteQualityFormBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete quality form bad request response has a 3xx status code
func (o *DeleteQualityFormBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete quality form bad request response has a 4xx status code
func (o *DeleteQualityFormBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete quality form bad request response has a 5xx status code
func (o *DeleteQualityFormBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete quality form bad request response a status code equal to that given
func (o *DeleteQualityFormBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteQualityFormBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/forms/{formId}][%d] deleteQualityFormBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteQualityFormBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/forms/{formId}][%d] deleteQualityFormBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteQualityFormBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteQualityFormBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteQualityFormUnauthorized creates a DeleteQualityFormUnauthorized with default headers values
func NewDeleteQualityFormUnauthorized() *DeleteQualityFormUnauthorized {
	return &DeleteQualityFormUnauthorized{}
}

/*
DeleteQualityFormUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type DeleteQualityFormUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete quality form unauthorized response has a 2xx status code
func (o *DeleteQualityFormUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete quality form unauthorized response has a 3xx status code
func (o *DeleteQualityFormUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete quality form unauthorized response has a 4xx status code
func (o *DeleteQualityFormUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete quality form unauthorized response has a 5xx status code
func (o *DeleteQualityFormUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete quality form unauthorized response a status code equal to that given
func (o *DeleteQualityFormUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteQualityFormUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/forms/{formId}][%d] deleteQualityFormUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteQualityFormUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/forms/{formId}][%d] deleteQualityFormUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteQualityFormUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteQualityFormUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteQualityFormForbidden creates a DeleteQualityFormForbidden with default headers values
func NewDeleteQualityFormForbidden() *DeleteQualityFormForbidden {
	return &DeleteQualityFormForbidden{}
}

/*
DeleteQualityFormForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type DeleteQualityFormForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete quality form forbidden response has a 2xx status code
func (o *DeleteQualityFormForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete quality form forbidden response has a 3xx status code
func (o *DeleteQualityFormForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete quality form forbidden response has a 4xx status code
func (o *DeleteQualityFormForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete quality form forbidden response has a 5xx status code
func (o *DeleteQualityFormForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete quality form forbidden response a status code equal to that given
func (o *DeleteQualityFormForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteQualityFormForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/forms/{formId}][%d] deleteQualityFormForbidden  %+v", 403, o.Payload)
}

func (o *DeleteQualityFormForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/forms/{formId}][%d] deleteQualityFormForbidden  %+v", 403, o.Payload)
}

func (o *DeleteQualityFormForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteQualityFormForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteQualityFormNotFound creates a DeleteQualityFormNotFound with default headers values
func NewDeleteQualityFormNotFound() *DeleteQualityFormNotFound {
	return &DeleteQualityFormNotFound{}
}

/*
DeleteQualityFormNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type DeleteQualityFormNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete quality form not found response has a 2xx status code
func (o *DeleteQualityFormNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete quality form not found response has a 3xx status code
func (o *DeleteQualityFormNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete quality form not found response has a 4xx status code
func (o *DeleteQualityFormNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete quality form not found response has a 5xx status code
func (o *DeleteQualityFormNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete quality form not found response a status code equal to that given
func (o *DeleteQualityFormNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteQualityFormNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/forms/{formId}][%d] deleteQualityFormNotFound  %+v", 404, o.Payload)
}

func (o *DeleteQualityFormNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/forms/{formId}][%d] deleteQualityFormNotFound  %+v", 404, o.Payload)
}

func (o *DeleteQualityFormNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteQualityFormNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteQualityFormRequestTimeout creates a DeleteQualityFormRequestTimeout with default headers values
func NewDeleteQualityFormRequestTimeout() *DeleteQualityFormRequestTimeout {
	return &DeleteQualityFormRequestTimeout{}
}

/*
DeleteQualityFormRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type DeleteQualityFormRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete quality form request timeout response has a 2xx status code
func (o *DeleteQualityFormRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete quality form request timeout response has a 3xx status code
func (o *DeleteQualityFormRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete quality form request timeout response has a 4xx status code
func (o *DeleteQualityFormRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete quality form request timeout response has a 5xx status code
func (o *DeleteQualityFormRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete quality form request timeout response a status code equal to that given
func (o *DeleteQualityFormRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *DeleteQualityFormRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/forms/{formId}][%d] deleteQualityFormRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteQualityFormRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/forms/{formId}][%d] deleteQualityFormRequestTimeout  %+v", 408, o.Payload)
}

func (o *DeleteQualityFormRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteQualityFormRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteQualityFormConflict creates a DeleteQualityFormConflict with default headers values
func NewDeleteQualityFormConflict() *DeleteQualityFormConflict {
	return &DeleteQualityFormConflict{}
}

/*
DeleteQualityFormConflict describes a response with status code 409, with default header values.

Conflict
*/
type DeleteQualityFormConflict struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete quality form conflict response has a 2xx status code
func (o *DeleteQualityFormConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete quality form conflict response has a 3xx status code
func (o *DeleteQualityFormConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete quality form conflict response has a 4xx status code
func (o *DeleteQualityFormConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete quality form conflict response has a 5xx status code
func (o *DeleteQualityFormConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this delete quality form conflict response a status code equal to that given
func (o *DeleteQualityFormConflict) IsCode(code int) bool {
	return code == 409
}

func (o *DeleteQualityFormConflict) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/forms/{formId}][%d] deleteQualityFormConflict  %+v", 409, o.Payload)
}

func (o *DeleteQualityFormConflict) String() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/forms/{formId}][%d] deleteQualityFormConflict  %+v", 409, o.Payload)
}

func (o *DeleteQualityFormConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteQualityFormConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteQualityFormRequestEntityTooLarge creates a DeleteQualityFormRequestEntityTooLarge with default headers values
func NewDeleteQualityFormRequestEntityTooLarge() *DeleteQualityFormRequestEntityTooLarge {
	return &DeleteQualityFormRequestEntityTooLarge{}
}

/*
DeleteQualityFormRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type DeleteQualityFormRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete quality form request entity too large response has a 2xx status code
func (o *DeleteQualityFormRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete quality form request entity too large response has a 3xx status code
func (o *DeleteQualityFormRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete quality form request entity too large response has a 4xx status code
func (o *DeleteQualityFormRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete quality form request entity too large response has a 5xx status code
func (o *DeleteQualityFormRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this delete quality form request entity too large response a status code equal to that given
func (o *DeleteQualityFormRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *DeleteQualityFormRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/forms/{formId}][%d] deleteQualityFormRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteQualityFormRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/forms/{formId}][%d] deleteQualityFormRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *DeleteQualityFormRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteQualityFormRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteQualityFormUnsupportedMediaType creates a DeleteQualityFormUnsupportedMediaType with default headers values
func NewDeleteQualityFormUnsupportedMediaType() *DeleteQualityFormUnsupportedMediaType {
	return &DeleteQualityFormUnsupportedMediaType{}
}

/*
DeleteQualityFormUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type DeleteQualityFormUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete quality form unsupported media type response has a 2xx status code
func (o *DeleteQualityFormUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete quality form unsupported media type response has a 3xx status code
func (o *DeleteQualityFormUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete quality form unsupported media type response has a 4xx status code
func (o *DeleteQualityFormUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete quality form unsupported media type response has a 5xx status code
func (o *DeleteQualityFormUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this delete quality form unsupported media type response a status code equal to that given
func (o *DeleteQualityFormUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *DeleteQualityFormUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/forms/{formId}][%d] deleteQualityFormUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteQualityFormUnsupportedMediaType) String() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/forms/{formId}][%d] deleteQualityFormUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteQualityFormUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteQualityFormUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteQualityFormTooManyRequests creates a DeleteQualityFormTooManyRequests with default headers values
func NewDeleteQualityFormTooManyRequests() *DeleteQualityFormTooManyRequests {
	return &DeleteQualityFormTooManyRequests{}
}

/*
DeleteQualityFormTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type DeleteQualityFormTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete quality form too many requests response has a 2xx status code
func (o *DeleteQualityFormTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete quality form too many requests response has a 3xx status code
func (o *DeleteQualityFormTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete quality form too many requests response has a 4xx status code
func (o *DeleteQualityFormTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete quality form too many requests response has a 5xx status code
func (o *DeleteQualityFormTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete quality form too many requests response a status code equal to that given
func (o *DeleteQualityFormTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteQualityFormTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/forms/{formId}][%d] deleteQualityFormTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteQualityFormTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/forms/{formId}][%d] deleteQualityFormTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteQualityFormTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteQualityFormTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteQualityFormInternalServerError creates a DeleteQualityFormInternalServerError with default headers values
func NewDeleteQualityFormInternalServerError() *DeleteQualityFormInternalServerError {
	return &DeleteQualityFormInternalServerError{}
}

/*
DeleteQualityFormInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type DeleteQualityFormInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete quality form internal server error response has a 2xx status code
func (o *DeleteQualityFormInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete quality form internal server error response has a 3xx status code
func (o *DeleteQualityFormInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete quality form internal server error response has a 4xx status code
func (o *DeleteQualityFormInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete quality form internal server error response has a 5xx status code
func (o *DeleteQualityFormInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete quality form internal server error response a status code equal to that given
func (o *DeleteQualityFormInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteQualityFormInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/forms/{formId}][%d] deleteQualityFormInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteQualityFormInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/forms/{formId}][%d] deleteQualityFormInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteQualityFormInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteQualityFormInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteQualityFormServiceUnavailable creates a DeleteQualityFormServiceUnavailable with default headers values
func NewDeleteQualityFormServiceUnavailable() *DeleteQualityFormServiceUnavailable {
	return &DeleteQualityFormServiceUnavailable{}
}

/*
DeleteQualityFormServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type DeleteQualityFormServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete quality form service unavailable response has a 2xx status code
func (o *DeleteQualityFormServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete quality form service unavailable response has a 3xx status code
func (o *DeleteQualityFormServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete quality form service unavailable response has a 4xx status code
func (o *DeleteQualityFormServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete quality form service unavailable response has a 5xx status code
func (o *DeleteQualityFormServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete quality form service unavailable response a status code equal to that given
func (o *DeleteQualityFormServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *DeleteQualityFormServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/forms/{formId}][%d] deleteQualityFormServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteQualityFormServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/forms/{formId}][%d] deleteQualityFormServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteQualityFormServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteQualityFormServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteQualityFormGatewayTimeout creates a DeleteQualityFormGatewayTimeout with default headers values
func NewDeleteQualityFormGatewayTimeout() *DeleteQualityFormGatewayTimeout {
	return &DeleteQualityFormGatewayTimeout{}
}

/*
DeleteQualityFormGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type DeleteQualityFormGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this delete quality form gateway timeout response has a 2xx status code
func (o *DeleteQualityFormGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete quality form gateway timeout response has a 3xx status code
func (o *DeleteQualityFormGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete quality form gateway timeout response has a 4xx status code
func (o *DeleteQualityFormGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete quality form gateway timeout response has a 5xx status code
func (o *DeleteQualityFormGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this delete quality form gateway timeout response a status code equal to that given
func (o *DeleteQualityFormGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *DeleteQualityFormGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/forms/{formId}][%d] deleteQualityFormGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteQualityFormGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/v2/quality/forms/{formId}][%d] deleteQualityFormGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteQualityFormGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteQualityFormGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
