// Code generated by go-swagger; DO NOT EDIT.

package quality

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutQualitySurveysScorableReader is a Reader for the PutQualitySurveysScorable structure.
type PutQualitySurveysScorableReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutQualitySurveysScorableReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutQualitySurveysScorableOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutQualitySurveysScorableBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutQualitySurveysScorableUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutQualitySurveysScorableForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutQualitySurveysScorableNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutQualitySurveysScorableRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutQualitySurveysScorableRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutQualitySurveysScorableUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutQualitySurveysScorableTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutQualitySurveysScorableInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutQualitySurveysScorableServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutQualitySurveysScorableGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutQualitySurveysScorableOK creates a PutQualitySurveysScorableOK with default headers values
func NewPutQualitySurveysScorableOK() *PutQualitySurveysScorableOK {
	return &PutQualitySurveysScorableOK{}
}

/*PutQualitySurveysScorableOK handles this case with default header values.

successful operation
*/
type PutQualitySurveysScorableOK struct {
	Payload *models.ScorableSurvey
}

func (o *PutQualitySurveysScorableOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/surveys/scorable][%d] putQualitySurveysScorableOK  %+v", 200, o.Payload)
}

func (o *PutQualitySurveysScorableOK) GetPayload() *models.ScorableSurvey {
	return o.Payload
}

func (o *PutQualitySurveysScorableOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ScorableSurvey)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualitySurveysScorableBadRequest creates a PutQualitySurveysScorableBadRequest with default headers values
func NewPutQualitySurveysScorableBadRequest() *PutQualitySurveysScorableBadRequest {
	return &PutQualitySurveysScorableBadRequest{}
}

/*PutQualitySurveysScorableBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutQualitySurveysScorableBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PutQualitySurveysScorableBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/surveys/scorable][%d] putQualitySurveysScorableBadRequest  %+v", 400, o.Payload)
}

func (o *PutQualitySurveysScorableBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualitySurveysScorableBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualitySurveysScorableUnauthorized creates a PutQualitySurveysScorableUnauthorized with default headers values
func NewPutQualitySurveysScorableUnauthorized() *PutQualitySurveysScorableUnauthorized {
	return &PutQualitySurveysScorableUnauthorized{}
}

/*PutQualitySurveysScorableUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PutQualitySurveysScorableUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PutQualitySurveysScorableUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/surveys/scorable][%d] putQualitySurveysScorableUnauthorized  %+v", 401, o.Payload)
}

func (o *PutQualitySurveysScorableUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualitySurveysScorableUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualitySurveysScorableForbidden creates a PutQualitySurveysScorableForbidden with default headers values
func NewPutQualitySurveysScorableForbidden() *PutQualitySurveysScorableForbidden {
	return &PutQualitySurveysScorableForbidden{}
}

/*PutQualitySurveysScorableForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PutQualitySurveysScorableForbidden struct {
	Payload *models.ErrorBody
}

func (o *PutQualitySurveysScorableForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/surveys/scorable][%d] putQualitySurveysScorableForbidden  %+v", 403, o.Payload)
}

func (o *PutQualitySurveysScorableForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualitySurveysScorableForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualitySurveysScorableNotFound creates a PutQualitySurveysScorableNotFound with default headers values
func NewPutQualitySurveysScorableNotFound() *PutQualitySurveysScorableNotFound {
	return &PutQualitySurveysScorableNotFound{}
}

/*PutQualitySurveysScorableNotFound handles this case with default header values.

The requested resource was not found.
*/
type PutQualitySurveysScorableNotFound struct {
	Payload *models.ErrorBody
}

func (o *PutQualitySurveysScorableNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/surveys/scorable][%d] putQualitySurveysScorableNotFound  %+v", 404, o.Payload)
}

func (o *PutQualitySurveysScorableNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualitySurveysScorableNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualitySurveysScorableRequestTimeout creates a PutQualitySurveysScorableRequestTimeout with default headers values
func NewPutQualitySurveysScorableRequestTimeout() *PutQualitySurveysScorableRequestTimeout {
	return &PutQualitySurveysScorableRequestTimeout{}
}

/*PutQualitySurveysScorableRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutQualitySurveysScorableRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutQualitySurveysScorableRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/surveys/scorable][%d] putQualitySurveysScorableRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutQualitySurveysScorableRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualitySurveysScorableRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualitySurveysScorableRequestEntityTooLarge creates a PutQualitySurveysScorableRequestEntityTooLarge with default headers values
func NewPutQualitySurveysScorableRequestEntityTooLarge() *PutQualitySurveysScorableRequestEntityTooLarge {
	return &PutQualitySurveysScorableRequestEntityTooLarge{}
}

/*PutQualitySurveysScorableRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type PutQualitySurveysScorableRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PutQualitySurveysScorableRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/surveys/scorable][%d] putQualitySurveysScorableRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutQualitySurveysScorableRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualitySurveysScorableRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualitySurveysScorableUnsupportedMediaType creates a PutQualitySurveysScorableUnsupportedMediaType with default headers values
func NewPutQualitySurveysScorableUnsupportedMediaType() *PutQualitySurveysScorableUnsupportedMediaType {
	return &PutQualitySurveysScorableUnsupportedMediaType{}
}

/*PutQualitySurveysScorableUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutQualitySurveysScorableUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PutQualitySurveysScorableUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/surveys/scorable][%d] putQualitySurveysScorableUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutQualitySurveysScorableUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualitySurveysScorableUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualitySurveysScorableTooManyRequests creates a PutQualitySurveysScorableTooManyRequests with default headers values
func NewPutQualitySurveysScorableTooManyRequests() *PutQualitySurveysScorableTooManyRequests {
	return &PutQualitySurveysScorableTooManyRequests{}
}

/*PutQualitySurveysScorableTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutQualitySurveysScorableTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PutQualitySurveysScorableTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/surveys/scorable][%d] putQualitySurveysScorableTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutQualitySurveysScorableTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualitySurveysScorableTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualitySurveysScorableInternalServerError creates a PutQualitySurveysScorableInternalServerError with default headers values
func NewPutQualitySurveysScorableInternalServerError() *PutQualitySurveysScorableInternalServerError {
	return &PutQualitySurveysScorableInternalServerError{}
}

/*PutQualitySurveysScorableInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutQualitySurveysScorableInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PutQualitySurveysScorableInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/surveys/scorable][%d] putQualitySurveysScorableInternalServerError  %+v", 500, o.Payload)
}

func (o *PutQualitySurveysScorableInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualitySurveysScorableInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualitySurveysScorableServiceUnavailable creates a PutQualitySurveysScorableServiceUnavailable with default headers values
func NewPutQualitySurveysScorableServiceUnavailable() *PutQualitySurveysScorableServiceUnavailable {
	return &PutQualitySurveysScorableServiceUnavailable{}
}

/*PutQualitySurveysScorableServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutQualitySurveysScorableServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PutQualitySurveysScorableServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/surveys/scorable][%d] putQualitySurveysScorableServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutQualitySurveysScorableServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualitySurveysScorableServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualitySurveysScorableGatewayTimeout creates a PutQualitySurveysScorableGatewayTimeout with default headers values
func NewPutQualitySurveysScorableGatewayTimeout() *PutQualitySurveysScorableGatewayTimeout {
	return &PutQualitySurveysScorableGatewayTimeout{}
}

/*PutQualitySurveysScorableGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PutQualitySurveysScorableGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutQualitySurveysScorableGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/surveys/scorable][%d] putQualitySurveysScorableGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutQualitySurveysScorableGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualitySurveysScorableGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
