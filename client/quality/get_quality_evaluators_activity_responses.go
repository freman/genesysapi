// Code generated by go-swagger; DO NOT EDIT.

package quality

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetQualityEvaluatorsActivityReader is a Reader for the GetQualityEvaluatorsActivity structure.
type GetQualityEvaluatorsActivityReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetQualityEvaluatorsActivityReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetQualityEvaluatorsActivityOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetQualityEvaluatorsActivityBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetQualityEvaluatorsActivityUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetQualityEvaluatorsActivityForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetQualityEvaluatorsActivityNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetQualityEvaluatorsActivityRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetQualityEvaluatorsActivityRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetQualityEvaluatorsActivityUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetQualityEvaluatorsActivityTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetQualityEvaluatorsActivityInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetQualityEvaluatorsActivityServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetQualityEvaluatorsActivityGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetQualityEvaluatorsActivityOK creates a GetQualityEvaluatorsActivityOK with default headers values
func NewGetQualityEvaluatorsActivityOK() *GetQualityEvaluatorsActivityOK {
	return &GetQualityEvaluatorsActivityOK{}
}

/*GetQualityEvaluatorsActivityOK handles this case with default header values.

successful operation
*/
type GetQualityEvaluatorsActivityOK struct {
	Payload *models.EvaluatorActivityEntityListing
}

func (o *GetQualityEvaluatorsActivityOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/evaluators/activity][%d] getQualityEvaluatorsActivityOK  %+v", 200, o.Payload)
}

func (o *GetQualityEvaluatorsActivityOK) GetPayload() *models.EvaluatorActivityEntityListing {
	return o.Payload
}

func (o *GetQualityEvaluatorsActivityOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EvaluatorActivityEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityEvaluatorsActivityBadRequest creates a GetQualityEvaluatorsActivityBadRequest with default headers values
func NewGetQualityEvaluatorsActivityBadRequest() *GetQualityEvaluatorsActivityBadRequest {
	return &GetQualityEvaluatorsActivityBadRequest{}
}

/*GetQualityEvaluatorsActivityBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetQualityEvaluatorsActivityBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetQualityEvaluatorsActivityBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/evaluators/activity][%d] getQualityEvaluatorsActivityBadRequest  %+v", 400, o.Payload)
}

func (o *GetQualityEvaluatorsActivityBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityEvaluatorsActivityBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityEvaluatorsActivityUnauthorized creates a GetQualityEvaluatorsActivityUnauthorized with default headers values
func NewGetQualityEvaluatorsActivityUnauthorized() *GetQualityEvaluatorsActivityUnauthorized {
	return &GetQualityEvaluatorsActivityUnauthorized{}
}

/*GetQualityEvaluatorsActivityUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetQualityEvaluatorsActivityUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetQualityEvaluatorsActivityUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/evaluators/activity][%d] getQualityEvaluatorsActivityUnauthorized  %+v", 401, o.Payload)
}

func (o *GetQualityEvaluatorsActivityUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityEvaluatorsActivityUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityEvaluatorsActivityForbidden creates a GetQualityEvaluatorsActivityForbidden with default headers values
func NewGetQualityEvaluatorsActivityForbidden() *GetQualityEvaluatorsActivityForbidden {
	return &GetQualityEvaluatorsActivityForbidden{}
}

/*GetQualityEvaluatorsActivityForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetQualityEvaluatorsActivityForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetQualityEvaluatorsActivityForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/evaluators/activity][%d] getQualityEvaluatorsActivityForbidden  %+v", 403, o.Payload)
}

func (o *GetQualityEvaluatorsActivityForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityEvaluatorsActivityForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityEvaluatorsActivityNotFound creates a GetQualityEvaluatorsActivityNotFound with default headers values
func NewGetQualityEvaluatorsActivityNotFound() *GetQualityEvaluatorsActivityNotFound {
	return &GetQualityEvaluatorsActivityNotFound{}
}

/*GetQualityEvaluatorsActivityNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetQualityEvaluatorsActivityNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetQualityEvaluatorsActivityNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/evaluators/activity][%d] getQualityEvaluatorsActivityNotFound  %+v", 404, o.Payload)
}

func (o *GetQualityEvaluatorsActivityNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityEvaluatorsActivityNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityEvaluatorsActivityRequestTimeout creates a GetQualityEvaluatorsActivityRequestTimeout with default headers values
func NewGetQualityEvaluatorsActivityRequestTimeout() *GetQualityEvaluatorsActivityRequestTimeout {
	return &GetQualityEvaluatorsActivityRequestTimeout{}
}

/*GetQualityEvaluatorsActivityRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetQualityEvaluatorsActivityRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetQualityEvaluatorsActivityRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/evaluators/activity][%d] getQualityEvaluatorsActivityRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetQualityEvaluatorsActivityRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityEvaluatorsActivityRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityEvaluatorsActivityRequestEntityTooLarge creates a GetQualityEvaluatorsActivityRequestEntityTooLarge with default headers values
func NewGetQualityEvaluatorsActivityRequestEntityTooLarge() *GetQualityEvaluatorsActivityRequestEntityTooLarge {
	return &GetQualityEvaluatorsActivityRequestEntityTooLarge{}
}

/*GetQualityEvaluatorsActivityRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetQualityEvaluatorsActivityRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetQualityEvaluatorsActivityRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/evaluators/activity][%d] getQualityEvaluatorsActivityRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetQualityEvaluatorsActivityRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityEvaluatorsActivityRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityEvaluatorsActivityUnsupportedMediaType creates a GetQualityEvaluatorsActivityUnsupportedMediaType with default headers values
func NewGetQualityEvaluatorsActivityUnsupportedMediaType() *GetQualityEvaluatorsActivityUnsupportedMediaType {
	return &GetQualityEvaluatorsActivityUnsupportedMediaType{}
}

/*GetQualityEvaluatorsActivityUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetQualityEvaluatorsActivityUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetQualityEvaluatorsActivityUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/evaluators/activity][%d] getQualityEvaluatorsActivityUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetQualityEvaluatorsActivityUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityEvaluatorsActivityUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityEvaluatorsActivityTooManyRequests creates a GetQualityEvaluatorsActivityTooManyRequests with default headers values
func NewGetQualityEvaluatorsActivityTooManyRequests() *GetQualityEvaluatorsActivityTooManyRequests {
	return &GetQualityEvaluatorsActivityTooManyRequests{}
}

/*GetQualityEvaluatorsActivityTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetQualityEvaluatorsActivityTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetQualityEvaluatorsActivityTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/evaluators/activity][%d] getQualityEvaluatorsActivityTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetQualityEvaluatorsActivityTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityEvaluatorsActivityTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityEvaluatorsActivityInternalServerError creates a GetQualityEvaluatorsActivityInternalServerError with default headers values
func NewGetQualityEvaluatorsActivityInternalServerError() *GetQualityEvaluatorsActivityInternalServerError {
	return &GetQualityEvaluatorsActivityInternalServerError{}
}

/*GetQualityEvaluatorsActivityInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetQualityEvaluatorsActivityInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetQualityEvaluatorsActivityInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/evaluators/activity][%d] getQualityEvaluatorsActivityInternalServerError  %+v", 500, o.Payload)
}

func (o *GetQualityEvaluatorsActivityInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityEvaluatorsActivityInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityEvaluatorsActivityServiceUnavailable creates a GetQualityEvaluatorsActivityServiceUnavailable with default headers values
func NewGetQualityEvaluatorsActivityServiceUnavailable() *GetQualityEvaluatorsActivityServiceUnavailable {
	return &GetQualityEvaluatorsActivityServiceUnavailable{}
}

/*GetQualityEvaluatorsActivityServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetQualityEvaluatorsActivityServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetQualityEvaluatorsActivityServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/evaluators/activity][%d] getQualityEvaluatorsActivityServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetQualityEvaluatorsActivityServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityEvaluatorsActivityServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityEvaluatorsActivityGatewayTimeout creates a GetQualityEvaluatorsActivityGatewayTimeout with default headers values
func NewGetQualityEvaluatorsActivityGatewayTimeout() *GetQualityEvaluatorsActivityGatewayTimeout {
	return &GetQualityEvaluatorsActivityGatewayTimeout{}
}

/*GetQualityEvaluatorsActivityGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetQualityEvaluatorsActivityGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetQualityEvaluatorsActivityGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/evaluators/activity][%d] getQualityEvaluatorsActivityGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetQualityEvaluatorsActivityGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityEvaluatorsActivityGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
