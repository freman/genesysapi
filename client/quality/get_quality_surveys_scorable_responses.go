// Code generated by go-swagger; DO NOT EDIT.

package quality

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetQualitySurveysScorableReader is a Reader for the GetQualitySurveysScorable structure.
type GetQualitySurveysScorableReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetQualitySurveysScorableReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetQualitySurveysScorableOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetQualitySurveysScorableBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetQualitySurveysScorableUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetQualitySurveysScorableForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetQualitySurveysScorableNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetQualitySurveysScorableRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetQualitySurveysScorableRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetQualitySurveysScorableUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetQualitySurveysScorableTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetQualitySurveysScorableInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetQualitySurveysScorableServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetQualitySurveysScorableGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetQualitySurveysScorableOK creates a GetQualitySurveysScorableOK with default headers values
func NewGetQualitySurveysScorableOK() *GetQualitySurveysScorableOK {
	return &GetQualitySurveysScorableOK{}
}

/*
GetQualitySurveysScorableOK describes a response with status code 200, with default header values.

successful operation
*/
type GetQualitySurveysScorableOK struct {
	Payload *models.ScorableSurvey
}

// IsSuccess returns true when this get quality surveys scorable o k response has a 2xx status code
func (o *GetQualitySurveysScorableOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get quality surveys scorable o k response has a 3xx status code
func (o *GetQualitySurveysScorableOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get quality surveys scorable o k response has a 4xx status code
func (o *GetQualitySurveysScorableOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get quality surveys scorable o k response has a 5xx status code
func (o *GetQualitySurveysScorableOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get quality surveys scorable o k response a status code equal to that given
func (o *GetQualitySurveysScorableOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetQualitySurveysScorableOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/surveys/scorable][%d] getQualitySurveysScorableOK  %+v", 200, o.Payload)
}

func (o *GetQualitySurveysScorableOK) String() string {
	return fmt.Sprintf("[GET /api/v2/quality/surveys/scorable][%d] getQualitySurveysScorableOK  %+v", 200, o.Payload)
}

func (o *GetQualitySurveysScorableOK) GetPayload() *models.ScorableSurvey {
	return o.Payload
}

func (o *GetQualitySurveysScorableOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ScorableSurvey)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualitySurveysScorableBadRequest creates a GetQualitySurveysScorableBadRequest with default headers values
func NewGetQualitySurveysScorableBadRequest() *GetQualitySurveysScorableBadRequest {
	return &GetQualitySurveysScorableBadRequest{}
}

/*
GetQualitySurveysScorableBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetQualitySurveysScorableBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get quality surveys scorable bad request response has a 2xx status code
func (o *GetQualitySurveysScorableBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get quality surveys scorable bad request response has a 3xx status code
func (o *GetQualitySurveysScorableBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get quality surveys scorable bad request response has a 4xx status code
func (o *GetQualitySurveysScorableBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get quality surveys scorable bad request response has a 5xx status code
func (o *GetQualitySurveysScorableBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get quality surveys scorable bad request response a status code equal to that given
func (o *GetQualitySurveysScorableBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetQualitySurveysScorableBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/surveys/scorable][%d] getQualitySurveysScorableBadRequest  %+v", 400, o.Payload)
}

func (o *GetQualitySurveysScorableBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/quality/surveys/scorable][%d] getQualitySurveysScorableBadRequest  %+v", 400, o.Payload)
}

func (o *GetQualitySurveysScorableBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualitySurveysScorableBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualitySurveysScorableUnauthorized creates a GetQualitySurveysScorableUnauthorized with default headers values
func NewGetQualitySurveysScorableUnauthorized() *GetQualitySurveysScorableUnauthorized {
	return &GetQualitySurveysScorableUnauthorized{}
}

/*
GetQualitySurveysScorableUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetQualitySurveysScorableUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get quality surveys scorable unauthorized response has a 2xx status code
func (o *GetQualitySurveysScorableUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get quality surveys scorable unauthorized response has a 3xx status code
func (o *GetQualitySurveysScorableUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get quality surveys scorable unauthorized response has a 4xx status code
func (o *GetQualitySurveysScorableUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get quality surveys scorable unauthorized response has a 5xx status code
func (o *GetQualitySurveysScorableUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get quality surveys scorable unauthorized response a status code equal to that given
func (o *GetQualitySurveysScorableUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetQualitySurveysScorableUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/surveys/scorable][%d] getQualitySurveysScorableUnauthorized  %+v", 401, o.Payload)
}

func (o *GetQualitySurveysScorableUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/quality/surveys/scorable][%d] getQualitySurveysScorableUnauthorized  %+v", 401, o.Payload)
}

func (o *GetQualitySurveysScorableUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualitySurveysScorableUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualitySurveysScorableForbidden creates a GetQualitySurveysScorableForbidden with default headers values
func NewGetQualitySurveysScorableForbidden() *GetQualitySurveysScorableForbidden {
	return &GetQualitySurveysScorableForbidden{}
}

/*
GetQualitySurveysScorableForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetQualitySurveysScorableForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get quality surveys scorable forbidden response has a 2xx status code
func (o *GetQualitySurveysScorableForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get quality surveys scorable forbidden response has a 3xx status code
func (o *GetQualitySurveysScorableForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get quality surveys scorable forbidden response has a 4xx status code
func (o *GetQualitySurveysScorableForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get quality surveys scorable forbidden response has a 5xx status code
func (o *GetQualitySurveysScorableForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get quality surveys scorable forbidden response a status code equal to that given
func (o *GetQualitySurveysScorableForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetQualitySurveysScorableForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/surveys/scorable][%d] getQualitySurveysScorableForbidden  %+v", 403, o.Payload)
}

func (o *GetQualitySurveysScorableForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/quality/surveys/scorable][%d] getQualitySurveysScorableForbidden  %+v", 403, o.Payload)
}

func (o *GetQualitySurveysScorableForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualitySurveysScorableForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualitySurveysScorableNotFound creates a GetQualitySurveysScorableNotFound with default headers values
func NewGetQualitySurveysScorableNotFound() *GetQualitySurveysScorableNotFound {
	return &GetQualitySurveysScorableNotFound{}
}

/*
GetQualitySurveysScorableNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetQualitySurveysScorableNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get quality surveys scorable not found response has a 2xx status code
func (o *GetQualitySurveysScorableNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get quality surveys scorable not found response has a 3xx status code
func (o *GetQualitySurveysScorableNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get quality surveys scorable not found response has a 4xx status code
func (o *GetQualitySurveysScorableNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get quality surveys scorable not found response has a 5xx status code
func (o *GetQualitySurveysScorableNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get quality surveys scorable not found response a status code equal to that given
func (o *GetQualitySurveysScorableNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetQualitySurveysScorableNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/surveys/scorable][%d] getQualitySurveysScorableNotFound  %+v", 404, o.Payload)
}

func (o *GetQualitySurveysScorableNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/quality/surveys/scorable][%d] getQualitySurveysScorableNotFound  %+v", 404, o.Payload)
}

func (o *GetQualitySurveysScorableNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualitySurveysScorableNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualitySurveysScorableRequestTimeout creates a GetQualitySurveysScorableRequestTimeout with default headers values
func NewGetQualitySurveysScorableRequestTimeout() *GetQualitySurveysScorableRequestTimeout {
	return &GetQualitySurveysScorableRequestTimeout{}
}

/*
GetQualitySurveysScorableRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetQualitySurveysScorableRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get quality surveys scorable request timeout response has a 2xx status code
func (o *GetQualitySurveysScorableRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get quality surveys scorable request timeout response has a 3xx status code
func (o *GetQualitySurveysScorableRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get quality surveys scorable request timeout response has a 4xx status code
func (o *GetQualitySurveysScorableRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get quality surveys scorable request timeout response has a 5xx status code
func (o *GetQualitySurveysScorableRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get quality surveys scorable request timeout response a status code equal to that given
func (o *GetQualitySurveysScorableRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetQualitySurveysScorableRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/surveys/scorable][%d] getQualitySurveysScorableRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetQualitySurveysScorableRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/quality/surveys/scorable][%d] getQualitySurveysScorableRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetQualitySurveysScorableRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualitySurveysScorableRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualitySurveysScorableRequestEntityTooLarge creates a GetQualitySurveysScorableRequestEntityTooLarge with default headers values
func NewGetQualitySurveysScorableRequestEntityTooLarge() *GetQualitySurveysScorableRequestEntityTooLarge {
	return &GetQualitySurveysScorableRequestEntityTooLarge{}
}

/*
GetQualitySurveysScorableRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetQualitySurveysScorableRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get quality surveys scorable request entity too large response has a 2xx status code
func (o *GetQualitySurveysScorableRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get quality surveys scorable request entity too large response has a 3xx status code
func (o *GetQualitySurveysScorableRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get quality surveys scorable request entity too large response has a 4xx status code
func (o *GetQualitySurveysScorableRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get quality surveys scorable request entity too large response has a 5xx status code
func (o *GetQualitySurveysScorableRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get quality surveys scorable request entity too large response a status code equal to that given
func (o *GetQualitySurveysScorableRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetQualitySurveysScorableRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/surveys/scorable][%d] getQualitySurveysScorableRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetQualitySurveysScorableRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/quality/surveys/scorable][%d] getQualitySurveysScorableRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetQualitySurveysScorableRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualitySurveysScorableRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualitySurveysScorableUnsupportedMediaType creates a GetQualitySurveysScorableUnsupportedMediaType with default headers values
func NewGetQualitySurveysScorableUnsupportedMediaType() *GetQualitySurveysScorableUnsupportedMediaType {
	return &GetQualitySurveysScorableUnsupportedMediaType{}
}

/*
GetQualitySurveysScorableUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetQualitySurveysScorableUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get quality surveys scorable unsupported media type response has a 2xx status code
func (o *GetQualitySurveysScorableUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get quality surveys scorable unsupported media type response has a 3xx status code
func (o *GetQualitySurveysScorableUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get quality surveys scorable unsupported media type response has a 4xx status code
func (o *GetQualitySurveysScorableUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get quality surveys scorable unsupported media type response has a 5xx status code
func (o *GetQualitySurveysScorableUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get quality surveys scorable unsupported media type response a status code equal to that given
func (o *GetQualitySurveysScorableUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetQualitySurveysScorableUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/surveys/scorable][%d] getQualitySurveysScorableUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetQualitySurveysScorableUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/quality/surveys/scorable][%d] getQualitySurveysScorableUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetQualitySurveysScorableUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualitySurveysScorableUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualitySurveysScorableTooManyRequests creates a GetQualitySurveysScorableTooManyRequests with default headers values
func NewGetQualitySurveysScorableTooManyRequests() *GetQualitySurveysScorableTooManyRequests {
	return &GetQualitySurveysScorableTooManyRequests{}
}

/*
GetQualitySurveysScorableTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetQualitySurveysScorableTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get quality surveys scorable too many requests response has a 2xx status code
func (o *GetQualitySurveysScorableTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get quality surveys scorable too many requests response has a 3xx status code
func (o *GetQualitySurveysScorableTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get quality surveys scorable too many requests response has a 4xx status code
func (o *GetQualitySurveysScorableTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get quality surveys scorable too many requests response has a 5xx status code
func (o *GetQualitySurveysScorableTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get quality surveys scorable too many requests response a status code equal to that given
func (o *GetQualitySurveysScorableTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetQualitySurveysScorableTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/surveys/scorable][%d] getQualitySurveysScorableTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetQualitySurveysScorableTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/quality/surveys/scorable][%d] getQualitySurveysScorableTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetQualitySurveysScorableTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualitySurveysScorableTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualitySurveysScorableInternalServerError creates a GetQualitySurveysScorableInternalServerError with default headers values
func NewGetQualitySurveysScorableInternalServerError() *GetQualitySurveysScorableInternalServerError {
	return &GetQualitySurveysScorableInternalServerError{}
}

/*
GetQualitySurveysScorableInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetQualitySurveysScorableInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get quality surveys scorable internal server error response has a 2xx status code
func (o *GetQualitySurveysScorableInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get quality surveys scorable internal server error response has a 3xx status code
func (o *GetQualitySurveysScorableInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get quality surveys scorable internal server error response has a 4xx status code
func (o *GetQualitySurveysScorableInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get quality surveys scorable internal server error response has a 5xx status code
func (o *GetQualitySurveysScorableInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get quality surveys scorable internal server error response a status code equal to that given
func (o *GetQualitySurveysScorableInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetQualitySurveysScorableInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/surveys/scorable][%d] getQualitySurveysScorableInternalServerError  %+v", 500, o.Payload)
}

func (o *GetQualitySurveysScorableInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/quality/surveys/scorable][%d] getQualitySurveysScorableInternalServerError  %+v", 500, o.Payload)
}

func (o *GetQualitySurveysScorableInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualitySurveysScorableInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualitySurveysScorableServiceUnavailable creates a GetQualitySurveysScorableServiceUnavailable with default headers values
func NewGetQualitySurveysScorableServiceUnavailable() *GetQualitySurveysScorableServiceUnavailable {
	return &GetQualitySurveysScorableServiceUnavailable{}
}

/*
GetQualitySurveysScorableServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetQualitySurveysScorableServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get quality surveys scorable service unavailable response has a 2xx status code
func (o *GetQualitySurveysScorableServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get quality surveys scorable service unavailable response has a 3xx status code
func (o *GetQualitySurveysScorableServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get quality surveys scorable service unavailable response has a 4xx status code
func (o *GetQualitySurveysScorableServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get quality surveys scorable service unavailable response has a 5xx status code
func (o *GetQualitySurveysScorableServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get quality surveys scorable service unavailable response a status code equal to that given
func (o *GetQualitySurveysScorableServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetQualitySurveysScorableServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/surveys/scorable][%d] getQualitySurveysScorableServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetQualitySurveysScorableServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/quality/surveys/scorable][%d] getQualitySurveysScorableServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetQualitySurveysScorableServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualitySurveysScorableServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualitySurveysScorableGatewayTimeout creates a GetQualitySurveysScorableGatewayTimeout with default headers values
func NewGetQualitySurveysScorableGatewayTimeout() *GetQualitySurveysScorableGatewayTimeout {
	return &GetQualitySurveysScorableGatewayTimeout{}
}

/*
GetQualitySurveysScorableGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetQualitySurveysScorableGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get quality surveys scorable gateway timeout response has a 2xx status code
func (o *GetQualitySurveysScorableGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get quality surveys scorable gateway timeout response has a 3xx status code
func (o *GetQualitySurveysScorableGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get quality surveys scorable gateway timeout response has a 4xx status code
func (o *GetQualitySurveysScorableGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get quality surveys scorable gateway timeout response has a 5xx status code
func (o *GetQualitySurveysScorableGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get quality surveys scorable gateway timeout response a status code equal to that given
func (o *GetQualitySurveysScorableGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetQualitySurveysScorableGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/surveys/scorable][%d] getQualitySurveysScorableGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetQualitySurveysScorableGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/quality/surveys/scorable][%d] getQualitySurveysScorableGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetQualitySurveysScorableGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualitySurveysScorableGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
