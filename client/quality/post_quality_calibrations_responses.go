// Code generated by go-swagger; DO NOT EDIT.

package quality

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostQualityCalibrationsReader is a Reader for the PostQualityCalibrations structure.
type PostQualityCalibrationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostQualityCalibrationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostQualityCalibrationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostQualityCalibrationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostQualityCalibrationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostQualityCalibrationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostQualityCalibrationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostQualityCalibrationsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostQualityCalibrationsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostQualityCalibrationsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostQualityCalibrationsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostQualityCalibrationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostQualityCalibrationsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostQualityCalibrationsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostQualityCalibrationsOK creates a PostQualityCalibrationsOK with default headers values
func NewPostQualityCalibrationsOK() *PostQualityCalibrationsOK {
	return &PostQualityCalibrationsOK{}
}

/*
PostQualityCalibrationsOK describes a response with status code 200, with default header values.

successful operation
*/
type PostQualityCalibrationsOK struct {
	Payload *models.Calibration
}

// IsSuccess returns true when this post quality calibrations o k response has a 2xx status code
func (o *PostQualityCalibrationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post quality calibrations o k response has a 3xx status code
func (o *PostQualityCalibrationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post quality calibrations o k response has a 4xx status code
func (o *PostQualityCalibrationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post quality calibrations o k response has a 5xx status code
func (o *PostQualityCalibrationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post quality calibrations o k response a status code equal to that given
func (o *PostQualityCalibrationsOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostQualityCalibrationsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/quality/calibrations][%d] postQualityCalibrationsOK  %+v", 200, o.Payload)
}

func (o *PostQualityCalibrationsOK) String() string {
	return fmt.Sprintf("[POST /api/v2/quality/calibrations][%d] postQualityCalibrationsOK  %+v", 200, o.Payload)
}

func (o *PostQualityCalibrationsOK) GetPayload() *models.Calibration {
	return o.Payload
}

func (o *PostQualityCalibrationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Calibration)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostQualityCalibrationsBadRequest creates a PostQualityCalibrationsBadRequest with default headers values
func NewPostQualityCalibrationsBadRequest() *PostQualityCalibrationsBadRequest {
	return &PostQualityCalibrationsBadRequest{}
}

/*
PostQualityCalibrationsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostQualityCalibrationsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post quality calibrations bad request response has a 2xx status code
func (o *PostQualityCalibrationsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post quality calibrations bad request response has a 3xx status code
func (o *PostQualityCalibrationsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post quality calibrations bad request response has a 4xx status code
func (o *PostQualityCalibrationsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post quality calibrations bad request response has a 5xx status code
func (o *PostQualityCalibrationsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post quality calibrations bad request response a status code equal to that given
func (o *PostQualityCalibrationsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostQualityCalibrationsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/quality/calibrations][%d] postQualityCalibrationsBadRequest  %+v", 400, o.Payload)
}

func (o *PostQualityCalibrationsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/quality/calibrations][%d] postQualityCalibrationsBadRequest  %+v", 400, o.Payload)
}

func (o *PostQualityCalibrationsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostQualityCalibrationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostQualityCalibrationsUnauthorized creates a PostQualityCalibrationsUnauthorized with default headers values
func NewPostQualityCalibrationsUnauthorized() *PostQualityCalibrationsUnauthorized {
	return &PostQualityCalibrationsUnauthorized{}
}

/*
PostQualityCalibrationsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostQualityCalibrationsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post quality calibrations unauthorized response has a 2xx status code
func (o *PostQualityCalibrationsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post quality calibrations unauthorized response has a 3xx status code
func (o *PostQualityCalibrationsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post quality calibrations unauthorized response has a 4xx status code
func (o *PostQualityCalibrationsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post quality calibrations unauthorized response has a 5xx status code
func (o *PostQualityCalibrationsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post quality calibrations unauthorized response a status code equal to that given
func (o *PostQualityCalibrationsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostQualityCalibrationsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/quality/calibrations][%d] postQualityCalibrationsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostQualityCalibrationsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/quality/calibrations][%d] postQualityCalibrationsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostQualityCalibrationsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostQualityCalibrationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostQualityCalibrationsForbidden creates a PostQualityCalibrationsForbidden with default headers values
func NewPostQualityCalibrationsForbidden() *PostQualityCalibrationsForbidden {
	return &PostQualityCalibrationsForbidden{}
}

/*
PostQualityCalibrationsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostQualityCalibrationsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post quality calibrations forbidden response has a 2xx status code
func (o *PostQualityCalibrationsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post quality calibrations forbidden response has a 3xx status code
func (o *PostQualityCalibrationsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post quality calibrations forbidden response has a 4xx status code
func (o *PostQualityCalibrationsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post quality calibrations forbidden response has a 5xx status code
func (o *PostQualityCalibrationsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post quality calibrations forbidden response a status code equal to that given
func (o *PostQualityCalibrationsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostQualityCalibrationsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/quality/calibrations][%d] postQualityCalibrationsForbidden  %+v", 403, o.Payload)
}

func (o *PostQualityCalibrationsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/quality/calibrations][%d] postQualityCalibrationsForbidden  %+v", 403, o.Payload)
}

func (o *PostQualityCalibrationsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostQualityCalibrationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostQualityCalibrationsNotFound creates a PostQualityCalibrationsNotFound with default headers values
func NewPostQualityCalibrationsNotFound() *PostQualityCalibrationsNotFound {
	return &PostQualityCalibrationsNotFound{}
}

/*
PostQualityCalibrationsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostQualityCalibrationsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post quality calibrations not found response has a 2xx status code
func (o *PostQualityCalibrationsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post quality calibrations not found response has a 3xx status code
func (o *PostQualityCalibrationsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post quality calibrations not found response has a 4xx status code
func (o *PostQualityCalibrationsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post quality calibrations not found response has a 5xx status code
func (o *PostQualityCalibrationsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post quality calibrations not found response a status code equal to that given
func (o *PostQualityCalibrationsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostQualityCalibrationsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/quality/calibrations][%d] postQualityCalibrationsNotFound  %+v", 404, o.Payload)
}

func (o *PostQualityCalibrationsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/quality/calibrations][%d] postQualityCalibrationsNotFound  %+v", 404, o.Payload)
}

func (o *PostQualityCalibrationsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostQualityCalibrationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostQualityCalibrationsRequestTimeout creates a PostQualityCalibrationsRequestTimeout with default headers values
func NewPostQualityCalibrationsRequestTimeout() *PostQualityCalibrationsRequestTimeout {
	return &PostQualityCalibrationsRequestTimeout{}
}

/*
PostQualityCalibrationsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostQualityCalibrationsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post quality calibrations request timeout response has a 2xx status code
func (o *PostQualityCalibrationsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post quality calibrations request timeout response has a 3xx status code
func (o *PostQualityCalibrationsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post quality calibrations request timeout response has a 4xx status code
func (o *PostQualityCalibrationsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post quality calibrations request timeout response has a 5xx status code
func (o *PostQualityCalibrationsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post quality calibrations request timeout response a status code equal to that given
func (o *PostQualityCalibrationsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostQualityCalibrationsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/quality/calibrations][%d] postQualityCalibrationsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostQualityCalibrationsRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/quality/calibrations][%d] postQualityCalibrationsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostQualityCalibrationsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostQualityCalibrationsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostQualityCalibrationsRequestEntityTooLarge creates a PostQualityCalibrationsRequestEntityTooLarge with default headers values
func NewPostQualityCalibrationsRequestEntityTooLarge() *PostQualityCalibrationsRequestEntityTooLarge {
	return &PostQualityCalibrationsRequestEntityTooLarge{}
}

/*
PostQualityCalibrationsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostQualityCalibrationsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post quality calibrations request entity too large response has a 2xx status code
func (o *PostQualityCalibrationsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post quality calibrations request entity too large response has a 3xx status code
func (o *PostQualityCalibrationsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post quality calibrations request entity too large response has a 4xx status code
func (o *PostQualityCalibrationsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post quality calibrations request entity too large response has a 5xx status code
func (o *PostQualityCalibrationsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post quality calibrations request entity too large response a status code equal to that given
func (o *PostQualityCalibrationsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostQualityCalibrationsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/quality/calibrations][%d] postQualityCalibrationsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostQualityCalibrationsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/quality/calibrations][%d] postQualityCalibrationsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostQualityCalibrationsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostQualityCalibrationsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostQualityCalibrationsUnsupportedMediaType creates a PostQualityCalibrationsUnsupportedMediaType with default headers values
func NewPostQualityCalibrationsUnsupportedMediaType() *PostQualityCalibrationsUnsupportedMediaType {
	return &PostQualityCalibrationsUnsupportedMediaType{}
}

/*
PostQualityCalibrationsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostQualityCalibrationsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post quality calibrations unsupported media type response has a 2xx status code
func (o *PostQualityCalibrationsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post quality calibrations unsupported media type response has a 3xx status code
func (o *PostQualityCalibrationsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post quality calibrations unsupported media type response has a 4xx status code
func (o *PostQualityCalibrationsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post quality calibrations unsupported media type response has a 5xx status code
func (o *PostQualityCalibrationsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post quality calibrations unsupported media type response a status code equal to that given
func (o *PostQualityCalibrationsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostQualityCalibrationsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/quality/calibrations][%d] postQualityCalibrationsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostQualityCalibrationsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/quality/calibrations][%d] postQualityCalibrationsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostQualityCalibrationsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostQualityCalibrationsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostQualityCalibrationsTooManyRequests creates a PostQualityCalibrationsTooManyRequests with default headers values
func NewPostQualityCalibrationsTooManyRequests() *PostQualityCalibrationsTooManyRequests {
	return &PostQualityCalibrationsTooManyRequests{}
}

/*
PostQualityCalibrationsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostQualityCalibrationsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post quality calibrations too many requests response has a 2xx status code
func (o *PostQualityCalibrationsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post quality calibrations too many requests response has a 3xx status code
func (o *PostQualityCalibrationsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post quality calibrations too many requests response has a 4xx status code
func (o *PostQualityCalibrationsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post quality calibrations too many requests response has a 5xx status code
func (o *PostQualityCalibrationsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post quality calibrations too many requests response a status code equal to that given
func (o *PostQualityCalibrationsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostQualityCalibrationsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/quality/calibrations][%d] postQualityCalibrationsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostQualityCalibrationsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/quality/calibrations][%d] postQualityCalibrationsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostQualityCalibrationsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostQualityCalibrationsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostQualityCalibrationsInternalServerError creates a PostQualityCalibrationsInternalServerError with default headers values
func NewPostQualityCalibrationsInternalServerError() *PostQualityCalibrationsInternalServerError {
	return &PostQualityCalibrationsInternalServerError{}
}

/*
PostQualityCalibrationsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostQualityCalibrationsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post quality calibrations internal server error response has a 2xx status code
func (o *PostQualityCalibrationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post quality calibrations internal server error response has a 3xx status code
func (o *PostQualityCalibrationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post quality calibrations internal server error response has a 4xx status code
func (o *PostQualityCalibrationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post quality calibrations internal server error response has a 5xx status code
func (o *PostQualityCalibrationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post quality calibrations internal server error response a status code equal to that given
func (o *PostQualityCalibrationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostQualityCalibrationsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/quality/calibrations][%d] postQualityCalibrationsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostQualityCalibrationsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/quality/calibrations][%d] postQualityCalibrationsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostQualityCalibrationsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostQualityCalibrationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostQualityCalibrationsServiceUnavailable creates a PostQualityCalibrationsServiceUnavailable with default headers values
func NewPostQualityCalibrationsServiceUnavailable() *PostQualityCalibrationsServiceUnavailable {
	return &PostQualityCalibrationsServiceUnavailable{}
}

/*
PostQualityCalibrationsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostQualityCalibrationsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post quality calibrations service unavailable response has a 2xx status code
func (o *PostQualityCalibrationsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post quality calibrations service unavailable response has a 3xx status code
func (o *PostQualityCalibrationsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post quality calibrations service unavailable response has a 4xx status code
func (o *PostQualityCalibrationsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post quality calibrations service unavailable response has a 5xx status code
func (o *PostQualityCalibrationsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post quality calibrations service unavailable response a status code equal to that given
func (o *PostQualityCalibrationsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostQualityCalibrationsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/quality/calibrations][%d] postQualityCalibrationsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostQualityCalibrationsServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/quality/calibrations][%d] postQualityCalibrationsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostQualityCalibrationsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostQualityCalibrationsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostQualityCalibrationsGatewayTimeout creates a PostQualityCalibrationsGatewayTimeout with default headers values
func NewPostQualityCalibrationsGatewayTimeout() *PostQualityCalibrationsGatewayTimeout {
	return &PostQualityCalibrationsGatewayTimeout{}
}

/*
PostQualityCalibrationsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostQualityCalibrationsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post quality calibrations gateway timeout response has a 2xx status code
func (o *PostQualityCalibrationsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post quality calibrations gateway timeout response has a 3xx status code
func (o *PostQualityCalibrationsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post quality calibrations gateway timeout response has a 4xx status code
func (o *PostQualityCalibrationsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post quality calibrations gateway timeout response has a 5xx status code
func (o *PostQualityCalibrationsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post quality calibrations gateway timeout response a status code equal to that given
func (o *PostQualityCalibrationsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostQualityCalibrationsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/quality/calibrations][%d] postQualityCalibrationsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostQualityCalibrationsGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/quality/calibrations][%d] postQualityCalibrationsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostQualityCalibrationsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostQualityCalibrationsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
