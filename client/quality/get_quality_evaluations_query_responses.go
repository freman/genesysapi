// Code generated by go-swagger; DO NOT EDIT.

package quality

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetQualityEvaluationsQueryReader is a Reader for the GetQualityEvaluationsQuery structure.
type GetQualityEvaluationsQueryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetQualityEvaluationsQueryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetQualityEvaluationsQueryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetQualityEvaluationsQueryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetQualityEvaluationsQueryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetQualityEvaluationsQueryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetQualityEvaluationsQueryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetQualityEvaluationsQueryRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetQualityEvaluationsQueryRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetQualityEvaluationsQueryUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetQualityEvaluationsQueryTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetQualityEvaluationsQueryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetQualityEvaluationsQueryServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetQualityEvaluationsQueryGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetQualityEvaluationsQueryOK creates a GetQualityEvaluationsQueryOK with default headers values
func NewGetQualityEvaluationsQueryOK() *GetQualityEvaluationsQueryOK {
	return &GetQualityEvaluationsQueryOK{}
}

/*GetQualityEvaluationsQueryOK handles this case with default header values.

successful operation
*/
type GetQualityEvaluationsQueryOK struct {
	Payload *models.EvaluationEntityListing
}

func (o *GetQualityEvaluationsQueryOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/evaluations/query][%d] getQualityEvaluationsQueryOK  %+v", 200, o.Payload)
}

func (o *GetQualityEvaluationsQueryOK) GetPayload() *models.EvaluationEntityListing {
	return o.Payload
}

func (o *GetQualityEvaluationsQueryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EvaluationEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityEvaluationsQueryBadRequest creates a GetQualityEvaluationsQueryBadRequest with default headers values
func NewGetQualityEvaluationsQueryBadRequest() *GetQualityEvaluationsQueryBadRequest {
	return &GetQualityEvaluationsQueryBadRequest{}
}

/*GetQualityEvaluationsQueryBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetQualityEvaluationsQueryBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetQualityEvaluationsQueryBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/evaluations/query][%d] getQualityEvaluationsQueryBadRequest  %+v", 400, o.Payload)
}

func (o *GetQualityEvaluationsQueryBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityEvaluationsQueryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityEvaluationsQueryUnauthorized creates a GetQualityEvaluationsQueryUnauthorized with default headers values
func NewGetQualityEvaluationsQueryUnauthorized() *GetQualityEvaluationsQueryUnauthorized {
	return &GetQualityEvaluationsQueryUnauthorized{}
}

/*GetQualityEvaluationsQueryUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetQualityEvaluationsQueryUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetQualityEvaluationsQueryUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/evaluations/query][%d] getQualityEvaluationsQueryUnauthorized  %+v", 401, o.Payload)
}

func (o *GetQualityEvaluationsQueryUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityEvaluationsQueryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityEvaluationsQueryForbidden creates a GetQualityEvaluationsQueryForbidden with default headers values
func NewGetQualityEvaluationsQueryForbidden() *GetQualityEvaluationsQueryForbidden {
	return &GetQualityEvaluationsQueryForbidden{}
}

/*GetQualityEvaluationsQueryForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetQualityEvaluationsQueryForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetQualityEvaluationsQueryForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/evaluations/query][%d] getQualityEvaluationsQueryForbidden  %+v", 403, o.Payload)
}

func (o *GetQualityEvaluationsQueryForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityEvaluationsQueryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityEvaluationsQueryNotFound creates a GetQualityEvaluationsQueryNotFound with default headers values
func NewGetQualityEvaluationsQueryNotFound() *GetQualityEvaluationsQueryNotFound {
	return &GetQualityEvaluationsQueryNotFound{}
}

/*GetQualityEvaluationsQueryNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetQualityEvaluationsQueryNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetQualityEvaluationsQueryNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/evaluations/query][%d] getQualityEvaluationsQueryNotFound  %+v", 404, o.Payload)
}

func (o *GetQualityEvaluationsQueryNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityEvaluationsQueryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityEvaluationsQueryRequestTimeout creates a GetQualityEvaluationsQueryRequestTimeout with default headers values
func NewGetQualityEvaluationsQueryRequestTimeout() *GetQualityEvaluationsQueryRequestTimeout {
	return &GetQualityEvaluationsQueryRequestTimeout{}
}

/*GetQualityEvaluationsQueryRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetQualityEvaluationsQueryRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetQualityEvaluationsQueryRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/evaluations/query][%d] getQualityEvaluationsQueryRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetQualityEvaluationsQueryRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityEvaluationsQueryRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityEvaluationsQueryRequestEntityTooLarge creates a GetQualityEvaluationsQueryRequestEntityTooLarge with default headers values
func NewGetQualityEvaluationsQueryRequestEntityTooLarge() *GetQualityEvaluationsQueryRequestEntityTooLarge {
	return &GetQualityEvaluationsQueryRequestEntityTooLarge{}
}

/*GetQualityEvaluationsQueryRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetQualityEvaluationsQueryRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetQualityEvaluationsQueryRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/evaluations/query][%d] getQualityEvaluationsQueryRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetQualityEvaluationsQueryRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityEvaluationsQueryRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityEvaluationsQueryUnsupportedMediaType creates a GetQualityEvaluationsQueryUnsupportedMediaType with default headers values
func NewGetQualityEvaluationsQueryUnsupportedMediaType() *GetQualityEvaluationsQueryUnsupportedMediaType {
	return &GetQualityEvaluationsQueryUnsupportedMediaType{}
}

/*GetQualityEvaluationsQueryUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetQualityEvaluationsQueryUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetQualityEvaluationsQueryUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/evaluations/query][%d] getQualityEvaluationsQueryUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetQualityEvaluationsQueryUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityEvaluationsQueryUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityEvaluationsQueryTooManyRequests creates a GetQualityEvaluationsQueryTooManyRequests with default headers values
func NewGetQualityEvaluationsQueryTooManyRequests() *GetQualityEvaluationsQueryTooManyRequests {
	return &GetQualityEvaluationsQueryTooManyRequests{}
}

/*GetQualityEvaluationsQueryTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetQualityEvaluationsQueryTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetQualityEvaluationsQueryTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/evaluations/query][%d] getQualityEvaluationsQueryTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetQualityEvaluationsQueryTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityEvaluationsQueryTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityEvaluationsQueryInternalServerError creates a GetQualityEvaluationsQueryInternalServerError with default headers values
func NewGetQualityEvaluationsQueryInternalServerError() *GetQualityEvaluationsQueryInternalServerError {
	return &GetQualityEvaluationsQueryInternalServerError{}
}

/*GetQualityEvaluationsQueryInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetQualityEvaluationsQueryInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetQualityEvaluationsQueryInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/evaluations/query][%d] getQualityEvaluationsQueryInternalServerError  %+v", 500, o.Payload)
}

func (o *GetQualityEvaluationsQueryInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityEvaluationsQueryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityEvaluationsQueryServiceUnavailable creates a GetQualityEvaluationsQueryServiceUnavailable with default headers values
func NewGetQualityEvaluationsQueryServiceUnavailable() *GetQualityEvaluationsQueryServiceUnavailable {
	return &GetQualityEvaluationsQueryServiceUnavailable{}
}

/*GetQualityEvaluationsQueryServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetQualityEvaluationsQueryServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetQualityEvaluationsQueryServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/evaluations/query][%d] getQualityEvaluationsQueryServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetQualityEvaluationsQueryServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityEvaluationsQueryServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityEvaluationsQueryGatewayTimeout creates a GetQualityEvaluationsQueryGatewayTimeout with default headers values
func NewGetQualityEvaluationsQueryGatewayTimeout() *GetQualityEvaluationsQueryGatewayTimeout {
	return &GetQualityEvaluationsQueryGatewayTimeout{}
}

/*GetQualityEvaluationsQueryGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetQualityEvaluationsQueryGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetQualityEvaluationsQueryGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/evaluations/query][%d] getQualityEvaluationsQueryGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetQualityEvaluationsQueryGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityEvaluationsQueryGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
