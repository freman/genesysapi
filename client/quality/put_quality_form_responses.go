// Code generated by go-swagger; DO NOT EDIT.

package quality

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutQualityFormReader is a Reader for the PutQualityForm structure.
type PutQualityFormReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutQualityFormReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutQualityFormOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutQualityFormBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutQualityFormUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutQualityFormForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutQualityFormNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutQualityFormRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPutQualityFormConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutQualityFormRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutQualityFormUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutQualityFormTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutQualityFormInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutQualityFormServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutQualityFormGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutQualityFormOK creates a PutQualityFormOK with default headers values
func NewPutQualityFormOK() *PutQualityFormOK {
	return &PutQualityFormOK{}
}

/*PutQualityFormOK handles this case with default header values.

successful operation
*/
type PutQualityFormOK struct {
	Payload *models.EvaluationForm
}

func (o *PutQualityFormOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/forms/{formId}][%d] putQualityFormOK  %+v", 200, o.Payload)
}

func (o *PutQualityFormOK) GetPayload() *models.EvaluationForm {
	return o.Payload
}

func (o *PutQualityFormOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EvaluationForm)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualityFormBadRequest creates a PutQualityFormBadRequest with default headers values
func NewPutQualityFormBadRequest() *PutQualityFormBadRequest {
	return &PutQualityFormBadRequest{}
}

/*PutQualityFormBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutQualityFormBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PutQualityFormBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/forms/{formId}][%d] putQualityFormBadRequest  %+v", 400, o.Payload)
}

func (o *PutQualityFormBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualityFormBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualityFormUnauthorized creates a PutQualityFormUnauthorized with default headers values
func NewPutQualityFormUnauthorized() *PutQualityFormUnauthorized {
	return &PutQualityFormUnauthorized{}
}

/*PutQualityFormUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PutQualityFormUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PutQualityFormUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/forms/{formId}][%d] putQualityFormUnauthorized  %+v", 401, o.Payload)
}

func (o *PutQualityFormUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualityFormUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualityFormForbidden creates a PutQualityFormForbidden with default headers values
func NewPutQualityFormForbidden() *PutQualityFormForbidden {
	return &PutQualityFormForbidden{}
}

/*PutQualityFormForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PutQualityFormForbidden struct {
	Payload *models.ErrorBody
}

func (o *PutQualityFormForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/forms/{formId}][%d] putQualityFormForbidden  %+v", 403, o.Payload)
}

func (o *PutQualityFormForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualityFormForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualityFormNotFound creates a PutQualityFormNotFound with default headers values
func NewPutQualityFormNotFound() *PutQualityFormNotFound {
	return &PutQualityFormNotFound{}
}

/*PutQualityFormNotFound handles this case with default header values.

The requested resource was not found.
*/
type PutQualityFormNotFound struct {
	Payload *models.ErrorBody
}

func (o *PutQualityFormNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/forms/{formId}][%d] putQualityFormNotFound  %+v", 404, o.Payload)
}

func (o *PutQualityFormNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualityFormNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualityFormRequestTimeout creates a PutQualityFormRequestTimeout with default headers values
func NewPutQualityFormRequestTimeout() *PutQualityFormRequestTimeout {
	return &PutQualityFormRequestTimeout{}
}

/*PutQualityFormRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutQualityFormRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutQualityFormRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/forms/{formId}][%d] putQualityFormRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutQualityFormRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualityFormRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualityFormConflict creates a PutQualityFormConflict with default headers values
func NewPutQualityFormConflict() *PutQualityFormConflict {
	return &PutQualityFormConflict{}
}

/*PutQualityFormConflict handles this case with default header values.

Conflict
*/
type PutQualityFormConflict struct {
	Payload *models.ErrorBody
}

func (o *PutQualityFormConflict) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/forms/{formId}][%d] putQualityFormConflict  %+v", 409, o.Payload)
}

func (o *PutQualityFormConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualityFormConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualityFormRequestEntityTooLarge creates a PutQualityFormRequestEntityTooLarge with default headers values
func NewPutQualityFormRequestEntityTooLarge() *PutQualityFormRequestEntityTooLarge {
	return &PutQualityFormRequestEntityTooLarge{}
}

/*PutQualityFormRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PutQualityFormRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PutQualityFormRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/forms/{formId}][%d] putQualityFormRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutQualityFormRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualityFormRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualityFormUnsupportedMediaType creates a PutQualityFormUnsupportedMediaType with default headers values
func NewPutQualityFormUnsupportedMediaType() *PutQualityFormUnsupportedMediaType {
	return &PutQualityFormUnsupportedMediaType{}
}

/*PutQualityFormUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutQualityFormUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PutQualityFormUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/forms/{formId}][%d] putQualityFormUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutQualityFormUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualityFormUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualityFormTooManyRequests creates a PutQualityFormTooManyRequests with default headers values
func NewPutQualityFormTooManyRequests() *PutQualityFormTooManyRequests {
	return &PutQualityFormTooManyRequests{}
}

/*PutQualityFormTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutQualityFormTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PutQualityFormTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/forms/{formId}][%d] putQualityFormTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutQualityFormTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualityFormTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualityFormInternalServerError creates a PutQualityFormInternalServerError with default headers values
func NewPutQualityFormInternalServerError() *PutQualityFormInternalServerError {
	return &PutQualityFormInternalServerError{}
}

/*PutQualityFormInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutQualityFormInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PutQualityFormInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/forms/{formId}][%d] putQualityFormInternalServerError  %+v", 500, o.Payload)
}

func (o *PutQualityFormInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualityFormInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualityFormServiceUnavailable creates a PutQualityFormServiceUnavailable with default headers values
func NewPutQualityFormServiceUnavailable() *PutQualityFormServiceUnavailable {
	return &PutQualityFormServiceUnavailable{}
}

/*PutQualityFormServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutQualityFormServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PutQualityFormServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/forms/{formId}][%d] putQualityFormServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutQualityFormServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualityFormServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutQualityFormGatewayTimeout creates a PutQualityFormGatewayTimeout with default headers values
func NewPutQualityFormGatewayTimeout() *PutQualityFormGatewayTimeout {
	return &PutQualityFormGatewayTimeout{}
}

/*PutQualityFormGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PutQualityFormGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PutQualityFormGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/quality/forms/{formId}][%d] putQualityFormGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutQualityFormGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutQualityFormGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
