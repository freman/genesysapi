// Code generated by go-swagger; DO NOT EDIT.

package quality

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostQualitySurveysScoringReader is a Reader for the PostQualitySurveysScoring structure.
type PostQualitySurveysScoringReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostQualitySurveysScoringReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostQualitySurveysScoringOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostQualitySurveysScoringBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostQualitySurveysScoringUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostQualitySurveysScoringForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostQualitySurveysScoringNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostQualitySurveysScoringRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostQualitySurveysScoringRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostQualitySurveysScoringUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostQualitySurveysScoringTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostQualitySurveysScoringInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostQualitySurveysScoringServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostQualitySurveysScoringGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostQualitySurveysScoringOK creates a PostQualitySurveysScoringOK with default headers values
func NewPostQualitySurveysScoringOK() *PostQualitySurveysScoringOK {
	return &PostQualitySurveysScoringOK{}
}

/*
PostQualitySurveysScoringOK describes a response with status code 200, with default header values.

successful operation
*/
type PostQualitySurveysScoringOK struct {
	Payload *models.SurveyScoringSet
}

// IsSuccess returns true when this post quality surveys scoring o k response has a 2xx status code
func (o *PostQualitySurveysScoringOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post quality surveys scoring o k response has a 3xx status code
func (o *PostQualitySurveysScoringOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post quality surveys scoring o k response has a 4xx status code
func (o *PostQualitySurveysScoringOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post quality surveys scoring o k response has a 5xx status code
func (o *PostQualitySurveysScoringOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post quality surveys scoring o k response a status code equal to that given
func (o *PostQualitySurveysScoringOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostQualitySurveysScoringOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/quality/surveys/scoring][%d] postQualitySurveysScoringOK  %+v", 200, o.Payload)
}

func (o *PostQualitySurveysScoringOK) String() string {
	return fmt.Sprintf("[POST /api/v2/quality/surveys/scoring][%d] postQualitySurveysScoringOK  %+v", 200, o.Payload)
}

func (o *PostQualitySurveysScoringOK) GetPayload() *models.SurveyScoringSet {
	return o.Payload
}

func (o *PostQualitySurveysScoringOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SurveyScoringSet)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostQualitySurveysScoringBadRequest creates a PostQualitySurveysScoringBadRequest with default headers values
func NewPostQualitySurveysScoringBadRequest() *PostQualitySurveysScoringBadRequest {
	return &PostQualitySurveysScoringBadRequest{}
}

/*
PostQualitySurveysScoringBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostQualitySurveysScoringBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post quality surveys scoring bad request response has a 2xx status code
func (o *PostQualitySurveysScoringBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post quality surveys scoring bad request response has a 3xx status code
func (o *PostQualitySurveysScoringBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post quality surveys scoring bad request response has a 4xx status code
func (o *PostQualitySurveysScoringBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post quality surveys scoring bad request response has a 5xx status code
func (o *PostQualitySurveysScoringBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post quality surveys scoring bad request response a status code equal to that given
func (o *PostQualitySurveysScoringBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostQualitySurveysScoringBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/quality/surveys/scoring][%d] postQualitySurveysScoringBadRequest  %+v", 400, o.Payload)
}

func (o *PostQualitySurveysScoringBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/quality/surveys/scoring][%d] postQualitySurveysScoringBadRequest  %+v", 400, o.Payload)
}

func (o *PostQualitySurveysScoringBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostQualitySurveysScoringBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostQualitySurveysScoringUnauthorized creates a PostQualitySurveysScoringUnauthorized with default headers values
func NewPostQualitySurveysScoringUnauthorized() *PostQualitySurveysScoringUnauthorized {
	return &PostQualitySurveysScoringUnauthorized{}
}

/*
PostQualitySurveysScoringUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostQualitySurveysScoringUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post quality surveys scoring unauthorized response has a 2xx status code
func (o *PostQualitySurveysScoringUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post quality surveys scoring unauthorized response has a 3xx status code
func (o *PostQualitySurveysScoringUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post quality surveys scoring unauthorized response has a 4xx status code
func (o *PostQualitySurveysScoringUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post quality surveys scoring unauthorized response has a 5xx status code
func (o *PostQualitySurveysScoringUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post quality surveys scoring unauthorized response a status code equal to that given
func (o *PostQualitySurveysScoringUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostQualitySurveysScoringUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/quality/surveys/scoring][%d] postQualitySurveysScoringUnauthorized  %+v", 401, o.Payload)
}

func (o *PostQualitySurveysScoringUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/quality/surveys/scoring][%d] postQualitySurveysScoringUnauthorized  %+v", 401, o.Payload)
}

func (o *PostQualitySurveysScoringUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostQualitySurveysScoringUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostQualitySurveysScoringForbidden creates a PostQualitySurveysScoringForbidden with default headers values
func NewPostQualitySurveysScoringForbidden() *PostQualitySurveysScoringForbidden {
	return &PostQualitySurveysScoringForbidden{}
}

/*
PostQualitySurveysScoringForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostQualitySurveysScoringForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post quality surveys scoring forbidden response has a 2xx status code
func (o *PostQualitySurveysScoringForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post quality surveys scoring forbidden response has a 3xx status code
func (o *PostQualitySurveysScoringForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post quality surveys scoring forbidden response has a 4xx status code
func (o *PostQualitySurveysScoringForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post quality surveys scoring forbidden response has a 5xx status code
func (o *PostQualitySurveysScoringForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post quality surveys scoring forbidden response a status code equal to that given
func (o *PostQualitySurveysScoringForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostQualitySurveysScoringForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/quality/surveys/scoring][%d] postQualitySurveysScoringForbidden  %+v", 403, o.Payload)
}

func (o *PostQualitySurveysScoringForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/quality/surveys/scoring][%d] postQualitySurveysScoringForbidden  %+v", 403, o.Payload)
}

func (o *PostQualitySurveysScoringForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostQualitySurveysScoringForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostQualitySurveysScoringNotFound creates a PostQualitySurveysScoringNotFound with default headers values
func NewPostQualitySurveysScoringNotFound() *PostQualitySurveysScoringNotFound {
	return &PostQualitySurveysScoringNotFound{}
}

/*
PostQualitySurveysScoringNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostQualitySurveysScoringNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post quality surveys scoring not found response has a 2xx status code
func (o *PostQualitySurveysScoringNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post quality surveys scoring not found response has a 3xx status code
func (o *PostQualitySurveysScoringNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post quality surveys scoring not found response has a 4xx status code
func (o *PostQualitySurveysScoringNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post quality surveys scoring not found response has a 5xx status code
func (o *PostQualitySurveysScoringNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post quality surveys scoring not found response a status code equal to that given
func (o *PostQualitySurveysScoringNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostQualitySurveysScoringNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/quality/surveys/scoring][%d] postQualitySurveysScoringNotFound  %+v", 404, o.Payload)
}

func (o *PostQualitySurveysScoringNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/quality/surveys/scoring][%d] postQualitySurveysScoringNotFound  %+v", 404, o.Payload)
}

func (o *PostQualitySurveysScoringNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostQualitySurveysScoringNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostQualitySurveysScoringRequestTimeout creates a PostQualitySurveysScoringRequestTimeout with default headers values
func NewPostQualitySurveysScoringRequestTimeout() *PostQualitySurveysScoringRequestTimeout {
	return &PostQualitySurveysScoringRequestTimeout{}
}

/*
PostQualitySurveysScoringRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostQualitySurveysScoringRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post quality surveys scoring request timeout response has a 2xx status code
func (o *PostQualitySurveysScoringRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post quality surveys scoring request timeout response has a 3xx status code
func (o *PostQualitySurveysScoringRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post quality surveys scoring request timeout response has a 4xx status code
func (o *PostQualitySurveysScoringRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post quality surveys scoring request timeout response has a 5xx status code
func (o *PostQualitySurveysScoringRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post quality surveys scoring request timeout response a status code equal to that given
func (o *PostQualitySurveysScoringRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostQualitySurveysScoringRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/quality/surveys/scoring][%d] postQualitySurveysScoringRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostQualitySurveysScoringRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/quality/surveys/scoring][%d] postQualitySurveysScoringRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostQualitySurveysScoringRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostQualitySurveysScoringRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostQualitySurveysScoringRequestEntityTooLarge creates a PostQualitySurveysScoringRequestEntityTooLarge with default headers values
func NewPostQualitySurveysScoringRequestEntityTooLarge() *PostQualitySurveysScoringRequestEntityTooLarge {
	return &PostQualitySurveysScoringRequestEntityTooLarge{}
}

/*
PostQualitySurveysScoringRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PostQualitySurveysScoringRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post quality surveys scoring request entity too large response has a 2xx status code
func (o *PostQualitySurveysScoringRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post quality surveys scoring request entity too large response has a 3xx status code
func (o *PostQualitySurveysScoringRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post quality surveys scoring request entity too large response has a 4xx status code
func (o *PostQualitySurveysScoringRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post quality surveys scoring request entity too large response has a 5xx status code
func (o *PostQualitySurveysScoringRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post quality surveys scoring request entity too large response a status code equal to that given
func (o *PostQualitySurveysScoringRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostQualitySurveysScoringRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/quality/surveys/scoring][%d] postQualitySurveysScoringRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostQualitySurveysScoringRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/quality/surveys/scoring][%d] postQualitySurveysScoringRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostQualitySurveysScoringRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostQualitySurveysScoringRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostQualitySurveysScoringUnsupportedMediaType creates a PostQualitySurveysScoringUnsupportedMediaType with default headers values
func NewPostQualitySurveysScoringUnsupportedMediaType() *PostQualitySurveysScoringUnsupportedMediaType {
	return &PostQualitySurveysScoringUnsupportedMediaType{}
}

/*
PostQualitySurveysScoringUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostQualitySurveysScoringUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post quality surveys scoring unsupported media type response has a 2xx status code
func (o *PostQualitySurveysScoringUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post quality surveys scoring unsupported media type response has a 3xx status code
func (o *PostQualitySurveysScoringUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post quality surveys scoring unsupported media type response has a 4xx status code
func (o *PostQualitySurveysScoringUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post quality surveys scoring unsupported media type response has a 5xx status code
func (o *PostQualitySurveysScoringUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post quality surveys scoring unsupported media type response a status code equal to that given
func (o *PostQualitySurveysScoringUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostQualitySurveysScoringUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/quality/surveys/scoring][%d] postQualitySurveysScoringUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostQualitySurveysScoringUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/quality/surveys/scoring][%d] postQualitySurveysScoringUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostQualitySurveysScoringUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostQualitySurveysScoringUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostQualitySurveysScoringTooManyRequests creates a PostQualitySurveysScoringTooManyRequests with default headers values
func NewPostQualitySurveysScoringTooManyRequests() *PostQualitySurveysScoringTooManyRequests {
	return &PostQualitySurveysScoringTooManyRequests{}
}

/*
PostQualitySurveysScoringTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostQualitySurveysScoringTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post quality surveys scoring too many requests response has a 2xx status code
func (o *PostQualitySurveysScoringTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post quality surveys scoring too many requests response has a 3xx status code
func (o *PostQualitySurveysScoringTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post quality surveys scoring too many requests response has a 4xx status code
func (o *PostQualitySurveysScoringTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post quality surveys scoring too many requests response has a 5xx status code
func (o *PostQualitySurveysScoringTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post quality surveys scoring too many requests response a status code equal to that given
func (o *PostQualitySurveysScoringTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostQualitySurveysScoringTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/quality/surveys/scoring][%d] postQualitySurveysScoringTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostQualitySurveysScoringTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/quality/surveys/scoring][%d] postQualitySurveysScoringTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostQualitySurveysScoringTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostQualitySurveysScoringTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostQualitySurveysScoringInternalServerError creates a PostQualitySurveysScoringInternalServerError with default headers values
func NewPostQualitySurveysScoringInternalServerError() *PostQualitySurveysScoringInternalServerError {
	return &PostQualitySurveysScoringInternalServerError{}
}

/*
PostQualitySurveysScoringInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostQualitySurveysScoringInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post quality surveys scoring internal server error response has a 2xx status code
func (o *PostQualitySurveysScoringInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post quality surveys scoring internal server error response has a 3xx status code
func (o *PostQualitySurveysScoringInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post quality surveys scoring internal server error response has a 4xx status code
func (o *PostQualitySurveysScoringInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post quality surveys scoring internal server error response has a 5xx status code
func (o *PostQualitySurveysScoringInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post quality surveys scoring internal server error response a status code equal to that given
func (o *PostQualitySurveysScoringInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostQualitySurveysScoringInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/quality/surveys/scoring][%d] postQualitySurveysScoringInternalServerError  %+v", 500, o.Payload)
}

func (o *PostQualitySurveysScoringInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/quality/surveys/scoring][%d] postQualitySurveysScoringInternalServerError  %+v", 500, o.Payload)
}

func (o *PostQualitySurveysScoringInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostQualitySurveysScoringInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostQualitySurveysScoringServiceUnavailable creates a PostQualitySurveysScoringServiceUnavailable with default headers values
func NewPostQualitySurveysScoringServiceUnavailable() *PostQualitySurveysScoringServiceUnavailable {
	return &PostQualitySurveysScoringServiceUnavailable{}
}

/*
PostQualitySurveysScoringServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostQualitySurveysScoringServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post quality surveys scoring service unavailable response has a 2xx status code
func (o *PostQualitySurveysScoringServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post quality surveys scoring service unavailable response has a 3xx status code
func (o *PostQualitySurveysScoringServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post quality surveys scoring service unavailable response has a 4xx status code
func (o *PostQualitySurveysScoringServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post quality surveys scoring service unavailable response has a 5xx status code
func (o *PostQualitySurveysScoringServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post quality surveys scoring service unavailable response a status code equal to that given
func (o *PostQualitySurveysScoringServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostQualitySurveysScoringServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/quality/surveys/scoring][%d] postQualitySurveysScoringServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostQualitySurveysScoringServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/quality/surveys/scoring][%d] postQualitySurveysScoringServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostQualitySurveysScoringServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostQualitySurveysScoringServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostQualitySurveysScoringGatewayTimeout creates a PostQualitySurveysScoringGatewayTimeout with default headers values
func NewPostQualitySurveysScoringGatewayTimeout() *PostQualitySurveysScoringGatewayTimeout {
	return &PostQualitySurveysScoringGatewayTimeout{}
}

/*
PostQualitySurveysScoringGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostQualitySurveysScoringGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post quality surveys scoring gateway timeout response has a 2xx status code
func (o *PostQualitySurveysScoringGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post quality surveys scoring gateway timeout response has a 3xx status code
func (o *PostQualitySurveysScoringGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post quality surveys scoring gateway timeout response has a 4xx status code
func (o *PostQualitySurveysScoringGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post quality surveys scoring gateway timeout response has a 5xx status code
func (o *PostQualitySurveysScoringGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post quality surveys scoring gateway timeout response a status code equal to that given
func (o *PostQualitySurveysScoringGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostQualitySurveysScoringGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/quality/surveys/scoring][%d] postQualitySurveysScoringGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostQualitySurveysScoringGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/quality/surveys/scoring][%d] postQualitySurveysScoringGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostQualitySurveysScoringGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostQualitySurveysScoringGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
