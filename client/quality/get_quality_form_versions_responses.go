// Code generated by go-swagger; DO NOT EDIT.

package quality

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetQualityFormVersionsReader is a Reader for the GetQualityFormVersions structure.
type GetQualityFormVersionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetQualityFormVersionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetQualityFormVersionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetQualityFormVersionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetQualityFormVersionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetQualityFormVersionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetQualityFormVersionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetQualityFormVersionsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetQualityFormVersionsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetQualityFormVersionsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetQualityFormVersionsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetQualityFormVersionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetQualityFormVersionsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetQualityFormVersionsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetQualityFormVersionsOK creates a GetQualityFormVersionsOK with default headers values
func NewGetQualityFormVersionsOK() *GetQualityFormVersionsOK {
	return &GetQualityFormVersionsOK{}
}

/*GetQualityFormVersionsOK handles this case with default header values.

successful operation
*/
type GetQualityFormVersionsOK struct {
	Payload *models.EvaluationFormEntityListing
}

func (o *GetQualityFormVersionsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/forms/{formId}/versions][%d] getQualityFormVersionsOK  %+v", 200, o.Payload)
}

func (o *GetQualityFormVersionsOK) GetPayload() *models.EvaluationFormEntityListing {
	return o.Payload
}

func (o *GetQualityFormVersionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EvaluationFormEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityFormVersionsBadRequest creates a GetQualityFormVersionsBadRequest with default headers values
func NewGetQualityFormVersionsBadRequest() *GetQualityFormVersionsBadRequest {
	return &GetQualityFormVersionsBadRequest{}
}

/*GetQualityFormVersionsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetQualityFormVersionsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetQualityFormVersionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/forms/{formId}/versions][%d] getQualityFormVersionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetQualityFormVersionsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityFormVersionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityFormVersionsUnauthorized creates a GetQualityFormVersionsUnauthorized with default headers values
func NewGetQualityFormVersionsUnauthorized() *GetQualityFormVersionsUnauthorized {
	return &GetQualityFormVersionsUnauthorized{}
}

/*GetQualityFormVersionsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetQualityFormVersionsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetQualityFormVersionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/forms/{formId}/versions][%d] getQualityFormVersionsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetQualityFormVersionsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityFormVersionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityFormVersionsForbidden creates a GetQualityFormVersionsForbidden with default headers values
func NewGetQualityFormVersionsForbidden() *GetQualityFormVersionsForbidden {
	return &GetQualityFormVersionsForbidden{}
}

/*GetQualityFormVersionsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetQualityFormVersionsForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetQualityFormVersionsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/forms/{formId}/versions][%d] getQualityFormVersionsForbidden  %+v", 403, o.Payload)
}

func (o *GetQualityFormVersionsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityFormVersionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityFormVersionsNotFound creates a GetQualityFormVersionsNotFound with default headers values
func NewGetQualityFormVersionsNotFound() *GetQualityFormVersionsNotFound {
	return &GetQualityFormVersionsNotFound{}
}

/*GetQualityFormVersionsNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetQualityFormVersionsNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetQualityFormVersionsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/forms/{formId}/versions][%d] getQualityFormVersionsNotFound  %+v", 404, o.Payload)
}

func (o *GetQualityFormVersionsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityFormVersionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityFormVersionsRequestTimeout creates a GetQualityFormVersionsRequestTimeout with default headers values
func NewGetQualityFormVersionsRequestTimeout() *GetQualityFormVersionsRequestTimeout {
	return &GetQualityFormVersionsRequestTimeout{}
}

/*GetQualityFormVersionsRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetQualityFormVersionsRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetQualityFormVersionsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/forms/{formId}/versions][%d] getQualityFormVersionsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetQualityFormVersionsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityFormVersionsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityFormVersionsRequestEntityTooLarge creates a GetQualityFormVersionsRequestEntityTooLarge with default headers values
func NewGetQualityFormVersionsRequestEntityTooLarge() *GetQualityFormVersionsRequestEntityTooLarge {
	return &GetQualityFormVersionsRequestEntityTooLarge{}
}

/*GetQualityFormVersionsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetQualityFormVersionsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetQualityFormVersionsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/forms/{formId}/versions][%d] getQualityFormVersionsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetQualityFormVersionsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityFormVersionsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityFormVersionsUnsupportedMediaType creates a GetQualityFormVersionsUnsupportedMediaType with default headers values
func NewGetQualityFormVersionsUnsupportedMediaType() *GetQualityFormVersionsUnsupportedMediaType {
	return &GetQualityFormVersionsUnsupportedMediaType{}
}

/*GetQualityFormVersionsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetQualityFormVersionsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetQualityFormVersionsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/forms/{formId}/versions][%d] getQualityFormVersionsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetQualityFormVersionsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityFormVersionsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityFormVersionsTooManyRequests creates a GetQualityFormVersionsTooManyRequests with default headers values
func NewGetQualityFormVersionsTooManyRequests() *GetQualityFormVersionsTooManyRequests {
	return &GetQualityFormVersionsTooManyRequests{}
}

/*GetQualityFormVersionsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetQualityFormVersionsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetQualityFormVersionsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/forms/{formId}/versions][%d] getQualityFormVersionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetQualityFormVersionsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityFormVersionsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityFormVersionsInternalServerError creates a GetQualityFormVersionsInternalServerError with default headers values
func NewGetQualityFormVersionsInternalServerError() *GetQualityFormVersionsInternalServerError {
	return &GetQualityFormVersionsInternalServerError{}
}

/*GetQualityFormVersionsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetQualityFormVersionsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetQualityFormVersionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/forms/{formId}/versions][%d] getQualityFormVersionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetQualityFormVersionsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityFormVersionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityFormVersionsServiceUnavailable creates a GetQualityFormVersionsServiceUnavailable with default headers values
func NewGetQualityFormVersionsServiceUnavailable() *GetQualityFormVersionsServiceUnavailable {
	return &GetQualityFormVersionsServiceUnavailable{}
}

/*GetQualityFormVersionsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetQualityFormVersionsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetQualityFormVersionsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/forms/{formId}/versions][%d] getQualityFormVersionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetQualityFormVersionsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityFormVersionsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityFormVersionsGatewayTimeout creates a GetQualityFormVersionsGatewayTimeout with default headers values
func NewGetQualityFormVersionsGatewayTimeout() *GetQualityFormVersionsGatewayTimeout {
	return &GetQualityFormVersionsGatewayTimeout{}
}

/*GetQualityFormVersionsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetQualityFormVersionsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetQualityFormVersionsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/forms/{formId}/versions][%d] getQualityFormVersionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetQualityFormVersionsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityFormVersionsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
