// Code generated by go-swagger; DO NOT EDIT.

package quality

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetQualityFormReader is a Reader for the GetQualityForm structure.
type GetQualityFormReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetQualityFormReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetQualityFormOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetQualityFormBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetQualityFormUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetQualityFormForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetQualityFormNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetQualityFormRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetQualityFormUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetQualityFormTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetQualityFormInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetQualityFormServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetQualityFormGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetQualityFormOK creates a GetQualityFormOK with default headers values
func NewGetQualityFormOK() *GetQualityFormOK {
	return &GetQualityFormOK{}
}

/*GetQualityFormOK handles this case with default header values.

successful operation
*/
type GetQualityFormOK struct {
	Payload *models.EvaluationForm
}

func (o *GetQualityFormOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/forms/{formId}][%d] getQualityFormOK  %+v", 200, o.Payload)
}

func (o *GetQualityFormOK) GetPayload() *models.EvaluationForm {
	return o.Payload
}

func (o *GetQualityFormOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EvaluationForm)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityFormBadRequest creates a GetQualityFormBadRequest with default headers values
func NewGetQualityFormBadRequest() *GetQualityFormBadRequest {
	return &GetQualityFormBadRequest{}
}

/*GetQualityFormBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetQualityFormBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetQualityFormBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/forms/{formId}][%d] getQualityFormBadRequest  %+v", 400, o.Payload)
}

func (o *GetQualityFormBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityFormBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityFormUnauthorized creates a GetQualityFormUnauthorized with default headers values
func NewGetQualityFormUnauthorized() *GetQualityFormUnauthorized {
	return &GetQualityFormUnauthorized{}
}

/*GetQualityFormUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetQualityFormUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetQualityFormUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/forms/{formId}][%d] getQualityFormUnauthorized  %+v", 401, o.Payload)
}

func (o *GetQualityFormUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityFormUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityFormForbidden creates a GetQualityFormForbidden with default headers values
func NewGetQualityFormForbidden() *GetQualityFormForbidden {
	return &GetQualityFormForbidden{}
}

/*GetQualityFormForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetQualityFormForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetQualityFormForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/forms/{formId}][%d] getQualityFormForbidden  %+v", 403, o.Payload)
}

func (o *GetQualityFormForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityFormForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityFormNotFound creates a GetQualityFormNotFound with default headers values
func NewGetQualityFormNotFound() *GetQualityFormNotFound {
	return &GetQualityFormNotFound{}
}

/*GetQualityFormNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetQualityFormNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetQualityFormNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/forms/{formId}][%d] getQualityFormNotFound  %+v", 404, o.Payload)
}

func (o *GetQualityFormNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityFormNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityFormRequestEntityTooLarge creates a GetQualityFormRequestEntityTooLarge with default headers values
func NewGetQualityFormRequestEntityTooLarge() *GetQualityFormRequestEntityTooLarge {
	return &GetQualityFormRequestEntityTooLarge{}
}

/*GetQualityFormRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetQualityFormRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetQualityFormRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/forms/{formId}][%d] getQualityFormRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetQualityFormRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityFormRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityFormUnsupportedMediaType creates a GetQualityFormUnsupportedMediaType with default headers values
func NewGetQualityFormUnsupportedMediaType() *GetQualityFormUnsupportedMediaType {
	return &GetQualityFormUnsupportedMediaType{}
}

/*GetQualityFormUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetQualityFormUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetQualityFormUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/forms/{formId}][%d] getQualityFormUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetQualityFormUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityFormUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityFormTooManyRequests creates a GetQualityFormTooManyRequests with default headers values
func NewGetQualityFormTooManyRequests() *GetQualityFormTooManyRequests {
	return &GetQualityFormTooManyRequests{}
}

/*GetQualityFormTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type GetQualityFormTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetQualityFormTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/forms/{formId}][%d] getQualityFormTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetQualityFormTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityFormTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityFormInternalServerError creates a GetQualityFormInternalServerError with default headers values
func NewGetQualityFormInternalServerError() *GetQualityFormInternalServerError {
	return &GetQualityFormInternalServerError{}
}

/*GetQualityFormInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetQualityFormInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetQualityFormInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/forms/{formId}][%d] getQualityFormInternalServerError  %+v", 500, o.Payload)
}

func (o *GetQualityFormInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityFormInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityFormServiceUnavailable creates a GetQualityFormServiceUnavailable with default headers values
func NewGetQualityFormServiceUnavailable() *GetQualityFormServiceUnavailable {
	return &GetQualityFormServiceUnavailable{}
}

/*GetQualityFormServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetQualityFormServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetQualityFormServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/forms/{formId}][%d] getQualityFormServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetQualityFormServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityFormServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQualityFormGatewayTimeout creates a GetQualityFormGatewayTimeout with default headers values
func NewGetQualityFormGatewayTimeout() *GetQualityFormGatewayTimeout {
	return &GetQualityFormGatewayTimeout{}
}

/*GetQualityFormGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetQualityFormGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetQualityFormGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/quality/forms/{formId}][%d] getQualityFormGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetQualityFormGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetQualityFormGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
