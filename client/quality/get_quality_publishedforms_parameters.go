// Code generated by go-swagger; DO NOT EDIT.

package quality

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetQualityPublishedformsParams creates a new GetQualityPublishedformsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetQualityPublishedformsParams() *GetQualityPublishedformsParams {
	return &GetQualityPublishedformsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetQualityPublishedformsParamsWithTimeout creates a new GetQualityPublishedformsParams object
// with the ability to set a timeout on a request.
func NewGetQualityPublishedformsParamsWithTimeout(timeout time.Duration) *GetQualityPublishedformsParams {
	return &GetQualityPublishedformsParams{
		timeout: timeout,
	}
}

// NewGetQualityPublishedformsParamsWithContext creates a new GetQualityPublishedformsParams object
// with the ability to set a context for a request.
func NewGetQualityPublishedformsParamsWithContext(ctx context.Context) *GetQualityPublishedformsParams {
	return &GetQualityPublishedformsParams{
		Context: ctx,
	}
}

// NewGetQualityPublishedformsParamsWithHTTPClient creates a new GetQualityPublishedformsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetQualityPublishedformsParamsWithHTTPClient(client *http.Client) *GetQualityPublishedformsParams {
	return &GetQualityPublishedformsParams{
		HTTPClient: client,
	}
}

/*
GetQualityPublishedformsParams contains all the parameters to send to the API endpoint

	for the get quality publishedforms operation.

	Typically these are written to a http.Request.
*/
type GetQualityPublishedformsParams struct {

	/* Name.

	   Name
	*/
	Name *string

	/* OnlyLatestPerContext.

	   onlyLatestPerContext
	*/
	OnlyLatestPerContext *bool

	/* PageNumber.

	   Page number

	   Format: int32
	   Default: 1
	*/
	PageNumber *int32

	/* PageSize.

	   Page size

	   Format: int32
	   Default: 25
	*/
	PageSize *int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get quality publishedforms params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetQualityPublishedformsParams) WithDefaults() *GetQualityPublishedformsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get quality publishedforms params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetQualityPublishedformsParams) SetDefaults() {
	var (
		onlyLatestPerContextDefault = bool(false)

		pageNumberDefault = int32(1)

		pageSizeDefault = int32(25)
	)

	val := GetQualityPublishedformsParams{
		OnlyLatestPerContext: &onlyLatestPerContextDefault,
		PageNumber:           &pageNumberDefault,
		PageSize:             &pageSizeDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get quality publishedforms params
func (o *GetQualityPublishedformsParams) WithTimeout(timeout time.Duration) *GetQualityPublishedformsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get quality publishedforms params
func (o *GetQualityPublishedformsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get quality publishedforms params
func (o *GetQualityPublishedformsParams) WithContext(ctx context.Context) *GetQualityPublishedformsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get quality publishedforms params
func (o *GetQualityPublishedformsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get quality publishedforms params
func (o *GetQualityPublishedformsParams) WithHTTPClient(client *http.Client) *GetQualityPublishedformsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get quality publishedforms params
func (o *GetQualityPublishedformsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithName adds the name to the get quality publishedforms params
func (o *GetQualityPublishedformsParams) WithName(name *string) *GetQualityPublishedformsParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the get quality publishedforms params
func (o *GetQualityPublishedformsParams) SetName(name *string) {
	o.Name = name
}

// WithOnlyLatestPerContext adds the onlyLatestPerContext to the get quality publishedforms params
func (o *GetQualityPublishedformsParams) WithOnlyLatestPerContext(onlyLatestPerContext *bool) *GetQualityPublishedformsParams {
	o.SetOnlyLatestPerContext(onlyLatestPerContext)
	return o
}

// SetOnlyLatestPerContext adds the onlyLatestPerContext to the get quality publishedforms params
func (o *GetQualityPublishedformsParams) SetOnlyLatestPerContext(onlyLatestPerContext *bool) {
	o.OnlyLatestPerContext = onlyLatestPerContext
}

// WithPageNumber adds the pageNumber to the get quality publishedforms params
func (o *GetQualityPublishedformsParams) WithPageNumber(pageNumber *int32) *GetQualityPublishedformsParams {
	o.SetPageNumber(pageNumber)
	return o
}

// SetPageNumber adds the pageNumber to the get quality publishedforms params
func (o *GetQualityPublishedformsParams) SetPageNumber(pageNumber *int32) {
	o.PageNumber = pageNumber
}

// WithPageSize adds the pageSize to the get quality publishedforms params
func (o *GetQualityPublishedformsParams) WithPageSize(pageSize *int32) *GetQualityPublishedformsParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the get quality publishedforms params
func (o *GetQualityPublishedformsParams) SetPageSize(pageSize *int32) {
	o.PageSize = pageSize
}

// WriteToRequest writes these params to a swagger request
func (o *GetQualityPublishedformsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Name != nil {

		// query param name
		var qrName string

		if o.Name != nil {
			qrName = *o.Name
		}
		qName := qrName
		if qName != "" {

			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}
	}

	if o.OnlyLatestPerContext != nil {

		// query param onlyLatestPerContext
		var qrOnlyLatestPerContext bool

		if o.OnlyLatestPerContext != nil {
			qrOnlyLatestPerContext = *o.OnlyLatestPerContext
		}
		qOnlyLatestPerContext := swag.FormatBool(qrOnlyLatestPerContext)
		if qOnlyLatestPerContext != "" {

			if err := r.SetQueryParam("onlyLatestPerContext", qOnlyLatestPerContext); err != nil {
				return err
			}
		}
	}

	if o.PageNumber != nil {

		// query param pageNumber
		var qrPageNumber int32

		if o.PageNumber != nil {
			qrPageNumber = *o.PageNumber
		}
		qPageNumber := swag.FormatInt32(qrPageNumber)
		if qPageNumber != "" {

			if err := r.SetQueryParam("pageNumber", qPageNumber); err != nil {
				return err
			}
		}
	}

	if o.PageSize != nil {

		// query param pageSize
		var qrPageSize int32

		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := swag.FormatInt32(qrPageSize)
		if qPageSize != "" {

			if err := r.SetQueryParam("pageSize", qPageSize); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
