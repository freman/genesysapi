// Code generated by go-swagger; DO NOT EDIT.

package telephony

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetTelephonySiptracesDownloadDownloadIDReader is a Reader for the GetTelephonySiptracesDownloadDownloadID structure.
type GetTelephonySiptracesDownloadDownloadIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTelephonySiptracesDownloadDownloadIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTelephonySiptracesDownloadDownloadIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewGetTelephonySiptracesDownloadDownloadIDAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTelephonySiptracesDownloadDownloadIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetTelephonySiptracesDownloadDownloadIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetTelephonySiptracesDownloadDownloadIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTelephonySiptracesDownloadDownloadIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetTelephonySiptracesDownloadDownloadIDRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetTelephonySiptracesDownloadDownloadIDRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetTelephonySiptracesDownloadDownloadIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetTelephonySiptracesDownloadDownloadIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTelephonySiptracesDownloadDownloadIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetTelephonySiptracesDownloadDownloadIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetTelephonySiptracesDownloadDownloadIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTelephonySiptracesDownloadDownloadIDOK creates a GetTelephonySiptracesDownloadDownloadIDOK with default headers values
func NewGetTelephonySiptracesDownloadDownloadIDOK() *GetTelephonySiptracesDownloadDownloadIDOK {
	return &GetTelephonySiptracesDownloadDownloadIDOK{}
}

/*
GetTelephonySiptracesDownloadDownloadIDOK describes a response with status code 200, with default header values.

successful operation
*/
type GetTelephonySiptracesDownloadDownloadIDOK struct {
	Payload *models.SignedURLResponse
}

// IsSuccess returns true when this get telephony siptraces download download Id o k response has a 2xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get telephony siptraces download download Id o k response has a 3xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get telephony siptraces download download Id o k response has a 4xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get telephony siptraces download download Id o k response has a 5xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get telephony siptraces download download Id o k response a status code equal to that given
func (o *GetTelephonySiptracesDownloadDownloadIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetTelephonySiptracesDownloadDownloadIDOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces/download/{downloadId}][%d] getTelephonySiptracesDownloadDownloadIdOK  %+v", 200, o.Payload)
}

func (o *GetTelephonySiptracesDownloadDownloadIDOK) String() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces/download/{downloadId}][%d] getTelephonySiptracesDownloadDownloadIdOK  %+v", 200, o.Payload)
}

func (o *GetTelephonySiptracesDownloadDownloadIDOK) GetPayload() *models.SignedURLResponse {
	return o.Payload
}

func (o *GetTelephonySiptracesDownloadDownloadIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SignedURLResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTelephonySiptracesDownloadDownloadIDAccepted creates a GetTelephonySiptracesDownloadDownloadIDAccepted with default headers values
func NewGetTelephonySiptracesDownloadDownloadIDAccepted() *GetTelephonySiptracesDownloadDownloadIDAccepted {
	return &GetTelephonySiptracesDownloadDownloadIDAccepted{}
}

/*
GetTelephonySiptracesDownloadDownloadIDAccepted describes a response with status code 202, with default header values.

Request to download pcap file has been accepted
*/
type GetTelephonySiptracesDownloadDownloadIDAccepted struct {
	Payload *models.SignedURLResponse
}

// IsSuccess returns true when this get telephony siptraces download download Id accepted response has a 2xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get telephony siptraces download download Id accepted response has a 3xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get telephony siptraces download download Id accepted response has a 4xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this get telephony siptraces download download Id accepted response has a 5xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this get telephony siptraces download download Id accepted response a status code equal to that given
func (o *GetTelephonySiptracesDownloadDownloadIDAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *GetTelephonySiptracesDownloadDownloadIDAccepted) Error() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces/download/{downloadId}][%d] getTelephonySiptracesDownloadDownloadIdAccepted  %+v", 202, o.Payload)
}

func (o *GetTelephonySiptracesDownloadDownloadIDAccepted) String() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces/download/{downloadId}][%d] getTelephonySiptracesDownloadDownloadIdAccepted  %+v", 202, o.Payload)
}

func (o *GetTelephonySiptracesDownloadDownloadIDAccepted) GetPayload() *models.SignedURLResponse {
	return o.Payload
}

func (o *GetTelephonySiptracesDownloadDownloadIDAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SignedURLResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTelephonySiptracesDownloadDownloadIDBadRequest creates a GetTelephonySiptracesDownloadDownloadIDBadRequest with default headers values
func NewGetTelephonySiptracesDownloadDownloadIDBadRequest() *GetTelephonySiptracesDownloadDownloadIDBadRequest {
	return &GetTelephonySiptracesDownloadDownloadIDBadRequest{}
}

/*
GetTelephonySiptracesDownloadDownloadIDBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetTelephonySiptracesDownloadDownloadIDBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get telephony siptraces download download Id bad request response has a 2xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get telephony siptraces download download Id bad request response has a 3xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get telephony siptraces download download Id bad request response has a 4xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get telephony siptraces download download Id bad request response has a 5xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get telephony siptraces download download Id bad request response a status code equal to that given
func (o *GetTelephonySiptracesDownloadDownloadIDBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetTelephonySiptracesDownloadDownloadIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces/download/{downloadId}][%d] getTelephonySiptracesDownloadDownloadIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetTelephonySiptracesDownloadDownloadIDBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces/download/{downloadId}][%d] getTelephonySiptracesDownloadDownloadIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetTelephonySiptracesDownloadDownloadIDBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTelephonySiptracesDownloadDownloadIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTelephonySiptracesDownloadDownloadIDUnauthorized creates a GetTelephonySiptracesDownloadDownloadIDUnauthorized with default headers values
func NewGetTelephonySiptracesDownloadDownloadIDUnauthorized() *GetTelephonySiptracesDownloadDownloadIDUnauthorized {
	return &GetTelephonySiptracesDownloadDownloadIDUnauthorized{}
}

/*
GetTelephonySiptracesDownloadDownloadIDUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetTelephonySiptracesDownloadDownloadIDUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get telephony siptraces download download Id unauthorized response has a 2xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get telephony siptraces download download Id unauthorized response has a 3xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get telephony siptraces download download Id unauthorized response has a 4xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get telephony siptraces download download Id unauthorized response has a 5xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get telephony siptraces download download Id unauthorized response a status code equal to that given
func (o *GetTelephonySiptracesDownloadDownloadIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetTelephonySiptracesDownloadDownloadIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces/download/{downloadId}][%d] getTelephonySiptracesDownloadDownloadIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetTelephonySiptracesDownloadDownloadIDUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces/download/{downloadId}][%d] getTelephonySiptracesDownloadDownloadIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetTelephonySiptracesDownloadDownloadIDUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTelephonySiptracesDownloadDownloadIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTelephonySiptracesDownloadDownloadIDForbidden creates a GetTelephonySiptracesDownloadDownloadIDForbidden with default headers values
func NewGetTelephonySiptracesDownloadDownloadIDForbidden() *GetTelephonySiptracesDownloadDownloadIDForbidden {
	return &GetTelephonySiptracesDownloadDownloadIDForbidden{}
}

/*
GetTelephonySiptracesDownloadDownloadIDForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetTelephonySiptracesDownloadDownloadIDForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get telephony siptraces download download Id forbidden response has a 2xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get telephony siptraces download download Id forbidden response has a 3xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get telephony siptraces download download Id forbidden response has a 4xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get telephony siptraces download download Id forbidden response has a 5xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get telephony siptraces download download Id forbidden response a status code equal to that given
func (o *GetTelephonySiptracesDownloadDownloadIDForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetTelephonySiptracesDownloadDownloadIDForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces/download/{downloadId}][%d] getTelephonySiptracesDownloadDownloadIdForbidden  %+v", 403, o.Payload)
}

func (o *GetTelephonySiptracesDownloadDownloadIDForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces/download/{downloadId}][%d] getTelephonySiptracesDownloadDownloadIdForbidden  %+v", 403, o.Payload)
}

func (o *GetTelephonySiptracesDownloadDownloadIDForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTelephonySiptracesDownloadDownloadIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTelephonySiptracesDownloadDownloadIDNotFound creates a GetTelephonySiptracesDownloadDownloadIDNotFound with default headers values
func NewGetTelephonySiptracesDownloadDownloadIDNotFound() *GetTelephonySiptracesDownloadDownloadIDNotFound {
	return &GetTelephonySiptracesDownloadDownloadIDNotFound{}
}

/*
GetTelephonySiptracesDownloadDownloadIDNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetTelephonySiptracesDownloadDownloadIDNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get telephony siptraces download download Id not found response has a 2xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get telephony siptraces download download Id not found response has a 3xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get telephony siptraces download download Id not found response has a 4xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get telephony siptraces download download Id not found response has a 5xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get telephony siptraces download download Id not found response a status code equal to that given
func (o *GetTelephonySiptracesDownloadDownloadIDNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetTelephonySiptracesDownloadDownloadIDNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces/download/{downloadId}][%d] getTelephonySiptracesDownloadDownloadIdNotFound  %+v", 404, o.Payload)
}

func (o *GetTelephonySiptracesDownloadDownloadIDNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces/download/{downloadId}][%d] getTelephonySiptracesDownloadDownloadIdNotFound  %+v", 404, o.Payload)
}

func (o *GetTelephonySiptracesDownloadDownloadIDNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTelephonySiptracesDownloadDownloadIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTelephonySiptracesDownloadDownloadIDRequestTimeout creates a GetTelephonySiptracesDownloadDownloadIDRequestTimeout with default headers values
func NewGetTelephonySiptracesDownloadDownloadIDRequestTimeout() *GetTelephonySiptracesDownloadDownloadIDRequestTimeout {
	return &GetTelephonySiptracesDownloadDownloadIDRequestTimeout{}
}

/*
GetTelephonySiptracesDownloadDownloadIDRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetTelephonySiptracesDownloadDownloadIDRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get telephony siptraces download download Id request timeout response has a 2xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get telephony siptraces download download Id request timeout response has a 3xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get telephony siptraces download download Id request timeout response has a 4xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get telephony siptraces download download Id request timeout response has a 5xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get telephony siptraces download download Id request timeout response a status code equal to that given
func (o *GetTelephonySiptracesDownloadDownloadIDRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetTelephonySiptracesDownloadDownloadIDRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces/download/{downloadId}][%d] getTelephonySiptracesDownloadDownloadIdRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetTelephonySiptracesDownloadDownloadIDRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces/download/{downloadId}][%d] getTelephonySiptracesDownloadDownloadIdRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetTelephonySiptracesDownloadDownloadIDRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTelephonySiptracesDownloadDownloadIDRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTelephonySiptracesDownloadDownloadIDRequestEntityTooLarge creates a GetTelephonySiptracesDownloadDownloadIDRequestEntityTooLarge with default headers values
func NewGetTelephonySiptracesDownloadDownloadIDRequestEntityTooLarge() *GetTelephonySiptracesDownloadDownloadIDRequestEntityTooLarge {
	return &GetTelephonySiptracesDownloadDownloadIDRequestEntityTooLarge{}
}

/*
GetTelephonySiptracesDownloadDownloadIDRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetTelephonySiptracesDownloadDownloadIDRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get telephony siptraces download download Id request entity too large response has a 2xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get telephony siptraces download download Id request entity too large response has a 3xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get telephony siptraces download download Id request entity too large response has a 4xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get telephony siptraces download download Id request entity too large response has a 5xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get telephony siptraces download download Id request entity too large response a status code equal to that given
func (o *GetTelephonySiptracesDownloadDownloadIDRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetTelephonySiptracesDownloadDownloadIDRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces/download/{downloadId}][%d] getTelephonySiptracesDownloadDownloadIdRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetTelephonySiptracesDownloadDownloadIDRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces/download/{downloadId}][%d] getTelephonySiptracesDownloadDownloadIdRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetTelephonySiptracesDownloadDownloadIDRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTelephonySiptracesDownloadDownloadIDRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTelephonySiptracesDownloadDownloadIDUnsupportedMediaType creates a GetTelephonySiptracesDownloadDownloadIDUnsupportedMediaType with default headers values
func NewGetTelephonySiptracesDownloadDownloadIDUnsupportedMediaType() *GetTelephonySiptracesDownloadDownloadIDUnsupportedMediaType {
	return &GetTelephonySiptracesDownloadDownloadIDUnsupportedMediaType{}
}

/*
GetTelephonySiptracesDownloadDownloadIDUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetTelephonySiptracesDownloadDownloadIDUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get telephony siptraces download download Id unsupported media type response has a 2xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get telephony siptraces download download Id unsupported media type response has a 3xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get telephony siptraces download download Id unsupported media type response has a 4xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get telephony siptraces download download Id unsupported media type response has a 5xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get telephony siptraces download download Id unsupported media type response a status code equal to that given
func (o *GetTelephonySiptracesDownloadDownloadIDUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetTelephonySiptracesDownloadDownloadIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces/download/{downloadId}][%d] getTelephonySiptracesDownloadDownloadIdUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetTelephonySiptracesDownloadDownloadIDUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces/download/{downloadId}][%d] getTelephonySiptracesDownloadDownloadIdUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetTelephonySiptracesDownloadDownloadIDUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTelephonySiptracesDownloadDownloadIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTelephonySiptracesDownloadDownloadIDTooManyRequests creates a GetTelephonySiptracesDownloadDownloadIDTooManyRequests with default headers values
func NewGetTelephonySiptracesDownloadDownloadIDTooManyRequests() *GetTelephonySiptracesDownloadDownloadIDTooManyRequests {
	return &GetTelephonySiptracesDownloadDownloadIDTooManyRequests{}
}

/*
GetTelephonySiptracesDownloadDownloadIDTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetTelephonySiptracesDownloadDownloadIDTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get telephony siptraces download download Id too many requests response has a 2xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get telephony siptraces download download Id too many requests response has a 3xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get telephony siptraces download download Id too many requests response has a 4xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get telephony siptraces download download Id too many requests response has a 5xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get telephony siptraces download download Id too many requests response a status code equal to that given
func (o *GetTelephonySiptracesDownloadDownloadIDTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetTelephonySiptracesDownloadDownloadIDTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces/download/{downloadId}][%d] getTelephonySiptracesDownloadDownloadIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetTelephonySiptracesDownloadDownloadIDTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces/download/{downloadId}][%d] getTelephonySiptracesDownloadDownloadIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetTelephonySiptracesDownloadDownloadIDTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTelephonySiptracesDownloadDownloadIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTelephonySiptracesDownloadDownloadIDInternalServerError creates a GetTelephonySiptracesDownloadDownloadIDInternalServerError with default headers values
func NewGetTelephonySiptracesDownloadDownloadIDInternalServerError() *GetTelephonySiptracesDownloadDownloadIDInternalServerError {
	return &GetTelephonySiptracesDownloadDownloadIDInternalServerError{}
}

/*
GetTelephonySiptracesDownloadDownloadIDInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetTelephonySiptracesDownloadDownloadIDInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get telephony siptraces download download Id internal server error response has a 2xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get telephony siptraces download download Id internal server error response has a 3xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get telephony siptraces download download Id internal server error response has a 4xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get telephony siptraces download download Id internal server error response has a 5xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get telephony siptraces download download Id internal server error response a status code equal to that given
func (o *GetTelephonySiptracesDownloadDownloadIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetTelephonySiptracesDownloadDownloadIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces/download/{downloadId}][%d] getTelephonySiptracesDownloadDownloadIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTelephonySiptracesDownloadDownloadIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces/download/{downloadId}][%d] getTelephonySiptracesDownloadDownloadIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTelephonySiptracesDownloadDownloadIDInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTelephonySiptracesDownloadDownloadIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTelephonySiptracesDownloadDownloadIDServiceUnavailable creates a GetTelephonySiptracesDownloadDownloadIDServiceUnavailable with default headers values
func NewGetTelephonySiptracesDownloadDownloadIDServiceUnavailable() *GetTelephonySiptracesDownloadDownloadIDServiceUnavailable {
	return &GetTelephonySiptracesDownloadDownloadIDServiceUnavailable{}
}

/*
GetTelephonySiptracesDownloadDownloadIDServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetTelephonySiptracesDownloadDownloadIDServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get telephony siptraces download download Id service unavailable response has a 2xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get telephony siptraces download download Id service unavailable response has a 3xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get telephony siptraces download download Id service unavailable response has a 4xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get telephony siptraces download download Id service unavailable response has a 5xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get telephony siptraces download download Id service unavailable response a status code equal to that given
func (o *GetTelephonySiptracesDownloadDownloadIDServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetTelephonySiptracesDownloadDownloadIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces/download/{downloadId}][%d] getTelephonySiptracesDownloadDownloadIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetTelephonySiptracesDownloadDownloadIDServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces/download/{downloadId}][%d] getTelephonySiptracesDownloadDownloadIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetTelephonySiptracesDownloadDownloadIDServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTelephonySiptracesDownloadDownloadIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTelephonySiptracesDownloadDownloadIDGatewayTimeout creates a GetTelephonySiptracesDownloadDownloadIDGatewayTimeout with default headers values
func NewGetTelephonySiptracesDownloadDownloadIDGatewayTimeout() *GetTelephonySiptracesDownloadDownloadIDGatewayTimeout {
	return &GetTelephonySiptracesDownloadDownloadIDGatewayTimeout{}
}

/*
GetTelephonySiptracesDownloadDownloadIDGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetTelephonySiptracesDownloadDownloadIDGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get telephony siptraces download download Id gateway timeout response has a 2xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get telephony siptraces download download Id gateway timeout response has a 3xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get telephony siptraces download download Id gateway timeout response has a 4xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get telephony siptraces download download Id gateway timeout response has a 5xx status code
func (o *GetTelephonySiptracesDownloadDownloadIDGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get telephony siptraces download download Id gateway timeout response a status code equal to that given
func (o *GetTelephonySiptracesDownloadDownloadIDGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetTelephonySiptracesDownloadDownloadIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces/download/{downloadId}][%d] getTelephonySiptracesDownloadDownloadIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetTelephonySiptracesDownloadDownloadIDGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces/download/{downloadId}][%d] getTelephonySiptracesDownloadDownloadIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetTelephonySiptracesDownloadDownloadIDGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTelephonySiptracesDownloadDownloadIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
