// Code generated by go-swagger; DO NOT EDIT.

package telephony

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetTelephonySiptracesReader is a Reader for the GetTelephonySiptraces structure.
type GetTelephonySiptracesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTelephonySiptracesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTelephonySiptracesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTelephonySiptracesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetTelephonySiptracesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetTelephonySiptracesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTelephonySiptracesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetTelephonySiptracesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetTelephonySiptracesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetTelephonySiptracesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetTelephonySiptracesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTelephonySiptracesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetTelephonySiptracesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetTelephonySiptracesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTelephonySiptracesOK creates a GetTelephonySiptracesOK with default headers values
func NewGetTelephonySiptracesOK() *GetTelephonySiptracesOK {
	return &GetTelephonySiptracesOK{}
}

/*
GetTelephonySiptracesOK describes a response with status code 200, with default header values.

successful operation
*/
type GetTelephonySiptracesOK struct {
	Payload *models.SipSearchResult
}

// IsSuccess returns true when this get telephony siptraces o k response has a 2xx status code
func (o *GetTelephonySiptracesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get telephony siptraces o k response has a 3xx status code
func (o *GetTelephonySiptracesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get telephony siptraces o k response has a 4xx status code
func (o *GetTelephonySiptracesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get telephony siptraces o k response has a 5xx status code
func (o *GetTelephonySiptracesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get telephony siptraces o k response a status code equal to that given
func (o *GetTelephonySiptracesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetTelephonySiptracesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces][%d] getTelephonySiptracesOK  %+v", 200, o.Payload)
}

func (o *GetTelephonySiptracesOK) String() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces][%d] getTelephonySiptracesOK  %+v", 200, o.Payload)
}

func (o *GetTelephonySiptracesOK) GetPayload() *models.SipSearchResult {
	return o.Payload
}

func (o *GetTelephonySiptracesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SipSearchResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTelephonySiptracesBadRequest creates a GetTelephonySiptracesBadRequest with default headers values
func NewGetTelephonySiptracesBadRequest() *GetTelephonySiptracesBadRequest {
	return &GetTelephonySiptracesBadRequest{}
}

/*
GetTelephonySiptracesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetTelephonySiptracesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get telephony siptraces bad request response has a 2xx status code
func (o *GetTelephonySiptracesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get telephony siptraces bad request response has a 3xx status code
func (o *GetTelephonySiptracesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get telephony siptraces bad request response has a 4xx status code
func (o *GetTelephonySiptracesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get telephony siptraces bad request response has a 5xx status code
func (o *GetTelephonySiptracesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get telephony siptraces bad request response a status code equal to that given
func (o *GetTelephonySiptracesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetTelephonySiptracesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces][%d] getTelephonySiptracesBadRequest  %+v", 400, o.Payload)
}

func (o *GetTelephonySiptracesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces][%d] getTelephonySiptracesBadRequest  %+v", 400, o.Payload)
}

func (o *GetTelephonySiptracesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTelephonySiptracesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTelephonySiptracesUnauthorized creates a GetTelephonySiptracesUnauthorized with default headers values
func NewGetTelephonySiptracesUnauthorized() *GetTelephonySiptracesUnauthorized {
	return &GetTelephonySiptracesUnauthorized{}
}

/*
GetTelephonySiptracesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetTelephonySiptracesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get telephony siptraces unauthorized response has a 2xx status code
func (o *GetTelephonySiptracesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get telephony siptraces unauthorized response has a 3xx status code
func (o *GetTelephonySiptracesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get telephony siptraces unauthorized response has a 4xx status code
func (o *GetTelephonySiptracesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get telephony siptraces unauthorized response has a 5xx status code
func (o *GetTelephonySiptracesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get telephony siptraces unauthorized response a status code equal to that given
func (o *GetTelephonySiptracesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetTelephonySiptracesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces][%d] getTelephonySiptracesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetTelephonySiptracesUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces][%d] getTelephonySiptracesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetTelephonySiptracesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTelephonySiptracesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTelephonySiptracesForbidden creates a GetTelephonySiptracesForbidden with default headers values
func NewGetTelephonySiptracesForbidden() *GetTelephonySiptracesForbidden {
	return &GetTelephonySiptracesForbidden{}
}

/*
GetTelephonySiptracesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetTelephonySiptracesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get telephony siptraces forbidden response has a 2xx status code
func (o *GetTelephonySiptracesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get telephony siptraces forbidden response has a 3xx status code
func (o *GetTelephonySiptracesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get telephony siptraces forbidden response has a 4xx status code
func (o *GetTelephonySiptracesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get telephony siptraces forbidden response has a 5xx status code
func (o *GetTelephonySiptracesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get telephony siptraces forbidden response a status code equal to that given
func (o *GetTelephonySiptracesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetTelephonySiptracesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces][%d] getTelephonySiptracesForbidden  %+v", 403, o.Payload)
}

func (o *GetTelephonySiptracesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces][%d] getTelephonySiptracesForbidden  %+v", 403, o.Payload)
}

func (o *GetTelephonySiptracesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTelephonySiptracesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTelephonySiptracesNotFound creates a GetTelephonySiptracesNotFound with default headers values
func NewGetTelephonySiptracesNotFound() *GetTelephonySiptracesNotFound {
	return &GetTelephonySiptracesNotFound{}
}

/*
GetTelephonySiptracesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetTelephonySiptracesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get telephony siptraces not found response has a 2xx status code
func (o *GetTelephonySiptracesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get telephony siptraces not found response has a 3xx status code
func (o *GetTelephonySiptracesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get telephony siptraces not found response has a 4xx status code
func (o *GetTelephonySiptracesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get telephony siptraces not found response has a 5xx status code
func (o *GetTelephonySiptracesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get telephony siptraces not found response a status code equal to that given
func (o *GetTelephonySiptracesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetTelephonySiptracesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces][%d] getTelephonySiptracesNotFound  %+v", 404, o.Payload)
}

func (o *GetTelephonySiptracesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces][%d] getTelephonySiptracesNotFound  %+v", 404, o.Payload)
}

func (o *GetTelephonySiptracesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTelephonySiptracesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTelephonySiptracesRequestTimeout creates a GetTelephonySiptracesRequestTimeout with default headers values
func NewGetTelephonySiptracesRequestTimeout() *GetTelephonySiptracesRequestTimeout {
	return &GetTelephonySiptracesRequestTimeout{}
}

/*
GetTelephonySiptracesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetTelephonySiptracesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get telephony siptraces request timeout response has a 2xx status code
func (o *GetTelephonySiptracesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get telephony siptraces request timeout response has a 3xx status code
func (o *GetTelephonySiptracesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get telephony siptraces request timeout response has a 4xx status code
func (o *GetTelephonySiptracesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get telephony siptraces request timeout response has a 5xx status code
func (o *GetTelephonySiptracesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get telephony siptraces request timeout response a status code equal to that given
func (o *GetTelephonySiptracesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetTelephonySiptracesRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces][%d] getTelephonySiptracesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetTelephonySiptracesRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces][%d] getTelephonySiptracesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetTelephonySiptracesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTelephonySiptracesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTelephonySiptracesRequestEntityTooLarge creates a GetTelephonySiptracesRequestEntityTooLarge with default headers values
func NewGetTelephonySiptracesRequestEntityTooLarge() *GetTelephonySiptracesRequestEntityTooLarge {
	return &GetTelephonySiptracesRequestEntityTooLarge{}
}

/*
GetTelephonySiptracesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetTelephonySiptracesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get telephony siptraces request entity too large response has a 2xx status code
func (o *GetTelephonySiptracesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get telephony siptraces request entity too large response has a 3xx status code
func (o *GetTelephonySiptracesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get telephony siptraces request entity too large response has a 4xx status code
func (o *GetTelephonySiptracesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get telephony siptraces request entity too large response has a 5xx status code
func (o *GetTelephonySiptracesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get telephony siptraces request entity too large response a status code equal to that given
func (o *GetTelephonySiptracesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetTelephonySiptracesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces][%d] getTelephonySiptracesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetTelephonySiptracesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces][%d] getTelephonySiptracesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetTelephonySiptracesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTelephonySiptracesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTelephonySiptracesUnsupportedMediaType creates a GetTelephonySiptracesUnsupportedMediaType with default headers values
func NewGetTelephonySiptracesUnsupportedMediaType() *GetTelephonySiptracesUnsupportedMediaType {
	return &GetTelephonySiptracesUnsupportedMediaType{}
}

/*
GetTelephonySiptracesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetTelephonySiptracesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get telephony siptraces unsupported media type response has a 2xx status code
func (o *GetTelephonySiptracesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get telephony siptraces unsupported media type response has a 3xx status code
func (o *GetTelephonySiptracesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get telephony siptraces unsupported media type response has a 4xx status code
func (o *GetTelephonySiptracesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get telephony siptraces unsupported media type response has a 5xx status code
func (o *GetTelephonySiptracesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get telephony siptraces unsupported media type response a status code equal to that given
func (o *GetTelephonySiptracesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetTelephonySiptracesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces][%d] getTelephonySiptracesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetTelephonySiptracesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces][%d] getTelephonySiptracesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetTelephonySiptracesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTelephonySiptracesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTelephonySiptracesTooManyRequests creates a GetTelephonySiptracesTooManyRequests with default headers values
func NewGetTelephonySiptracesTooManyRequests() *GetTelephonySiptracesTooManyRequests {
	return &GetTelephonySiptracesTooManyRequests{}
}

/*
GetTelephonySiptracesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetTelephonySiptracesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get telephony siptraces too many requests response has a 2xx status code
func (o *GetTelephonySiptracesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get telephony siptraces too many requests response has a 3xx status code
func (o *GetTelephonySiptracesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get telephony siptraces too many requests response has a 4xx status code
func (o *GetTelephonySiptracesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get telephony siptraces too many requests response has a 5xx status code
func (o *GetTelephonySiptracesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get telephony siptraces too many requests response a status code equal to that given
func (o *GetTelephonySiptracesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetTelephonySiptracesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces][%d] getTelephonySiptracesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetTelephonySiptracesTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces][%d] getTelephonySiptracesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetTelephonySiptracesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTelephonySiptracesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTelephonySiptracesInternalServerError creates a GetTelephonySiptracesInternalServerError with default headers values
func NewGetTelephonySiptracesInternalServerError() *GetTelephonySiptracesInternalServerError {
	return &GetTelephonySiptracesInternalServerError{}
}

/*
GetTelephonySiptracesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetTelephonySiptracesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get telephony siptraces internal server error response has a 2xx status code
func (o *GetTelephonySiptracesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get telephony siptraces internal server error response has a 3xx status code
func (o *GetTelephonySiptracesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get telephony siptraces internal server error response has a 4xx status code
func (o *GetTelephonySiptracesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get telephony siptraces internal server error response has a 5xx status code
func (o *GetTelephonySiptracesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get telephony siptraces internal server error response a status code equal to that given
func (o *GetTelephonySiptracesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetTelephonySiptracesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces][%d] getTelephonySiptracesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTelephonySiptracesInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces][%d] getTelephonySiptracesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTelephonySiptracesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTelephonySiptracesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTelephonySiptracesServiceUnavailable creates a GetTelephonySiptracesServiceUnavailable with default headers values
func NewGetTelephonySiptracesServiceUnavailable() *GetTelephonySiptracesServiceUnavailable {
	return &GetTelephonySiptracesServiceUnavailable{}
}

/*
GetTelephonySiptracesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetTelephonySiptracesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get telephony siptraces service unavailable response has a 2xx status code
func (o *GetTelephonySiptracesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get telephony siptraces service unavailable response has a 3xx status code
func (o *GetTelephonySiptracesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get telephony siptraces service unavailable response has a 4xx status code
func (o *GetTelephonySiptracesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get telephony siptraces service unavailable response has a 5xx status code
func (o *GetTelephonySiptracesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get telephony siptraces service unavailable response a status code equal to that given
func (o *GetTelephonySiptracesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetTelephonySiptracesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces][%d] getTelephonySiptracesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetTelephonySiptracesServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces][%d] getTelephonySiptracesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetTelephonySiptracesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTelephonySiptracesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTelephonySiptracesGatewayTimeout creates a GetTelephonySiptracesGatewayTimeout with default headers values
func NewGetTelephonySiptracesGatewayTimeout() *GetTelephonySiptracesGatewayTimeout {
	return &GetTelephonySiptracesGatewayTimeout{}
}

/*
GetTelephonySiptracesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetTelephonySiptracesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get telephony siptraces gateway timeout response has a 2xx status code
func (o *GetTelephonySiptracesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get telephony siptraces gateway timeout response has a 3xx status code
func (o *GetTelephonySiptracesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get telephony siptraces gateway timeout response has a 4xx status code
func (o *GetTelephonySiptracesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get telephony siptraces gateway timeout response has a 5xx status code
func (o *GetTelephonySiptracesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get telephony siptraces gateway timeout response a status code equal to that given
func (o *GetTelephonySiptracesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetTelephonySiptracesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces][%d] getTelephonySiptracesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetTelephonySiptracesGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/telephony/siptraces][%d] getTelephonySiptracesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetTelephonySiptracesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTelephonySiptracesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
