// Code generated by go-swagger; DO NOT EDIT.

package greetings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetGreetingMediaReader is a Reader for the GetGreetingMedia structure.
type GetGreetingMediaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGreetingMediaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGreetingMediaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetGreetingMediaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetGreetingMediaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGreetingMediaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGreetingMediaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetGreetingMediaRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetGreetingMediaRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetGreetingMediaUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetGreetingMediaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGreetingMediaInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetGreetingMediaServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetGreetingMediaGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGreetingMediaOK creates a GetGreetingMediaOK with default headers values
func NewGetGreetingMediaOK() *GetGreetingMediaOK {
	return &GetGreetingMediaOK{}
}

/*
GetGreetingMediaOK describes a response with status code 200, with default header values.

successful operation
*/
type GetGreetingMediaOK struct {
	Payload *models.GreetingMediaInfo
}

// IsSuccess returns true when this get greeting media o k response has a 2xx status code
func (o *GetGreetingMediaOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get greeting media o k response has a 3xx status code
func (o *GetGreetingMediaOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get greeting media o k response has a 4xx status code
func (o *GetGreetingMediaOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get greeting media o k response has a 5xx status code
func (o *GetGreetingMediaOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get greeting media o k response a status code equal to that given
func (o *GetGreetingMediaOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetGreetingMediaOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}/media][%d] getGreetingMediaOK  %+v", 200, o.Payload)
}

func (o *GetGreetingMediaOK) String() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}/media][%d] getGreetingMediaOK  %+v", 200, o.Payload)
}

func (o *GetGreetingMediaOK) GetPayload() *models.GreetingMediaInfo {
	return o.Payload
}

func (o *GetGreetingMediaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GreetingMediaInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingMediaBadRequest creates a GetGreetingMediaBadRequest with default headers values
func NewGetGreetingMediaBadRequest() *GetGreetingMediaBadRequest {
	return &GetGreetingMediaBadRequest{}
}

/*
GetGreetingMediaBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetGreetingMediaBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get greeting media bad request response has a 2xx status code
func (o *GetGreetingMediaBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get greeting media bad request response has a 3xx status code
func (o *GetGreetingMediaBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get greeting media bad request response has a 4xx status code
func (o *GetGreetingMediaBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get greeting media bad request response has a 5xx status code
func (o *GetGreetingMediaBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get greeting media bad request response a status code equal to that given
func (o *GetGreetingMediaBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetGreetingMediaBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}/media][%d] getGreetingMediaBadRequest  %+v", 400, o.Payload)
}

func (o *GetGreetingMediaBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}/media][%d] getGreetingMediaBadRequest  %+v", 400, o.Payload)
}

func (o *GetGreetingMediaBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingMediaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingMediaUnauthorized creates a GetGreetingMediaUnauthorized with default headers values
func NewGetGreetingMediaUnauthorized() *GetGreetingMediaUnauthorized {
	return &GetGreetingMediaUnauthorized{}
}

/*
GetGreetingMediaUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetGreetingMediaUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get greeting media unauthorized response has a 2xx status code
func (o *GetGreetingMediaUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get greeting media unauthorized response has a 3xx status code
func (o *GetGreetingMediaUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get greeting media unauthorized response has a 4xx status code
func (o *GetGreetingMediaUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get greeting media unauthorized response has a 5xx status code
func (o *GetGreetingMediaUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get greeting media unauthorized response a status code equal to that given
func (o *GetGreetingMediaUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetGreetingMediaUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}/media][%d] getGreetingMediaUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGreetingMediaUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}/media][%d] getGreetingMediaUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGreetingMediaUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingMediaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingMediaForbidden creates a GetGreetingMediaForbidden with default headers values
func NewGetGreetingMediaForbidden() *GetGreetingMediaForbidden {
	return &GetGreetingMediaForbidden{}
}

/*
GetGreetingMediaForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetGreetingMediaForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get greeting media forbidden response has a 2xx status code
func (o *GetGreetingMediaForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get greeting media forbidden response has a 3xx status code
func (o *GetGreetingMediaForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get greeting media forbidden response has a 4xx status code
func (o *GetGreetingMediaForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get greeting media forbidden response has a 5xx status code
func (o *GetGreetingMediaForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get greeting media forbidden response a status code equal to that given
func (o *GetGreetingMediaForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetGreetingMediaForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}/media][%d] getGreetingMediaForbidden  %+v", 403, o.Payload)
}

func (o *GetGreetingMediaForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}/media][%d] getGreetingMediaForbidden  %+v", 403, o.Payload)
}

func (o *GetGreetingMediaForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingMediaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingMediaNotFound creates a GetGreetingMediaNotFound with default headers values
func NewGetGreetingMediaNotFound() *GetGreetingMediaNotFound {
	return &GetGreetingMediaNotFound{}
}

/*
GetGreetingMediaNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetGreetingMediaNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get greeting media not found response has a 2xx status code
func (o *GetGreetingMediaNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get greeting media not found response has a 3xx status code
func (o *GetGreetingMediaNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get greeting media not found response has a 4xx status code
func (o *GetGreetingMediaNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get greeting media not found response has a 5xx status code
func (o *GetGreetingMediaNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get greeting media not found response a status code equal to that given
func (o *GetGreetingMediaNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetGreetingMediaNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}/media][%d] getGreetingMediaNotFound  %+v", 404, o.Payload)
}

func (o *GetGreetingMediaNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}/media][%d] getGreetingMediaNotFound  %+v", 404, o.Payload)
}

func (o *GetGreetingMediaNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingMediaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingMediaRequestTimeout creates a GetGreetingMediaRequestTimeout with default headers values
func NewGetGreetingMediaRequestTimeout() *GetGreetingMediaRequestTimeout {
	return &GetGreetingMediaRequestTimeout{}
}

/*
GetGreetingMediaRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetGreetingMediaRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get greeting media request timeout response has a 2xx status code
func (o *GetGreetingMediaRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get greeting media request timeout response has a 3xx status code
func (o *GetGreetingMediaRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get greeting media request timeout response has a 4xx status code
func (o *GetGreetingMediaRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get greeting media request timeout response has a 5xx status code
func (o *GetGreetingMediaRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get greeting media request timeout response a status code equal to that given
func (o *GetGreetingMediaRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetGreetingMediaRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}/media][%d] getGreetingMediaRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetGreetingMediaRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}/media][%d] getGreetingMediaRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetGreetingMediaRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingMediaRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingMediaRequestEntityTooLarge creates a GetGreetingMediaRequestEntityTooLarge with default headers values
func NewGetGreetingMediaRequestEntityTooLarge() *GetGreetingMediaRequestEntityTooLarge {
	return &GetGreetingMediaRequestEntityTooLarge{}
}

/*
GetGreetingMediaRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetGreetingMediaRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get greeting media request entity too large response has a 2xx status code
func (o *GetGreetingMediaRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get greeting media request entity too large response has a 3xx status code
func (o *GetGreetingMediaRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get greeting media request entity too large response has a 4xx status code
func (o *GetGreetingMediaRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get greeting media request entity too large response has a 5xx status code
func (o *GetGreetingMediaRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get greeting media request entity too large response a status code equal to that given
func (o *GetGreetingMediaRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetGreetingMediaRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}/media][%d] getGreetingMediaRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetGreetingMediaRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}/media][%d] getGreetingMediaRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetGreetingMediaRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingMediaRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingMediaUnsupportedMediaType creates a GetGreetingMediaUnsupportedMediaType with default headers values
func NewGetGreetingMediaUnsupportedMediaType() *GetGreetingMediaUnsupportedMediaType {
	return &GetGreetingMediaUnsupportedMediaType{}
}

/*
GetGreetingMediaUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetGreetingMediaUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get greeting media unsupported media type response has a 2xx status code
func (o *GetGreetingMediaUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get greeting media unsupported media type response has a 3xx status code
func (o *GetGreetingMediaUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get greeting media unsupported media type response has a 4xx status code
func (o *GetGreetingMediaUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get greeting media unsupported media type response has a 5xx status code
func (o *GetGreetingMediaUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get greeting media unsupported media type response a status code equal to that given
func (o *GetGreetingMediaUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetGreetingMediaUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}/media][%d] getGreetingMediaUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetGreetingMediaUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}/media][%d] getGreetingMediaUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetGreetingMediaUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingMediaUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingMediaTooManyRequests creates a GetGreetingMediaTooManyRequests with default headers values
func NewGetGreetingMediaTooManyRequests() *GetGreetingMediaTooManyRequests {
	return &GetGreetingMediaTooManyRequests{}
}

/*
GetGreetingMediaTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetGreetingMediaTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get greeting media too many requests response has a 2xx status code
func (o *GetGreetingMediaTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get greeting media too many requests response has a 3xx status code
func (o *GetGreetingMediaTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get greeting media too many requests response has a 4xx status code
func (o *GetGreetingMediaTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get greeting media too many requests response has a 5xx status code
func (o *GetGreetingMediaTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get greeting media too many requests response a status code equal to that given
func (o *GetGreetingMediaTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetGreetingMediaTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}/media][%d] getGreetingMediaTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetGreetingMediaTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}/media][%d] getGreetingMediaTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetGreetingMediaTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingMediaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingMediaInternalServerError creates a GetGreetingMediaInternalServerError with default headers values
func NewGetGreetingMediaInternalServerError() *GetGreetingMediaInternalServerError {
	return &GetGreetingMediaInternalServerError{}
}

/*
GetGreetingMediaInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetGreetingMediaInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get greeting media internal server error response has a 2xx status code
func (o *GetGreetingMediaInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get greeting media internal server error response has a 3xx status code
func (o *GetGreetingMediaInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get greeting media internal server error response has a 4xx status code
func (o *GetGreetingMediaInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get greeting media internal server error response has a 5xx status code
func (o *GetGreetingMediaInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get greeting media internal server error response a status code equal to that given
func (o *GetGreetingMediaInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetGreetingMediaInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}/media][%d] getGreetingMediaInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGreetingMediaInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}/media][%d] getGreetingMediaInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGreetingMediaInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingMediaInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingMediaServiceUnavailable creates a GetGreetingMediaServiceUnavailable with default headers values
func NewGetGreetingMediaServiceUnavailable() *GetGreetingMediaServiceUnavailable {
	return &GetGreetingMediaServiceUnavailable{}
}

/*
GetGreetingMediaServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetGreetingMediaServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get greeting media service unavailable response has a 2xx status code
func (o *GetGreetingMediaServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get greeting media service unavailable response has a 3xx status code
func (o *GetGreetingMediaServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get greeting media service unavailable response has a 4xx status code
func (o *GetGreetingMediaServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get greeting media service unavailable response has a 5xx status code
func (o *GetGreetingMediaServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get greeting media service unavailable response a status code equal to that given
func (o *GetGreetingMediaServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetGreetingMediaServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}/media][%d] getGreetingMediaServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetGreetingMediaServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}/media][%d] getGreetingMediaServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetGreetingMediaServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingMediaServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingMediaGatewayTimeout creates a GetGreetingMediaGatewayTimeout with default headers values
func NewGetGreetingMediaGatewayTimeout() *GetGreetingMediaGatewayTimeout {
	return &GetGreetingMediaGatewayTimeout{}
}

/*
GetGreetingMediaGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetGreetingMediaGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get greeting media gateway timeout response has a 2xx status code
func (o *GetGreetingMediaGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get greeting media gateway timeout response has a 3xx status code
func (o *GetGreetingMediaGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get greeting media gateway timeout response has a 4xx status code
func (o *GetGreetingMediaGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get greeting media gateway timeout response has a 5xx status code
func (o *GetGreetingMediaGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get greeting media gateway timeout response a status code equal to that given
func (o *GetGreetingMediaGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetGreetingMediaGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}/media][%d] getGreetingMediaGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetGreetingMediaGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}/media][%d] getGreetingMediaGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetGreetingMediaGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingMediaGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
