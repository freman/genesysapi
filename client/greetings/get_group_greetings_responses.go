// Code generated by go-swagger; DO NOT EDIT.

package greetings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetGroupGreetingsReader is a Reader for the GetGroupGreetings structure.
type GetGroupGreetingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGroupGreetingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGroupGreetingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetGroupGreetingsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetGroupGreetingsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGroupGreetingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGroupGreetingsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetGroupGreetingsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetGroupGreetingsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetGroupGreetingsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetGroupGreetingsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGroupGreetingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetGroupGreetingsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetGroupGreetingsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGroupGreetingsOK creates a GetGroupGreetingsOK with default headers values
func NewGetGroupGreetingsOK() *GetGroupGreetingsOK {
	return &GetGroupGreetingsOK{}
}

/*
GetGroupGreetingsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetGroupGreetingsOK struct {
	Payload *models.GreetingListing
}

// IsSuccess returns true when this get group greetings o k response has a 2xx status code
func (o *GetGroupGreetingsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get group greetings o k response has a 3xx status code
func (o *GetGroupGreetingsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group greetings o k response has a 4xx status code
func (o *GetGroupGreetingsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get group greetings o k response has a 5xx status code
func (o *GetGroupGreetingsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get group greetings o k response a status code equal to that given
func (o *GetGroupGreetingsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetGroupGreetingsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/greetings][%d] getGroupGreetingsOK  %+v", 200, o.Payload)
}

func (o *GetGroupGreetingsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/greetings][%d] getGroupGreetingsOK  %+v", 200, o.Payload)
}

func (o *GetGroupGreetingsOK) GetPayload() *models.GreetingListing {
	return o.Payload
}

func (o *GetGroupGreetingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GreetingListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupGreetingsBadRequest creates a GetGroupGreetingsBadRequest with default headers values
func NewGetGroupGreetingsBadRequest() *GetGroupGreetingsBadRequest {
	return &GetGroupGreetingsBadRequest{}
}

/*
GetGroupGreetingsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetGroupGreetingsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get group greetings bad request response has a 2xx status code
func (o *GetGroupGreetingsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get group greetings bad request response has a 3xx status code
func (o *GetGroupGreetingsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group greetings bad request response has a 4xx status code
func (o *GetGroupGreetingsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get group greetings bad request response has a 5xx status code
func (o *GetGroupGreetingsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get group greetings bad request response a status code equal to that given
func (o *GetGroupGreetingsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetGroupGreetingsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/greetings][%d] getGroupGreetingsBadRequest  %+v", 400, o.Payload)
}

func (o *GetGroupGreetingsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/greetings][%d] getGroupGreetingsBadRequest  %+v", 400, o.Payload)
}

func (o *GetGroupGreetingsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGroupGreetingsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupGreetingsUnauthorized creates a GetGroupGreetingsUnauthorized with default headers values
func NewGetGroupGreetingsUnauthorized() *GetGroupGreetingsUnauthorized {
	return &GetGroupGreetingsUnauthorized{}
}

/*
GetGroupGreetingsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetGroupGreetingsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get group greetings unauthorized response has a 2xx status code
func (o *GetGroupGreetingsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get group greetings unauthorized response has a 3xx status code
func (o *GetGroupGreetingsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group greetings unauthorized response has a 4xx status code
func (o *GetGroupGreetingsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get group greetings unauthorized response has a 5xx status code
func (o *GetGroupGreetingsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get group greetings unauthorized response a status code equal to that given
func (o *GetGroupGreetingsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetGroupGreetingsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/greetings][%d] getGroupGreetingsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGroupGreetingsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/greetings][%d] getGroupGreetingsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGroupGreetingsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGroupGreetingsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupGreetingsForbidden creates a GetGroupGreetingsForbidden with default headers values
func NewGetGroupGreetingsForbidden() *GetGroupGreetingsForbidden {
	return &GetGroupGreetingsForbidden{}
}

/*
GetGroupGreetingsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetGroupGreetingsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get group greetings forbidden response has a 2xx status code
func (o *GetGroupGreetingsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get group greetings forbidden response has a 3xx status code
func (o *GetGroupGreetingsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group greetings forbidden response has a 4xx status code
func (o *GetGroupGreetingsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get group greetings forbidden response has a 5xx status code
func (o *GetGroupGreetingsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get group greetings forbidden response a status code equal to that given
func (o *GetGroupGreetingsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetGroupGreetingsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/greetings][%d] getGroupGreetingsForbidden  %+v", 403, o.Payload)
}

func (o *GetGroupGreetingsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/greetings][%d] getGroupGreetingsForbidden  %+v", 403, o.Payload)
}

func (o *GetGroupGreetingsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGroupGreetingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupGreetingsNotFound creates a GetGroupGreetingsNotFound with default headers values
func NewGetGroupGreetingsNotFound() *GetGroupGreetingsNotFound {
	return &GetGroupGreetingsNotFound{}
}

/*
GetGroupGreetingsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetGroupGreetingsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get group greetings not found response has a 2xx status code
func (o *GetGroupGreetingsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get group greetings not found response has a 3xx status code
func (o *GetGroupGreetingsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group greetings not found response has a 4xx status code
func (o *GetGroupGreetingsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get group greetings not found response has a 5xx status code
func (o *GetGroupGreetingsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get group greetings not found response a status code equal to that given
func (o *GetGroupGreetingsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetGroupGreetingsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/greetings][%d] getGroupGreetingsNotFound  %+v", 404, o.Payload)
}

func (o *GetGroupGreetingsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/greetings][%d] getGroupGreetingsNotFound  %+v", 404, o.Payload)
}

func (o *GetGroupGreetingsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGroupGreetingsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupGreetingsRequestTimeout creates a GetGroupGreetingsRequestTimeout with default headers values
func NewGetGroupGreetingsRequestTimeout() *GetGroupGreetingsRequestTimeout {
	return &GetGroupGreetingsRequestTimeout{}
}

/*
GetGroupGreetingsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetGroupGreetingsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get group greetings request timeout response has a 2xx status code
func (o *GetGroupGreetingsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get group greetings request timeout response has a 3xx status code
func (o *GetGroupGreetingsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group greetings request timeout response has a 4xx status code
func (o *GetGroupGreetingsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get group greetings request timeout response has a 5xx status code
func (o *GetGroupGreetingsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get group greetings request timeout response a status code equal to that given
func (o *GetGroupGreetingsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetGroupGreetingsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/greetings][%d] getGroupGreetingsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetGroupGreetingsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/greetings][%d] getGroupGreetingsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetGroupGreetingsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGroupGreetingsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupGreetingsRequestEntityTooLarge creates a GetGroupGreetingsRequestEntityTooLarge with default headers values
func NewGetGroupGreetingsRequestEntityTooLarge() *GetGroupGreetingsRequestEntityTooLarge {
	return &GetGroupGreetingsRequestEntityTooLarge{}
}

/*
GetGroupGreetingsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetGroupGreetingsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get group greetings request entity too large response has a 2xx status code
func (o *GetGroupGreetingsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get group greetings request entity too large response has a 3xx status code
func (o *GetGroupGreetingsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group greetings request entity too large response has a 4xx status code
func (o *GetGroupGreetingsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get group greetings request entity too large response has a 5xx status code
func (o *GetGroupGreetingsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get group greetings request entity too large response a status code equal to that given
func (o *GetGroupGreetingsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetGroupGreetingsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/greetings][%d] getGroupGreetingsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetGroupGreetingsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/greetings][%d] getGroupGreetingsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetGroupGreetingsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGroupGreetingsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupGreetingsUnsupportedMediaType creates a GetGroupGreetingsUnsupportedMediaType with default headers values
func NewGetGroupGreetingsUnsupportedMediaType() *GetGroupGreetingsUnsupportedMediaType {
	return &GetGroupGreetingsUnsupportedMediaType{}
}

/*
GetGroupGreetingsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetGroupGreetingsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get group greetings unsupported media type response has a 2xx status code
func (o *GetGroupGreetingsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get group greetings unsupported media type response has a 3xx status code
func (o *GetGroupGreetingsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group greetings unsupported media type response has a 4xx status code
func (o *GetGroupGreetingsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get group greetings unsupported media type response has a 5xx status code
func (o *GetGroupGreetingsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get group greetings unsupported media type response a status code equal to that given
func (o *GetGroupGreetingsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetGroupGreetingsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/greetings][%d] getGroupGreetingsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetGroupGreetingsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/greetings][%d] getGroupGreetingsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetGroupGreetingsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGroupGreetingsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupGreetingsTooManyRequests creates a GetGroupGreetingsTooManyRequests with default headers values
func NewGetGroupGreetingsTooManyRequests() *GetGroupGreetingsTooManyRequests {
	return &GetGroupGreetingsTooManyRequests{}
}

/*
GetGroupGreetingsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetGroupGreetingsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get group greetings too many requests response has a 2xx status code
func (o *GetGroupGreetingsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get group greetings too many requests response has a 3xx status code
func (o *GetGroupGreetingsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group greetings too many requests response has a 4xx status code
func (o *GetGroupGreetingsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get group greetings too many requests response has a 5xx status code
func (o *GetGroupGreetingsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get group greetings too many requests response a status code equal to that given
func (o *GetGroupGreetingsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetGroupGreetingsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/greetings][%d] getGroupGreetingsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetGroupGreetingsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/greetings][%d] getGroupGreetingsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetGroupGreetingsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGroupGreetingsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupGreetingsInternalServerError creates a GetGroupGreetingsInternalServerError with default headers values
func NewGetGroupGreetingsInternalServerError() *GetGroupGreetingsInternalServerError {
	return &GetGroupGreetingsInternalServerError{}
}

/*
GetGroupGreetingsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetGroupGreetingsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get group greetings internal server error response has a 2xx status code
func (o *GetGroupGreetingsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get group greetings internal server error response has a 3xx status code
func (o *GetGroupGreetingsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group greetings internal server error response has a 4xx status code
func (o *GetGroupGreetingsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get group greetings internal server error response has a 5xx status code
func (o *GetGroupGreetingsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get group greetings internal server error response a status code equal to that given
func (o *GetGroupGreetingsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetGroupGreetingsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/greetings][%d] getGroupGreetingsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGroupGreetingsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/greetings][%d] getGroupGreetingsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGroupGreetingsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGroupGreetingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupGreetingsServiceUnavailable creates a GetGroupGreetingsServiceUnavailable with default headers values
func NewGetGroupGreetingsServiceUnavailable() *GetGroupGreetingsServiceUnavailable {
	return &GetGroupGreetingsServiceUnavailable{}
}

/*
GetGroupGreetingsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetGroupGreetingsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get group greetings service unavailable response has a 2xx status code
func (o *GetGroupGreetingsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get group greetings service unavailable response has a 3xx status code
func (o *GetGroupGreetingsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group greetings service unavailable response has a 4xx status code
func (o *GetGroupGreetingsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get group greetings service unavailable response has a 5xx status code
func (o *GetGroupGreetingsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get group greetings service unavailable response a status code equal to that given
func (o *GetGroupGreetingsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetGroupGreetingsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/greetings][%d] getGroupGreetingsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetGroupGreetingsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/greetings][%d] getGroupGreetingsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetGroupGreetingsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGroupGreetingsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupGreetingsGatewayTimeout creates a GetGroupGreetingsGatewayTimeout with default headers values
func NewGetGroupGreetingsGatewayTimeout() *GetGroupGreetingsGatewayTimeout {
	return &GetGroupGreetingsGatewayTimeout{}
}

/*
GetGroupGreetingsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetGroupGreetingsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get group greetings gateway timeout response has a 2xx status code
func (o *GetGroupGreetingsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get group greetings gateway timeout response has a 3xx status code
func (o *GetGroupGreetingsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group greetings gateway timeout response has a 4xx status code
func (o *GetGroupGreetingsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get group greetings gateway timeout response has a 5xx status code
func (o *GetGroupGreetingsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get group greetings gateway timeout response a status code equal to that given
func (o *GetGroupGreetingsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetGroupGreetingsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/greetings][%d] getGroupGreetingsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetGroupGreetingsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/groups/{groupId}/greetings][%d] getGroupGreetingsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetGroupGreetingsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGroupGreetingsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
