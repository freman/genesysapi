// Code generated by go-swagger; DO NOT EDIT.

package greetings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetGreetingsReader is a Reader for the GetGreetings structure.
type GetGreetingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGreetingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGreetingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetGreetingsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetGreetingsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGreetingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGreetingsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetGreetingsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetGreetingsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetGreetingsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetGreetingsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGreetingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetGreetingsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetGreetingsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGreetingsOK creates a GetGreetingsOK with default headers values
func NewGetGreetingsOK() *GetGreetingsOK {
	return &GetGreetingsOK{}
}

/*GetGreetingsOK handles this case with default header values.

successful operation
*/
type GetGreetingsOK struct {
	Payload *models.DomainEntityListing
}

func (o *GetGreetingsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings][%d] getGreetingsOK  %+v", 200, o.Payload)
}

func (o *GetGreetingsOK) GetPayload() *models.DomainEntityListing {
	return o.Payload
}

func (o *GetGreetingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DomainEntityListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingsBadRequest creates a GetGreetingsBadRequest with default headers values
func NewGetGreetingsBadRequest() *GetGreetingsBadRequest {
	return &GetGreetingsBadRequest{}
}

/*GetGreetingsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetGreetingsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetGreetingsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings][%d] getGreetingsBadRequest  %+v", 400, o.Payload)
}

func (o *GetGreetingsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingsUnauthorized creates a GetGreetingsUnauthorized with default headers values
func NewGetGreetingsUnauthorized() *GetGreetingsUnauthorized {
	return &GetGreetingsUnauthorized{}
}

/*GetGreetingsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetGreetingsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetGreetingsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings][%d] getGreetingsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGreetingsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingsForbidden creates a GetGreetingsForbidden with default headers values
func NewGetGreetingsForbidden() *GetGreetingsForbidden {
	return &GetGreetingsForbidden{}
}

/*GetGreetingsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetGreetingsForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetGreetingsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings][%d] getGreetingsForbidden  %+v", 403, o.Payload)
}

func (o *GetGreetingsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingsNotFound creates a GetGreetingsNotFound with default headers values
func NewGetGreetingsNotFound() *GetGreetingsNotFound {
	return &GetGreetingsNotFound{}
}

/*GetGreetingsNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetGreetingsNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetGreetingsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings][%d] getGreetingsNotFound  %+v", 404, o.Payload)
}

func (o *GetGreetingsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingsRequestTimeout creates a GetGreetingsRequestTimeout with default headers values
func NewGetGreetingsRequestTimeout() *GetGreetingsRequestTimeout {
	return &GetGreetingsRequestTimeout{}
}

/*GetGreetingsRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetGreetingsRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetGreetingsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings][%d] getGreetingsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetGreetingsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingsRequestEntityTooLarge creates a GetGreetingsRequestEntityTooLarge with default headers values
func NewGetGreetingsRequestEntityTooLarge() *GetGreetingsRequestEntityTooLarge {
	return &GetGreetingsRequestEntityTooLarge{}
}

/*GetGreetingsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type GetGreetingsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetGreetingsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings][%d] getGreetingsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetGreetingsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingsUnsupportedMediaType creates a GetGreetingsUnsupportedMediaType with default headers values
func NewGetGreetingsUnsupportedMediaType() *GetGreetingsUnsupportedMediaType {
	return &GetGreetingsUnsupportedMediaType{}
}

/*GetGreetingsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetGreetingsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetGreetingsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings][%d] getGreetingsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetGreetingsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingsTooManyRequests creates a GetGreetingsTooManyRequests with default headers values
func NewGetGreetingsTooManyRequests() *GetGreetingsTooManyRequests {
	return &GetGreetingsTooManyRequests{}
}

/*GetGreetingsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetGreetingsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetGreetingsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings][%d] getGreetingsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetGreetingsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingsInternalServerError creates a GetGreetingsInternalServerError with default headers values
func NewGetGreetingsInternalServerError() *GetGreetingsInternalServerError {
	return &GetGreetingsInternalServerError{}
}

/*GetGreetingsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetGreetingsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetGreetingsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings][%d] getGreetingsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGreetingsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingsServiceUnavailable creates a GetGreetingsServiceUnavailable with default headers values
func NewGetGreetingsServiceUnavailable() *GetGreetingsServiceUnavailable {
	return &GetGreetingsServiceUnavailable{}
}

/*GetGreetingsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetGreetingsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetGreetingsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings][%d] getGreetingsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetGreetingsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingsGatewayTimeout creates a GetGreetingsGatewayTimeout with default headers values
func NewGetGreetingsGatewayTimeout() *GetGreetingsGatewayTimeout {
	return &GetGreetingsGatewayTimeout{}
}

/*GetGreetingsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetGreetingsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetGreetingsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings][%d] getGreetingsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetGreetingsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
