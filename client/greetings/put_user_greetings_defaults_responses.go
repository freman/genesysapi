// Code generated by go-swagger; DO NOT EDIT.

package greetings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutUserGreetingsDefaultsReader is a Reader for the PutUserGreetingsDefaults structure.
type PutUserGreetingsDefaultsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutUserGreetingsDefaultsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutUserGreetingsDefaultsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutUserGreetingsDefaultsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutUserGreetingsDefaultsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutUserGreetingsDefaultsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutUserGreetingsDefaultsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutUserGreetingsDefaultsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutUserGreetingsDefaultsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutUserGreetingsDefaultsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutUserGreetingsDefaultsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutUserGreetingsDefaultsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutUserGreetingsDefaultsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutUserGreetingsDefaultsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutUserGreetingsDefaultsOK creates a PutUserGreetingsDefaultsOK with default headers values
func NewPutUserGreetingsDefaultsOK() *PutUserGreetingsDefaultsOK {
	return &PutUserGreetingsDefaultsOK{}
}

/*
PutUserGreetingsDefaultsOK describes a response with status code 200, with default header values.

successful operation
*/
type PutUserGreetingsDefaultsOK struct {
	Payload *models.DefaultGreetingList
}

// IsSuccess returns true when this put user greetings defaults o k response has a 2xx status code
func (o *PutUserGreetingsDefaultsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put user greetings defaults o k response has a 3xx status code
func (o *PutUserGreetingsDefaultsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user greetings defaults o k response has a 4xx status code
func (o *PutUserGreetingsDefaultsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put user greetings defaults o k response has a 5xx status code
func (o *PutUserGreetingsDefaultsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put user greetings defaults o k response a status code equal to that given
func (o *PutUserGreetingsDefaultsOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutUserGreetingsDefaultsOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/greetings/defaults][%d] putUserGreetingsDefaultsOK  %+v", 200, o.Payload)
}

func (o *PutUserGreetingsDefaultsOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/greetings/defaults][%d] putUserGreetingsDefaultsOK  %+v", 200, o.Payload)
}

func (o *PutUserGreetingsDefaultsOK) GetPayload() *models.DefaultGreetingList {
	return o.Payload
}

func (o *PutUserGreetingsDefaultsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DefaultGreetingList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserGreetingsDefaultsBadRequest creates a PutUserGreetingsDefaultsBadRequest with default headers values
func NewPutUserGreetingsDefaultsBadRequest() *PutUserGreetingsDefaultsBadRequest {
	return &PutUserGreetingsDefaultsBadRequest{}
}

/*
PutUserGreetingsDefaultsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutUserGreetingsDefaultsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user greetings defaults bad request response has a 2xx status code
func (o *PutUserGreetingsDefaultsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user greetings defaults bad request response has a 3xx status code
func (o *PutUserGreetingsDefaultsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user greetings defaults bad request response has a 4xx status code
func (o *PutUserGreetingsDefaultsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put user greetings defaults bad request response has a 5xx status code
func (o *PutUserGreetingsDefaultsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put user greetings defaults bad request response a status code equal to that given
func (o *PutUserGreetingsDefaultsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutUserGreetingsDefaultsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/greetings/defaults][%d] putUserGreetingsDefaultsBadRequest  %+v", 400, o.Payload)
}

func (o *PutUserGreetingsDefaultsBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/greetings/defaults][%d] putUserGreetingsDefaultsBadRequest  %+v", 400, o.Payload)
}

func (o *PutUserGreetingsDefaultsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserGreetingsDefaultsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserGreetingsDefaultsUnauthorized creates a PutUserGreetingsDefaultsUnauthorized with default headers values
func NewPutUserGreetingsDefaultsUnauthorized() *PutUserGreetingsDefaultsUnauthorized {
	return &PutUserGreetingsDefaultsUnauthorized{}
}

/*
PutUserGreetingsDefaultsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutUserGreetingsDefaultsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user greetings defaults unauthorized response has a 2xx status code
func (o *PutUserGreetingsDefaultsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user greetings defaults unauthorized response has a 3xx status code
func (o *PutUserGreetingsDefaultsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user greetings defaults unauthorized response has a 4xx status code
func (o *PutUserGreetingsDefaultsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put user greetings defaults unauthorized response has a 5xx status code
func (o *PutUserGreetingsDefaultsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put user greetings defaults unauthorized response a status code equal to that given
func (o *PutUserGreetingsDefaultsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutUserGreetingsDefaultsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/greetings/defaults][%d] putUserGreetingsDefaultsUnauthorized  %+v", 401, o.Payload)
}

func (o *PutUserGreetingsDefaultsUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/greetings/defaults][%d] putUserGreetingsDefaultsUnauthorized  %+v", 401, o.Payload)
}

func (o *PutUserGreetingsDefaultsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserGreetingsDefaultsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserGreetingsDefaultsForbidden creates a PutUserGreetingsDefaultsForbidden with default headers values
func NewPutUserGreetingsDefaultsForbidden() *PutUserGreetingsDefaultsForbidden {
	return &PutUserGreetingsDefaultsForbidden{}
}

/*
PutUserGreetingsDefaultsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutUserGreetingsDefaultsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user greetings defaults forbidden response has a 2xx status code
func (o *PutUserGreetingsDefaultsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user greetings defaults forbidden response has a 3xx status code
func (o *PutUserGreetingsDefaultsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user greetings defaults forbidden response has a 4xx status code
func (o *PutUserGreetingsDefaultsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put user greetings defaults forbidden response has a 5xx status code
func (o *PutUserGreetingsDefaultsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put user greetings defaults forbidden response a status code equal to that given
func (o *PutUserGreetingsDefaultsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutUserGreetingsDefaultsForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/greetings/defaults][%d] putUserGreetingsDefaultsForbidden  %+v", 403, o.Payload)
}

func (o *PutUserGreetingsDefaultsForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/greetings/defaults][%d] putUserGreetingsDefaultsForbidden  %+v", 403, o.Payload)
}

func (o *PutUserGreetingsDefaultsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserGreetingsDefaultsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserGreetingsDefaultsNotFound creates a PutUserGreetingsDefaultsNotFound with default headers values
func NewPutUserGreetingsDefaultsNotFound() *PutUserGreetingsDefaultsNotFound {
	return &PutUserGreetingsDefaultsNotFound{}
}

/*
PutUserGreetingsDefaultsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutUserGreetingsDefaultsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user greetings defaults not found response has a 2xx status code
func (o *PutUserGreetingsDefaultsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user greetings defaults not found response has a 3xx status code
func (o *PutUserGreetingsDefaultsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user greetings defaults not found response has a 4xx status code
func (o *PutUserGreetingsDefaultsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put user greetings defaults not found response has a 5xx status code
func (o *PutUserGreetingsDefaultsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put user greetings defaults not found response a status code equal to that given
func (o *PutUserGreetingsDefaultsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutUserGreetingsDefaultsNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/greetings/defaults][%d] putUserGreetingsDefaultsNotFound  %+v", 404, o.Payload)
}

func (o *PutUserGreetingsDefaultsNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/greetings/defaults][%d] putUserGreetingsDefaultsNotFound  %+v", 404, o.Payload)
}

func (o *PutUserGreetingsDefaultsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserGreetingsDefaultsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserGreetingsDefaultsRequestTimeout creates a PutUserGreetingsDefaultsRequestTimeout with default headers values
func NewPutUserGreetingsDefaultsRequestTimeout() *PutUserGreetingsDefaultsRequestTimeout {
	return &PutUserGreetingsDefaultsRequestTimeout{}
}

/*
PutUserGreetingsDefaultsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutUserGreetingsDefaultsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user greetings defaults request timeout response has a 2xx status code
func (o *PutUserGreetingsDefaultsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user greetings defaults request timeout response has a 3xx status code
func (o *PutUserGreetingsDefaultsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user greetings defaults request timeout response has a 4xx status code
func (o *PutUserGreetingsDefaultsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put user greetings defaults request timeout response has a 5xx status code
func (o *PutUserGreetingsDefaultsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put user greetings defaults request timeout response a status code equal to that given
func (o *PutUserGreetingsDefaultsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutUserGreetingsDefaultsRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/greetings/defaults][%d] putUserGreetingsDefaultsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutUserGreetingsDefaultsRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/greetings/defaults][%d] putUserGreetingsDefaultsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutUserGreetingsDefaultsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserGreetingsDefaultsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserGreetingsDefaultsRequestEntityTooLarge creates a PutUserGreetingsDefaultsRequestEntityTooLarge with default headers values
func NewPutUserGreetingsDefaultsRequestEntityTooLarge() *PutUserGreetingsDefaultsRequestEntityTooLarge {
	return &PutUserGreetingsDefaultsRequestEntityTooLarge{}
}

/*
PutUserGreetingsDefaultsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PutUserGreetingsDefaultsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user greetings defaults request entity too large response has a 2xx status code
func (o *PutUserGreetingsDefaultsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user greetings defaults request entity too large response has a 3xx status code
func (o *PutUserGreetingsDefaultsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user greetings defaults request entity too large response has a 4xx status code
func (o *PutUserGreetingsDefaultsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put user greetings defaults request entity too large response has a 5xx status code
func (o *PutUserGreetingsDefaultsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put user greetings defaults request entity too large response a status code equal to that given
func (o *PutUserGreetingsDefaultsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutUserGreetingsDefaultsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/greetings/defaults][%d] putUserGreetingsDefaultsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutUserGreetingsDefaultsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/greetings/defaults][%d] putUserGreetingsDefaultsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutUserGreetingsDefaultsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserGreetingsDefaultsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserGreetingsDefaultsUnsupportedMediaType creates a PutUserGreetingsDefaultsUnsupportedMediaType with default headers values
func NewPutUserGreetingsDefaultsUnsupportedMediaType() *PutUserGreetingsDefaultsUnsupportedMediaType {
	return &PutUserGreetingsDefaultsUnsupportedMediaType{}
}

/*
PutUserGreetingsDefaultsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutUserGreetingsDefaultsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user greetings defaults unsupported media type response has a 2xx status code
func (o *PutUserGreetingsDefaultsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user greetings defaults unsupported media type response has a 3xx status code
func (o *PutUserGreetingsDefaultsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user greetings defaults unsupported media type response has a 4xx status code
func (o *PutUserGreetingsDefaultsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put user greetings defaults unsupported media type response has a 5xx status code
func (o *PutUserGreetingsDefaultsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put user greetings defaults unsupported media type response a status code equal to that given
func (o *PutUserGreetingsDefaultsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutUserGreetingsDefaultsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/greetings/defaults][%d] putUserGreetingsDefaultsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutUserGreetingsDefaultsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/greetings/defaults][%d] putUserGreetingsDefaultsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutUserGreetingsDefaultsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserGreetingsDefaultsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserGreetingsDefaultsTooManyRequests creates a PutUserGreetingsDefaultsTooManyRequests with default headers values
func NewPutUserGreetingsDefaultsTooManyRequests() *PutUserGreetingsDefaultsTooManyRequests {
	return &PutUserGreetingsDefaultsTooManyRequests{}
}

/*
PutUserGreetingsDefaultsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutUserGreetingsDefaultsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user greetings defaults too many requests response has a 2xx status code
func (o *PutUserGreetingsDefaultsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user greetings defaults too many requests response has a 3xx status code
func (o *PutUserGreetingsDefaultsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user greetings defaults too many requests response has a 4xx status code
func (o *PutUserGreetingsDefaultsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put user greetings defaults too many requests response has a 5xx status code
func (o *PutUserGreetingsDefaultsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put user greetings defaults too many requests response a status code equal to that given
func (o *PutUserGreetingsDefaultsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutUserGreetingsDefaultsTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/greetings/defaults][%d] putUserGreetingsDefaultsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutUserGreetingsDefaultsTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/greetings/defaults][%d] putUserGreetingsDefaultsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutUserGreetingsDefaultsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserGreetingsDefaultsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserGreetingsDefaultsInternalServerError creates a PutUserGreetingsDefaultsInternalServerError with default headers values
func NewPutUserGreetingsDefaultsInternalServerError() *PutUserGreetingsDefaultsInternalServerError {
	return &PutUserGreetingsDefaultsInternalServerError{}
}

/*
PutUserGreetingsDefaultsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutUserGreetingsDefaultsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user greetings defaults internal server error response has a 2xx status code
func (o *PutUserGreetingsDefaultsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user greetings defaults internal server error response has a 3xx status code
func (o *PutUserGreetingsDefaultsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user greetings defaults internal server error response has a 4xx status code
func (o *PutUserGreetingsDefaultsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put user greetings defaults internal server error response has a 5xx status code
func (o *PutUserGreetingsDefaultsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put user greetings defaults internal server error response a status code equal to that given
func (o *PutUserGreetingsDefaultsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutUserGreetingsDefaultsInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/greetings/defaults][%d] putUserGreetingsDefaultsInternalServerError  %+v", 500, o.Payload)
}

func (o *PutUserGreetingsDefaultsInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/greetings/defaults][%d] putUserGreetingsDefaultsInternalServerError  %+v", 500, o.Payload)
}

func (o *PutUserGreetingsDefaultsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserGreetingsDefaultsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserGreetingsDefaultsServiceUnavailable creates a PutUserGreetingsDefaultsServiceUnavailable with default headers values
func NewPutUserGreetingsDefaultsServiceUnavailable() *PutUserGreetingsDefaultsServiceUnavailable {
	return &PutUserGreetingsDefaultsServiceUnavailable{}
}

/*
PutUserGreetingsDefaultsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutUserGreetingsDefaultsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user greetings defaults service unavailable response has a 2xx status code
func (o *PutUserGreetingsDefaultsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user greetings defaults service unavailable response has a 3xx status code
func (o *PutUserGreetingsDefaultsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user greetings defaults service unavailable response has a 4xx status code
func (o *PutUserGreetingsDefaultsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put user greetings defaults service unavailable response has a 5xx status code
func (o *PutUserGreetingsDefaultsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put user greetings defaults service unavailable response a status code equal to that given
func (o *PutUserGreetingsDefaultsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutUserGreetingsDefaultsServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/greetings/defaults][%d] putUserGreetingsDefaultsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutUserGreetingsDefaultsServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/greetings/defaults][%d] putUserGreetingsDefaultsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutUserGreetingsDefaultsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserGreetingsDefaultsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserGreetingsDefaultsGatewayTimeout creates a PutUserGreetingsDefaultsGatewayTimeout with default headers values
func NewPutUserGreetingsDefaultsGatewayTimeout() *PutUserGreetingsDefaultsGatewayTimeout {
	return &PutUserGreetingsDefaultsGatewayTimeout{}
}

/*
PutUserGreetingsDefaultsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutUserGreetingsDefaultsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put user greetings defaults gateway timeout response has a 2xx status code
func (o *PutUserGreetingsDefaultsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put user greetings defaults gateway timeout response has a 3xx status code
func (o *PutUserGreetingsDefaultsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put user greetings defaults gateway timeout response has a 4xx status code
func (o *PutUserGreetingsDefaultsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put user greetings defaults gateway timeout response has a 5xx status code
func (o *PutUserGreetingsDefaultsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put user greetings defaults gateway timeout response a status code equal to that given
func (o *PutUserGreetingsDefaultsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutUserGreetingsDefaultsGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/greetings/defaults][%d] putUserGreetingsDefaultsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutUserGreetingsDefaultsGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/users/{userId}/greetings/defaults][%d] putUserGreetingsDefaultsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutUserGreetingsDefaultsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutUserGreetingsDefaultsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
