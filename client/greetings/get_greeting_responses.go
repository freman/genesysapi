// Code generated by go-swagger; DO NOT EDIT.

package greetings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetGreetingReader is a Reader for the GetGreeting structure.
type GetGreetingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGreetingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGreetingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetGreetingBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetGreetingUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGreetingForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGreetingNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetGreetingRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetGreetingRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetGreetingUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetGreetingTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGreetingInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetGreetingServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetGreetingGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGreetingOK creates a GetGreetingOK with default headers values
func NewGetGreetingOK() *GetGreetingOK {
	return &GetGreetingOK{}
}

/*
GetGreetingOK describes a response with status code 200, with default header values.

successful operation
*/
type GetGreetingOK struct {
	Payload *models.Greeting
}

// IsSuccess returns true when this get greeting o k response has a 2xx status code
func (o *GetGreetingOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get greeting o k response has a 3xx status code
func (o *GetGreetingOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get greeting o k response has a 4xx status code
func (o *GetGreetingOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get greeting o k response has a 5xx status code
func (o *GetGreetingOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get greeting o k response a status code equal to that given
func (o *GetGreetingOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetGreetingOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}][%d] getGreetingOK  %+v", 200, o.Payload)
}

func (o *GetGreetingOK) String() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}][%d] getGreetingOK  %+v", 200, o.Payload)
}

func (o *GetGreetingOK) GetPayload() *models.Greeting {
	return o.Payload
}

func (o *GetGreetingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Greeting)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingBadRequest creates a GetGreetingBadRequest with default headers values
func NewGetGreetingBadRequest() *GetGreetingBadRequest {
	return &GetGreetingBadRequest{}
}

/*
GetGreetingBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetGreetingBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get greeting bad request response has a 2xx status code
func (o *GetGreetingBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get greeting bad request response has a 3xx status code
func (o *GetGreetingBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get greeting bad request response has a 4xx status code
func (o *GetGreetingBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get greeting bad request response has a 5xx status code
func (o *GetGreetingBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get greeting bad request response a status code equal to that given
func (o *GetGreetingBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetGreetingBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}][%d] getGreetingBadRequest  %+v", 400, o.Payload)
}

func (o *GetGreetingBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}][%d] getGreetingBadRequest  %+v", 400, o.Payload)
}

func (o *GetGreetingBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingUnauthorized creates a GetGreetingUnauthorized with default headers values
func NewGetGreetingUnauthorized() *GetGreetingUnauthorized {
	return &GetGreetingUnauthorized{}
}

/*
GetGreetingUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetGreetingUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get greeting unauthorized response has a 2xx status code
func (o *GetGreetingUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get greeting unauthorized response has a 3xx status code
func (o *GetGreetingUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get greeting unauthorized response has a 4xx status code
func (o *GetGreetingUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get greeting unauthorized response has a 5xx status code
func (o *GetGreetingUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get greeting unauthorized response a status code equal to that given
func (o *GetGreetingUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetGreetingUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}][%d] getGreetingUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGreetingUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}][%d] getGreetingUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGreetingUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingForbidden creates a GetGreetingForbidden with default headers values
func NewGetGreetingForbidden() *GetGreetingForbidden {
	return &GetGreetingForbidden{}
}

/*
GetGreetingForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetGreetingForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get greeting forbidden response has a 2xx status code
func (o *GetGreetingForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get greeting forbidden response has a 3xx status code
func (o *GetGreetingForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get greeting forbidden response has a 4xx status code
func (o *GetGreetingForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get greeting forbidden response has a 5xx status code
func (o *GetGreetingForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get greeting forbidden response a status code equal to that given
func (o *GetGreetingForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetGreetingForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}][%d] getGreetingForbidden  %+v", 403, o.Payload)
}

func (o *GetGreetingForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}][%d] getGreetingForbidden  %+v", 403, o.Payload)
}

func (o *GetGreetingForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingNotFound creates a GetGreetingNotFound with default headers values
func NewGetGreetingNotFound() *GetGreetingNotFound {
	return &GetGreetingNotFound{}
}

/*
GetGreetingNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetGreetingNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get greeting not found response has a 2xx status code
func (o *GetGreetingNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get greeting not found response has a 3xx status code
func (o *GetGreetingNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get greeting not found response has a 4xx status code
func (o *GetGreetingNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get greeting not found response has a 5xx status code
func (o *GetGreetingNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get greeting not found response a status code equal to that given
func (o *GetGreetingNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetGreetingNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}][%d] getGreetingNotFound  %+v", 404, o.Payload)
}

func (o *GetGreetingNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}][%d] getGreetingNotFound  %+v", 404, o.Payload)
}

func (o *GetGreetingNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingRequestTimeout creates a GetGreetingRequestTimeout with default headers values
func NewGetGreetingRequestTimeout() *GetGreetingRequestTimeout {
	return &GetGreetingRequestTimeout{}
}

/*
GetGreetingRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetGreetingRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get greeting request timeout response has a 2xx status code
func (o *GetGreetingRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get greeting request timeout response has a 3xx status code
func (o *GetGreetingRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get greeting request timeout response has a 4xx status code
func (o *GetGreetingRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get greeting request timeout response has a 5xx status code
func (o *GetGreetingRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get greeting request timeout response a status code equal to that given
func (o *GetGreetingRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetGreetingRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}][%d] getGreetingRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetGreetingRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}][%d] getGreetingRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetGreetingRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingRequestEntityTooLarge creates a GetGreetingRequestEntityTooLarge with default headers values
func NewGetGreetingRequestEntityTooLarge() *GetGreetingRequestEntityTooLarge {
	return &GetGreetingRequestEntityTooLarge{}
}

/*
GetGreetingRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetGreetingRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get greeting request entity too large response has a 2xx status code
func (o *GetGreetingRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get greeting request entity too large response has a 3xx status code
func (o *GetGreetingRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get greeting request entity too large response has a 4xx status code
func (o *GetGreetingRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get greeting request entity too large response has a 5xx status code
func (o *GetGreetingRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get greeting request entity too large response a status code equal to that given
func (o *GetGreetingRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetGreetingRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}][%d] getGreetingRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetGreetingRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}][%d] getGreetingRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetGreetingRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingUnsupportedMediaType creates a GetGreetingUnsupportedMediaType with default headers values
func NewGetGreetingUnsupportedMediaType() *GetGreetingUnsupportedMediaType {
	return &GetGreetingUnsupportedMediaType{}
}

/*
GetGreetingUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetGreetingUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get greeting unsupported media type response has a 2xx status code
func (o *GetGreetingUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get greeting unsupported media type response has a 3xx status code
func (o *GetGreetingUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get greeting unsupported media type response has a 4xx status code
func (o *GetGreetingUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get greeting unsupported media type response has a 5xx status code
func (o *GetGreetingUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get greeting unsupported media type response a status code equal to that given
func (o *GetGreetingUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetGreetingUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}][%d] getGreetingUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetGreetingUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}][%d] getGreetingUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetGreetingUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingTooManyRequests creates a GetGreetingTooManyRequests with default headers values
func NewGetGreetingTooManyRequests() *GetGreetingTooManyRequests {
	return &GetGreetingTooManyRequests{}
}

/*
GetGreetingTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetGreetingTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get greeting too many requests response has a 2xx status code
func (o *GetGreetingTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get greeting too many requests response has a 3xx status code
func (o *GetGreetingTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get greeting too many requests response has a 4xx status code
func (o *GetGreetingTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get greeting too many requests response has a 5xx status code
func (o *GetGreetingTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get greeting too many requests response a status code equal to that given
func (o *GetGreetingTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetGreetingTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}][%d] getGreetingTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetGreetingTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}][%d] getGreetingTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetGreetingTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingInternalServerError creates a GetGreetingInternalServerError with default headers values
func NewGetGreetingInternalServerError() *GetGreetingInternalServerError {
	return &GetGreetingInternalServerError{}
}

/*
GetGreetingInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetGreetingInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get greeting internal server error response has a 2xx status code
func (o *GetGreetingInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get greeting internal server error response has a 3xx status code
func (o *GetGreetingInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get greeting internal server error response has a 4xx status code
func (o *GetGreetingInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get greeting internal server error response has a 5xx status code
func (o *GetGreetingInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get greeting internal server error response a status code equal to that given
func (o *GetGreetingInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetGreetingInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}][%d] getGreetingInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGreetingInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}][%d] getGreetingInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGreetingInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingServiceUnavailable creates a GetGreetingServiceUnavailable with default headers values
func NewGetGreetingServiceUnavailable() *GetGreetingServiceUnavailable {
	return &GetGreetingServiceUnavailable{}
}

/*
GetGreetingServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetGreetingServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get greeting service unavailable response has a 2xx status code
func (o *GetGreetingServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get greeting service unavailable response has a 3xx status code
func (o *GetGreetingServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get greeting service unavailable response has a 4xx status code
func (o *GetGreetingServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get greeting service unavailable response has a 5xx status code
func (o *GetGreetingServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get greeting service unavailable response a status code equal to that given
func (o *GetGreetingServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetGreetingServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}][%d] getGreetingServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetGreetingServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}][%d] getGreetingServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetGreetingServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGreetingGatewayTimeout creates a GetGreetingGatewayTimeout with default headers values
func NewGetGreetingGatewayTimeout() *GetGreetingGatewayTimeout {
	return &GetGreetingGatewayTimeout{}
}

/*
GetGreetingGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetGreetingGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get greeting gateway timeout response has a 2xx status code
func (o *GetGreetingGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get greeting gateway timeout response has a 3xx status code
func (o *GetGreetingGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get greeting gateway timeout response has a 4xx status code
func (o *GetGreetingGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get greeting gateway timeout response has a 5xx status code
func (o *GetGreetingGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get greeting gateway timeout response a status code equal to that given
func (o *GetGreetingGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetGreetingGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}][%d] getGreetingGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetGreetingGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/greetings/{greetingId}][%d] getGreetingGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetGreetingGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGreetingGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
