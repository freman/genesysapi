// Code generated by go-swagger; DO NOT EDIT.

package external_contacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutExternalcontactsConversationReader is a Reader for the PutExternalcontactsConversation structure.
type PutExternalcontactsConversationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutExternalcontactsConversationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewPutExternalcontactsConversationAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutExternalcontactsConversationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutExternalcontactsConversationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutExternalcontactsConversationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutExternalcontactsConversationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutExternalcontactsConversationRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutExternalcontactsConversationRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutExternalcontactsConversationUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutExternalcontactsConversationTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutExternalcontactsConversationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutExternalcontactsConversationServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutExternalcontactsConversationGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutExternalcontactsConversationAccepted creates a PutExternalcontactsConversationAccepted with default headers values
func NewPutExternalcontactsConversationAccepted() *PutExternalcontactsConversationAccepted {
	return &PutExternalcontactsConversationAccepted{}
}

/*
PutExternalcontactsConversationAccepted describes a response with status code 202, with default header values.

Accepted - Processing association
*/
type PutExternalcontactsConversationAccepted struct {
}

// IsSuccess returns true when this put externalcontacts conversation accepted response has a 2xx status code
func (o *PutExternalcontactsConversationAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put externalcontacts conversation accepted response has a 3xx status code
func (o *PutExternalcontactsConversationAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts conversation accepted response has a 4xx status code
func (o *PutExternalcontactsConversationAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this put externalcontacts conversation accepted response has a 5xx status code
func (o *PutExternalcontactsConversationAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts conversation accepted response a status code equal to that given
func (o *PutExternalcontactsConversationAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *PutExternalcontactsConversationAccepted) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/conversations/{conversationId}][%d] putExternalcontactsConversationAccepted ", 202)
}

func (o *PutExternalcontactsConversationAccepted) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/conversations/{conversationId}][%d] putExternalcontactsConversationAccepted ", 202)
}

func (o *PutExternalcontactsConversationAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutExternalcontactsConversationBadRequest creates a PutExternalcontactsConversationBadRequest with default headers values
func NewPutExternalcontactsConversationBadRequest() *PutExternalcontactsConversationBadRequest {
	return &PutExternalcontactsConversationBadRequest{}
}

/*
PutExternalcontactsConversationBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutExternalcontactsConversationBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts conversation bad request response has a 2xx status code
func (o *PutExternalcontactsConversationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts conversation bad request response has a 3xx status code
func (o *PutExternalcontactsConversationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts conversation bad request response has a 4xx status code
func (o *PutExternalcontactsConversationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts conversation bad request response has a 5xx status code
func (o *PutExternalcontactsConversationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts conversation bad request response a status code equal to that given
func (o *PutExternalcontactsConversationBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutExternalcontactsConversationBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/conversations/{conversationId}][%d] putExternalcontactsConversationBadRequest  %+v", 400, o.Payload)
}

func (o *PutExternalcontactsConversationBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/conversations/{conversationId}][%d] putExternalcontactsConversationBadRequest  %+v", 400, o.Payload)
}

func (o *PutExternalcontactsConversationBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsConversationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsConversationUnauthorized creates a PutExternalcontactsConversationUnauthorized with default headers values
func NewPutExternalcontactsConversationUnauthorized() *PutExternalcontactsConversationUnauthorized {
	return &PutExternalcontactsConversationUnauthorized{}
}

/*
PutExternalcontactsConversationUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutExternalcontactsConversationUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts conversation unauthorized response has a 2xx status code
func (o *PutExternalcontactsConversationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts conversation unauthorized response has a 3xx status code
func (o *PutExternalcontactsConversationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts conversation unauthorized response has a 4xx status code
func (o *PutExternalcontactsConversationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts conversation unauthorized response has a 5xx status code
func (o *PutExternalcontactsConversationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts conversation unauthorized response a status code equal to that given
func (o *PutExternalcontactsConversationUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutExternalcontactsConversationUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/conversations/{conversationId}][%d] putExternalcontactsConversationUnauthorized  %+v", 401, o.Payload)
}

func (o *PutExternalcontactsConversationUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/conversations/{conversationId}][%d] putExternalcontactsConversationUnauthorized  %+v", 401, o.Payload)
}

func (o *PutExternalcontactsConversationUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsConversationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsConversationForbidden creates a PutExternalcontactsConversationForbidden with default headers values
func NewPutExternalcontactsConversationForbidden() *PutExternalcontactsConversationForbidden {
	return &PutExternalcontactsConversationForbidden{}
}

/*
PutExternalcontactsConversationForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutExternalcontactsConversationForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts conversation forbidden response has a 2xx status code
func (o *PutExternalcontactsConversationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts conversation forbidden response has a 3xx status code
func (o *PutExternalcontactsConversationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts conversation forbidden response has a 4xx status code
func (o *PutExternalcontactsConversationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts conversation forbidden response has a 5xx status code
func (o *PutExternalcontactsConversationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts conversation forbidden response a status code equal to that given
func (o *PutExternalcontactsConversationForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutExternalcontactsConversationForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/conversations/{conversationId}][%d] putExternalcontactsConversationForbidden  %+v", 403, o.Payload)
}

func (o *PutExternalcontactsConversationForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/conversations/{conversationId}][%d] putExternalcontactsConversationForbidden  %+v", 403, o.Payload)
}

func (o *PutExternalcontactsConversationForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsConversationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsConversationNotFound creates a PutExternalcontactsConversationNotFound with default headers values
func NewPutExternalcontactsConversationNotFound() *PutExternalcontactsConversationNotFound {
	return &PutExternalcontactsConversationNotFound{}
}

/*
PutExternalcontactsConversationNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutExternalcontactsConversationNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts conversation not found response has a 2xx status code
func (o *PutExternalcontactsConversationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts conversation not found response has a 3xx status code
func (o *PutExternalcontactsConversationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts conversation not found response has a 4xx status code
func (o *PutExternalcontactsConversationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts conversation not found response has a 5xx status code
func (o *PutExternalcontactsConversationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts conversation not found response a status code equal to that given
func (o *PutExternalcontactsConversationNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutExternalcontactsConversationNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/conversations/{conversationId}][%d] putExternalcontactsConversationNotFound  %+v", 404, o.Payload)
}

func (o *PutExternalcontactsConversationNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/conversations/{conversationId}][%d] putExternalcontactsConversationNotFound  %+v", 404, o.Payload)
}

func (o *PutExternalcontactsConversationNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsConversationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsConversationRequestTimeout creates a PutExternalcontactsConversationRequestTimeout with default headers values
func NewPutExternalcontactsConversationRequestTimeout() *PutExternalcontactsConversationRequestTimeout {
	return &PutExternalcontactsConversationRequestTimeout{}
}

/*
PutExternalcontactsConversationRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutExternalcontactsConversationRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts conversation request timeout response has a 2xx status code
func (o *PutExternalcontactsConversationRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts conversation request timeout response has a 3xx status code
func (o *PutExternalcontactsConversationRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts conversation request timeout response has a 4xx status code
func (o *PutExternalcontactsConversationRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts conversation request timeout response has a 5xx status code
func (o *PutExternalcontactsConversationRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts conversation request timeout response a status code equal to that given
func (o *PutExternalcontactsConversationRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutExternalcontactsConversationRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/conversations/{conversationId}][%d] putExternalcontactsConversationRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutExternalcontactsConversationRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/conversations/{conversationId}][%d] putExternalcontactsConversationRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutExternalcontactsConversationRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsConversationRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsConversationRequestEntityTooLarge creates a PutExternalcontactsConversationRequestEntityTooLarge with default headers values
func NewPutExternalcontactsConversationRequestEntityTooLarge() *PutExternalcontactsConversationRequestEntityTooLarge {
	return &PutExternalcontactsConversationRequestEntityTooLarge{}
}

/*
PutExternalcontactsConversationRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PutExternalcontactsConversationRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts conversation request entity too large response has a 2xx status code
func (o *PutExternalcontactsConversationRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts conversation request entity too large response has a 3xx status code
func (o *PutExternalcontactsConversationRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts conversation request entity too large response has a 4xx status code
func (o *PutExternalcontactsConversationRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts conversation request entity too large response has a 5xx status code
func (o *PutExternalcontactsConversationRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts conversation request entity too large response a status code equal to that given
func (o *PutExternalcontactsConversationRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutExternalcontactsConversationRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/conversations/{conversationId}][%d] putExternalcontactsConversationRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutExternalcontactsConversationRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/conversations/{conversationId}][%d] putExternalcontactsConversationRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutExternalcontactsConversationRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsConversationRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsConversationUnsupportedMediaType creates a PutExternalcontactsConversationUnsupportedMediaType with default headers values
func NewPutExternalcontactsConversationUnsupportedMediaType() *PutExternalcontactsConversationUnsupportedMediaType {
	return &PutExternalcontactsConversationUnsupportedMediaType{}
}

/*
PutExternalcontactsConversationUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutExternalcontactsConversationUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts conversation unsupported media type response has a 2xx status code
func (o *PutExternalcontactsConversationUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts conversation unsupported media type response has a 3xx status code
func (o *PutExternalcontactsConversationUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts conversation unsupported media type response has a 4xx status code
func (o *PutExternalcontactsConversationUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts conversation unsupported media type response has a 5xx status code
func (o *PutExternalcontactsConversationUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts conversation unsupported media type response a status code equal to that given
func (o *PutExternalcontactsConversationUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutExternalcontactsConversationUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/conversations/{conversationId}][%d] putExternalcontactsConversationUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutExternalcontactsConversationUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/conversations/{conversationId}][%d] putExternalcontactsConversationUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutExternalcontactsConversationUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsConversationUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsConversationTooManyRequests creates a PutExternalcontactsConversationTooManyRequests with default headers values
func NewPutExternalcontactsConversationTooManyRequests() *PutExternalcontactsConversationTooManyRequests {
	return &PutExternalcontactsConversationTooManyRequests{}
}

/*
PutExternalcontactsConversationTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutExternalcontactsConversationTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts conversation too many requests response has a 2xx status code
func (o *PutExternalcontactsConversationTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts conversation too many requests response has a 3xx status code
func (o *PutExternalcontactsConversationTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts conversation too many requests response has a 4xx status code
func (o *PutExternalcontactsConversationTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts conversation too many requests response has a 5xx status code
func (o *PutExternalcontactsConversationTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts conversation too many requests response a status code equal to that given
func (o *PutExternalcontactsConversationTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutExternalcontactsConversationTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/conversations/{conversationId}][%d] putExternalcontactsConversationTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutExternalcontactsConversationTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/conversations/{conversationId}][%d] putExternalcontactsConversationTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutExternalcontactsConversationTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsConversationTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsConversationInternalServerError creates a PutExternalcontactsConversationInternalServerError with default headers values
func NewPutExternalcontactsConversationInternalServerError() *PutExternalcontactsConversationInternalServerError {
	return &PutExternalcontactsConversationInternalServerError{}
}

/*
PutExternalcontactsConversationInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutExternalcontactsConversationInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts conversation internal server error response has a 2xx status code
func (o *PutExternalcontactsConversationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts conversation internal server error response has a 3xx status code
func (o *PutExternalcontactsConversationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts conversation internal server error response has a 4xx status code
func (o *PutExternalcontactsConversationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put externalcontacts conversation internal server error response has a 5xx status code
func (o *PutExternalcontactsConversationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put externalcontacts conversation internal server error response a status code equal to that given
func (o *PutExternalcontactsConversationInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutExternalcontactsConversationInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/conversations/{conversationId}][%d] putExternalcontactsConversationInternalServerError  %+v", 500, o.Payload)
}

func (o *PutExternalcontactsConversationInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/conversations/{conversationId}][%d] putExternalcontactsConversationInternalServerError  %+v", 500, o.Payload)
}

func (o *PutExternalcontactsConversationInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsConversationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsConversationServiceUnavailable creates a PutExternalcontactsConversationServiceUnavailable with default headers values
func NewPutExternalcontactsConversationServiceUnavailable() *PutExternalcontactsConversationServiceUnavailable {
	return &PutExternalcontactsConversationServiceUnavailable{}
}

/*
PutExternalcontactsConversationServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutExternalcontactsConversationServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts conversation service unavailable response has a 2xx status code
func (o *PutExternalcontactsConversationServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts conversation service unavailable response has a 3xx status code
func (o *PutExternalcontactsConversationServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts conversation service unavailable response has a 4xx status code
func (o *PutExternalcontactsConversationServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put externalcontacts conversation service unavailable response has a 5xx status code
func (o *PutExternalcontactsConversationServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put externalcontacts conversation service unavailable response a status code equal to that given
func (o *PutExternalcontactsConversationServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutExternalcontactsConversationServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/conversations/{conversationId}][%d] putExternalcontactsConversationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutExternalcontactsConversationServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/conversations/{conversationId}][%d] putExternalcontactsConversationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutExternalcontactsConversationServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsConversationServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsConversationGatewayTimeout creates a PutExternalcontactsConversationGatewayTimeout with default headers values
func NewPutExternalcontactsConversationGatewayTimeout() *PutExternalcontactsConversationGatewayTimeout {
	return &PutExternalcontactsConversationGatewayTimeout{}
}

/*
PutExternalcontactsConversationGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutExternalcontactsConversationGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts conversation gateway timeout response has a 2xx status code
func (o *PutExternalcontactsConversationGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts conversation gateway timeout response has a 3xx status code
func (o *PutExternalcontactsConversationGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts conversation gateway timeout response has a 4xx status code
func (o *PutExternalcontactsConversationGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put externalcontacts conversation gateway timeout response has a 5xx status code
func (o *PutExternalcontactsConversationGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put externalcontacts conversation gateway timeout response a status code equal to that given
func (o *PutExternalcontactsConversationGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutExternalcontactsConversationGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/conversations/{conversationId}][%d] putExternalcontactsConversationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutExternalcontactsConversationGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/conversations/{conversationId}][%d] putExternalcontactsConversationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutExternalcontactsConversationGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsConversationGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
