// Code generated by go-swagger; DO NOT EDIT.

package external_contacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutExternalcontactsContactReader is a Reader for the PutExternalcontactsContact structure.
type PutExternalcontactsContactReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutExternalcontactsContactReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutExternalcontactsContactOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutExternalcontactsContactBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutExternalcontactsContactUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutExternalcontactsContactForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutExternalcontactsContactNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutExternalcontactsContactRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutExternalcontactsContactRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutExternalcontactsContactUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewPutExternalcontactsContactUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutExternalcontactsContactTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutExternalcontactsContactInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutExternalcontactsContactServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutExternalcontactsContactGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutExternalcontactsContactOK creates a PutExternalcontactsContactOK with default headers values
func NewPutExternalcontactsContactOK() *PutExternalcontactsContactOK {
	return &PutExternalcontactsContactOK{}
}

/*
PutExternalcontactsContactOK describes a response with status code 200, with default header values.

successful operation
*/
type PutExternalcontactsContactOK struct {
	Payload *models.ExternalContact
}

// IsSuccess returns true when this put externalcontacts contact o k response has a 2xx status code
func (o *PutExternalcontactsContactOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put externalcontacts contact o k response has a 3xx status code
func (o *PutExternalcontactsContactOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contact o k response has a 4xx status code
func (o *PutExternalcontactsContactOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put externalcontacts contact o k response has a 5xx status code
func (o *PutExternalcontactsContactOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts contact o k response a status code equal to that given
func (o *PutExternalcontactsContactOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutExternalcontactsContactOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}][%d] putExternalcontactsContactOK  %+v", 200, o.Payload)
}

func (o *PutExternalcontactsContactOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}][%d] putExternalcontactsContactOK  %+v", 200, o.Payload)
}

func (o *PutExternalcontactsContactOK) GetPayload() *models.ExternalContact {
	return o.Payload
}

func (o *PutExternalcontactsContactOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExternalContact)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactBadRequest creates a PutExternalcontactsContactBadRequest with default headers values
func NewPutExternalcontactsContactBadRequest() *PutExternalcontactsContactBadRequest {
	return &PutExternalcontactsContactBadRequest{}
}

/*
PutExternalcontactsContactBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutExternalcontactsContactBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contact bad request response has a 2xx status code
func (o *PutExternalcontactsContactBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contact bad request response has a 3xx status code
func (o *PutExternalcontactsContactBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contact bad request response has a 4xx status code
func (o *PutExternalcontactsContactBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts contact bad request response has a 5xx status code
func (o *PutExternalcontactsContactBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts contact bad request response a status code equal to that given
func (o *PutExternalcontactsContactBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutExternalcontactsContactBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}][%d] putExternalcontactsContactBadRequest  %+v", 400, o.Payload)
}

func (o *PutExternalcontactsContactBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}][%d] putExternalcontactsContactBadRequest  %+v", 400, o.Payload)
}

func (o *PutExternalcontactsContactBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactUnauthorized creates a PutExternalcontactsContactUnauthorized with default headers values
func NewPutExternalcontactsContactUnauthorized() *PutExternalcontactsContactUnauthorized {
	return &PutExternalcontactsContactUnauthorized{}
}

/*
PutExternalcontactsContactUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutExternalcontactsContactUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contact unauthorized response has a 2xx status code
func (o *PutExternalcontactsContactUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contact unauthorized response has a 3xx status code
func (o *PutExternalcontactsContactUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contact unauthorized response has a 4xx status code
func (o *PutExternalcontactsContactUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts contact unauthorized response has a 5xx status code
func (o *PutExternalcontactsContactUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts contact unauthorized response a status code equal to that given
func (o *PutExternalcontactsContactUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutExternalcontactsContactUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}][%d] putExternalcontactsContactUnauthorized  %+v", 401, o.Payload)
}

func (o *PutExternalcontactsContactUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}][%d] putExternalcontactsContactUnauthorized  %+v", 401, o.Payload)
}

func (o *PutExternalcontactsContactUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactForbidden creates a PutExternalcontactsContactForbidden with default headers values
func NewPutExternalcontactsContactForbidden() *PutExternalcontactsContactForbidden {
	return &PutExternalcontactsContactForbidden{}
}

/*
PutExternalcontactsContactForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutExternalcontactsContactForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contact forbidden response has a 2xx status code
func (o *PutExternalcontactsContactForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contact forbidden response has a 3xx status code
func (o *PutExternalcontactsContactForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contact forbidden response has a 4xx status code
func (o *PutExternalcontactsContactForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts contact forbidden response has a 5xx status code
func (o *PutExternalcontactsContactForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts contact forbidden response a status code equal to that given
func (o *PutExternalcontactsContactForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutExternalcontactsContactForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}][%d] putExternalcontactsContactForbidden  %+v", 403, o.Payload)
}

func (o *PutExternalcontactsContactForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}][%d] putExternalcontactsContactForbidden  %+v", 403, o.Payload)
}

func (o *PutExternalcontactsContactForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactNotFound creates a PutExternalcontactsContactNotFound with default headers values
func NewPutExternalcontactsContactNotFound() *PutExternalcontactsContactNotFound {
	return &PutExternalcontactsContactNotFound{}
}

/*
PutExternalcontactsContactNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutExternalcontactsContactNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contact not found response has a 2xx status code
func (o *PutExternalcontactsContactNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contact not found response has a 3xx status code
func (o *PutExternalcontactsContactNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contact not found response has a 4xx status code
func (o *PutExternalcontactsContactNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts contact not found response has a 5xx status code
func (o *PutExternalcontactsContactNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts contact not found response a status code equal to that given
func (o *PutExternalcontactsContactNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutExternalcontactsContactNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}][%d] putExternalcontactsContactNotFound  %+v", 404, o.Payload)
}

func (o *PutExternalcontactsContactNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}][%d] putExternalcontactsContactNotFound  %+v", 404, o.Payload)
}

func (o *PutExternalcontactsContactNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactRequestTimeout creates a PutExternalcontactsContactRequestTimeout with default headers values
func NewPutExternalcontactsContactRequestTimeout() *PutExternalcontactsContactRequestTimeout {
	return &PutExternalcontactsContactRequestTimeout{}
}

/*
PutExternalcontactsContactRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutExternalcontactsContactRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contact request timeout response has a 2xx status code
func (o *PutExternalcontactsContactRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contact request timeout response has a 3xx status code
func (o *PutExternalcontactsContactRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contact request timeout response has a 4xx status code
func (o *PutExternalcontactsContactRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts contact request timeout response has a 5xx status code
func (o *PutExternalcontactsContactRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts contact request timeout response a status code equal to that given
func (o *PutExternalcontactsContactRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutExternalcontactsContactRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}][%d] putExternalcontactsContactRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutExternalcontactsContactRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}][%d] putExternalcontactsContactRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutExternalcontactsContactRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactRequestEntityTooLarge creates a PutExternalcontactsContactRequestEntityTooLarge with default headers values
func NewPutExternalcontactsContactRequestEntityTooLarge() *PutExternalcontactsContactRequestEntityTooLarge {
	return &PutExternalcontactsContactRequestEntityTooLarge{}
}

/*
PutExternalcontactsContactRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PutExternalcontactsContactRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contact request entity too large response has a 2xx status code
func (o *PutExternalcontactsContactRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contact request entity too large response has a 3xx status code
func (o *PutExternalcontactsContactRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contact request entity too large response has a 4xx status code
func (o *PutExternalcontactsContactRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts contact request entity too large response has a 5xx status code
func (o *PutExternalcontactsContactRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts contact request entity too large response a status code equal to that given
func (o *PutExternalcontactsContactRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutExternalcontactsContactRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}][%d] putExternalcontactsContactRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutExternalcontactsContactRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}][%d] putExternalcontactsContactRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutExternalcontactsContactRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactUnsupportedMediaType creates a PutExternalcontactsContactUnsupportedMediaType with default headers values
func NewPutExternalcontactsContactUnsupportedMediaType() *PutExternalcontactsContactUnsupportedMediaType {
	return &PutExternalcontactsContactUnsupportedMediaType{}
}

/*
PutExternalcontactsContactUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutExternalcontactsContactUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contact unsupported media type response has a 2xx status code
func (o *PutExternalcontactsContactUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contact unsupported media type response has a 3xx status code
func (o *PutExternalcontactsContactUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contact unsupported media type response has a 4xx status code
func (o *PutExternalcontactsContactUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts contact unsupported media type response has a 5xx status code
func (o *PutExternalcontactsContactUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts contact unsupported media type response a status code equal to that given
func (o *PutExternalcontactsContactUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutExternalcontactsContactUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}][%d] putExternalcontactsContactUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutExternalcontactsContactUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}][%d] putExternalcontactsContactUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutExternalcontactsContactUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactUnprocessableEntity creates a PutExternalcontactsContactUnprocessableEntity with default headers values
func NewPutExternalcontactsContactUnprocessableEntity() *PutExternalcontactsContactUnprocessableEntity {
	return &PutExternalcontactsContactUnprocessableEntity{}
}

/*
PutExternalcontactsContactUnprocessableEntity describes a response with status code 422, with default header values.

PutExternalcontactsContactUnprocessableEntity put externalcontacts contact unprocessable entity
*/
type PutExternalcontactsContactUnprocessableEntity struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contact unprocessable entity response has a 2xx status code
func (o *PutExternalcontactsContactUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contact unprocessable entity response has a 3xx status code
func (o *PutExternalcontactsContactUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contact unprocessable entity response has a 4xx status code
func (o *PutExternalcontactsContactUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts contact unprocessable entity response has a 5xx status code
func (o *PutExternalcontactsContactUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts contact unprocessable entity response a status code equal to that given
func (o *PutExternalcontactsContactUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

func (o *PutExternalcontactsContactUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}][%d] putExternalcontactsContactUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PutExternalcontactsContactUnprocessableEntity) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}][%d] putExternalcontactsContactUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PutExternalcontactsContactUnprocessableEntity) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactTooManyRequests creates a PutExternalcontactsContactTooManyRequests with default headers values
func NewPutExternalcontactsContactTooManyRequests() *PutExternalcontactsContactTooManyRequests {
	return &PutExternalcontactsContactTooManyRequests{}
}

/*
PutExternalcontactsContactTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutExternalcontactsContactTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contact too many requests response has a 2xx status code
func (o *PutExternalcontactsContactTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contact too many requests response has a 3xx status code
func (o *PutExternalcontactsContactTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contact too many requests response has a 4xx status code
func (o *PutExternalcontactsContactTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts contact too many requests response has a 5xx status code
func (o *PutExternalcontactsContactTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts contact too many requests response a status code equal to that given
func (o *PutExternalcontactsContactTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutExternalcontactsContactTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}][%d] putExternalcontactsContactTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutExternalcontactsContactTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}][%d] putExternalcontactsContactTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutExternalcontactsContactTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactInternalServerError creates a PutExternalcontactsContactInternalServerError with default headers values
func NewPutExternalcontactsContactInternalServerError() *PutExternalcontactsContactInternalServerError {
	return &PutExternalcontactsContactInternalServerError{}
}

/*
PutExternalcontactsContactInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutExternalcontactsContactInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contact internal server error response has a 2xx status code
func (o *PutExternalcontactsContactInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contact internal server error response has a 3xx status code
func (o *PutExternalcontactsContactInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contact internal server error response has a 4xx status code
func (o *PutExternalcontactsContactInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put externalcontacts contact internal server error response has a 5xx status code
func (o *PutExternalcontactsContactInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put externalcontacts contact internal server error response a status code equal to that given
func (o *PutExternalcontactsContactInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutExternalcontactsContactInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}][%d] putExternalcontactsContactInternalServerError  %+v", 500, o.Payload)
}

func (o *PutExternalcontactsContactInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}][%d] putExternalcontactsContactInternalServerError  %+v", 500, o.Payload)
}

func (o *PutExternalcontactsContactInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactServiceUnavailable creates a PutExternalcontactsContactServiceUnavailable with default headers values
func NewPutExternalcontactsContactServiceUnavailable() *PutExternalcontactsContactServiceUnavailable {
	return &PutExternalcontactsContactServiceUnavailable{}
}

/*
PutExternalcontactsContactServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutExternalcontactsContactServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contact service unavailable response has a 2xx status code
func (o *PutExternalcontactsContactServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contact service unavailable response has a 3xx status code
func (o *PutExternalcontactsContactServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contact service unavailable response has a 4xx status code
func (o *PutExternalcontactsContactServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put externalcontacts contact service unavailable response has a 5xx status code
func (o *PutExternalcontactsContactServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put externalcontacts contact service unavailable response a status code equal to that given
func (o *PutExternalcontactsContactServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutExternalcontactsContactServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}][%d] putExternalcontactsContactServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutExternalcontactsContactServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}][%d] putExternalcontactsContactServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutExternalcontactsContactServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactGatewayTimeout creates a PutExternalcontactsContactGatewayTimeout with default headers values
func NewPutExternalcontactsContactGatewayTimeout() *PutExternalcontactsContactGatewayTimeout {
	return &PutExternalcontactsContactGatewayTimeout{}
}

/*
PutExternalcontactsContactGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutExternalcontactsContactGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contact gateway timeout response has a 2xx status code
func (o *PutExternalcontactsContactGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contact gateway timeout response has a 3xx status code
func (o *PutExternalcontactsContactGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contact gateway timeout response has a 4xx status code
func (o *PutExternalcontactsContactGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put externalcontacts contact gateway timeout response has a 5xx status code
func (o *PutExternalcontactsContactGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put externalcontacts contact gateway timeout response a status code equal to that given
func (o *PutExternalcontactsContactGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutExternalcontactsContactGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}][%d] putExternalcontactsContactGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutExternalcontactsContactGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}][%d] putExternalcontactsContactGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutExternalcontactsContactGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
