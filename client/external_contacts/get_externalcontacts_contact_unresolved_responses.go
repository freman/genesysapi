// Code generated by go-swagger; DO NOT EDIT.

package external_contacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetExternalcontactsContactUnresolvedReader is a Reader for the GetExternalcontactsContactUnresolved structure.
type GetExternalcontactsContactUnresolvedReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetExternalcontactsContactUnresolvedReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetExternalcontactsContactUnresolvedOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetExternalcontactsContactUnresolvedBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetExternalcontactsContactUnresolvedUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetExternalcontactsContactUnresolvedForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetExternalcontactsContactUnresolvedNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetExternalcontactsContactUnresolvedRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetExternalcontactsContactUnresolvedRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetExternalcontactsContactUnresolvedUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetExternalcontactsContactUnresolvedTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetExternalcontactsContactUnresolvedInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetExternalcontactsContactUnresolvedServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetExternalcontactsContactUnresolvedGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetExternalcontactsContactUnresolvedOK creates a GetExternalcontactsContactUnresolvedOK with default headers values
func NewGetExternalcontactsContactUnresolvedOK() *GetExternalcontactsContactUnresolvedOK {
	return &GetExternalcontactsContactUnresolvedOK{}
}

/*
GetExternalcontactsContactUnresolvedOK describes a response with status code 200, with default header values.

successful operation
*/
type GetExternalcontactsContactUnresolvedOK struct {
	Payload *models.ExternalContact
}

// IsSuccess returns true when this get externalcontacts contact unresolved o k response has a 2xx status code
func (o *GetExternalcontactsContactUnresolvedOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get externalcontacts contact unresolved o k response has a 3xx status code
func (o *GetExternalcontactsContactUnresolvedOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact unresolved o k response has a 4xx status code
func (o *GetExternalcontactsContactUnresolvedOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get externalcontacts contact unresolved o k response has a 5xx status code
func (o *GetExternalcontactsContactUnresolvedOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact unresolved o k response a status code equal to that given
func (o *GetExternalcontactsContactUnresolvedOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetExternalcontactsContactUnresolvedOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/unresolved][%d] getExternalcontactsContactUnresolvedOK  %+v", 200, o.Payload)
}

func (o *GetExternalcontactsContactUnresolvedOK) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/unresolved][%d] getExternalcontactsContactUnresolvedOK  %+v", 200, o.Payload)
}

func (o *GetExternalcontactsContactUnresolvedOK) GetPayload() *models.ExternalContact {
	return o.Payload
}

func (o *GetExternalcontactsContactUnresolvedOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExternalContact)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactUnresolvedBadRequest creates a GetExternalcontactsContactUnresolvedBadRequest with default headers values
func NewGetExternalcontactsContactUnresolvedBadRequest() *GetExternalcontactsContactUnresolvedBadRequest {
	return &GetExternalcontactsContactUnresolvedBadRequest{}
}

/*
GetExternalcontactsContactUnresolvedBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetExternalcontactsContactUnresolvedBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact unresolved bad request response has a 2xx status code
func (o *GetExternalcontactsContactUnresolvedBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact unresolved bad request response has a 3xx status code
func (o *GetExternalcontactsContactUnresolvedBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact unresolved bad request response has a 4xx status code
func (o *GetExternalcontactsContactUnresolvedBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get externalcontacts contact unresolved bad request response has a 5xx status code
func (o *GetExternalcontactsContactUnresolvedBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact unresolved bad request response a status code equal to that given
func (o *GetExternalcontactsContactUnresolvedBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetExternalcontactsContactUnresolvedBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/unresolved][%d] getExternalcontactsContactUnresolvedBadRequest  %+v", 400, o.Payload)
}

func (o *GetExternalcontactsContactUnresolvedBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/unresolved][%d] getExternalcontactsContactUnresolvedBadRequest  %+v", 400, o.Payload)
}

func (o *GetExternalcontactsContactUnresolvedBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactUnresolvedBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactUnresolvedUnauthorized creates a GetExternalcontactsContactUnresolvedUnauthorized with default headers values
func NewGetExternalcontactsContactUnresolvedUnauthorized() *GetExternalcontactsContactUnresolvedUnauthorized {
	return &GetExternalcontactsContactUnresolvedUnauthorized{}
}

/*
GetExternalcontactsContactUnresolvedUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetExternalcontactsContactUnresolvedUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact unresolved unauthorized response has a 2xx status code
func (o *GetExternalcontactsContactUnresolvedUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact unresolved unauthorized response has a 3xx status code
func (o *GetExternalcontactsContactUnresolvedUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact unresolved unauthorized response has a 4xx status code
func (o *GetExternalcontactsContactUnresolvedUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get externalcontacts contact unresolved unauthorized response has a 5xx status code
func (o *GetExternalcontactsContactUnresolvedUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact unresolved unauthorized response a status code equal to that given
func (o *GetExternalcontactsContactUnresolvedUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetExternalcontactsContactUnresolvedUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/unresolved][%d] getExternalcontactsContactUnresolvedUnauthorized  %+v", 401, o.Payload)
}

func (o *GetExternalcontactsContactUnresolvedUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/unresolved][%d] getExternalcontactsContactUnresolvedUnauthorized  %+v", 401, o.Payload)
}

func (o *GetExternalcontactsContactUnresolvedUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactUnresolvedUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactUnresolvedForbidden creates a GetExternalcontactsContactUnresolvedForbidden with default headers values
func NewGetExternalcontactsContactUnresolvedForbidden() *GetExternalcontactsContactUnresolvedForbidden {
	return &GetExternalcontactsContactUnresolvedForbidden{}
}

/*
GetExternalcontactsContactUnresolvedForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetExternalcontactsContactUnresolvedForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact unresolved forbidden response has a 2xx status code
func (o *GetExternalcontactsContactUnresolvedForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact unresolved forbidden response has a 3xx status code
func (o *GetExternalcontactsContactUnresolvedForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact unresolved forbidden response has a 4xx status code
func (o *GetExternalcontactsContactUnresolvedForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get externalcontacts contact unresolved forbidden response has a 5xx status code
func (o *GetExternalcontactsContactUnresolvedForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact unresolved forbidden response a status code equal to that given
func (o *GetExternalcontactsContactUnresolvedForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetExternalcontactsContactUnresolvedForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/unresolved][%d] getExternalcontactsContactUnresolvedForbidden  %+v", 403, o.Payload)
}

func (o *GetExternalcontactsContactUnresolvedForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/unresolved][%d] getExternalcontactsContactUnresolvedForbidden  %+v", 403, o.Payload)
}

func (o *GetExternalcontactsContactUnresolvedForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactUnresolvedForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactUnresolvedNotFound creates a GetExternalcontactsContactUnresolvedNotFound with default headers values
func NewGetExternalcontactsContactUnresolvedNotFound() *GetExternalcontactsContactUnresolvedNotFound {
	return &GetExternalcontactsContactUnresolvedNotFound{}
}

/*
GetExternalcontactsContactUnresolvedNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetExternalcontactsContactUnresolvedNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact unresolved not found response has a 2xx status code
func (o *GetExternalcontactsContactUnresolvedNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact unresolved not found response has a 3xx status code
func (o *GetExternalcontactsContactUnresolvedNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact unresolved not found response has a 4xx status code
func (o *GetExternalcontactsContactUnresolvedNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get externalcontacts contact unresolved not found response has a 5xx status code
func (o *GetExternalcontactsContactUnresolvedNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact unresolved not found response a status code equal to that given
func (o *GetExternalcontactsContactUnresolvedNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetExternalcontactsContactUnresolvedNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/unresolved][%d] getExternalcontactsContactUnresolvedNotFound  %+v", 404, o.Payload)
}

func (o *GetExternalcontactsContactUnresolvedNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/unresolved][%d] getExternalcontactsContactUnresolvedNotFound  %+v", 404, o.Payload)
}

func (o *GetExternalcontactsContactUnresolvedNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactUnresolvedNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactUnresolvedRequestTimeout creates a GetExternalcontactsContactUnresolvedRequestTimeout with default headers values
func NewGetExternalcontactsContactUnresolvedRequestTimeout() *GetExternalcontactsContactUnresolvedRequestTimeout {
	return &GetExternalcontactsContactUnresolvedRequestTimeout{}
}

/*
GetExternalcontactsContactUnresolvedRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetExternalcontactsContactUnresolvedRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact unresolved request timeout response has a 2xx status code
func (o *GetExternalcontactsContactUnresolvedRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact unresolved request timeout response has a 3xx status code
func (o *GetExternalcontactsContactUnresolvedRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact unresolved request timeout response has a 4xx status code
func (o *GetExternalcontactsContactUnresolvedRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get externalcontacts contact unresolved request timeout response has a 5xx status code
func (o *GetExternalcontactsContactUnresolvedRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact unresolved request timeout response a status code equal to that given
func (o *GetExternalcontactsContactUnresolvedRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetExternalcontactsContactUnresolvedRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/unresolved][%d] getExternalcontactsContactUnresolvedRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetExternalcontactsContactUnresolvedRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/unresolved][%d] getExternalcontactsContactUnresolvedRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetExternalcontactsContactUnresolvedRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactUnresolvedRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactUnresolvedRequestEntityTooLarge creates a GetExternalcontactsContactUnresolvedRequestEntityTooLarge with default headers values
func NewGetExternalcontactsContactUnresolvedRequestEntityTooLarge() *GetExternalcontactsContactUnresolvedRequestEntityTooLarge {
	return &GetExternalcontactsContactUnresolvedRequestEntityTooLarge{}
}

/*
GetExternalcontactsContactUnresolvedRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetExternalcontactsContactUnresolvedRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact unresolved request entity too large response has a 2xx status code
func (o *GetExternalcontactsContactUnresolvedRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact unresolved request entity too large response has a 3xx status code
func (o *GetExternalcontactsContactUnresolvedRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact unresolved request entity too large response has a 4xx status code
func (o *GetExternalcontactsContactUnresolvedRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get externalcontacts contact unresolved request entity too large response has a 5xx status code
func (o *GetExternalcontactsContactUnresolvedRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact unresolved request entity too large response a status code equal to that given
func (o *GetExternalcontactsContactUnresolvedRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetExternalcontactsContactUnresolvedRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/unresolved][%d] getExternalcontactsContactUnresolvedRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetExternalcontactsContactUnresolvedRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/unresolved][%d] getExternalcontactsContactUnresolvedRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetExternalcontactsContactUnresolvedRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactUnresolvedRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactUnresolvedUnsupportedMediaType creates a GetExternalcontactsContactUnresolvedUnsupportedMediaType with default headers values
func NewGetExternalcontactsContactUnresolvedUnsupportedMediaType() *GetExternalcontactsContactUnresolvedUnsupportedMediaType {
	return &GetExternalcontactsContactUnresolvedUnsupportedMediaType{}
}

/*
GetExternalcontactsContactUnresolvedUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetExternalcontactsContactUnresolvedUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact unresolved unsupported media type response has a 2xx status code
func (o *GetExternalcontactsContactUnresolvedUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact unresolved unsupported media type response has a 3xx status code
func (o *GetExternalcontactsContactUnresolvedUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact unresolved unsupported media type response has a 4xx status code
func (o *GetExternalcontactsContactUnresolvedUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get externalcontacts contact unresolved unsupported media type response has a 5xx status code
func (o *GetExternalcontactsContactUnresolvedUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact unresolved unsupported media type response a status code equal to that given
func (o *GetExternalcontactsContactUnresolvedUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetExternalcontactsContactUnresolvedUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/unresolved][%d] getExternalcontactsContactUnresolvedUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetExternalcontactsContactUnresolvedUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/unresolved][%d] getExternalcontactsContactUnresolvedUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetExternalcontactsContactUnresolvedUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactUnresolvedUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactUnresolvedTooManyRequests creates a GetExternalcontactsContactUnresolvedTooManyRequests with default headers values
func NewGetExternalcontactsContactUnresolvedTooManyRequests() *GetExternalcontactsContactUnresolvedTooManyRequests {
	return &GetExternalcontactsContactUnresolvedTooManyRequests{}
}

/*
GetExternalcontactsContactUnresolvedTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetExternalcontactsContactUnresolvedTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact unresolved too many requests response has a 2xx status code
func (o *GetExternalcontactsContactUnresolvedTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact unresolved too many requests response has a 3xx status code
func (o *GetExternalcontactsContactUnresolvedTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact unresolved too many requests response has a 4xx status code
func (o *GetExternalcontactsContactUnresolvedTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get externalcontacts contact unresolved too many requests response has a 5xx status code
func (o *GetExternalcontactsContactUnresolvedTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact unresolved too many requests response a status code equal to that given
func (o *GetExternalcontactsContactUnresolvedTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetExternalcontactsContactUnresolvedTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/unresolved][%d] getExternalcontactsContactUnresolvedTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetExternalcontactsContactUnresolvedTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/unresolved][%d] getExternalcontactsContactUnresolvedTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetExternalcontactsContactUnresolvedTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactUnresolvedTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactUnresolvedInternalServerError creates a GetExternalcontactsContactUnresolvedInternalServerError with default headers values
func NewGetExternalcontactsContactUnresolvedInternalServerError() *GetExternalcontactsContactUnresolvedInternalServerError {
	return &GetExternalcontactsContactUnresolvedInternalServerError{}
}

/*
GetExternalcontactsContactUnresolvedInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetExternalcontactsContactUnresolvedInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact unresolved internal server error response has a 2xx status code
func (o *GetExternalcontactsContactUnresolvedInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact unresolved internal server error response has a 3xx status code
func (o *GetExternalcontactsContactUnresolvedInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact unresolved internal server error response has a 4xx status code
func (o *GetExternalcontactsContactUnresolvedInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get externalcontacts contact unresolved internal server error response has a 5xx status code
func (o *GetExternalcontactsContactUnresolvedInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get externalcontacts contact unresolved internal server error response a status code equal to that given
func (o *GetExternalcontactsContactUnresolvedInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetExternalcontactsContactUnresolvedInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/unresolved][%d] getExternalcontactsContactUnresolvedInternalServerError  %+v", 500, o.Payload)
}

func (o *GetExternalcontactsContactUnresolvedInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/unresolved][%d] getExternalcontactsContactUnresolvedInternalServerError  %+v", 500, o.Payload)
}

func (o *GetExternalcontactsContactUnresolvedInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactUnresolvedInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactUnresolvedServiceUnavailable creates a GetExternalcontactsContactUnresolvedServiceUnavailable with default headers values
func NewGetExternalcontactsContactUnresolvedServiceUnavailable() *GetExternalcontactsContactUnresolvedServiceUnavailable {
	return &GetExternalcontactsContactUnresolvedServiceUnavailable{}
}

/*
GetExternalcontactsContactUnresolvedServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetExternalcontactsContactUnresolvedServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact unresolved service unavailable response has a 2xx status code
func (o *GetExternalcontactsContactUnresolvedServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact unresolved service unavailable response has a 3xx status code
func (o *GetExternalcontactsContactUnresolvedServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact unresolved service unavailable response has a 4xx status code
func (o *GetExternalcontactsContactUnresolvedServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get externalcontacts contact unresolved service unavailable response has a 5xx status code
func (o *GetExternalcontactsContactUnresolvedServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get externalcontacts contact unresolved service unavailable response a status code equal to that given
func (o *GetExternalcontactsContactUnresolvedServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetExternalcontactsContactUnresolvedServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/unresolved][%d] getExternalcontactsContactUnresolvedServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetExternalcontactsContactUnresolvedServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/unresolved][%d] getExternalcontactsContactUnresolvedServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetExternalcontactsContactUnresolvedServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactUnresolvedServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactUnresolvedGatewayTimeout creates a GetExternalcontactsContactUnresolvedGatewayTimeout with default headers values
func NewGetExternalcontactsContactUnresolvedGatewayTimeout() *GetExternalcontactsContactUnresolvedGatewayTimeout {
	return &GetExternalcontactsContactUnresolvedGatewayTimeout{}
}

/*
GetExternalcontactsContactUnresolvedGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetExternalcontactsContactUnresolvedGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact unresolved gateway timeout response has a 2xx status code
func (o *GetExternalcontactsContactUnresolvedGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact unresolved gateway timeout response has a 3xx status code
func (o *GetExternalcontactsContactUnresolvedGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact unresolved gateway timeout response has a 4xx status code
func (o *GetExternalcontactsContactUnresolvedGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get externalcontacts contact unresolved gateway timeout response has a 5xx status code
func (o *GetExternalcontactsContactUnresolvedGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get externalcontacts contact unresolved gateway timeout response a status code equal to that given
func (o *GetExternalcontactsContactUnresolvedGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetExternalcontactsContactUnresolvedGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/unresolved][%d] getExternalcontactsContactUnresolvedGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetExternalcontactsContactUnresolvedGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/unresolved][%d] getExternalcontactsContactUnresolvedGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetExternalcontactsContactUnresolvedGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactUnresolvedGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
