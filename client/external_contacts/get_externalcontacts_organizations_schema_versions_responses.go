// Code generated by go-swagger; DO NOT EDIT.

package external_contacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetExternalcontactsOrganizationsSchemaVersionsReader is a Reader for the GetExternalcontactsOrganizationsSchemaVersions structure.
type GetExternalcontactsOrganizationsSchemaVersionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetExternalcontactsOrganizationsSchemaVersionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetExternalcontactsOrganizationsSchemaVersionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetExternalcontactsOrganizationsSchemaVersionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetExternalcontactsOrganizationsSchemaVersionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetExternalcontactsOrganizationsSchemaVersionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetExternalcontactsOrganizationsSchemaVersionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetExternalcontactsOrganizationsSchemaVersionsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetExternalcontactsOrganizationsSchemaVersionsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetExternalcontactsOrganizationsSchemaVersionsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetExternalcontactsOrganizationsSchemaVersionsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetExternalcontactsOrganizationsSchemaVersionsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetExternalcontactsOrganizationsSchemaVersionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetExternalcontactsOrganizationsSchemaVersionsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetExternalcontactsOrganizationsSchemaVersionsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetExternalcontactsOrganizationsSchemaVersionsOK creates a GetExternalcontactsOrganizationsSchemaVersionsOK with default headers values
func NewGetExternalcontactsOrganizationsSchemaVersionsOK() *GetExternalcontactsOrganizationsSchemaVersionsOK {
	return &GetExternalcontactsOrganizationsSchemaVersionsOK{}
}

/*GetExternalcontactsOrganizationsSchemaVersionsOK handles this case with default header values.

successful operation
*/
type GetExternalcontactsOrganizationsSchemaVersionsOK struct {
	Payload *models.DataSchema
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/organizations/schemas/{schemaId}/versions][%d] getExternalcontactsOrganizationsSchemaVersionsOK  %+v", 200, o.Payload)
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsOK) GetPayload() *models.DataSchema {
	return o.Payload
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DataSchema)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsOrganizationsSchemaVersionsBadRequest creates a GetExternalcontactsOrganizationsSchemaVersionsBadRequest with default headers values
func NewGetExternalcontactsOrganizationsSchemaVersionsBadRequest() *GetExternalcontactsOrganizationsSchemaVersionsBadRequest {
	return &GetExternalcontactsOrganizationsSchemaVersionsBadRequest{}
}

/*GetExternalcontactsOrganizationsSchemaVersionsBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetExternalcontactsOrganizationsSchemaVersionsBadRequest struct {
	Payload *models.ErrorBody
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/organizations/schemas/{schemaId}/versions][%d] getExternalcontactsOrganizationsSchemaVersionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsOrganizationsSchemaVersionsUnauthorized creates a GetExternalcontactsOrganizationsSchemaVersionsUnauthorized with default headers values
func NewGetExternalcontactsOrganizationsSchemaVersionsUnauthorized() *GetExternalcontactsOrganizationsSchemaVersionsUnauthorized {
	return &GetExternalcontactsOrganizationsSchemaVersionsUnauthorized{}
}

/*GetExternalcontactsOrganizationsSchemaVersionsUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type GetExternalcontactsOrganizationsSchemaVersionsUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/organizations/schemas/{schemaId}/versions][%d] getExternalcontactsOrganizationsSchemaVersionsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsOrganizationsSchemaVersionsForbidden creates a GetExternalcontactsOrganizationsSchemaVersionsForbidden with default headers values
func NewGetExternalcontactsOrganizationsSchemaVersionsForbidden() *GetExternalcontactsOrganizationsSchemaVersionsForbidden {
	return &GetExternalcontactsOrganizationsSchemaVersionsForbidden{}
}

/*GetExternalcontactsOrganizationsSchemaVersionsForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type GetExternalcontactsOrganizationsSchemaVersionsForbidden struct {
	Payload *models.ErrorBody
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/organizations/schemas/{schemaId}/versions][%d] getExternalcontactsOrganizationsSchemaVersionsForbidden  %+v", 403, o.Payload)
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsOrganizationsSchemaVersionsNotFound creates a GetExternalcontactsOrganizationsSchemaVersionsNotFound with default headers values
func NewGetExternalcontactsOrganizationsSchemaVersionsNotFound() *GetExternalcontactsOrganizationsSchemaVersionsNotFound {
	return &GetExternalcontactsOrganizationsSchemaVersionsNotFound{}
}

/*GetExternalcontactsOrganizationsSchemaVersionsNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetExternalcontactsOrganizationsSchemaVersionsNotFound struct {
	Payload *models.ErrorBody
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/organizations/schemas/{schemaId}/versions][%d] getExternalcontactsOrganizationsSchemaVersionsNotFound  %+v", 404, o.Payload)
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsOrganizationsSchemaVersionsRequestTimeout creates a GetExternalcontactsOrganizationsSchemaVersionsRequestTimeout with default headers values
func NewGetExternalcontactsOrganizationsSchemaVersionsRequestTimeout() *GetExternalcontactsOrganizationsSchemaVersionsRequestTimeout {
	return &GetExternalcontactsOrganizationsSchemaVersionsRequestTimeout{}
}

/*GetExternalcontactsOrganizationsSchemaVersionsRequestTimeout handles this case with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetExternalcontactsOrganizationsSchemaVersionsRequestTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/organizations/schemas/{schemaId}/versions][%d] getExternalcontactsOrganizationsSchemaVersionsRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsOrganizationsSchemaVersionsRequestEntityTooLarge creates a GetExternalcontactsOrganizationsSchemaVersionsRequestEntityTooLarge with default headers values
func NewGetExternalcontactsOrganizationsSchemaVersionsRequestEntityTooLarge() *GetExternalcontactsOrganizationsSchemaVersionsRequestEntityTooLarge {
	return &GetExternalcontactsOrganizationsSchemaVersionsRequestEntityTooLarge{}
}

/*GetExternalcontactsOrganizationsSchemaVersionsRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetExternalcontactsOrganizationsSchemaVersionsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/organizations/schemas/{schemaId}/versions][%d] getExternalcontactsOrganizationsSchemaVersionsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsOrganizationsSchemaVersionsUnsupportedMediaType creates a GetExternalcontactsOrganizationsSchemaVersionsUnsupportedMediaType with default headers values
func NewGetExternalcontactsOrganizationsSchemaVersionsUnsupportedMediaType() *GetExternalcontactsOrganizationsSchemaVersionsUnsupportedMediaType {
	return &GetExternalcontactsOrganizationsSchemaVersionsUnsupportedMediaType{}
}

/*GetExternalcontactsOrganizationsSchemaVersionsUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetExternalcontactsOrganizationsSchemaVersionsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/organizations/schemas/{schemaId}/versions][%d] getExternalcontactsOrganizationsSchemaVersionsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsOrganizationsSchemaVersionsUnprocessableEntity creates a GetExternalcontactsOrganizationsSchemaVersionsUnprocessableEntity with default headers values
func NewGetExternalcontactsOrganizationsSchemaVersionsUnprocessableEntity() *GetExternalcontactsOrganizationsSchemaVersionsUnprocessableEntity {
	return &GetExternalcontactsOrganizationsSchemaVersionsUnprocessableEntity{}
}

/*GetExternalcontactsOrganizationsSchemaVersionsUnprocessableEntity handles this case with default header values.

GetExternalcontactsOrganizationsSchemaVersionsUnprocessableEntity get externalcontacts organizations schema versions unprocessable entity
*/
type GetExternalcontactsOrganizationsSchemaVersionsUnprocessableEntity struct {
	Payload *models.ErrorBody
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/organizations/schemas/{schemaId}/versions][%d] getExternalcontactsOrganizationsSchemaVersionsUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsUnprocessableEntity) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsOrganizationsSchemaVersionsTooManyRequests creates a GetExternalcontactsOrganizationsSchemaVersionsTooManyRequests with default headers values
func NewGetExternalcontactsOrganizationsSchemaVersionsTooManyRequests() *GetExternalcontactsOrganizationsSchemaVersionsTooManyRequests {
	return &GetExternalcontactsOrganizationsSchemaVersionsTooManyRequests{}
}

/*GetExternalcontactsOrganizationsSchemaVersionsTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetExternalcontactsOrganizationsSchemaVersionsTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/organizations/schemas/{schemaId}/versions][%d] getExternalcontactsOrganizationsSchemaVersionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsOrganizationsSchemaVersionsInternalServerError creates a GetExternalcontactsOrganizationsSchemaVersionsInternalServerError with default headers values
func NewGetExternalcontactsOrganizationsSchemaVersionsInternalServerError() *GetExternalcontactsOrganizationsSchemaVersionsInternalServerError {
	return &GetExternalcontactsOrganizationsSchemaVersionsInternalServerError{}
}

/*GetExternalcontactsOrganizationsSchemaVersionsInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetExternalcontactsOrganizationsSchemaVersionsInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/organizations/schemas/{schemaId}/versions][%d] getExternalcontactsOrganizationsSchemaVersionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsOrganizationsSchemaVersionsServiceUnavailable creates a GetExternalcontactsOrganizationsSchemaVersionsServiceUnavailable with default headers values
func NewGetExternalcontactsOrganizationsSchemaVersionsServiceUnavailable() *GetExternalcontactsOrganizationsSchemaVersionsServiceUnavailable {
	return &GetExternalcontactsOrganizationsSchemaVersionsServiceUnavailable{}
}

/*GetExternalcontactsOrganizationsSchemaVersionsServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetExternalcontactsOrganizationsSchemaVersionsServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/organizations/schemas/{schemaId}/versions][%d] getExternalcontactsOrganizationsSchemaVersionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsOrganizationsSchemaVersionsGatewayTimeout creates a GetExternalcontactsOrganizationsSchemaVersionsGatewayTimeout with default headers values
func NewGetExternalcontactsOrganizationsSchemaVersionsGatewayTimeout() *GetExternalcontactsOrganizationsSchemaVersionsGatewayTimeout {
	return &GetExternalcontactsOrganizationsSchemaVersionsGatewayTimeout{}
}

/*GetExternalcontactsOrganizationsSchemaVersionsGatewayTimeout handles this case with default header values.

The request timed out.
*/
type GetExternalcontactsOrganizationsSchemaVersionsGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/organizations/schemas/{schemaId}/versions][%d] getExternalcontactsOrganizationsSchemaVersionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsOrganizationsSchemaVersionsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
