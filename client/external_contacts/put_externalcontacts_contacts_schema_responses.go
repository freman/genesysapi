// Code generated by go-swagger; DO NOT EDIT.

package external_contacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutExternalcontactsContactsSchemaReader is a Reader for the PutExternalcontactsContactsSchema structure.
type PutExternalcontactsContactsSchemaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutExternalcontactsContactsSchemaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutExternalcontactsContactsSchemaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutExternalcontactsContactsSchemaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutExternalcontactsContactsSchemaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutExternalcontactsContactsSchemaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutExternalcontactsContactsSchemaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutExternalcontactsContactsSchemaRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPutExternalcontactsContactsSchemaConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutExternalcontactsContactsSchemaRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutExternalcontactsContactsSchemaUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewPutExternalcontactsContactsSchemaUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutExternalcontactsContactsSchemaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutExternalcontactsContactsSchemaInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutExternalcontactsContactsSchemaServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutExternalcontactsContactsSchemaGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutExternalcontactsContactsSchemaOK creates a PutExternalcontactsContactsSchemaOK with default headers values
func NewPutExternalcontactsContactsSchemaOK() *PutExternalcontactsContactsSchemaOK {
	return &PutExternalcontactsContactsSchemaOK{}
}

/*
PutExternalcontactsContactsSchemaOK describes a response with status code 200, with default header values.

successful operation
*/
type PutExternalcontactsContactsSchemaOK struct {
	Payload *models.DataSchema
}

// IsSuccess returns true when this put externalcontacts contacts schema o k response has a 2xx status code
func (o *PutExternalcontactsContactsSchemaOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put externalcontacts contacts schema o k response has a 3xx status code
func (o *PutExternalcontactsContactsSchemaOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contacts schema o k response has a 4xx status code
func (o *PutExternalcontactsContactsSchemaOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put externalcontacts contacts schema o k response has a 5xx status code
func (o *PutExternalcontactsContactsSchemaOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts contacts schema o k response a status code equal to that given
func (o *PutExternalcontactsContactsSchemaOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutExternalcontactsContactsSchemaOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/schemas/{schemaId}][%d] putExternalcontactsContactsSchemaOK  %+v", 200, o.Payload)
}

func (o *PutExternalcontactsContactsSchemaOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/schemas/{schemaId}][%d] putExternalcontactsContactsSchemaOK  %+v", 200, o.Payload)
}

func (o *PutExternalcontactsContactsSchemaOK) GetPayload() *models.DataSchema {
	return o.Payload
}

func (o *PutExternalcontactsContactsSchemaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DataSchema)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactsSchemaBadRequest creates a PutExternalcontactsContactsSchemaBadRequest with default headers values
func NewPutExternalcontactsContactsSchemaBadRequest() *PutExternalcontactsContactsSchemaBadRequest {
	return &PutExternalcontactsContactsSchemaBadRequest{}
}

/*
PutExternalcontactsContactsSchemaBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutExternalcontactsContactsSchemaBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contacts schema bad request response has a 2xx status code
func (o *PutExternalcontactsContactsSchemaBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contacts schema bad request response has a 3xx status code
func (o *PutExternalcontactsContactsSchemaBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contacts schema bad request response has a 4xx status code
func (o *PutExternalcontactsContactsSchemaBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts contacts schema bad request response has a 5xx status code
func (o *PutExternalcontactsContactsSchemaBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts contacts schema bad request response a status code equal to that given
func (o *PutExternalcontactsContactsSchemaBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutExternalcontactsContactsSchemaBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/schemas/{schemaId}][%d] putExternalcontactsContactsSchemaBadRequest  %+v", 400, o.Payload)
}

func (o *PutExternalcontactsContactsSchemaBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/schemas/{schemaId}][%d] putExternalcontactsContactsSchemaBadRequest  %+v", 400, o.Payload)
}

func (o *PutExternalcontactsContactsSchemaBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactsSchemaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactsSchemaUnauthorized creates a PutExternalcontactsContactsSchemaUnauthorized with default headers values
func NewPutExternalcontactsContactsSchemaUnauthorized() *PutExternalcontactsContactsSchemaUnauthorized {
	return &PutExternalcontactsContactsSchemaUnauthorized{}
}

/*
PutExternalcontactsContactsSchemaUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutExternalcontactsContactsSchemaUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contacts schema unauthorized response has a 2xx status code
func (o *PutExternalcontactsContactsSchemaUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contacts schema unauthorized response has a 3xx status code
func (o *PutExternalcontactsContactsSchemaUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contacts schema unauthorized response has a 4xx status code
func (o *PutExternalcontactsContactsSchemaUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts contacts schema unauthorized response has a 5xx status code
func (o *PutExternalcontactsContactsSchemaUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts contacts schema unauthorized response a status code equal to that given
func (o *PutExternalcontactsContactsSchemaUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutExternalcontactsContactsSchemaUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/schemas/{schemaId}][%d] putExternalcontactsContactsSchemaUnauthorized  %+v", 401, o.Payload)
}

func (o *PutExternalcontactsContactsSchemaUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/schemas/{schemaId}][%d] putExternalcontactsContactsSchemaUnauthorized  %+v", 401, o.Payload)
}

func (o *PutExternalcontactsContactsSchemaUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactsSchemaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactsSchemaForbidden creates a PutExternalcontactsContactsSchemaForbidden with default headers values
func NewPutExternalcontactsContactsSchemaForbidden() *PutExternalcontactsContactsSchemaForbidden {
	return &PutExternalcontactsContactsSchemaForbidden{}
}

/*
PutExternalcontactsContactsSchemaForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutExternalcontactsContactsSchemaForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contacts schema forbidden response has a 2xx status code
func (o *PutExternalcontactsContactsSchemaForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contacts schema forbidden response has a 3xx status code
func (o *PutExternalcontactsContactsSchemaForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contacts schema forbidden response has a 4xx status code
func (o *PutExternalcontactsContactsSchemaForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts contacts schema forbidden response has a 5xx status code
func (o *PutExternalcontactsContactsSchemaForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts contacts schema forbidden response a status code equal to that given
func (o *PutExternalcontactsContactsSchemaForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutExternalcontactsContactsSchemaForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/schemas/{schemaId}][%d] putExternalcontactsContactsSchemaForbidden  %+v", 403, o.Payload)
}

func (o *PutExternalcontactsContactsSchemaForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/schemas/{schemaId}][%d] putExternalcontactsContactsSchemaForbidden  %+v", 403, o.Payload)
}

func (o *PutExternalcontactsContactsSchemaForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactsSchemaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactsSchemaNotFound creates a PutExternalcontactsContactsSchemaNotFound with default headers values
func NewPutExternalcontactsContactsSchemaNotFound() *PutExternalcontactsContactsSchemaNotFound {
	return &PutExternalcontactsContactsSchemaNotFound{}
}

/*
PutExternalcontactsContactsSchemaNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutExternalcontactsContactsSchemaNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contacts schema not found response has a 2xx status code
func (o *PutExternalcontactsContactsSchemaNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contacts schema not found response has a 3xx status code
func (o *PutExternalcontactsContactsSchemaNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contacts schema not found response has a 4xx status code
func (o *PutExternalcontactsContactsSchemaNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts contacts schema not found response has a 5xx status code
func (o *PutExternalcontactsContactsSchemaNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts contacts schema not found response a status code equal to that given
func (o *PutExternalcontactsContactsSchemaNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutExternalcontactsContactsSchemaNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/schemas/{schemaId}][%d] putExternalcontactsContactsSchemaNotFound  %+v", 404, o.Payload)
}

func (o *PutExternalcontactsContactsSchemaNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/schemas/{schemaId}][%d] putExternalcontactsContactsSchemaNotFound  %+v", 404, o.Payload)
}

func (o *PutExternalcontactsContactsSchemaNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactsSchemaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactsSchemaRequestTimeout creates a PutExternalcontactsContactsSchemaRequestTimeout with default headers values
func NewPutExternalcontactsContactsSchemaRequestTimeout() *PutExternalcontactsContactsSchemaRequestTimeout {
	return &PutExternalcontactsContactsSchemaRequestTimeout{}
}

/*
PutExternalcontactsContactsSchemaRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutExternalcontactsContactsSchemaRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contacts schema request timeout response has a 2xx status code
func (o *PutExternalcontactsContactsSchemaRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contacts schema request timeout response has a 3xx status code
func (o *PutExternalcontactsContactsSchemaRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contacts schema request timeout response has a 4xx status code
func (o *PutExternalcontactsContactsSchemaRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts contacts schema request timeout response has a 5xx status code
func (o *PutExternalcontactsContactsSchemaRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts contacts schema request timeout response a status code equal to that given
func (o *PutExternalcontactsContactsSchemaRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutExternalcontactsContactsSchemaRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/schemas/{schemaId}][%d] putExternalcontactsContactsSchemaRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutExternalcontactsContactsSchemaRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/schemas/{schemaId}][%d] putExternalcontactsContactsSchemaRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutExternalcontactsContactsSchemaRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactsSchemaRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactsSchemaConflict creates a PutExternalcontactsContactsSchemaConflict with default headers values
func NewPutExternalcontactsContactsSchemaConflict() *PutExternalcontactsContactsSchemaConflict {
	return &PutExternalcontactsContactsSchemaConflict{}
}

/*
PutExternalcontactsContactsSchemaConflict describes a response with status code 409, with default header values.

Conflict
*/
type PutExternalcontactsContactsSchemaConflict struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contacts schema conflict response has a 2xx status code
func (o *PutExternalcontactsContactsSchemaConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contacts schema conflict response has a 3xx status code
func (o *PutExternalcontactsContactsSchemaConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contacts schema conflict response has a 4xx status code
func (o *PutExternalcontactsContactsSchemaConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts contacts schema conflict response has a 5xx status code
func (o *PutExternalcontactsContactsSchemaConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts contacts schema conflict response a status code equal to that given
func (o *PutExternalcontactsContactsSchemaConflict) IsCode(code int) bool {
	return code == 409
}

func (o *PutExternalcontactsContactsSchemaConflict) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/schemas/{schemaId}][%d] putExternalcontactsContactsSchemaConflict  %+v", 409, o.Payload)
}

func (o *PutExternalcontactsContactsSchemaConflict) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/schemas/{schemaId}][%d] putExternalcontactsContactsSchemaConflict  %+v", 409, o.Payload)
}

func (o *PutExternalcontactsContactsSchemaConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactsSchemaConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactsSchemaRequestEntityTooLarge creates a PutExternalcontactsContactsSchemaRequestEntityTooLarge with default headers values
func NewPutExternalcontactsContactsSchemaRequestEntityTooLarge() *PutExternalcontactsContactsSchemaRequestEntityTooLarge {
	return &PutExternalcontactsContactsSchemaRequestEntityTooLarge{}
}

/*
PutExternalcontactsContactsSchemaRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type PutExternalcontactsContactsSchemaRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contacts schema request entity too large response has a 2xx status code
func (o *PutExternalcontactsContactsSchemaRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contacts schema request entity too large response has a 3xx status code
func (o *PutExternalcontactsContactsSchemaRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contacts schema request entity too large response has a 4xx status code
func (o *PutExternalcontactsContactsSchemaRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts contacts schema request entity too large response has a 5xx status code
func (o *PutExternalcontactsContactsSchemaRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts contacts schema request entity too large response a status code equal to that given
func (o *PutExternalcontactsContactsSchemaRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutExternalcontactsContactsSchemaRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/schemas/{schemaId}][%d] putExternalcontactsContactsSchemaRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutExternalcontactsContactsSchemaRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/schemas/{schemaId}][%d] putExternalcontactsContactsSchemaRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutExternalcontactsContactsSchemaRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactsSchemaRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactsSchemaUnsupportedMediaType creates a PutExternalcontactsContactsSchemaUnsupportedMediaType with default headers values
func NewPutExternalcontactsContactsSchemaUnsupportedMediaType() *PutExternalcontactsContactsSchemaUnsupportedMediaType {
	return &PutExternalcontactsContactsSchemaUnsupportedMediaType{}
}

/*
PutExternalcontactsContactsSchemaUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutExternalcontactsContactsSchemaUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contacts schema unsupported media type response has a 2xx status code
func (o *PutExternalcontactsContactsSchemaUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contacts schema unsupported media type response has a 3xx status code
func (o *PutExternalcontactsContactsSchemaUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contacts schema unsupported media type response has a 4xx status code
func (o *PutExternalcontactsContactsSchemaUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts contacts schema unsupported media type response has a 5xx status code
func (o *PutExternalcontactsContactsSchemaUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts contacts schema unsupported media type response a status code equal to that given
func (o *PutExternalcontactsContactsSchemaUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutExternalcontactsContactsSchemaUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/schemas/{schemaId}][%d] putExternalcontactsContactsSchemaUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutExternalcontactsContactsSchemaUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/schemas/{schemaId}][%d] putExternalcontactsContactsSchemaUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutExternalcontactsContactsSchemaUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactsSchemaUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactsSchemaUnprocessableEntity creates a PutExternalcontactsContactsSchemaUnprocessableEntity with default headers values
func NewPutExternalcontactsContactsSchemaUnprocessableEntity() *PutExternalcontactsContactsSchemaUnprocessableEntity {
	return &PutExternalcontactsContactsSchemaUnprocessableEntity{}
}

/*
PutExternalcontactsContactsSchemaUnprocessableEntity describes a response with status code 422, with default header values.

PutExternalcontactsContactsSchemaUnprocessableEntity put externalcontacts contacts schema unprocessable entity
*/
type PutExternalcontactsContactsSchemaUnprocessableEntity struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contacts schema unprocessable entity response has a 2xx status code
func (o *PutExternalcontactsContactsSchemaUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contacts schema unprocessable entity response has a 3xx status code
func (o *PutExternalcontactsContactsSchemaUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contacts schema unprocessable entity response has a 4xx status code
func (o *PutExternalcontactsContactsSchemaUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts contacts schema unprocessable entity response has a 5xx status code
func (o *PutExternalcontactsContactsSchemaUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts contacts schema unprocessable entity response a status code equal to that given
func (o *PutExternalcontactsContactsSchemaUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

func (o *PutExternalcontactsContactsSchemaUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/schemas/{schemaId}][%d] putExternalcontactsContactsSchemaUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PutExternalcontactsContactsSchemaUnprocessableEntity) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/schemas/{schemaId}][%d] putExternalcontactsContactsSchemaUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PutExternalcontactsContactsSchemaUnprocessableEntity) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactsSchemaUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactsSchemaTooManyRequests creates a PutExternalcontactsContactsSchemaTooManyRequests with default headers values
func NewPutExternalcontactsContactsSchemaTooManyRequests() *PutExternalcontactsContactsSchemaTooManyRequests {
	return &PutExternalcontactsContactsSchemaTooManyRequests{}
}

/*
PutExternalcontactsContactsSchemaTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutExternalcontactsContactsSchemaTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contacts schema too many requests response has a 2xx status code
func (o *PutExternalcontactsContactsSchemaTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contacts schema too many requests response has a 3xx status code
func (o *PutExternalcontactsContactsSchemaTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contacts schema too many requests response has a 4xx status code
func (o *PutExternalcontactsContactsSchemaTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts contacts schema too many requests response has a 5xx status code
func (o *PutExternalcontactsContactsSchemaTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts contacts schema too many requests response a status code equal to that given
func (o *PutExternalcontactsContactsSchemaTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutExternalcontactsContactsSchemaTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/schemas/{schemaId}][%d] putExternalcontactsContactsSchemaTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutExternalcontactsContactsSchemaTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/schemas/{schemaId}][%d] putExternalcontactsContactsSchemaTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutExternalcontactsContactsSchemaTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactsSchemaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactsSchemaInternalServerError creates a PutExternalcontactsContactsSchemaInternalServerError with default headers values
func NewPutExternalcontactsContactsSchemaInternalServerError() *PutExternalcontactsContactsSchemaInternalServerError {
	return &PutExternalcontactsContactsSchemaInternalServerError{}
}

/*
PutExternalcontactsContactsSchemaInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutExternalcontactsContactsSchemaInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contacts schema internal server error response has a 2xx status code
func (o *PutExternalcontactsContactsSchemaInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contacts schema internal server error response has a 3xx status code
func (o *PutExternalcontactsContactsSchemaInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contacts schema internal server error response has a 4xx status code
func (o *PutExternalcontactsContactsSchemaInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put externalcontacts contacts schema internal server error response has a 5xx status code
func (o *PutExternalcontactsContactsSchemaInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put externalcontacts contacts schema internal server error response a status code equal to that given
func (o *PutExternalcontactsContactsSchemaInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutExternalcontactsContactsSchemaInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/schemas/{schemaId}][%d] putExternalcontactsContactsSchemaInternalServerError  %+v", 500, o.Payload)
}

func (o *PutExternalcontactsContactsSchemaInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/schemas/{schemaId}][%d] putExternalcontactsContactsSchemaInternalServerError  %+v", 500, o.Payload)
}

func (o *PutExternalcontactsContactsSchemaInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactsSchemaInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactsSchemaServiceUnavailable creates a PutExternalcontactsContactsSchemaServiceUnavailable with default headers values
func NewPutExternalcontactsContactsSchemaServiceUnavailable() *PutExternalcontactsContactsSchemaServiceUnavailable {
	return &PutExternalcontactsContactsSchemaServiceUnavailable{}
}

/*
PutExternalcontactsContactsSchemaServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutExternalcontactsContactsSchemaServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contacts schema service unavailable response has a 2xx status code
func (o *PutExternalcontactsContactsSchemaServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contacts schema service unavailable response has a 3xx status code
func (o *PutExternalcontactsContactsSchemaServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contacts schema service unavailable response has a 4xx status code
func (o *PutExternalcontactsContactsSchemaServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put externalcontacts contacts schema service unavailable response has a 5xx status code
func (o *PutExternalcontactsContactsSchemaServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put externalcontacts contacts schema service unavailable response a status code equal to that given
func (o *PutExternalcontactsContactsSchemaServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutExternalcontactsContactsSchemaServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/schemas/{schemaId}][%d] putExternalcontactsContactsSchemaServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutExternalcontactsContactsSchemaServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/schemas/{schemaId}][%d] putExternalcontactsContactsSchemaServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutExternalcontactsContactsSchemaServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactsSchemaServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactsSchemaGatewayTimeout creates a PutExternalcontactsContactsSchemaGatewayTimeout with default headers values
func NewPutExternalcontactsContactsSchemaGatewayTimeout() *PutExternalcontactsContactsSchemaGatewayTimeout {
	return &PutExternalcontactsContactsSchemaGatewayTimeout{}
}

/*
PutExternalcontactsContactsSchemaGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutExternalcontactsContactsSchemaGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contacts schema gateway timeout response has a 2xx status code
func (o *PutExternalcontactsContactsSchemaGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contacts schema gateway timeout response has a 3xx status code
func (o *PutExternalcontactsContactsSchemaGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contacts schema gateway timeout response has a 4xx status code
func (o *PutExternalcontactsContactsSchemaGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put externalcontacts contacts schema gateway timeout response has a 5xx status code
func (o *PutExternalcontactsContactsSchemaGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put externalcontacts contacts schema gateway timeout response a status code equal to that given
func (o *PutExternalcontactsContactsSchemaGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutExternalcontactsContactsSchemaGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/schemas/{schemaId}][%d] putExternalcontactsContactsSchemaGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutExternalcontactsContactsSchemaGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/schemas/{schemaId}][%d] putExternalcontactsContactsSchemaGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutExternalcontactsContactsSchemaGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactsSchemaGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
