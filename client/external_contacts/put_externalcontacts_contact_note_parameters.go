// Code generated by go-swagger; DO NOT EDIT.

package external_contacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// NewPutExternalcontactsContactNoteParams creates a new PutExternalcontactsContactNoteParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPutExternalcontactsContactNoteParams() *PutExternalcontactsContactNoteParams {
	return &PutExternalcontactsContactNoteParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPutExternalcontactsContactNoteParamsWithTimeout creates a new PutExternalcontactsContactNoteParams object
// with the ability to set a timeout on a request.
func NewPutExternalcontactsContactNoteParamsWithTimeout(timeout time.Duration) *PutExternalcontactsContactNoteParams {
	return &PutExternalcontactsContactNoteParams{
		timeout: timeout,
	}
}

// NewPutExternalcontactsContactNoteParamsWithContext creates a new PutExternalcontactsContactNoteParams object
// with the ability to set a context for a request.
func NewPutExternalcontactsContactNoteParamsWithContext(ctx context.Context) *PutExternalcontactsContactNoteParams {
	return &PutExternalcontactsContactNoteParams{
		Context: ctx,
	}
}

// NewPutExternalcontactsContactNoteParamsWithHTTPClient creates a new PutExternalcontactsContactNoteParams object
// with the ability to set a custom HTTPClient for a request.
func NewPutExternalcontactsContactNoteParamsWithHTTPClient(client *http.Client) *PutExternalcontactsContactNoteParams {
	return &PutExternalcontactsContactNoteParams{
		HTTPClient: client,
	}
}

/*
PutExternalcontactsContactNoteParams contains all the parameters to send to the API endpoint

	for the put externalcontacts contact note operation.

	Typically these are written to a http.Request.
*/
type PutExternalcontactsContactNoteParams struct {

	/* Body.

	   Note
	*/
	Body *models.Note

	/* ContactID.

	   ExternalContact Id
	*/
	ContactID string

	/* NoteID.

	   Note Id
	*/
	NoteID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the put externalcontacts contact note params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutExternalcontactsContactNoteParams) WithDefaults() *PutExternalcontactsContactNoteParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the put externalcontacts contact note params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutExternalcontactsContactNoteParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the put externalcontacts contact note params
func (o *PutExternalcontactsContactNoteParams) WithTimeout(timeout time.Duration) *PutExternalcontactsContactNoteParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put externalcontacts contact note params
func (o *PutExternalcontactsContactNoteParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put externalcontacts contact note params
func (o *PutExternalcontactsContactNoteParams) WithContext(ctx context.Context) *PutExternalcontactsContactNoteParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put externalcontacts contact note params
func (o *PutExternalcontactsContactNoteParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put externalcontacts contact note params
func (o *PutExternalcontactsContactNoteParams) WithHTTPClient(client *http.Client) *PutExternalcontactsContactNoteParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put externalcontacts contact note params
func (o *PutExternalcontactsContactNoteParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the put externalcontacts contact note params
func (o *PutExternalcontactsContactNoteParams) WithBody(body *models.Note) *PutExternalcontactsContactNoteParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the put externalcontacts contact note params
func (o *PutExternalcontactsContactNoteParams) SetBody(body *models.Note) {
	o.Body = body
}

// WithContactID adds the contactID to the put externalcontacts contact note params
func (o *PutExternalcontactsContactNoteParams) WithContactID(contactID string) *PutExternalcontactsContactNoteParams {
	o.SetContactID(contactID)
	return o
}

// SetContactID adds the contactId to the put externalcontacts contact note params
func (o *PutExternalcontactsContactNoteParams) SetContactID(contactID string) {
	o.ContactID = contactID
}

// WithNoteID adds the noteID to the put externalcontacts contact note params
func (o *PutExternalcontactsContactNoteParams) WithNoteID(noteID string) *PutExternalcontactsContactNoteParams {
	o.SetNoteID(noteID)
	return o
}

// SetNoteID adds the noteId to the put externalcontacts contact note params
func (o *PutExternalcontactsContactNoteParams) SetNoteID(noteID string) {
	o.NoteID = noteID
}

// WriteToRequest writes these params to a swagger request
func (o *PutExternalcontactsContactNoteParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param contactId
	if err := r.SetPathParam("contactId", o.ContactID); err != nil {
		return err
	}

	// path param noteId
	if err := r.SetPathParam("noteId", o.NoteID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
