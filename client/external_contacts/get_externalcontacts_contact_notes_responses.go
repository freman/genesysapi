// Code generated by go-swagger; DO NOT EDIT.

package external_contacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetExternalcontactsContactNotesReader is a Reader for the GetExternalcontactsContactNotes structure.
type GetExternalcontactsContactNotesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetExternalcontactsContactNotesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetExternalcontactsContactNotesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetExternalcontactsContactNotesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetExternalcontactsContactNotesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetExternalcontactsContactNotesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetExternalcontactsContactNotesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetExternalcontactsContactNotesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetExternalcontactsContactNotesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetExternalcontactsContactNotesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetExternalcontactsContactNotesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetExternalcontactsContactNotesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetExternalcontactsContactNotesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetExternalcontactsContactNotesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetExternalcontactsContactNotesOK creates a GetExternalcontactsContactNotesOK with default headers values
func NewGetExternalcontactsContactNotesOK() *GetExternalcontactsContactNotesOK {
	return &GetExternalcontactsContactNotesOK{}
}

/*
GetExternalcontactsContactNotesOK describes a response with status code 200, with default header values.

successful operation
*/
type GetExternalcontactsContactNotesOK struct {
	Payload *models.NoteListing
}

// IsSuccess returns true when this get externalcontacts contact notes o k response has a 2xx status code
func (o *GetExternalcontactsContactNotesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get externalcontacts contact notes o k response has a 3xx status code
func (o *GetExternalcontactsContactNotesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact notes o k response has a 4xx status code
func (o *GetExternalcontactsContactNotesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get externalcontacts contact notes o k response has a 5xx status code
func (o *GetExternalcontactsContactNotesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact notes o k response a status code equal to that given
func (o *GetExternalcontactsContactNotesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetExternalcontactsContactNotesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes][%d] getExternalcontactsContactNotesOK  %+v", 200, o.Payload)
}

func (o *GetExternalcontactsContactNotesOK) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes][%d] getExternalcontactsContactNotesOK  %+v", 200, o.Payload)
}

func (o *GetExternalcontactsContactNotesOK) GetPayload() *models.NoteListing {
	return o.Payload
}

func (o *GetExternalcontactsContactNotesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NoteListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactNotesBadRequest creates a GetExternalcontactsContactNotesBadRequest with default headers values
func NewGetExternalcontactsContactNotesBadRequest() *GetExternalcontactsContactNotesBadRequest {
	return &GetExternalcontactsContactNotesBadRequest{}
}

/*
GetExternalcontactsContactNotesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetExternalcontactsContactNotesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact notes bad request response has a 2xx status code
func (o *GetExternalcontactsContactNotesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact notes bad request response has a 3xx status code
func (o *GetExternalcontactsContactNotesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact notes bad request response has a 4xx status code
func (o *GetExternalcontactsContactNotesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get externalcontacts contact notes bad request response has a 5xx status code
func (o *GetExternalcontactsContactNotesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact notes bad request response a status code equal to that given
func (o *GetExternalcontactsContactNotesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetExternalcontactsContactNotesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes][%d] getExternalcontactsContactNotesBadRequest  %+v", 400, o.Payload)
}

func (o *GetExternalcontactsContactNotesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes][%d] getExternalcontactsContactNotesBadRequest  %+v", 400, o.Payload)
}

func (o *GetExternalcontactsContactNotesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactNotesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactNotesUnauthorized creates a GetExternalcontactsContactNotesUnauthorized with default headers values
func NewGetExternalcontactsContactNotesUnauthorized() *GetExternalcontactsContactNotesUnauthorized {
	return &GetExternalcontactsContactNotesUnauthorized{}
}

/*
GetExternalcontactsContactNotesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetExternalcontactsContactNotesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact notes unauthorized response has a 2xx status code
func (o *GetExternalcontactsContactNotesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact notes unauthorized response has a 3xx status code
func (o *GetExternalcontactsContactNotesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact notes unauthorized response has a 4xx status code
func (o *GetExternalcontactsContactNotesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get externalcontacts contact notes unauthorized response has a 5xx status code
func (o *GetExternalcontactsContactNotesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact notes unauthorized response a status code equal to that given
func (o *GetExternalcontactsContactNotesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetExternalcontactsContactNotesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes][%d] getExternalcontactsContactNotesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetExternalcontactsContactNotesUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes][%d] getExternalcontactsContactNotesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetExternalcontactsContactNotesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactNotesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactNotesForbidden creates a GetExternalcontactsContactNotesForbidden with default headers values
func NewGetExternalcontactsContactNotesForbidden() *GetExternalcontactsContactNotesForbidden {
	return &GetExternalcontactsContactNotesForbidden{}
}

/*
GetExternalcontactsContactNotesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetExternalcontactsContactNotesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact notes forbidden response has a 2xx status code
func (o *GetExternalcontactsContactNotesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact notes forbidden response has a 3xx status code
func (o *GetExternalcontactsContactNotesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact notes forbidden response has a 4xx status code
func (o *GetExternalcontactsContactNotesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get externalcontacts contact notes forbidden response has a 5xx status code
func (o *GetExternalcontactsContactNotesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact notes forbidden response a status code equal to that given
func (o *GetExternalcontactsContactNotesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetExternalcontactsContactNotesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes][%d] getExternalcontactsContactNotesForbidden  %+v", 403, o.Payload)
}

func (o *GetExternalcontactsContactNotesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes][%d] getExternalcontactsContactNotesForbidden  %+v", 403, o.Payload)
}

func (o *GetExternalcontactsContactNotesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactNotesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactNotesNotFound creates a GetExternalcontactsContactNotesNotFound with default headers values
func NewGetExternalcontactsContactNotesNotFound() *GetExternalcontactsContactNotesNotFound {
	return &GetExternalcontactsContactNotesNotFound{}
}

/*
GetExternalcontactsContactNotesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetExternalcontactsContactNotesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact notes not found response has a 2xx status code
func (o *GetExternalcontactsContactNotesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact notes not found response has a 3xx status code
func (o *GetExternalcontactsContactNotesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact notes not found response has a 4xx status code
func (o *GetExternalcontactsContactNotesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get externalcontacts contact notes not found response has a 5xx status code
func (o *GetExternalcontactsContactNotesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact notes not found response a status code equal to that given
func (o *GetExternalcontactsContactNotesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetExternalcontactsContactNotesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes][%d] getExternalcontactsContactNotesNotFound  %+v", 404, o.Payload)
}

func (o *GetExternalcontactsContactNotesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes][%d] getExternalcontactsContactNotesNotFound  %+v", 404, o.Payload)
}

func (o *GetExternalcontactsContactNotesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactNotesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactNotesRequestTimeout creates a GetExternalcontactsContactNotesRequestTimeout with default headers values
func NewGetExternalcontactsContactNotesRequestTimeout() *GetExternalcontactsContactNotesRequestTimeout {
	return &GetExternalcontactsContactNotesRequestTimeout{}
}

/*
GetExternalcontactsContactNotesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetExternalcontactsContactNotesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact notes request timeout response has a 2xx status code
func (o *GetExternalcontactsContactNotesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact notes request timeout response has a 3xx status code
func (o *GetExternalcontactsContactNotesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact notes request timeout response has a 4xx status code
func (o *GetExternalcontactsContactNotesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get externalcontacts contact notes request timeout response has a 5xx status code
func (o *GetExternalcontactsContactNotesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact notes request timeout response a status code equal to that given
func (o *GetExternalcontactsContactNotesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetExternalcontactsContactNotesRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes][%d] getExternalcontactsContactNotesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetExternalcontactsContactNotesRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes][%d] getExternalcontactsContactNotesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetExternalcontactsContactNotesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactNotesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactNotesRequestEntityTooLarge creates a GetExternalcontactsContactNotesRequestEntityTooLarge with default headers values
func NewGetExternalcontactsContactNotesRequestEntityTooLarge() *GetExternalcontactsContactNotesRequestEntityTooLarge {
	return &GetExternalcontactsContactNotesRequestEntityTooLarge{}
}

/*
GetExternalcontactsContactNotesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetExternalcontactsContactNotesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact notes request entity too large response has a 2xx status code
func (o *GetExternalcontactsContactNotesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact notes request entity too large response has a 3xx status code
func (o *GetExternalcontactsContactNotesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact notes request entity too large response has a 4xx status code
func (o *GetExternalcontactsContactNotesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get externalcontacts contact notes request entity too large response has a 5xx status code
func (o *GetExternalcontactsContactNotesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact notes request entity too large response a status code equal to that given
func (o *GetExternalcontactsContactNotesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetExternalcontactsContactNotesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes][%d] getExternalcontactsContactNotesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetExternalcontactsContactNotesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes][%d] getExternalcontactsContactNotesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetExternalcontactsContactNotesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactNotesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactNotesUnsupportedMediaType creates a GetExternalcontactsContactNotesUnsupportedMediaType with default headers values
func NewGetExternalcontactsContactNotesUnsupportedMediaType() *GetExternalcontactsContactNotesUnsupportedMediaType {
	return &GetExternalcontactsContactNotesUnsupportedMediaType{}
}

/*
GetExternalcontactsContactNotesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetExternalcontactsContactNotesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact notes unsupported media type response has a 2xx status code
func (o *GetExternalcontactsContactNotesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact notes unsupported media type response has a 3xx status code
func (o *GetExternalcontactsContactNotesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact notes unsupported media type response has a 4xx status code
func (o *GetExternalcontactsContactNotesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get externalcontacts contact notes unsupported media type response has a 5xx status code
func (o *GetExternalcontactsContactNotesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact notes unsupported media type response a status code equal to that given
func (o *GetExternalcontactsContactNotesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetExternalcontactsContactNotesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes][%d] getExternalcontactsContactNotesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetExternalcontactsContactNotesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes][%d] getExternalcontactsContactNotesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetExternalcontactsContactNotesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactNotesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactNotesTooManyRequests creates a GetExternalcontactsContactNotesTooManyRequests with default headers values
func NewGetExternalcontactsContactNotesTooManyRequests() *GetExternalcontactsContactNotesTooManyRequests {
	return &GetExternalcontactsContactNotesTooManyRequests{}
}

/*
GetExternalcontactsContactNotesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetExternalcontactsContactNotesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact notes too many requests response has a 2xx status code
func (o *GetExternalcontactsContactNotesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact notes too many requests response has a 3xx status code
func (o *GetExternalcontactsContactNotesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact notes too many requests response has a 4xx status code
func (o *GetExternalcontactsContactNotesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get externalcontacts contact notes too many requests response has a 5xx status code
func (o *GetExternalcontactsContactNotesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact notes too many requests response a status code equal to that given
func (o *GetExternalcontactsContactNotesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetExternalcontactsContactNotesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes][%d] getExternalcontactsContactNotesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetExternalcontactsContactNotesTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes][%d] getExternalcontactsContactNotesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetExternalcontactsContactNotesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactNotesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactNotesInternalServerError creates a GetExternalcontactsContactNotesInternalServerError with default headers values
func NewGetExternalcontactsContactNotesInternalServerError() *GetExternalcontactsContactNotesInternalServerError {
	return &GetExternalcontactsContactNotesInternalServerError{}
}

/*
GetExternalcontactsContactNotesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetExternalcontactsContactNotesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact notes internal server error response has a 2xx status code
func (o *GetExternalcontactsContactNotesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact notes internal server error response has a 3xx status code
func (o *GetExternalcontactsContactNotesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact notes internal server error response has a 4xx status code
func (o *GetExternalcontactsContactNotesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get externalcontacts contact notes internal server error response has a 5xx status code
func (o *GetExternalcontactsContactNotesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get externalcontacts contact notes internal server error response a status code equal to that given
func (o *GetExternalcontactsContactNotesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetExternalcontactsContactNotesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes][%d] getExternalcontactsContactNotesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetExternalcontactsContactNotesInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes][%d] getExternalcontactsContactNotesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetExternalcontactsContactNotesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactNotesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactNotesServiceUnavailable creates a GetExternalcontactsContactNotesServiceUnavailable with default headers values
func NewGetExternalcontactsContactNotesServiceUnavailable() *GetExternalcontactsContactNotesServiceUnavailable {
	return &GetExternalcontactsContactNotesServiceUnavailable{}
}

/*
GetExternalcontactsContactNotesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetExternalcontactsContactNotesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact notes service unavailable response has a 2xx status code
func (o *GetExternalcontactsContactNotesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact notes service unavailable response has a 3xx status code
func (o *GetExternalcontactsContactNotesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact notes service unavailable response has a 4xx status code
func (o *GetExternalcontactsContactNotesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get externalcontacts contact notes service unavailable response has a 5xx status code
func (o *GetExternalcontactsContactNotesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get externalcontacts contact notes service unavailable response a status code equal to that given
func (o *GetExternalcontactsContactNotesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetExternalcontactsContactNotesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes][%d] getExternalcontactsContactNotesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetExternalcontactsContactNotesServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes][%d] getExternalcontactsContactNotesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetExternalcontactsContactNotesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactNotesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactNotesGatewayTimeout creates a GetExternalcontactsContactNotesGatewayTimeout with default headers values
func NewGetExternalcontactsContactNotesGatewayTimeout() *GetExternalcontactsContactNotesGatewayTimeout {
	return &GetExternalcontactsContactNotesGatewayTimeout{}
}

/*
GetExternalcontactsContactNotesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetExternalcontactsContactNotesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact notes gateway timeout response has a 2xx status code
func (o *GetExternalcontactsContactNotesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact notes gateway timeout response has a 3xx status code
func (o *GetExternalcontactsContactNotesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact notes gateway timeout response has a 4xx status code
func (o *GetExternalcontactsContactNotesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get externalcontacts contact notes gateway timeout response has a 5xx status code
func (o *GetExternalcontactsContactNotesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get externalcontacts contact notes gateway timeout response a status code equal to that given
func (o *GetExternalcontactsContactNotesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetExternalcontactsContactNotesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes][%d] getExternalcontactsContactNotesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetExternalcontactsContactNotesGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes][%d] getExternalcontactsContactNotesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetExternalcontactsContactNotesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactNotesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
