// Code generated by go-swagger; DO NOT EDIT.

package external_contacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetExternalcontactsContactReader is a Reader for the GetExternalcontactsContact structure.
type GetExternalcontactsContactReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetExternalcontactsContactReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetExternalcontactsContactOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetExternalcontactsContactBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetExternalcontactsContactUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetExternalcontactsContactForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetExternalcontactsContactNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetExternalcontactsContactRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetExternalcontactsContactRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetExternalcontactsContactUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetExternalcontactsContactTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetExternalcontactsContactInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetExternalcontactsContactServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetExternalcontactsContactGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetExternalcontactsContactOK creates a GetExternalcontactsContactOK with default headers values
func NewGetExternalcontactsContactOK() *GetExternalcontactsContactOK {
	return &GetExternalcontactsContactOK{}
}

/*
GetExternalcontactsContactOK describes a response with status code 200, with default header values.

successful operation
*/
type GetExternalcontactsContactOK struct {
	Payload *models.ExternalContact
}

// IsSuccess returns true when this get externalcontacts contact o k response has a 2xx status code
func (o *GetExternalcontactsContactOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get externalcontacts contact o k response has a 3xx status code
func (o *GetExternalcontactsContactOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact o k response has a 4xx status code
func (o *GetExternalcontactsContactOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get externalcontacts contact o k response has a 5xx status code
func (o *GetExternalcontactsContactOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact o k response a status code equal to that given
func (o *GetExternalcontactsContactOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetExternalcontactsContactOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}][%d] getExternalcontactsContactOK  %+v", 200, o.Payload)
}

func (o *GetExternalcontactsContactOK) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}][%d] getExternalcontactsContactOK  %+v", 200, o.Payload)
}

func (o *GetExternalcontactsContactOK) GetPayload() *models.ExternalContact {
	return o.Payload
}

func (o *GetExternalcontactsContactOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExternalContact)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactBadRequest creates a GetExternalcontactsContactBadRequest with default headers values
func NewGetExternalcontactsContactBadRequest() *GetExternalcontactsContactBadRequest {
	return &GetExternalcontactsContactBadRequest{}
}

/*
GetExternalcontactsContactBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetExternalcontactsContactBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact bad request response has a 2xx status code
func (o *GetExternalcontactsContactBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact bad request response has a 3xx status code
func (o *GetExternalcontactsContactBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact bad request response has a 4xx status code
func (o *GetExternalcontactsContactBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get externalcontacts contact bad request response has a 5xx status code
func (o *GetExternalcontactsContactBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact bad request response a status code equal to that given
func (o *GetExternalcontactsContactBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetExternalcontactsContactBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}][%d] getExternalcontactsContactBadRequest  %+v", 400, o.Payload)
}

func (o *GetExternalcontactsContactBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}][%d] getExternalcontactsContactBadRequest  %+v", 400, o.Payload)
}

func (o *GetExternalcontactsContactBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactUnauthorized creates a GetExternalcontactsContactUnauthorized with default headers values
func NewGetExternalcontactsContactUnauthorized() *GetExternalcontactsContactUnauthorized {
	return &GetExternalcontactsContactUnauthorized{}
}

/*
GetExternalcontactsContactUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetExternalcontactsContactUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact unauthorized response has a 2xx status code
func (o *GetExternalcontactsContactUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact unauthorized response has a 3xx status code
func (o *GetExternalcontactsContactUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact unauthorized response has a 4xx status code
func (o *GetExternalcontactsContactUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get externalcontacts contact unauthorized response has a 5xx status code
func (o *GetExternalcontactsContactUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact unauthorized response a status code equal to that given
func (o *GetExternalcontactsContactUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetExternalcontactsContactUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}][%d] getExternalcontactsContactUnauthorized  %+v", 401, o.Payload)
}

func (o *GetExternalcontactsContactUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}][%d] getExternalcontactsContactUnauthorized  %+v", 401, o.Payload)
}

func (o *GetExternalcontactsContactUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactForbidden creates a GetExternalcontactsContactForbidden with default headers values
func NewGetExternalcontactsContactForbidden() *GetExternalcontactsContactForbidden {
	return &GetExternalcontactsContactForbidden{}
}

/*
GetExternalcontactsContactForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetExternalcontactsContactForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact forbidden response has a 2xx status code
func (o *GetExternalcontactsContactForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact forbidden response has a 3xx status code
func (o *GetExternalcontactsContactForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact forbidden response has a 4xx status code
func (o *GetExternalcontactsContactForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get externalcontacts contact forbidden response has a 5xx status code
func (o *GetExternalcontactsContactForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact forbidden response a status code equal to that given
func (o *GetExternalcontactsContactForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetExternalcontactsContactForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}][%d] getExternalcontactsContactForbidden  %+v", 403, o.Payload)
}

func (o *GetExternalcontactsContactForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}][%d] getExternalcontactsContactForbidden  %+v", 403, o.Payload)
}

func (o *GetExternalcontactsContactForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactNotFound creates a GetExternalcontactsContactNotFound with default headers values
func NewGetExternalcontactsContactNotFound() *GetExternalcontactsContactNotFound {
	return &GetExternalcontactsContactNotFound{}
}

/*
GetExternalcontactsContactNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetExternalcontactsContactNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact not found response has a 2xx status code
func (o *GetExternalcontactsContactNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact not found response has a 3xx status code
func (o *GetExternalcontactsContactNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact not found response has a 4xx status code
func (o *GetExternalcontactsContactNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get externalcontacts contact not found response has a 5xx status code
func (o *GetExternalcontactsContactNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact not found response a status code equal to that given
func (o *GetExternalcontactsContactNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetExternalcontactsContactNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}][%d] getExternalcontactsContactNotFound  %+v", 404, o.Payload)
}

func (o *GetExternalcontactsContactNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}][%d] getExternalcontactsContactNotFound  %+v", 404, o.Payload)
}

func (o *GetExternalcontactsContactNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactRequestTimeout creates a GetExternalcontactsContactRequestTimeout with default headers values
func NewGetExternalcontactsContactRequestTimeout() *GetExternalcontactsContactRequestTimeout {
	return &GetExternalcontactsContactRequestTimeout{}
}

/*
GetExternalcontactsContactRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetExternalcontactsContactRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact request timeout response has a 2xx status code
func (o *GetExternalcontactsContactRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact request timeout response has a 3xx status code
func (o *GetExternalcontactsContactRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact request timeout response has a 4xx status code
func (o *GetExternalcontactsContactRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get externalcontacts contact request timeout response has a 5xx status code
func (o *GetExternalcontactsContactRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact request timeout response a status code equal to that given
func (o *GetExternalcontactsContactRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetExternalcontactsContactRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}][%d] getExternalcontactsContactRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetExternalcontactsContactRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}][%d] getExternalcontactsContactRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetExternalcontactsContactRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactRequestEntityTooLarge creates a GetExternalcontactsContactRequestEntityTooLarge with default headers values
func NewGetExternalcontactsContactRequestEntityTooLarge() *GetExternalcontactsContactRequestEntityTooLarge {
	return &GetExternalcontactsContactRequestEntityTooLarge{}
}

/*
GetExternalcontactsContactRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetExternalcontactsContactRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact request entity too large response has a 2xx status code
func (o *GetExternalcontactsContactRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact request entity too large response has a 3xx status code
func (o *GetExternalcontactsContactRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact request entity too large response has a 4xx status code
func (o *GetExternalcontactsContactRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get externalcontacts contact request entity too large response has a 5xx status code
func (o *GetExternalcontactsContactRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact request entity too large response a status code equal to that given
func (o *GetExternalcontactsContactRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetExternalcontactsContactRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}][%d] getExternalcontactsContactRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetExternalcontactsContactRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}][%d] getExternalcontactsContactRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetExternalcontactsContactRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactUnsupportedMediaType creates a GetExternalcontactsContactUnsupportedMediaType with default headers values
func NewGetExternalcontactsContactUnsupportedMediaType() *GetExternalcontactsContactUnsupportedMediaType {
	return &GetExternalcontactsContactUnsupportedMediaType{}
}

/*
GetExternalcontactsContactUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetExternalcontactsContactUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact unsupported media type response has a 2xx status code
func (o *GetExternalcontactsContactUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact unsupported media type response has a 3xx status code
func (o *GetExternalcontactsContactUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact unsupported media type response has a 4xx status code
func (o *GetExternalcontactsContactUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get externalcontacts contact unsupported media type response has a 5xx status code
func (o *GetExternalcontactsContactUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact unsupported media type response a status code equal to that given
func (o *GetExternalcontactsContactUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetExternalcontactsContactUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}][%d] getExternalcontactsContactUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetExternalcontactsContactUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}][%d] getExternalcontactsContactUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetExternalcontactsContactUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactTooManyRequests creates a GetExternalcontactsContactTooManyRequests with default headers values
func NewGetExternalcontactsContactTooManyRequests() *GetExternalcontactsContactTooManyRequests {
	return &GetExternalcontactsContactTooManyRequests{}
}

/*
GetExternalcontactsContactTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetExternalcontactsContactTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact too many requests response has a 2xx status code
func (o *GetExternalcontactsContactTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact too many requests response has a 3xx status code
func (o *GetExternalcontactsContactTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact too many requests response has a 4xx status code
func (o *GetExternalcontactsContactTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get externalcontacts contact too many requests response has a 5xx status code
func (o *GetExternalcontactsContactTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact too many requests response a status code equal to that given
func (o *GetExternalcontactsContactTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetExternalcontactsContactTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}][%d] getExternalcontactsContactTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetExternalcontactsContactTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}][%d] getExternalcontactsContactTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetExternalcontactsContactTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactInternalServerError creates a GetExternalcontactsContactInternalServerError with default headers values
func NewGetExternalcontactsContactInternalServerError() *GetExternalcontactsContactInternalServerError {
	return &GetExternalcontactsContactInternalServerError{}
}

/*
GetExternalcontactsContactInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetExternalcontactsContactInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact internal server error response has a 2xx status code
func (o *GetExternalcontactsContactInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact internal server error response has a 3xx status code
func (o *GetExternalcontactsContactInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact internal server error response has a 4xx status code
func (o *GetExternalcontactsContactInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get externalcontacts contact internal server error response has a 5xx status code
func (o *GetExternalcontactsContactInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get externalcontacts contact internal server error response a status code equal to that given
func (o *GetExternalcontactsContactInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetExternalcontactsContactInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}][%d] getExternalcontactsContactInternalServerError  %+v", 500, o.Payload)
}

func (o *GetExternalcontactsContactInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}][%d] getExternalcontactsContactInternalServerError  %+v", 500, o.Payload)
}

func (o *GetExternalcontactsContactInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactServiceUnavailable creates a GetExternalcontactsContactServiceUnavailable with default headers values
func NewGetExternalcontactsContactServiceUnavailable() *GetExternalcontactsContactServiceUnavailable {
	return &GetExternalcontactsContactServiceUnavailable{}
}

/*
GetExternalcontactsContactServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetExternalcontactsContactServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact service unavailable response has a 2xx status code
func (o *GetExternalcontactsContactServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact service unavailable response has a 3xx status code
func (o *GetExternalcontactsContactServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact service unavailable response has a 4xx status code
func (o *GetExternalcontactsContactServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get externalcontacts contact service unavailable response has a 5xx status code
func (o *GetExternalcontactsContactServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get externalcontacts contact service unavailable response a status code equal to that given
func (o *GetExternalcontactsContactServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetExternalcontactsContactServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}][%d] getExternalcontactsContactServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetExternalcontactsContactServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}][%d] getExternalcontactsContactServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetExternalcontactsContactServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactGatewayTimeout creates a GetExternalcontactsContactGatewayTimeout with default headers values
func NewGetExternalcontactsContactGatewayTimeout() *GetExternalcontactsContactGatewayTimeout {
	return &GetExternalcontactsContactGatewayTimeout{}
}

/*
GetExternalcontactsContactGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetExternalcontactsContactGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact gateway timeout response has a 2xx status code
func (o *GetExternalcontactsContactGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact gateway timeout response has a 3xx status code
func (o *GetExternalcontactsContactGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact gateway timeout response has a 4xx status code
func (o *GetExternalcontactsContactGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get externalcontacts contact gateway timeout response has a 5xx status code
func (o *GetExternalcontactsContactGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get externalcontacts contact gateway timeout response a status code equal to that given
func (o *GetExternalcontactsContactGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetExternalcontactsContactGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}][%d] getExternalcontactsContactGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetExternalcontactsContactGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}][%d] getExternalcontactsContactGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetExternalcontactsContactGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
