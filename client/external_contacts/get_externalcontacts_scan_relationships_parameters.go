// Code generated by go-swagger; DO NOT EDIT.

package external_contacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetExternalcontactsScanRelationshipsParams creates a new GetExternalcontactsScanRelationshipsParams object
// with the default values initialized.
func NewGetExternalcontactsScanRelationshipsParams() *GetExternalcontactsScanRelationshipsParams {
	var ()
	return &GetExternalcontactsScanRelationshipsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetExternalcontactsScanRelationshipsParamsWithTimeout creates a new GetExternalcontactsScanRelationshipsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetExternalcontactsScanRelationshipsParamsWithTimeout(timeout time.Duration) *GetExternalcontactsScanRelationshipsParams {
	var ()
	return &GetExternalcontactsScanRelationshipsParams{

		timeout: timeout,
	}
}

// NewGetExternalcontactsScanRelationshipsParamsWithContext creates a new GetExternalcontactsScanRelationshipsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetExternalcontactsScanRelationshipsParamsWithContext(ctx context.Context) *GetExternalcontactsScanRelationshipsParams {
	var ()
	return &GetExternalcontactsScanRelationshipsParams{

		Context: ctx,
	}
}

// NewGetExternalcontactsScanRelationshipsParamsWithHTTPClient creates a new GetExternalcontactsScanRelationshipsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetExternalcontactsScanRelationshipsParamsWithHTTPClient(client *http.Client) *GetExternalcontactsScanRelationshipsParams {
	var ()
	return &GetExternalcontactsScanRelationshipsParams{
		HTTPClient: client,
	}
}

/*GetExternalcontactsScanRelationshipsParams contains all the parameters to send to the API endpoint
for the get externalcontacts scan relationships operation typically these are written to a http.Request
*/
type GetExternalcontactsScanRelationshipsParams struct {

	/*Cursor
	  Indicates where to resume query results (not required for first page), each page returns a new cursor with a 24h TTL

	*/
	Cursor *string
	/*Limit
	  The number of relationships per page; must be between 10 and 200, default is 100)

	*/
	Limit *int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get externalcontacts scan relationships params
func (o *GetExternalcontactsScanRelationshipsParams) WithTimeout(timeout time.Duration) *GetExternalcontactsScanRelationshipsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get externalcontacts scan relationships params
func (o *GetExternalcontactsScanRelationshipsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get externalcontacts scan relationships params
func (o *GetExternalcontactsScanRelationshipsParams) WithContext(ctx context.Context) *GetExternalcontactsScanRelationshipsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get externalcontacts scan relationships params
func (o *GetExternalcontactsScanRelationshipsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get externalcontacts scan relationships params
func (o *GetExternalcontactsScanRelationshipsParams) WithHTTPClient(client *http.Client) *GetExternalcontactsScanRelationshipsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get externalcontacts scan relationships params
func (o *GetExternalcontactsScanRelationshipsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCursor adds the cursor to the get externalcontacts scan relationships params
func (o *GetExternalcontactsScanRelationshipsParams) WithCursor(cursor *string) *GetExternalcontactsScanRelationshipsParams {
	o.SetCursor(cursor)
	return o
}

// SetCursor adds the cursor to the get externalcontacts scan relationships params
func (o *GetExternalcontactsScanRelationshipsParams) SetCursor(cursor *string) {
	o.Cursor = cursor
}

// WithLimit adds the limit to the get externalcontacts scan relationships params
func (o *GetExternalcontactsScanRelationshipsParams) WithLimit(limit *int32) *GetExternalcontactsScanRelationshipsParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the get externalcontacts scan relationships params
func (o *GetExternalcontactsScanRelationshipsParams) SetLimit(limit *int32) {
	o.Limit = limit
}

// WriteToRequest writes these params to a swagger request
func (o *GetExternalcontactsScanRelationshipsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Cursor != nil {

		// query param cursor
		var qrCursor string
		if o.Cursor != nil {
			qrCursor = *o.Cursor
		}
		qCursor := qrCursor
		if qCursor != "" {
			if err := r.SetQueryParam("cursor", qCursor); err != nil {
				return err
			}
		}

	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int32
		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt32(qrLimit)
		if qLimit != "" {
			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
