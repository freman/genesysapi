// Code generated by go-swagger; DO NOT EDIT.

package external_contacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostExternalcontactsBulkContactsAddReader is a Reader for the PostExternalcontactsBulkContactsAdd structure.
type PostExternalcontactsBulkContactsAddReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostExternalcontactsBulkContactsAddReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostExternalcontactsBulkContactsAddOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostExternalcontactsBulkContactsAddBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostExternalcontactsBulkContactsAddUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostExternalcontactsBulkContactsAddForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostExternalcontactsBulkContactsAddNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostExternalcontactsBulkContactsAddRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostExternalcontactsBulkContactsAddUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewPostExternalcontactsBulkContactsAddUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostExternalcontactsBulkContactsAddTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostExternalcontactsBulkContactsAddInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostExternalcontactsBulkContactsAddServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostExternalcontactsBulkContactsAddGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostExternalcontactsBulkContactsAddOK creates a PostExternalcontactsBulkContactsAddOK with default headers values
func NewPostExternalcontactsBulkContactsAddOK() *PostExternalcontactsBulkContactsAddOK {
	return &PostExternalcontactsBulkContactsAddOK{}
}

/*PostExternalcontactsBulkContactsAddOK handles this case with default header values.

successful operation
*/
type PostExternalcontactsBulkContactsAddOK struct {
	Payload *models.BulkContactsResponse
}

func (o *PostExternalcontactsBulkContactsAddOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/externalcontacts/bulk/contacts/add][%d] postExternalcontactsBulkContactsAddOK  %+v", 200, o.Payload)
}

func (o *PostExternalcontactsBulkContactsAddOK) GetPayload() *models.BulkContactsResponse {
	return o.Payload
}

func (o *PostExternalcontactsBulkContactsAddOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BulkContactsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostExternalcontactsBulkContactsAddBadRequest creates a PostExternalcontactsBulkContactsAddBadRequest with default headers values
func NewPostExternalcontactsBulkContactsAddBadRequest() *PostExternalcontactsBulkContactsAddBadRequest {
	return &PostExternalcontactsBulkContactsAddBadRequest{}
}

/*PostExternalcontactsBulkContactsAddBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostExternalcontactsBulkContactsAddBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PostExternalcontactsBulkContactsAddBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/externalcontacts/bulk/contacts/add][%d] postExternalcontactsBulkContactsAddBadRequest  %+v", 400, o.Payload)
}

func (o *PostExternalcontactsBulkContactsAddBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostExternalcontactsBulkContactsAddBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostExternalcontactsBulkContactsAddUnauthorized creates a PostExternalcontactsBulkContactsAddUnauthorized with default headers values
func NewPostExternalcontactsBulkContactsAddUnauthorized() *PostExternalcontactsBulkContactsAddUnauthorized {
	return &PostExternalcontactsBulkContactsAddUnauthorized{}
}

/*PostExternalcontactsBulkContactsAddUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PostExternalcontactsBulkContactsAddUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PostExternalcontactsBulkContactsAddUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/externalcontacts/bulk/contacts/add][%d] postExternalcontactsBulkContactsAddUnauthorized  %+v", 401, o.Payload)
}

func (o *PostExternalcontactsBulkContactsAddUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostExternalcontactsBulkContactsAddUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostExternalcontactsBulkContactsAddForbidden creates a PostExternalcontactsBulkContactsAddForbidden with default headers values
func NewPostExternalcontactsBulkContactsAddForbidden() *PostExternalcontactsBulkContactsAddForbidden {
	return &PostExternalcontactsBulkContactsAddForbidden{}
}

/*PostExternalcontactsBulkContactsAddForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PostExternalcontactsBulkContactsAddForbidden struct {
	Payload *models.ErrorBody
}

func (o *PostExternalcontactsBulkContactsAddForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/externalcontacts/bulk/contacts/add][%d] postExternalcontactsBulkContactsAddForbidden  %+v", 403, o.Payload)
}

func (o *PostExternalcontactsBulkContactsAddForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostExternalcontactsBulkContactsAddForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostExternalcontactsBulkContactsAddNotFound creates a PostExternalcontactsBulkContactsAddNotFound with default headers values
func NewPostExternalcontactsBulkContactsAddNotFound() *PostExternalcontactsBulkContactsAddNotFound {
	return &PostExternalcontactsBulkContactsAddNotFound{}
}

/*PostExternalcontactsBulkContactsAddNotFound handles this case with default header values.

The requested resource was not found.
*/
type PostExternalcontactsBulkContactsAddNotFound struct {
	Payload *models.ErrorBody
}

func (o *PostExternalcontactsBulkContactsAddNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/externalcontacts/bulk/contacts/add][%d] postExternalcontactsBulkContactsAddNotFound  %+v", 404, o.Payload)
}

func (o *PostExternalcontactsBulkContactsAddNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostExternalcontactsBulkContactsAddNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostExternalcontactsBulkContactsAddRequestEntityTooLarge creates a PostExternalcontactsBulkContactsAddRequestEntityTooLarge with default headers values
func NewPostExternalcontactsBulkContactsAddRequestEntityTooLarge() *PostExternalcontactsBulkContactsAddRequestEntityTooLarge {
	return &PostExternalcontactsBulkContactsAddRequestEntityTooLarge{}
}

/*PostExternalcontactsBulkContactsAddRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type PostExternalcontactsBulkContactsAddRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PostExternalcontactsBulkContactsAddRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/externalcontacts/bulk/contacts/add][%d] postExternalcontactsBulkContactsAddRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostExternalcontactsBulkContactsAddRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostExternalcontactsBulkContactsAddRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostExternalcontactsBulkContactsAddUnsupportedMediaType creates a PostExternalcontactsBulkContactsAddUnsupportedMediaType with default headers values
func NewPostExternalcontactsBulkContactsAddUnsupportedMediaType() *PostExternalcontactsBulkContactsAddUnsupportedMediaType {
	return &PostExternalcontactsBulkContactsAddUnsupportedMediaType{}
}

/*PostExternalcontactsBulkContactsAddUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostExternalcontactsBulkContactsAddUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PostExternalcontactsBulkContactsAddUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/externalcontacts/bulk/contacts/add][%d] postExternalcontactsBulkContactsAddUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostExternalcontactsBulkContactsAddUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostExternalcontactsBulkContactsAddUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostExternalcontactsBulkContactsAddUnprocessableEntity creates a PostExternalcontactsBulkContactsAddUnprocessableEntity with default headers values
func NewPostExternalcontactsBulkContactsAddUnprocessableEntity() *PostExternalcontactsBulkContactsAddUnprocessableEntity {
	return &PostExternalcontactsBulkContactsAddUnprocessableEntity{}
}

/*PostExternalcontactsBulkContactsAddUnprocessableEntity handles this case with default header values.

PostExternalcontactsBulkContactsAddUnprocessableEntity post externalcontacts bulk contacts add unprocessable entity
*/
type PostExternalcontactsBulkContactsAddUnprocessableEntity struct {
	Payload *models.ErrorBody
}

func (o *PostExternalcontactsBulkContactsAddUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /api/v2/externalcontacts/bulk/contacts/add][%d] postExternalcontactsBulkContactsAddUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PostExternalcontactsBulkContactsAddUnprocessableEntity) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostExternalcontactsBulkContactsAddUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostExternalcontactsBulkContactsAddTooManyRequests creates a PostExternalcontactsBulkContactsAddTooManyRequests with default headers values
func NewPostExternalcontactsBulkContactsAddTooManyRequests() *PostExternalcontactsBulkContactsAddTooManyRequests {
	return &PostExternalcontactsBulkContactsAddTooManyRequests{}
}

/*PostExternalcontactsBulkContactsAddTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type PostExternalcontactsBulkContactsAddTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PostExternalcontactsBulkContactsAddTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/externalcontacts/bulk/contacts/add][%d] postExternalcontactsBulkContactsAddTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostExternalcontactsBulkContactsAddTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostExternalcontactsBulkContactsAddTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostExternalcontactsBulkContactsAddInternalServerError creates a PostExternalcontactsBulkContactsAddInternalServerError with default headers values
func NewPostExternalcontactsBulkContactsAddInternalServerError() *PostExternalcontactsBulkContactsAddInternalServerError {
	return &PostExternalcontactsBulkContactsAddInternalServerError{}
}

/*PostExternalcontactsBulkContactsAddInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostExternalcontactsBulkContactsAddInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PostExternalcontactsBulkContactsAddInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/externalcontacts/bulk/contacts/add][%d] postExternalcontactsBulkContactsAddInternalServerError  %+v", 500, o.Payload)
}

func (o *PostExternalcontactsBulkContactsAddInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostExternalcontactsBulkContactsAddInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostExternalcontactsBulkContactsAddServiceUnavailable creates a PostExternalcontactsBulkContactsAddServiceUnavailable with default headers values
func NewPostExternalcontactsBulkContactsAddServiceUnavailable() *PostExternalcontactsBulkContactsAddServiceUnavailable {
	return &PostExternalcontactsBulkContactsAddServiceUnavailable{}
}

/*PostExternalcontactsBulkContactsAddServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostExternalcontactsBulkContactsAddServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PostExternalcontactsBulkContactsAddServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/externalcontacts/bulk/contacts/add][%d] postExternalcontactsBulkContactsAddServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostExternalcontactsBulkContactsAddServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostExternalcontactsBulkContactsAddServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostExternalcontactsBulkContactsAddGatewayTimeout creates a PostExternalcontactsBulkContactsAddGatewayTimeout with default headers values
func NewPostExternalcontactsBulkContactsAddGatewayTimeout() *PostExternalcontactsBulkContactsAddGatewayTimeout {
	return &PostExternalcontactsBulkContactsAddGatewayTimeout{}
}

/*PostExternalcontactsBulkContactsAddGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PostExternalcontactsBulkContactsAddGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PostExternalcontactsBulkContactsAddGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/externalcontacts/bulk/contacts/add][%d] postExternalcontactsBulkContactsAddGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostExternalcontactsBulkContactsAddGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostExternalcontactsBulkContactsAddGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
