// Code generated by go-swagger; DO NOT EDIT.

package external_contacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// NewPutExternalcontactsRelationshipParams creates a new PutExternalcontactsRelationshipParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPutExternalcontactsRelationshipParams() *PutExternalcontactsRelationshipParams {
	return &PutExternalcontactsRelationshipParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPutExternalcontactsRelationshipParamsWithTimeout creates a new PutExternalcontactsRelationshipParams object
// with the ability to set a timeout on a request.
func NewPutExternalcontactsRelationshipParamsWithTimeout(timeout time.Duration) *PutExternalcontactsRelationshipParams {
	return &PutExternalcontactsRelationshipParams{
		timeout: timeout,
	}
}

// NewPutExternalcontactsRelationshipParamsWithContext creates a new PutExternalcontactsRelationshipParams object
// with the ability to set a context for a request.
func NewPutExternalcontactsRelationshipParamsWithContext(ctx context.Context) *PutExternalcontactsRelationshipParams {
	return &PutExternalcontactsRelationshipParams{
		Context: ctx,
	}
}

// NewPutExternalcontactsRelationshipParamsWithHTTPClient creates a new PutExternalcontactsRelationshipParams object
// with the ability to set a custom HTTPClient for a request.
func NewPutExternalcontactsRelationshipParamsWithHTTPClient(client *http.Client) *PutExternalcontactsRelationshipParams {
	return &PutExternalcontactsRelationshipParams{
		HTTPClient: client,
	}
}

/*
PutExternalcontactsRelationshipParams contains all the parameters to send to the API endpoint

	for the put externalcontacts relationship operation.

	Typically these are written to a http.Request.
*/
type PutExternalcontactsRelationshipParams struct {

	/* Body.

	   Relationship
	*/
	Body *models.Relationship

	/* RelationshipID.

	   Relationship Id
	*/
	RelationshipID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the put externalcontacts relationship params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutExternalcontactsRelationshipParams) WithDefaults() *PutExternalcontactsRelationshipParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the put externalcontacts relationship params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutExternalcontactsRelationshipParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the put externalcontacts relationship params
func (o *PutExternalcontactsRelationshipParams) WithTimeout(timeout time.Duration) *PutExternalcontactsRelationshipParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put externalcontacts relationship params
func (o *PutExternalcontactsRelationshipParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put externalcontacts relationship params
func (o *PutExternalcontactsRelationshipParams) WithContext(ctx context.Context) *PutExternalcontactsRelationshipParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put externalcontacts relationship params
func (o *PutExternalcontactsRelationshipParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put externalcontacts relationship params
func (o *PutExternalcontactsRelationshipParams) WithHTTPClient(client *http.Client) *PutExternalcontactsRelationshipParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put externalcontacts relationship params
func (o *PutExternalcontactsRelationshipParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the put externalcontacts relationship params
func (o *PutExternalcontactsRelationshipParams) WithBody(body *models.Relationship) *PutExternalcontactsRelationshipParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the put externalcontacts relationship params
func (o *PutExternalcontactsRelationshipParams) SetBody(body *models.Relationship) {
	o.Body = body
}

// WithRelationshipID adds the relationshipID to the put externalcontacts relationship params
func (o *PutExternalcontactsRelationshipParams) WithRelationshipID(relationshipID string) *PutExternalcontactsRelationshipParams {
	o.SetRelationshipID(relationshipID)
	return o
}

// SetRelationshipID adds the relationshipId to the put externalcontacts relationship params
func (o *PutExternalcontactsRelationshipParams) SetRelationshipID(relationshipID string) {
	o.RelationshipID = relationshipID
}

// WriteToRequest writes these params to a swagger request
func (o *PutExternalcontactsRelationshipParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param relationshipId
	if err := r.SetPathParam("relationshipId", o.RelationshipID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
