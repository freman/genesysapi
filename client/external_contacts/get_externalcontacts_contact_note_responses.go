// Code generated by go-swagger; DO NOT EDIT.

package external_contacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetExternalcontactsContactNoteReader is a Reader for the GetExternalcontactsContactNote structure.
type GetExternalcontactsContactNoteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetExternalcontactsContactNoteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetExternalcontactsContactNoteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetExternalcontactsContactNoteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetExternalcontactsContactNoteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetExternalcontactsContactNoteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetExternalcontactsContactNoteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetExternalcontactsContactNoteRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetExternalcontactsContactNoteRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetExternalcontactsContactNoteUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetExternalcontactsContactNoteTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetExternalcontactsContactNoteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetExternalcontactsContactNoteServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetExternalcontactsContactNoteGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetExternalcontactsContactNoteOK creates a GetExternalcontactsContactNoteOK with default headers values
func NewGetExternalcontactsContactNoteOK() *GetExternalcontactsContactNoteOK {
	return &GetExternalcontactsContactNoteOK{}
}

/*
GetExternalcontactsContactNoteOK describes a response with status code 200, with default header values.

successful operation
*/
type GetExternalcontactsContactNoteOK struct {
	Payload *models.Note
}

// IsSuccess returns true when this get externalcontacts contact note o k response has a 2xx status code
func (o *GetExternalcontactsContactNoteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get externalcontacts contact note o k response has a 3xx status code
func (o *GetExternalcontactsContactNoteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact note o k response has a 4xx status code
func (o *GetExternalcontactsContactNoteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get externalcontacts contact note o k response has a 5xx status code
func (o *GetExternalcontactsContactNoteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact note o k response a status code equal to that given
func (o *GetExternalcontactsContactNoteOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetExternalcontactsContactNoteOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] getExternalcontactsContactNoteOK  %+v", 200, o.Payload)
}

func (o *GetExternalcontactsContactNoteOK) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] getExternalcontactsContactNoteOK  %+v", 200, o.Payload)
}

func (o *GetExternalcontactsContactNoteOK) GetPayload() *models.Note {
	return o.Payload
}

func (o *GetExternalcontactsContactNoteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Note)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactNoteBadRequest creates a GetExternalcontactsContactNoteBadRequest with default headers values
func NewGetExternalcontactsContactNoteBadRequest() *GetExternalcontactsContactNoteBadRequest {
	return &GetExternalcontactsContactNoteBadRequest{}
}

/*
GetExternalcontactsContactNoteBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetExternalcontactsContactNoteBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact note bad request response has a 2xx status code
func (o *GetExternalcontactsContactNoteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact note bad request response has a 3xx status code
func (o *GetExternalcontactsContactNoteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact note bad request response has a 4xx status code
func (o *GetExternalcontactsContactNoteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get externalcontacts contact note bad request response has a 5xx status code
func (o *GetExternalcontactsContactNoteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact note bad request response a status code equal to that given
func (o *GetExternalcontactsContactNoteBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetExternalcontactsContactNoteBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] getExternalcontactsContactNoteBadRequest  %+v", 400, o.Payload)
}

func (o *GetExternalcontactsContactNoteBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] getExternalcontactsContactNoteBadRequest  %+v", 400, o.Payload)
}

func (o *GetExternalcontactsContactNoteBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactNoteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactNoteUnauthorized creates a GetExternalcontactsContactNoteUnauthorized with default headers values
func NewGetExternalcontactsContactNoteUnauthorized() *GetExternalcontactsContactNoteUnauthorized {
	return &GetExternalcontactsContactNoteUnauthorized{}
}

/*
GetExternalcontactsContactNoteUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetExternalcontactsContactNoteUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact note unauthorized response has a 2xx status code
func (o *GetExternalcontactsContactNoteUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact note unauthorized response has a 3xx status code
func (o *GetExternalcontactsContactNoteUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact note unauthorized response has a 4xx status code
func (o *GetExternalcontactsContactNoteUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get externalcontacts contact note unauthorized response has a 5xx status code
func (o *GetExternalcontactsContactNoteUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact note unauthorized response a status code equal to that given
func (o *GetExternalcontactsContactNoteUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetExternalcontactsContactNoteUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] getExternalcontactsContactNoteUnauthorized  %+v", 401, o.Payload)
}

func (o *GetExternalcontactsContactNoteUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] getExternalcontactsContactNoteUnauthorized  %+v", 401, o.Payload)
}

func (o *GetExternalcontactsContactNoteUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactNoteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactNoteForbidden creates a GetExternalcontactsContactNoteForbidden with default headers values
func NewGetExternalcontactsContactNoteForbidden() *GetExternalcontactsContactNoteForbidden {
	return &GetExternalcontactsContactNoteForbidden{}
}

/*
GetExternalcontactsContactNoteForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetExternalcontactsContactNoteForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact note forbidden response has a 2xx status code
func (o *GetExternalcontactsContactNoteForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact note forbidden response has a 3xx status code
func (o *GetExternalcontactsContactNoteForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact note forbidden response has a 4xx status code
func (o *GetExternalcontactsContactNoteForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get externalcontacts contact note forbidden response has a 5xx status code
func (o *GetExternalcontactsContactNoteForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact note forbidden response a status code equal to that given
func (o *GetExternalcontactsContactNoteForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetExternalcontactsContactNoteForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] getExternalcontactsContactNoteForbidden  %+v", 403, o.Payload)
}

func (o *GetExternalcontactsContactNoteForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] getExternalcontactsContactNoteForbidden  %+v", 403, o.Payload)
}

func (o *GetExternalcontactsContactNoteForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactNoteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactNoteNotFound creates a GetExternalcontactsContactNoteNotFound with default headers values
func NewGetExternalcontactsContactNoteNotFound() *GetExternalcontactsContactNoteNotFound {
	return &GetExternalcontactsContactNoteNotFound{}
}

/*
GetExternalcontactsContactNoteNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetExternalcontactsContactNoteNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact note not found response has a 2xx status code
func (o *GetExternalcontactsContactNoteNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact note not found response has a 3xx status code
func (o *GetExternalcontactsContactNoteNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact note not found response has a 4xx status code
func (o *GetExternalcontactsContactNoteNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get externalcontacts contact note not found response has a 5xx status code
func (o *GetExternalcontactsContactNoteNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact note not found response a status code equal to that given
func (o *GetExternalcontactsContactNoteNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetExternalcontactsContactNoteNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] getExternalcontactsContactNoteNotFound  %+v", 404, o.Payload)
}

func (o *GetExternalcontactsContactNoteNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] getExternalcontactsContactNoteNotFound  %+v", 404, o.Payload)
}

func (o *GetExternalcontactsContactNoteNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactNoteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactNoteRequestTimeout creates a GetExternalcontactsContactNoteRequestTimeout with default headers values
func NewGetExternalcontactsContactNoteRequestTimeout() *GetExternalcontactsContactNoteRequestTimeout {
	return &GetExternalcontactsContactNoteRequestTimeout{}
}

/*
GetExternalcontactsContactNoteRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetExternalcontactsContactNoteRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact note request timeout response has a 2xx status code
func (o *GetExternalcontactsContactNoteRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact note request timeout response has a 3xx status code
func (o *GetExternalcontactsContactNoteRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact note request timeout response has a 4xx status code
func (o *GetExternalcontactsContactNoteRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get externalcontacts contact note request timeout response has a 5xx status code
func (o *GetExternalcontactsContactNoteRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact note request timeout response a status code equal to that given
func (o *GetExternalcontactsContactNoteRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetExternalcontactsContactNoteRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] getExternalcontactsContactNoteRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetExternalcontactsContactNoteRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] getExternalcontactsContactNoteRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetExternalcontactsContactNoteRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactNoteRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactNoteRequestEntityTooLarge creates a GetExternalcontactsContactNoteRequestEntityTooLarge with default headers values
func NewGetExternalcontactsContactNoteRequestEntityTooLarge() *GetExternalcontactsContactNoteRequestEntityTooLarge {
	return &GetExternalcontactsContactNoteRequestEntityTooLarge{}
}

/*
GetExternalcontactsContactNoteRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetExternalcontactsContactNoteRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact note request entity too large response has a 2xx status code
func (o *GetExternalcontactsContactNoteRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact note request entity too large response has a 3xx status code
func (o *GetExternalcontactsContactNoteRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact note request entity too large response has a 4xx status code
func (o *GetExternalcontactsContactNoteRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get externalcontacts contact note request entity too large response has a 5xx status code
func (o *GetExternalcontactsContactNoteRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact note request entity too large response a status code equal to that given
func (o *GetExternalcontactsContactNoteRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetExternalcontactsContactNoteRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] getExternalcontactsContactNoteRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetExternalcontactsContactNoteRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] getExternalcontactsContactNoteRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetExternalcontactsContactNoteRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactNoteRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactNoteUnsupportedMediaType creates a GetExternalcontactsContactNoteUnsupportedMediaType with default headers values
func NewGetExternalcontactsContactNoteUnsupportedMediaType() *GetExternalcontactsContactNoteUnsupportedMediaType {
	return &GetExternalcontactsContactNoteUnsupportedMediaType{}
}

/*
GetExternalcontactsContactNoteUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetExternalcontactsContactNoteUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact note unsupported media type response has a 2xx status code
func (o *GetExternalcontactsContactNoteUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact note unsupported media type response has a 3xx status code
func (o *GetExternalcontactsContactNoteUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact note unsupported media type response has a 4xx status code
func (o *GetExternalcontactsContactNoteUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get externalcontacts contact note unsupported media type response has a 5xx status code
func (o *GetExternalcontactsContactNoteUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact note unsupported media type response a status code equal to that given
func (o *GetExternalcontactsContactNoteUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetExternalcontactsContactNoteUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] getExternalcontactsContactNoteUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetExternalcontactsContactNoteUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] getExternalcontactsContactNoteUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetExternalcontactsContactNoteUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactNoteUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactNoteTooManyRequests creates a GetExternalcontactsContactNoteTooManyRequests with default headers values
func NewGetExternalcontactsContactNoteTooManyRequests() *GetExternalcontactsContactNoteTooManyRequests {
	return &GetExternalcontactsContactNoteTooManyRequests{}
}

/*
GetExternalcontactsContactNoteTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetExternalcontactsContactNoteTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact note too many requests response has a 2xx status code
func (o *GetExternalcontactsContactNoteTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact note too many requests response has a 3xx status code
func (o *GetExternalcontactsContactNoteTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact note too many requests response has a 4xx status code
func (o *GetExternalcontactsContactNoteTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get externalcontacts contact note too many requests response has a 5xx status code
func (o *GetExternalcontactsContactNoteTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get externalcontacts contact note too many requests response a status code equal to that given
func (o *GetExternalcontactsContactNoteTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetExternalcontactsContactNoteTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] getExternalcontactsContactNoteTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetExternalcontactsContactNoteTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] getExternalcontactsContactNoteTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetExternalcontactsContactNoteTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactNoteTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactNoteInternalServerError creates a GetExternalcontactsContactNoteInternalServerError with default headers values
func NewGetExternalcontactsContactNoteInternalServerError() *GetExternalcontactsContactNoteInternalServerError {
	return &GetExternalcontactsContactNoteInternalServerError{}
}

/*
GetExternalcontactsContactNoteInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetExternalcontactsContactNoteInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact note internal server error response has a 2xx status code
func (o *GetExternalcontactsContactNoteInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact note internal server error response has a 3xx status code
func (o *GetExternalcontactsContactNoteInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact note internal server error response has a 4xx status code
func (o *GetExternalcontactsContactNoteInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get externalcontacts contact note internal server error response has a 5xx status code
func (o *GetExternalcontactsContactNoteInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get externalcontacts contact note internal server error response a status code equal to that given
func (o *GetExternalcontactsContactNoteInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetExternalcontactsContactNoteInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] getExternalcontactsContactNoteInternalServerError  %+v", 500, o.Payload)
}

func (o *GetExternalcontactsContactNoteInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] getExternalcontactsContactNoteInternalServerError  %+v", 500, o.Payload)
}

func (o *GetExternalcontactsContactNoteInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactNoteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactNoteServiceUnavailable creates a GetExternalcontactsContactNoteServiceUnavailable with default headers values
func NewGetExternalcontactsContactNoteServiceUnavailable() *GetExternalcontactsContactNoteServiceUnavailable {
	return &GetExternalcontactsContactNoteServiceUnavailable{}
}

/*
GetExternalcontactsContactNoteServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetExternalcontactsContactNoteServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact note service unavailable response has a 2xx status code
func (o *GetExternalcontactsContactNoteServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact note service unavailable response has a 3xx status code
func (o *GetExternalcontactsContactNoteServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact note service unavailable response has a 4xx status code
func (o *GetExternalcontactsContactNoteServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get externalcontacts contact note service unavailable response has a 5xx status code
func (o *GetExternalcontactsContactNoteServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get externalcontacts contact note service unavailable response a status code equal to that given
func (o *GetExternalcontactsContactNoteServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetExternalcontactsContactNoteServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] getExternalcontactsContactNoteServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetExternalcontactsContactNoteServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] getExternalcontactsContactNoteServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetExternalcontactsContactNoteServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactNoteServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalcontactsContactNoteGatewayTimeout creates a GetExternalcontactsContactNoteGatewayTimeout with default headers values
func NewGetExternalcontactsContactNoteGatewayTimeout() *GetExternalcontactsContactNoteGatewayTimeout {
	return &GetExternalcontactsContactNoteGatewayTimeout{}
}

/*
GetExternalcontactsContactNoteGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetExternalcontactsContactNoteGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get externalcontacts contact note gateway timeout response has a 2xx status code
func (o *GetExternalcontactsContactNoteGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get externalcontacts contact note gateway timeout response has a 3xx status code
func (o *GetExternalcontactsContactNoteGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get externalcontacts contact note gateway timeout response has a 4xx status code
func (o *GetExternalcontactsContactNoteGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get externalcontacts contact note gateway timeout response has a 5xx status code
func (o *GetExternalcontactsContactNoteGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get externalcontacts contact note gateway timeout response a status code equal to that given
func (o *GetExternalcontactsContactNoteGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetExternalcontactsContactNoteGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] getExternalcontactsContactNoteGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetExternalcontactsContactNoteGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] getExternalcontactsContactNoteGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetExternalcontactsContactNoteGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetExternalcontactsContactNoteGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
