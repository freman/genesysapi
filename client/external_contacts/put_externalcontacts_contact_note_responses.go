// Code generated by go-swagger; DO NOT EDIT.

package external_contacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PutExternalcontactsContactNoteReader is a Reader for the PutExternalcontactsContactNote structure.
type PutExternalcontactsContactNoteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutExternalcontactsContactNoteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutExternalcontactsContactNoteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutExternalcontactsContactNoteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutExternalcontactsContactNoteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutExternalcontactsContactNoteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutExternalcontactsContactNoteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPutExternalcontactsContactNoteRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPutExternalcontactsContactNoteRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPutExternalcontactsContactNoteUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewPutExternalcontactsContactNoteUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutExternalcontactsContactNoteTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutExternalcontactsContactNoteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutExternalcontactsContactNoteServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutExternalcontactsContactNoteGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutExternalcontactsContactNoteOK creates a PutExternalcontactsContactNoteOK with default headers values
func NewPutExternalcontactsContactNoteOK() *PutExternalcontactsContactNoteOK {
	return &PutExternalcontactsContactNoteOK{}
}

/*
PutExternalcontactsContactNoteOK describes a response with status code 200, with default header values.

successful operation
*/
type PutExternalcontactsContactNoteOK struct {
	Payload *models.Note
}

// IsSuccess returns true when this put externalcontacts contact note o k response has a 2xx status code
func (o *PutExternalcontactsContactNoteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put externalcontacts contact note o k response has a 3xx status code
func (o *PutExternalcontactsContactNoteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contact note o k response has a 4xx status code
func (o *PutExternalcontactsContactNoteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put externalcontacts contact note o k response has a 5xx status code
func (o *PutExternalcontactsContactNoteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts contact note o k response a status code equal to that given
func (o *PutExternalcontactsContactNoteOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutExternalcontactsContactNoteOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] putExternalcontactsContactNoteOK  %+v", 200, o.Payload)
}

func (o *PutExternalcontactsContactNoteOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] putExternalcontactsContactNoteOK  %+v", 200, o.Payload)
}

func (o *PutExternalcontactsContactNoteOK) GetPayload() *models.Note {
	return o.Payload
}

func (o *PutExternalcontactsContactNoteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Note)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactNoteBadRequest creates a PutExternalcontactsContactNoteBadRequest with default headers values
func NewPutExternalcontactsContactNoteBadRequest() *PutExternalcontactsContactNoteBadRequest {
	return &PutExternalcontactsContactNoteBadRequest{}
}

/*
PutExternalcontactsContactNoteBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PutExternalcontactsContactNoteBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contact note bad request response has a 2xx status code
func (o *PutExternalcontactsContactNoteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contact note bad request response has a 3xx status code
func (o *PutExternalcontactsContactNoteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contact note bad request response has a 4xx status code
func (o *PutExternalcontactsContactNoteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts contact note bad request response has a 5xx status code
func (o *PutExternalcontactsContactNoteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts contact note bad request response a status code equal to that given
func (o *PutExternalcontactsContactNoteBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutExternalcontactsContactNoteBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] putExternalcontactsContactNoteBadRequest  %+v", 400, o.Payload)
}

func (o *PutExternalcontactsContactNoteBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] putExternalcontactsContactNoteBadRequest  %+v", 400, o.Payload)
}

func (o *PutExternalcontactsContactNoteBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactNoteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactNoteUnauthorized creates a PutExternalcontactsContactNoteUnauthorized with default headers values
func NewPutExternalcontactsContactNoteUnauthorized() *PutExternalcontactsContactNoteUnauthorized {
	return &PutExternalcontactsContactNoteUnauthorized{}
}

/*
PutExternalcontactsContactNoteUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PutExternalcontactsContactNoteUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contact note unauthorized response has a 2xx status code
func (o *PutExternalcontactsContactNoteUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contact note unauthorized response has a 3xx status code
func (o *PutExternalcontactsContactNoteUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contact note unauthorized response has a 4xx status code
func (o *PutExternalcontactsContactNoteUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts contact note unauthorized response has a 5xx status code
func (o *PutExternalcontactsContactNoteUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts contact note unauthorized response a status code equal to that given
func (o *PutExternalcontactsContactNoteUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutExternalcontactsContactNoteUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] putExternalcontactsContactNoteUnauthorized  %+v", 401, o.Payload)
}

func (o *PutExternalcontactsContactNoteUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] putExternalcontactsContactNoteUnauthorized  %+v", 401, o.Payload)
}

func (o *PutExternalcontactsContactNoteUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactNoteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactNoteForbidden creates a PutExternalcontactsContactNoteForbidden with default headers values
func NewPutExternalcontactsContactNoteForbidden() *PutExternalcontactsContactNoteForbidden {
	return &PutExternalcontactsContactNoteForbidden{}
}

/*
PutExternalcontactsContactNoteForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PutExternalcontactsContactNoteForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contact note forbidden response has a 2xx status code
func (o *PutExternalcontactsContactNoteForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contact note forbidden response has a 3xx status code
func (o *PutExternalcontactsContactNoteForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contact note forbidden response has a 4xx status code
func (o *PutExternalcontactsContactNoteForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts contact note forbidden response has a 5xx status code
func (o *PutExternalcontactsContactNoteForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts contact note forbidden response a status code equal to that given
func (o *PutExternalcontactsContactNoteForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutExternalcontactsContactNoteForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] putExternalcontactsContactNoteForbidden  %+v", 403, o.Payload)
}

func (o *PutExternalcontactsContactNoteForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] putExternalcontactsContactNoteForbidden  %+v", 403, o.Payload)
}

func (o *PutExternalcontactsContactNoteForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactNoteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactNoteNotFound creates a PutExternalcontactsContactNoteNotFound with default headers values
func NewPutExternalcontactsContactNoteNotFound() *PutExternalcontactsContactNoteNotFound {
	return &PutExternalcontactsContactNoteNotFound{}
}

/*
PutExternalcontactsContactNoteNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PutExternalcontactsContactNoteNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contact note not found response has a 2xx status code
func (o *PutExternalcontactsContactNoteNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contact note not found response has a 3xx status code
func (o *PutExternalcontactsContactNoteNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contact note not found response has a 4xx status code
func (o *PutExternalcontactsContactNoteNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts contact note not found response has a 5xx status code
func (o *PutExternalcontactsContactNoteNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts contact note not found response a status code equal to that given
func (o *PutExternalcontactsContactNoteNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutExternalcontactsContactNoteNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] putExternalcontactsContactNoteNotFound  %+v", 404, o.Payload)
}

func (o *PutExternalcontactsContactNoteNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] putExternalcontactsContactNoteNotFound  %+v", 404, o.Payload)
}

func (o *PutExternalcontactsContactNoteNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactNoteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactNoteRequestTimeout creates a PutExternalcontactsContactNoteRequestTimeout with default headers values
func NewPutExternalcontactsContactNoteRequestTimeout() *PutExternalcontactsContactNoteRequestTimeout {
	return &PutExternalcontactsContactNoteRequestTimeout{}
}

/*
PutExternalcontactsContactNoteRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PutExternalcontactsContactNoteRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contact note request timeout response has a 2xx status code
func (o *PutExternalcontactsContactNoteRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contact note request timeout response has a 3xx status code
func (o *PutExternalcontactsContactNoteRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contact note request timeout response has a 4xx status code
func (o *PutExternalcontactsContactNoteRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts contact note request timeout response has a 5xx status code
func (o *PutExternalcontactsContactNoteRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts contact note request timeout response a status code equal to that given
func (o *PutExternalcontactsContactNoteRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PutExternalcontactsContactNoteRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] putExternalcontactsContactNoteRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutExternalcontactsContactNoteRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] putExternalcontactsContactNoteRequestTimeout  %+v", 408, o.Payload)
}

func (o *PutExternalcontactsContactNoteRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactNoteRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactNoteRequestEntityTooLarge creates a PutExternalcontactsContactNoteRequestEntityTooLarge with default headers values
func NewPutExternalcontactsContactNoteRequestEntityTooLarge() *PutExternalcontactsContactNoteRequestEntityTooLarge {
	return &PutExternalcontactsContactNoteRequestEntityTooLarge{}
}

/*
PutExternalcontactsContactNoteRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PutExternalcontactsContactNoteRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contact note request entity too large response has a 2xx status code
func (o *PutExternalcontactsContactNoteRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contact note request entity too large response has a 3xx status code
func (o *PutExternalcontactsContactNoteRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contact note request entity too large response has a 4xx status code
func (o *PutExternalcontactsContactNoteRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts contact note request entity too large response has a 5xx status code
func (o *PutExternalcontactsContactNoteRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts contact note request entity too large response a status code equal to that given
func (o *PutExternalcontactsContactNoteRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PutExternalcontactsContactNoteRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] putExternalcontactsContactNoteRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutExternalcontactsContactNoteRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] putExternalcontactsContactNoteRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PutExternalcontactsContactNoteRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactNoteRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactNoteUnsupportedMediaType creates a PutExternalcontactsContactNoteUnsupportedMediaType with default headers values
func NewPutExternalcontactsContactNoteUnsupportedMediaType() *PutExternalcontactsContactNoteUnsupportedMediaType {
	return &PutExternalcontactsContactNoteUnsupportedMediaType{}
}

/*
PutExternalcontactsContactNoteUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PutExternalcontactsContactNoteUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contact note unsupported media type response has a 2xx status code
func (o *PutExternalcontactsContactNoteUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contact note unsupported media type response has a 3xx status code
func (o *PutExternalcontactsContactNoteUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contact note unsupported media type response has a 4xx status code
func (o *PutExternalcontactsContactNoteUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts contact note unsupported media type response has a 5xx status code
func (o *PutExternalcontactsContactNoteUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts contact note unsupported media type response a status code equal to that given
func (o *PutExternalcontactsContactNoteUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PutExternalcontactsContactNoteUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] putExternalcontactsContactNoteUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutExternalcontactsContactNoteUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] putExternalcontactsContactNoteUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PutExternalcontactsContactNoteUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactNoteUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactNoteUnprocessableEntity creates a PutExternalcontactsContactNoteUnprocessableEntity with default headers values
func NewPutExternalcontactsContactNoteUnprocessableEntity() *PutExternalcontactsContactNoteUnprocessableEntity {
	return &PutExternalcontactsContactNoteUnprocessableEntity{}
}

/*
PutExternalcontactsContactNoteUnprocessableEntity describes a response with status code 422, with default header values.

PutExternalcontactsContactNoteUnprocessableEntity put externalcontacts contact note unprocessable entity
*/
type PutExternalcontactsContactNoteUnprocessableEntity struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contact note unprocessable entity response has a 2xx status code
func (o *PutExternalcontactsContactNoteUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contact note unprocessable entity response has a 3xx status code
func (o *PutExternalcontactsContactNoteUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contact note unprocessable entity response has a 4xx status code
func (o *PutExternalcontactsContactNoteUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts contact note unprocessable entity response has a 5xx status code
func (o *PutExternalcontactsContactNoteUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts contact note unprocessable entity response a status code equal to that given
func (o *PutExternalcontactsContactNoteUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

func (o *PutExternalcontactsContactNoteUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] putExternalcontactsContactNoteUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PutExternalcontactsContactNoteUnprocessableEntity) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] putExternalcontactsContactNoteUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PutExternalcontactsContactNoteUnprocessableEntity) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactNoteUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactNoteTooManyRequests creates a PutExternalcontactsContactNoteTooManyRequests with default headers values
func NewPutExternalcontactsContactNoteTooManyRequests() *PutExternalcontactsContactNoteTooManyRequests {
	return &PutExternalcontactsContactNoteTooManyRequests{}
}

/*
PutExternalcontactsContactNoteTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PutExternalcontactsContactNoteTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contact note too many requests response has a 2xx status code
func (o *PutExternalcontactsContactNoteTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contact note too many requests response has a 3xx status code
func (o *PutExternalcontactsContactNoteTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contact note too many requests response has a 4xx status code
func (o *PutExternalcontactsContactNoteTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this put externalcontacts contact note too many requests response has a 5xx status code
func (o *PutExternalcontactsContactNoteTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this put externalcontacts contact note too many requests response a status code equal to that given
func (o *PutExternalcontactsContactNoteTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PutExternalcontactsContactNoteTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] putExternalcontactsContactNoteTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutExternalcontactsContactNoteTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] putExternalcontactsContactNoteTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutExternalcontactsContactNoteTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactNoteTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactNoteInternalServerError creates a PutExternalcontactsContactNoteInternalServerError with default headers values
func NewPutExternalcontactsContactNoteInternalServerError() *PutExternalcontactsContactNoteInternalServerError {
	return &PutExternalcontactsContactNoteInternalServerError{}
}

/*
PutExternalcontactsContactNoteInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PutExternalcontactsContactNoteInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contact note internal server error response has a 2xx status code
func (o *PutExternalcontactsContactNoteInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contact note internal server error response has a 3xx status code
func (o *PutExternalcontactsContactNoteInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contact note internal server error response has a 4xx status code
func (o *PutExternalcontactsContactNoteInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put externalcontacts contact note internal server error response has a 5xx status code
func (o *PutExternalcontactsContactNoteInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put externalcontacts contact note internal server error response a status code equal to that given
func (o *PutExternalcontactsContactNoteInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutExternalcontactsContactNoteInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] putExternalcontactsContactNoteInternalServerError  %+v", 500, o.Payload)
}

func (o *PutExternalcontactsContactNoteInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] putExternalcontactsContactNoteInternalServerError  %+v", 500, o.Payload)
}

func (o *PutExternalcontactsContactNoteInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactNoteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactNoteServiceUnavailable creates a PutExternalcontactsContactNoteServiceUnavailable with default headers values
func NewPutExternalcontactsContactNoteServiceUnavailable() *PutExternalcontactsContactNoteServiceUnavailable {
	return &PutExternalcontactsContactNoteServiceUnavailable{}
}

/*
PutExternalcontactsContactNoteServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PutExternalcontactsContactNoteServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contact note service unavailable response has a 2xx status code
func (o *PutExternalcontactsContactNoteServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contact note service unavailable response has a 3xx status code
func (o *PutExternalcontactsContactNoteServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contact note service unavailable response has a 4xx status code
func (o *PutExternalcontactsContactNoteServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put externalcontacts contact note service unavailable response has a 5xx status code
func (o *PutExternalcontactsContactNoteServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put externalcontacts contact note service unavailable response a status code equal to that given
func (o *PutExternalcontactsContactNoteServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutExternalcontactsContactNoteServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] putExternalcontactsContactNoteServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutExternalcontactsContactNoteServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] putExternalcontactsContactNoteServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutExternalcontactsContactNoteServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactNoteServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalcontactsContactNoteGatewayTimeout creates a PutExternalcontactsContactNoteGatewayTimeout with default headers values
func NewPutExternalcontactsContactNoteGatewayTimeout() *PutExternalcontactsContactNoteGatewayTimeout {
	return &PutExternalcontactsContactNoteGatewayTimeout{}
}

/*
PutExternalcontactsContactNoteGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PutExternalcontactsContactNoteGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this put externalcontacts contact note gateway timeout response has a 2xx status code
func (o *PutExternalcontactsContactNoteGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put externalcontacts contact note gateway timeout response has a 3xx status code
func (o *PutExternalcontactsContactNoteGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put externalcontacts contact note gateway timeout response has a 4xx status code
func (o *PutExternalcontactsContactNoteGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put externalcontacts contact note gateway timeout response has a 5xx status code
func (o *PutExternalcontactsContactNoteGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put externalcontacts contact note gateway timeout response a status code equal to that given
func (o *PutExternalcontactsContactNoteGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutExternalcontactsContactNoteGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] putExternalcontactsContactNoteGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutExternalcontactsContactNoteGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /api/v2/externalcontacts/contacts/{contactId}/notes/{noteId}][%d] putExternalcontactsContactNoteGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutExternalcontactsContactNoteGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PutExternalcontactsContactNoteGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
