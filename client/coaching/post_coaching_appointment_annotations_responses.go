// Code generated by go-swagger; DO NOT EDIT.

package coaching

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PostCoachingAppointmentAnnotationsReader is a Reader for the PostCoachingAppointmentAnnotations structure.
type PostCoachingAppointmentAnnotationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostCoachingAppointmentAnnotationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostCoachingAppointmentAnnotationsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostCoachingAppointmentAnnotationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostCoachingAppointmentAnnotationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostCoachingAppointmentAnnotationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostCoachingAppointmentAnnotationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostCoachingAppointmentAnnotationsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPostCoachingAppointmentAnnotationsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostCoachingAppointmentAnnotationsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostCoachingAppointmentAnnotationsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostCoachingAppointmentAnnotationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostCoachingAppointmentAnnotationsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostCoachingAppointmentAnnotationsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostCoachingAppointmentAnnotationsCreated creates a PostCoachingAppointmentAnnotationsCreated with default headers values
func NewPostCoachingAppointmentAnnotationsCreated() *PostCoachingAppointmentAnnotationsCreated {
	return &PostCoachingAppointmentAnnotationsCreated{}
}

/*
PostCoachingAppointmentAnnotationsCreated describes a response with status code 201, with default header values.

Annotation created
*/
type PostCoachingAppointmentAnnotationsCreated struct {
	Payload *models.CoachingAnnotation
}

// IsSuccess returns true when this post coaching appointment annotations created response has a 2xx status code
func (o *PostCoachingAppointmentAnnotationsCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post coaching appointment annotations created response has a 3xx status code
func (o *PostCoachingAppointmentAnnotationsCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post coaching appointment annotations created response has a 4xx status code
func (o *PostCoachingAppointmentAnnotationsCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post coaching appointment annotations created response has a 5xx status code
func (o *PostCoachingAppointmentAnnotationsCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post coaching appointment annotations created response a status code equal to that given
func (o *PostCoachingAppointmentAnnotationsCreated) IsCode(code int) bool {
	return code == 201
}

func (o *PostCoachingAppointmentAnnotationsCreated) Error() string {
	return fmt.Sprintf("[POST /api/v2/coaching/appointments/{appointmentId}/annotations][%d] postCoachingAppointmentAnnotationsCreated  %+v", 201, o.Payload)
}

func (o *PostCoachingAppointmentAnnotationsCreated) String() string {
	return fmt.Sprintf("[POST /api/v2/coaching/appointments/{appointmentId}/annotations][%d] postCoachingAppointmentAnnotationsCreated  %+v", 201, o.Payload)
}

func (o *PostCoachingAppointmentAnnotationsCreated) GetPayload() *models.CoachingAnnotation {
	return o.Payload
}

func (o *PostCoachingAppointmentAnnotationsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoachingAnnotation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCoachingAppointmentAnnotationsBadRequest creates a PostCoachingAppointmentAnnotationsBadRequest with default headers values
func NewPostCoachingAppointmentAnnotationsBadRequest() *PostCoachingAppointmentAnnotationsBadRequest {
	return &PostCoachingAppointmentAnnotationsBadRequest{}
}

/*
PostCoachingAppointmentAnnotationsBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PostCoachingAppointmentAnnotationsBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post coaching appointment annotations bad request response has a 2xx status code
func (o *PostCoachingAppointmentAnnotationsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post coaching appointment annotations bad request response has a 3xx status code
func (o *PostCoachingAppointmentAnnotationsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post coaching appointment annotations bad request response has a 4xx status code
func (o *PostCoachingAppointmentAnnotationsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post coaching appointment annotations bad request response has a 5xx status code
func (o *PostCoachingAppointmentAnnotationsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post coaching appointment annotations bad request response a status code equal to that given
func (o *PostCoachingAppointmentAnnotationsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostCoachingAppointmentAnnotationsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/coaching/appointments/{appointmentId}/annotations][%d] postCoachingAppointmentAnnotationsBadRequest  %+v", 400, o.Payload)
}

func (o *PostCoachingAppointmentAnnotationsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/coaching/appointments/{appointmentId}/annotations][%d] postCoachingAppointmentAnnotationsBadRequest  %+v", 400, o.Payload)
}

func (o *PostCoachingAppointmentAnnotationsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostCoachingAppointmentAnnotationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCoachingAppointmentAnnotationsUnauthorized creates a PostCoachingAppointmentAnnotationsUnauthorized with default headers values
func NewPostCoachingAppointmentAnnotationsUnauthorized() *PostCoachingAppointmentAnnotationsUnauthorized {
	return &PostCoachingAppointmentAnnotationsUnauthorized{}
}

/*
PostCoachingAppointmentAnnotationsUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type PostCoachingAppointmentAnnotationsUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post coaching appointment annotations unauthorized response has a 2xx status code
func (o *PostCoachingAppointmentAnnotationsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post coaching appointment annotations unauthorized response has a 3xx status code
func (o *PostCoachingAppointmentAnnotationsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post coaching appointment annotations unauthorized response has a 4xx status code
func (o *PostCoachingAppointmentAnnotationsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post coaching appointment annotations unauthorized response has a 5xx status code
func (o *PostCoachingAppointmentAnnotationsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post coaching appointment annotations unauthorized response a status code equal to that given
func (o *PostCoachingAppointmentAnnotationsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostCoachingAppointmentAnnotationsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/coaching/appointments/{appointmentId}/annotations][%d] postCoachingAppointmentAnnotationsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostCoachingAppointmentAnnotationsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/coaching/appointments/{appointmentId}/annotations][%d] postCoachingAppointmentAnnotationsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostCoachingAppointmentAnnotationsUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostCoachingAppointmentAnnotationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCoachingAppointmentAnnotationsForbidden creates a PostCoachingAppointmentAnnotationsForbidden with default headers values
func NewPostCoachingAppointmentAnnotationsForbidden() *PostCoachingAppointmentAnnotationsForbidden {
	return &PostCoachingAppointmentAnnotationsForbidden{}
}

/*
PostCoachingAppointmentAnnotationsForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type PostCoachingAppointmentAnnotationsForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post coaching appointment annotations forbidden response has a 2xx status code
func (o *PostCoachingAppointmentAnnotationsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post coaching appointment annotations forbidden response has a 3xx status code
func (o *PostCoachingAppointmentAnnotationsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post coaching appointment annotations forbidden response has a 4xx status code
func (o *PostCoachingAppointmentAnnotationsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post coaching appointment annotations forbidden response has a 5xx status code
func (o *PostCoachingAppointmentAnnotationsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post coaching appointment annotations forbidden response a status code equal to that given
func (o *PostCoachingAppointmentAnnotationsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostCoachingAppointmentAnnotationsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/coaching/appointments/{appointmentId}/annotations][%d] postCoachingAppointmentAnnotationsForbidden  %+v", 403, o.Payload)
}

func (o *PostCoachingAppointmentAnnotationsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/coaching/appointments/{appointmentId}/annotations][%d] postCoachingAppointmentAnnotationsForbidden  %+v", 403, o.Payload)
}

func (o *PostCoachingAppointmentAnnotationsForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostCoachingAppointmentAnnotationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCoachingAppointmentAnnotationsNotFound creates a PostCoachingAppointmentAnnotationsNotFound with default headers values
func NewPostCoachingAppointmentAnnotationsNotFound() *PostCoachingAppointmentAnnotationsNotFound {
	return &PostCoachingAppointmentAnnotationsNotFound{}
}

/*
PostCoachingAppointmentAnnotationsNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type PostCoachingAppointmentAnnotationsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post coaching appointment annotations not found response has a 2xx status code
func (o *PostCoachingAppointmentAnnotationsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post coaching appointment annotations not found response has a 3xx status code
func (o *PostCoachingAppointmentAnnotationsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post coaching appointment annotations not found response has a 4xx status code
func (o *PostCoachingAppointmentAnnotationsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post coaching appointment annotations not found response has a 5xx status code
func (o *PostCoachingAppointmentAnnotationsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post coaching appointment annotations not found response a status code equal to that given
func (o *PostCoachingAppointmentAnnotationsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostCoachingAppointmentAnnotationsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/coaching/appointments/{appointmentId}/annotations][%d] postCoachingAppointmentAnnotationsNotFound  %+v", 404, o.Payload)
}

func (o *PostCoachingAppointmentAnnotationsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v2/coaching/appointments/{appointmentId}/annotations][%d] postCoachingAppointmentAnnotationsNotFound  %+v", 404, o.Payload)
}

func (o *PostCoachingAppointmentAnnotationsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostCoachingAppointmentAnnotationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCoachingAppointmentAnnotationsRequestTimeout creates a PostCoachingAppointmentAnnotationsRequestTimeout with default headers values
func NewPostCoachingAppointmentAnnotationsRequestTimeout() *PostCoachingAppointmentAnnotationsRequestTimeout {
	return &PostCoachingAppointmentAnnotationsRequestTimeout{}
}

/*
PostCoachingAppointmentAnnotationsRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type PostCoachingAppointmentAnnotationsRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post coaching appointment annotations request timeout response has a 2xx status code
func (o *PostCoachingAppointmentAnnotationsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post coaching appointment annotations request timeout response has a 3xx status code
func (o *PostCoachingAppointmentAnnotationsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post coaching appointment annotations request timeout response has a 4xx status code
func (o *PostCoachingAppointmentAnnotationsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post coaching appointment annotations request timeout response has a 5xx status code
func (o *PostCoachingAppointmentAnnotationsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post coaching appointment annotations request timeout response a status code equal to that given
func (o *PostCoachingAppointmentAnnotationsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *PostCoachingAppointmentAnnotationsRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/coaching/appointments/{appointmentId}/annotations][%d] postCoachingAppointmentAnnotationsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostCoachingAppointmentAnnotationsRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/coaching/appointments/{appointmentId}/annotations][%d] postCoachingAppointmentAnnotationsRequestTimeout  %+v", 408, o.Payload)
}

func (o *PostCoachingAppointmentAnnotationsRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostCoachingAppointmentAnnotationsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCoachingAppointmentAnnotationsRequestEntityTooLarge creates a PostCoachingAppointmentAnnotationsRequestEntityTooLarge with default headers values
func NewPostCoachingAppointmentAnnotationsRequestEntityTooLarge() *PostCoachingAppointmentAnnotationsRequestEntityTooLarge {
	return &PostCoachingAppointmentAnnotationsRequestEntityTooLarge{}
}

/*
PostCoachingAppointmentAnnotationsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type PostCoachingAppointmentAnnotationsRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post coaching appointment annotations request entity too large response has a 2xx status code
func (o *PostCoachingAppointmentAnnotationsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post coaching appointment annotations request entity too large response has a 3xx status code
func (o *PostCoachingAppointmentAnnotationsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post coaching appointment annotations request entity too large response has a 4xx status code
func (o *PostCoachingAppointmentAnnotationsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this post coaching appointment annotations request entity too large response has a 5xx status code
func (o *PostCoachingAppointmentAnnotationsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this post coaching appointment annotations request entity too large response a status code equal to that given
func (o *PostCoachingAppointmentAnnotationsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *PostCoachingAppointmentAnnotationsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /api/v2/coaching/appointments/{appointmentId}/annotations][%d] postCoachingAppointmentAnnotationsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostCoachingAppointmentAnnotationsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /api/v2/coaching/appointments/{appointmentId}/annotations][%d] postCoachingAppointmentAnnotationsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PostCoachingAppointmentAnnotationsRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostCoachingAppointmentAnnotationsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCoachingAppointmentAnnotationsUnsupportedMediaType creates a PostCoachingAppointmentAnnotationsUnsupportedMediaType with default headers values
func NewPostCoachingAppointmentAnnotationsUnsupportedMediaType() *PostCoachingAppointmentAnnotationsUnsupportedMediaType {
	return &PostCoachingAppointmentAnnotationsUnsupportedMediaType{}
}

/*
PostCoachingAppointmentAnnotationsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PostCoachingAppointmentAnnotationsUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post coaching appointment annotations unsupported media type response has a 2xx status code
func (o *PostCoachingAppointmentAnnotationsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post coaching appointment annotations unsupported media type response has a 3xx status code
func (o *PostCoachingAppointmentAnnotationsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post coaching appointment annotations unsupported media type response has a 4xx status code
func (o *PostCoachingAppointmentAnnotationsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this post coaching appointment annotations unsupported media type response has a 5xx status code
func (o *PostCoachingAppointmentAnnotationsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this post coaching appointment annotations unsupported media type response a status code equal to that given
func (o *PostCoachingAppointmentAnnotationsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *PostCoachingAppointmentAnnotationsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/v2/coaching/appointments/{appointmentId}/annotations][%d] postCoachingAppointmentAnnotationsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostCoachingAppointmentAnnotationsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /api/v2/coaching/appointments/{appointmentId}/annotations][%d] postCoachingAppointmentAnnotationsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostCoachingAppointmentAnnotationsUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostCoachingAppointmentAnnotationsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCoachingAppointmentAnnotationsTooManyRequests creates a PostCoachingAppointmentAnnotationsTooManyRequests with default headers values
func NewPostCoachingAppointmentAnnotationsTooManyRequests() *PostCoachingAppointmentAnnotationsTooManyRequests {
	return &PostCoachingAppointmentAnnotationsTooManyRequests{}
}

/*
PostCoachingAppointmentAnnotationsTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type PostCoachingAppointmentAnnotationsTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post coaching appointment annotations too many requests response has a 2xx status code
func (o *PostCoachingAppointmentAnnotationsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post coaching appointment annotations too many requests response has a 3xx status code
func (o *PostCoachingAppointmentAnnotationsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post coaching appointment annotations too many requests response has a 4xx status code
func (o *PostCoachingAppointmentAnnotationsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post coaching appointment annotations too many requests response has a 5xx status code
func (o *PostCoachingAppointmentAnnotationsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post coaching appointment annotations too many requests response a status code equal to that given
func (o *PostCoachingAppointmentAnnotationsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *PostCoachingAppointmentAnnotationsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/coaching/appointments/{appointmentId}/annotations][%d] postCoachingAppointmentAnnotationsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostCoachingAppointmentAnnotationsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/v2/coaching/appointments/{appointmentId}/annotations][%d] postCoachingAppointmentAnnotationsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostCoachingAppointmentAnnotationsTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostCoachingAppointmentAnnotationsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCoachingAppointmentAnnotationsInternalServerError creates a PostCoachingAppointmentAnnotationsInternalServerError with default headers values
func NewPostCoachingAppointmentAnnotationsInternalServerError() *PostCoachingAppointmentAnnotationsInternalServerError {
	return &PostCoachingAppointmentAnnotationsInternalServerError{}
}

/*
PostCoachingAppointmentAnnotationsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PostCoachingAppointmentAnnotationsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post coaching appointment annotations internal server error response has a 2xx status code
func (o *PostCoachingAppointmentAnnotationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post coaching appointment annotations internal server error response has a 3xx status code
func (o *PostCoachingAppointmentAnnotationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post coaching appointment annotations internal server error response has a 4xx status code
func (o *PostCoachingAppointmentAnnotationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post coaching appointment annotations internal server error response has a 5xx status code
func (o *PostCoachingAppointmentAnnotationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post coaching appointment annotations internal server error response a status code equal to that given
func (o *PostCoachingAppointmentAnnotationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostCoachingAppointmentAnnotationsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/coaching/appointments/{appointmentId}/annotations][%d] postCoachingAppointmentAnnotationsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostCoachingAppointmentAnnotationsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/coaching/appointments/{appointmentId}/annotations][%d] postCoachingAppointmentAnnotationsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostCoachingAppointmentAnnotationsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostCoachingAppointmentAnnotationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCoachingAppointmentAnnotationsServiceUnavailable creates a PostCoachingAppointmentAnnotationsServiceUnavailable with default headers values
func NewPostCoachingAppointmentAnnotationsServiceUnavailable() *PostCoachingAppointmentAnnotationsServiceUnavailable {
	return &PostCoachingAppointmentAnnotationsServiceUnavailable{}
}

/*
PostCoachingAppointmentAnnotationsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PostCoachingAppointmentAnnotationsServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post coaching appointment annotations service unavailable response has a 2xx status code
func (o *PostCoachingAppointmentAnnotationsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post coaching appointment annotations service unavailable response has a 3xx status code
func (o *PostCoachingAppointmentAnnotationsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post coaching appointment annotations service unavailable response has a 4xx status code
func (o *PostCoachingAppointmentAnnotationsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post coaching appointment annotations service unavailable response has a 5xx status code
func (o *PostCoachingAppointmentAnnotationsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post coaching appointment annotations service unavailable response a status code equal to that given
func (o *PostCoachingAppointmentAnnotationsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostCoachingAppointmentAnnotationsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/v2/coaching/appointments/{appointmentId}/annotations][%d] postCoachingAppointmentAnnotationsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostCoachingAppointmentAnnotationsServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /api/v2/coaching/appointments/{appointmentId}/annotations][%d] postCoachingAppointmentAnnotationsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostCoachingAppointmentAnnotationsServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostCoachingAppointmentAnnotationsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCoachingAppointmentAnnotationsGatewayTimeout creates a PostCoachingAppointmentAnnotationsGatewayTimeout with default headers values
func NewPostCoachingAppointmentAnnotationsGatewayTimeout() *PostCoachingAppointmentAnnotationsGatewayTimeout {
	return &PostCoachingAppointmentAnnotationsGatewayTimeout{}
}

/*
PostCoachingAppointmentAnnotationsGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type PostCoachingAppointmentAnnotationsGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this post coaching appointment annotations gateway timeout response has a 2xx status code
func (o *PostCoachingAppointmentAnnotationsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post coaching appointment annotations gateway timeout response has a 3xx status code
func (o *PostCoachingAppointmentAnnotationsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post coaching appointment annotations gateway timeout response has a 4xx status code
func (o *PostCoachingAppointmentAnnotationsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post coaching appointment annotations gateway timeout response has a 5xx status code
func (o *PostCoachingAppointmentAnnotationsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post coaching appointment annotations gateway timeout response a status code equal to that given
func (o *PostCoachingAppointmentAnnotationsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostCoachingAppointmentAnnotationsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /api/v2/coaching/appointments/{appointmentId}/annotations][%d] postCoachingAppointmentAnnotationsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostCoachingAppointmentAnnotationsGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /api/v2/coaching/appointments/{appointmentId}/annotations][%d] postCoachingAppointmentAnnotationsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostCoachingAppointmentAnnotationsGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PostCoachingAppointmentAnnotationsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
