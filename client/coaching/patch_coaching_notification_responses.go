// Code generated by go-swagger; DO NOT EDIT.

package coaching

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PatchCoachingNotificationReader is a Reader for the PatchCoachingNotification structure.
type PatchCoachingNotificationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchCoachingNotificationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchCoachingNotificationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchCoachingNotificationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchCoachingNotificationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchCoachingNotificationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchCoachingNotificationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPatchCoachingNotificationRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchCoachingNotificationUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPatchCoachingNotificationTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchCoachingNotificationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPatchCoachingNotificationServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPatchCoachingNotificationGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchCoachingNotificationOK creates a PatchCoachingNotificationOK with default headers values
func NewPatchCoachingNotificationOK() *PatchCoachingNotificationOK {
	return &PatchCoachingNotificationOK{}
}

/*PatchCoachingNotificationOK handles this case with default header values.

successful operation
*/
type PatchCoachingNotificationOK struct {
	Payload *models.CoachingNotification
}

func (o *PatchCoachingNotificationOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/coaching/notifications/{notificationId}][%d] patchCoachingNotificationOK  %+v", 200, o.Payload)
}

func (o *PatchCoachingNotificationOK) GetPayload() *models.CoachingNotification {
	return o.Payload
}

func (o *PatchCoachingNotificationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoachingNotification)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCoachingNotificationBadRequest creates a PatchCoachingNotificationBadRequest with default headers values
func NewPatchCoachingNotificationBadRequest() *PatchCoachingNotificationBadRequest {
	return &PatchCoachingNotificationBadRequest{}
}

/*PatchCoachingNotificationBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PatchCoachingNotificationBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PatchCoachingNotificationBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/coaching/notifications/{notificationId}][%d] patchCoachingNotificationBadRequest  %+v", 400, o.Payload)
}

func (o *PatchCoachingNotificationBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchCoachingNotificationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCoachingNotificationUnauthorized creates a PatchCoachingNotificationUnauthorized with default headers values
func NewPatchCoachingNotificationUnauthorized() *PatchCoachingNotificationUnauthorized {
	return &PatchCoachingNotificationUnauthorized{}
}

/*PatchCoachingNotificationUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PatchCoachingNotificationUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PatchCoachingNotificationUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/coaching/notifications/{notificationId}][%d] patchCoachingNotificationUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchCoachingNotificationUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchCoachingNotificationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCoachingNotificationForbidden creates a PatchCoachingNotificationForbidden with default headers values
func NewPatchCoachingNotificationForbidden() *PatchCoachingNotificationForbidden {
	return &PatchCoachingNotificationForbidden{}
}

/*PatchCoachingNotificationForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PatchCoachingNotificationForbidden struct {
	Payload *models.ErrorBody
}

func (o *PatchCoachingNotificationForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/coaching/notifications/{notificationId}][%d] patchCoachingNotificationForbidden  %+v", 403, o.Payload)
}

func (o *PatchCoachingNotificationForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchCoachingNotificationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCoachingNotificationNotFound creates a PatchCoachingNotificationNotFound with default headers values
func NewPatchCoachingNotificationNotFound() *PatchCoachingNotificationNotFound {
	return &PatchCoachingNotificationNotFound{}
}

/*PatchCoachingNotificationNotFound handles this case with default header values.

The requested resource was not found.
*/
type PatchCoachingNotificationNotFound struct {
	Payload *models.ErrorBody
}

func (o *PatchCoachingNotificationNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/coaching/notifications/{notificationId}][%d] patchCoachingNotificationNotFound  %+v", 404, o.Payload)
}

func (o *PatchCoachingNotificationNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchCoachingNotificationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCoachingNotificationRequestEntityTooLarge creates a PatchCoachingNotificationRequestEntityTooLarge with default headers values
func NewPatchCoachingNotificationRequestEntityTooLarge() *PatchCoachingNotificationRequestEntityTooLarge {
	return &PatchCoachingNotificationRequestEntityTooLarge{}
}

/*PatchCoachingNotificationRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type PatchCoachingNotificationRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PatchCoachingNotificationRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/coaching/notifications/{notificationId}][%d] patchCoachingNotificationRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchCoachingNotificationRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchCoachingNotificationRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCoachingNotificationUnsupportedMediaType creates a PatchCoachingNotificationUnsupportedMediaType with default headers values
func NewPatchCoachingNotificationUnsupportedMediaType() *PatchCoachingNotificationUnsupportedMediaType {
	return &PatchCoachingNotificationUnsupportedMediaType{}
}

/*PatchCoachingNotificationUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PatchCoachingNotificationUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PatchCoachingNotificationUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/coaching/notifications/{notificationId}][%d] patchCoachingNotificationUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchCoachingNotificationUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchCoachingNotificationUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCoachingNotificationTooManyRequests creates a PatchCoachingNotificationTooManyRequests with default headers values
func NewPatchCoachingNotificationTooManyRequests() *PatchCoachingNotificationTooManyRequests {
	return &PatchCoachingNotificationTooManyRequests{}
}

/*PatchCoachingNotificationTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type PatchCoachingNotificationTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PatchCoachingNotificationTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/coaching/notifications/{notificationId}][%d] patchCoachingNotificationTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchCoachingNotificationTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchCoachingNotificationTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCoachingNotificationInternalServerError creates a PatchCoachingNotificationInternalServerError with default headers values
func NewPatchCoachingNotificationInternalServerError() *PatchCoachingNotificationInternalServerError {
	return &PatchCoachingNotificationInternalServerError{}
}

/*PatchCoachingNotificationInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PatchCoachingNotificationInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PatchCoachingNotificationInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/coaching/notifications/{notificationId}][%d] patchCoachingNotificationInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchCoachingNotificationInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchCoachingNotificationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCoachingNotificationServiceUnavailable creates a PatchCoachingNotificationServiceUnavailable with default headers values
func NewPatchCoachingNotificationServiceUnavailable() *PatchCoachingNotificationServiceUnavailable {
	return &PatchCoachingNotificationServiceUnavailable{}
}

/*PatchCoachingNotificationServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PatchCoachingNotificationServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PatchCoachingNotificationServiceUnavailable) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/coaching/notifications/{notificationId}][%d] patchCoachingNotificationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchCoachingNotificationServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchCoachingNotificationServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCoachingNotificationGatewayTimeout creates a PatchCoachingNotificationGatewayTimeout with default headers values
func NewPatchCoachingNotificationGatewayTimeout() *PatchCoachingNotificationGatewayTimeout {
	return &PatchCoachingNotificationGatewayTimeout{}
}

/*PatchCoachingNotificationGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PatchCoachingNotificationGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PatchCoachingNotificationGatewayTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/coaching/notifications/{notificationId}][%d] patchCoachingNotificationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchCoachingNotificationGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchCoachingNotificationGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
