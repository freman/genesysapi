// Code generated by go-swagger; DO NOT EDIT.

package coaching

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetCoachingAppointmentsMeReader is a Reader for the GetCoachingAppointmentsMe structure.
type GetCoachingAppointmentsMeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCoachingAppointmentsMeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCoachingAppointmentsMeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCoachingAppointmentsMeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCoachingAppointmentsMeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCoachingAppointmentsMeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCoachingAppointmentsMeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetCoachingAppointmentsMeRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetCoachingAppointmentsMeRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetCoachingAppointmentsMeUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetCoachingAppointmentsMeTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCoachingAppointmentsMeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetCoachingAppointmentsMeServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetCoachingAppointmentsMeGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCoachingAppointmentsMeOK creates a GetCoachingAppointmentsMeOK with default headers values
func NewGetCoachingAppointmentsMeOK() *GetCoachingAppointmentsMeOK {
	return &GetCoachingAppointmentsMeOK{}
}

/*
GetCoachingAppointmentsMeOK describes a response with status code 200, with default header values.

Get my coaching appointments successful
*/
type GetCoachingAppointmentsMeOK struct {
	Payload *models.CoachingAppointmentResponseList
}

// IsSuccess returns true when this get coaching appointments me o k response has a 2xx status code
func (o *GetCoachingAppointmentsMeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get coaching appointments me o k response has a 3xx status code
func (o *GetCoachingAppointmentsMeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointments me o k response has a 4xx status code
func (o *GetCoachingAppointmentsMeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get coaching appointments me o k response has a 5xx status code
func (o *GetCoachingAppointmentsMeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching appointments me o k response a status code equal to that given
func (o *GetCoachingAppointmentsMeOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetCoachingAppointmentsMeOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/me][%d] getCoachingAppointmentsMeOK  %+v", 200, o.Payload)
}

func (o *GetCoachingAppointmentsMeOK) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/me][%d] getCoachingAppointmentsMeOK  %+v", 200, o.Payload)
}

func (o *GetCoachingAppointmentsMeOK) GetPayload() *models.CoachingAppointmentResponseList {
	return o.Payload
}

func (o *GetCoachingAppointmentsMeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoachingAppointmentResponseList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentsMeBadRequest creates a GetCoachingAppointmentsMeBadRequest with default headers values
func NewGetCoachingAppointmentsMeBadRequest() *GetCoachingAppointmentsMeBadRequest {
	return &GetCoachingAppointmentsMeBadRequest{}
}

/*
GetCoachingAppointmentsMeBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetCoachingAppointmentsMeBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointments me bad request response has a 2xx status code
func (o *GetCoachingAppointmentsMeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointments me bad request response has a 3xx status code
func (o *GetCoachingAppointmentsMeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointments me bad request response has a 4xx status code
func (o *GetCoachingAppointmentsMeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get coaching appointments me bad request response has a 5xx status code
func (o *GetCoachingAppointmentsMeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching appointments me bad request response a status code equal to that given
func (o *GetCoachingAppointmentsMeBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetCoachingAppointmentsMeBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/me][%d] getCoachingAppointmentsMeBadRequest  %+v", 400, o.Payload)
}

func (o *GetCoachingAppointmentsMeBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/me][%d] getCoachingAppointmentsMeBadRequest  %+v", 400, o.Payload)
}

func (o *GetCoachingAppointmentsMeBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentsMeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentsMeUnauthorized creates a GetCoachingAppointmentsMeUnauthorized with default headers values
func NewGetCoachingAppointmentsMeUnauthorized() *GetCoachingAppointmentsMeUnauthorized {
	return &GetCoachingAppointmentsMeUnauthorized{}
}

/*
GetCoachingAppointmentsMeUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetCoachingAppointmentsMeUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointments me unauthorized response has a 2xx status code
func (o *GetCoachingAppointmentsMeUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointments me unauthorized response has a 3xx status code
func (o *GetCoachingAppointmentsMeUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointments me unauthorized response has a 4xx status code
func (o *GetCoachingAppointmentsMeUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get coaching appointments me unauthorized response has a 5xx status code
func (o *GetCoachingAppointmentsMeUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching appointments me unauthorized response a status code equal to that given
func (o *GetCoachingAppointmentsMeUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetCoachingAppointmentsMeUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/me][%d] getCoachingAppointmentsMeUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCoachingAppointmentsMeUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/me][%d] getCoachingAppointmentsMeUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCoachingAppointmentsMeUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentsMeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentsMeForbidden creates a GetCoachingAppointmentsMeForbidden with default headers values
func NewGetCoachingAppointmentsMeForbidden() *GetCoachingAppointmentsMeForbidden {
	return &GetCoachingAppointmentsMeForbidden{}
}

/*
GetCoachingAppointmentsMeForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetCoachingAppointmentsMeForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointments me forbidden response has a 2xx status code
func (o *GetCoachingAppointmentsMeForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointments me forbidden response has a 3xx status code
func (o *GetCoachingAppointmentsMeForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointments me forbidden response has a 4xx status code
func (o *GetCoachingAppointmentsMeForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get coaching appointments me forbidden response has a 5xx status code
func (o *GetCoachingAppointmentsMeForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching appointments me forbidden response a status code equal to that given
func (o *GetCoachingAppointmentsMeForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetCoachingAppointmentsMeForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/me][%d] getCoachingAppointmentsMeForbidden  %+v", 403, o.Payload)
}

func (o *GetCoachingAppointmentsMeForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/me][%d] getCoachingAppointmentsMeForbidden  %+v", 403, o.Payload)
}

func (o *GetCoachingAppointmentsMeForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentsMeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentsMeNotFound creates a GetCoachingAppointmentsMeNotFound with default headers values
func NewGetCoachingAppointmentsMeNotFound() *GetCoachingAppointmentsMeNotFound {
	return &GetCoachingAppointmentsMeNotFound{}
}

/*
GetCoachingAppointmentsMeNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetCoachingAppointmentsMeNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointments me not found response has a 2xx status code
func (o *GetCoachingAppointmentsMeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointments me not found response has a 3xx status code
func (o *GetCoachingAppointmentsMeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointments me not found response has a 4xx status code
func (o *GetCoachingAppointmentsMeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get coaching appointments me not found response has a 5xx status code
func (o *GetCoachingAppointmentsMeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching appointments me not found response a status code equal to that given
func (o *GetCoachingAppointmentsMeNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetCoachingAppointmentsMeNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/me][%d] getCoachingAppointmentsMeNotFound  %+v", 404, o.Payload)
}

func (o *GetCoachingAppointmentsMeNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/me][%d] getCoachingAppointmentsMeNotFound  %+v", 404, o.Payload)
}

func (o *GetCoachingAppointmentsMeNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentsMeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentsMeRequestTimeout creates a GetCoachingAppointmentsMeRequestTimeout with default headers values
func NewGetCoachingAppointmentsMeRequestTimeout() *GetCoachingAppointmentsMeRequestTimeout {
	return &GetCoachingAppointmentsMeRequestTimeout{}
}

/*
GetCoachingAppointmentsMeRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetCoachingAppointmentsMeRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointments me request timeout response has a 2xx status code
func (o *GetCoachingAppointmentsMeRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointments me request timeout response has a 3xx status code
func (o *GetCoachingAppointmentsMeRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointments me request timeout response has a 4xx status code
func (o *GetCoachingAppointmentsMeRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get coaching appointments me request timeout response has a 5xx status code
func (o *GetCoachingAppointmentsMeRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching appointments me request timeout response a status code equal to that given
func (o *GetCoachingAppointmentsMeRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetCoachingAppointmentsMeRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/me][%d] getCoachingAppointmentsMeRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetCoachingAppointmentsMeRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/me][%d] getCoachingAppointmentsMeRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetCoachingAppointmentsMeRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentsMeRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentsMeRequestEntityTooLarge creates a GetCoachingAppointmentsMeRequestEntityTooLarge with default headers values
func NewGetCoachingAppointmentsMeRequestEntityTooLarge() *GetCoachingAppointmentsMeRequestEntityTooLarge {
	return &GetCoachingAppointmentsMeRequestEntityTooLarge{}
}

/*
GetCoachingAppointmentsMeRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetCoachingAppointmentsMeRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointments me request entity too large response has a 2xx status code
func (o *GetCoachingAppointmentsMeRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointments me request entity too large response has a 3xx status code
func (o *GetCoachingAppointmentsMeRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointments me request entity too large response has a 4xx status code
func (o *GetCoachingAppointmentsMeRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get coaching appointments me request entity too large response has a 5xx status code
func (o *GetCoachingAppointmentsMeRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching appointments me request entity too large response a status code equal to that given
func (o *GetCoachingAppointmentsMeRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetCoachingAppointmentsMeRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/me][%d] getCoachingAppointmentsMeRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetCoachingAppointmentsMeRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/me][%d] getCoachingAppointmentsMeRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetCoachingAppointmentsMeRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentsMeRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentsMeUnsupportedMediaType creates a GetCoachingAppointmentsMeUnsupportedMediaType with default headers values
func NewGetCoachingAppointmentsMeUnsupportedMediaType() *GetCoachingAppointmentsMeUnsupportedMediaType {
	return &GetCoachingAppointmentsMeUnsupportedMediaType{}
}

/*
GetCoachingAppointmentsMeUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetCoachingAppointmentsMeUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointments me unsupported media type response has a 2xx status code
func (o *GetCoachingAppointmentsMeUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointments me unsupported media type response has a 3xx status code
func (o *GetCoachingAppointmentsMeUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointments me unsupported media type response has a 4xx status code
func (o *GetCoachingAppointmentsMeUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get coaching appointments me unsupported media type response has a 5xx status code
func (o *GetCoachingAppointmentsMeUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching appointments me unsupported media type response a status code equal to that given
func (o *GetCoachingAppointmentsMeUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetCoachingAppointmentsMeUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/me][%d] getCoachingAppointmentsMeUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetCoachingAppointmentsMeUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/me][%d] getCoachingAppointmentsMeUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetCoachingAppointmentsMeUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentsMeUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentsMeTooManyRequests creates a GetCoachingAppointmentsMeTooManyRequests with default headers values
func NewGetCoachingAppointmentsMeTooManyRequests() *GetCoachingAppointmentsMeTooManyRequests {
	return &GetCoachingAppointmentsMeTooManyRequests{}
}

/*
GetCoachingAppointmentsMeTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetCoachingAppointmentsMeTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointments me too many requests response has a 2xx status code
func (o *GetCoachingAppointmentsMeTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointments me too many requests response has a 3xx status code
func (o *GetCoachingAppointmentsMeTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointments me too many requests response has a 4xx status code
func (o *GetCoachingAppointmentsMeTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get coaching appointments me too many requests response has a 5xx status code
func (o *GetCoachingAppointmentsMeTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching appointments me too many requests response a status code equal to that given
func (o *GetCoachingAppointmentsMeTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetCoachingAppointmentsMeTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/me][%d] getCoachingAppointmentsMeTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetCoachingAppointmentsMeTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/me][%d] getCoachingAppointmentsMeTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetCoachingAppointmentsMeTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentsMeTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentsMeInternalServerError creates a GetCoachingAppointmentsMeInternalServerError with default headers values
func NewGetCoachingAppointmentsMeInternalServerError() *GetCoachingAppointmentsMeInternalServerError {
	return &GetCoachingAppointmentsMeInternalServerError{}
}

/*
GetCoachingAppointmentsMeInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetCoachingAppointmentsMeInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointments me internal server error response has a 2xx status code
func (o *GetCoachingAppointmentsMeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointments me internal server error response has a 3xx status code
func (o *GetCoachingAppointmentsMeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointments me internal server error response has a 4xx status code
func (o *GetCoachingAppointmentsMeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get coaching appointments me internal server error response has a 5xx status code
func (o *GetCoachingAppointmentsMeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get coaching appointments me internal server error response a status code equal to that given
func (o *GetCoachingAppointmentsMeInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetCoachingAppointmentsMeInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/me][%d] getCoachingAppointmentsMeInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCoachingAppointmentsMeInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/me][%d] getCoachingAppointmentsMeInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCoachingAppointmentsMeInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentsMeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentsMeServiceUnavailable creates a GetCoachingAppointmentsMeServiceUnavailable with default headers values
func NewGetCoachingAppointmentsMeServiceUnavailable() *GetCoachingAppointmentsMeServiceUnavailable {
	return &GetCoachingAppointmentsMeServiceUnavailable{}
}

/*
GetCoachingAppointmentsMeServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetCoachingAppointmentsMeServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointments me service unavailable response has a 2xx status code
func (o *GetCoachingAppointmentsMeServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointments me service unavailable response has a 3xx status code
func (o *GetCoachingAppointmentsMeServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointments me service unavailable response has a 4xx status code
func (o *GetCoachingAppointmentsMeServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get coaching appointments me service unavailable response has a 5xx status code
func (o *GetCoachingAppointmentsMeServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get coaching appointments me service unavailable response a status code equal to that given
func (o *GetCoachingAppointmentsMeServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetCoachingAppointmentsMeServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/me][%d] getCoachingAppointmentsMeServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCoachingAppointmentsMeServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/me][%d] getCoachingAppointmentsMeServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCoachingAppointmentsMeServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentsMeServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentsMeGatewayTimeout creates a GetCoachingAppointmentsMeGatewayTimeout with default headers values
func NewGetCoachingAppointmentsMeGatewayTimeout() *GetCoachingAppointmentsMeGatewayTimeout {
	return &GetCoachingAppointmentsMeGatewayTimeout{}
}

/*
GetCoachingAppointmentsMeGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetCoachingAppointmentsMeGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointments me gateway timeout response has a 2xx status code
func (o *GetCoachingAppointmentsMeGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointments me gateway timeout response has a 3xx status code
func (o *GetCoachingAppointmentsMeGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointments me gateway timeout response has a 4xx status code
func (o *GetCoachingAppointmentsMeGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get coaching appointments me gateway timeout response has a 5xx status code
func (o *GetCoachingAppointmentsMeGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get coaching appointments me gateway timeout response a status code equal to that given
func (o *GetCoachingAppointmentsMeGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetCoachingAppointmentsMeGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/me][%d] getCoachingAppointmentsMeGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCoachingAppointmentsMeGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/me][%d] getCoachingAppointmentsMeGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCoachingAppointmentsMeGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentsMeGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
