// Code generated by go-swagger; DO NOT EDIT.

package coaching

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetCoachingNotificationReader is a Reader for the GetCoachingNotification structure.
type GetCoachingNotificationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCoachingNotificationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCoachingNotificationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCoachingNotificationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCoachingNotificationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCoachingNotificationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCoachingNotificationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetCoachingNotificationRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetCoachingNotificationRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetCoachingNotificationUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetCoachingNotificationTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCoachingNotificationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetCoachingNotificationServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetCoachingNotificationGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCoachingNotificationOK creates a GetCoachingNotificationOK with default headers values
func NewGetCoachingNotificationOK() *GetCoachingNotificationOK {
	return &GetCoachingNotificationOK{}
}

/*
GetCoachingNotificationOK describes a response with status code 200, with default header values.

successful operation
*/
type GetCoachingNotificationOK struct {
	Payload *models.CoachingNotification
}

// IsSuccess returns true when this get coaching notification o k response has a 2xx status code
func (o *GetCoachingNotificationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get coaching notification o k response has a 3xx status code
func (o *GetCoachingNotificationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching notification o k response has a 4xx status code
func (o *GetCoachingNotificationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get coaching notification o k response has a 5xx status code
func (o *GetCoachingNotificationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching notification o k response a status code equal to that given
func (o *GetCoachingNotificationOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetCoachingNotificationOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/notifications/{notificationId}][%d] getCoachingNotificationOK  %+v", 200, o.Payload)
}

func (o *GetCoachingNotificationOK) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/notifications/{notificationId}][%d] getCoachingNotificationOK  %+v", 200, o.Payload)
}

func (o *GetCoachingNotificationOK) GetPayload() *models.CoachingNotification {
	return o.Payload
}

func (o *GetCoachingNotificationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoachingNotification)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingNotificationBadRequest creates a GetCoachingNotificationBadRequest with default headers values
func NewGetCoachingNotificationBadRequest() *GetCoachingNotificationBadRequest {
	return &GetCoachingNotificationBadRequest{}
}

/*
GetCoachingNotificationBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetCoachingNotificationBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching notification bad request response has a 2xx status code
func (o *GetCoachingNotificationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching notification bad request response has a 3xx status code
func (o *GetCoachingNotificationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching notification bad request response has a 4xx status code
func (o *GetCoachingNotificationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get coaching notification bad request response has a 5xx status code
func (o *GetCoachingNotificationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching notification bad request response a status code equal to that given
func (o *GetCoachingNotificationBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetCoachingNotificationBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/notifications/{notificationId}][%d] getCoachingNotificationBadRequest  %+v", 400, o.Payload)
}

func (o *GetCoachingNotificationBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/notifications/{notificationId}][%d] getCoachingNotificationBadRequest  %+v", 400, o.Payload)
}

func (o *GetCoachingNotificationBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingNotificationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingNotificationUnauthorized creates a GetCoachingNotificationUnauthorized with default headers values
func NewGetCoachingNotificationUnauthorized() *GetCoachingNotificationUnauthorized {
	return &GetCoachingNotificationUnauthorized{}
}

/*
GetCoachingNotificationUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetCoachingNotificationUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching notification unauthorized response has a 2xx status code
func (o *GetCoachingNotificationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching notification unauthorized response has a 3xx status code
func (o *GetCoachingNotificationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching notification unauthorized response has a 4xx status code
func (o *GetCoachingNotificationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get coaching notification unauthorized response has a 5xx status code
func (o *GetCoachingNotificationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching notification unauthorized response a status code equal to that given
func (o *GetCoachingNotificationUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetCoachingNotificationUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/notifications/{notificationId}][%d] getCoachingNotificationUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCoachingNotificationUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/notifications/{notificationId}][%d] getCoachingNotificationUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCoachingNotificationUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingNotificationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingNotificationForbidden creates a GetCoachingNotificationForbidden with default headers values
func NewGetCoachingNotificationForbidden() *GetCoachingNotificationForbidden {
	return &GetCoachingNotificationForbidden{}
}

/*
GetCoachingNotificationForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetCoachingNotificationForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching notification forbidden response has a 2xx status code
func (o *GetCoachingNotificationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching notification forbidden response has a 3xx status code
func (o *GetCoachingNotificationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching notification forbidden response has a 4xx status code
func (o *GetCoachingNotificationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get coaching notification forbidden response has a 5xx status code
func (o *GetCoachingNotificationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching notification forbidden response a status code equal to that given
func (o *GetCoachingNotificationForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetCoachingNotificationForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/notifications/{notificationId}][%d] getCoachingNotificationForbidden  %+v", 403, o.Payload)
}

func (o *GetCoachingNotificationForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/notifications/{notificationId}][%d] getCoachingNotificationForbidden  %+v", 403, o.Payload)
}

func (o *GetCoachingNotificationForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingNotificationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingNotificationNotFound creates a GetCoachingNotificationNotFound with default headers values
func NewGetCoachingNotificationNotFound() *GetCoachingNotificationNotFound {
	return &GetCoachingNotificationNotFound{}
}

/*
GetCoachingNotificationNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetCoachingNotificationNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching notification not found response has a 2xx status code
func (o *GetCoachingNotificationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching notification not found response has a 3xx status code
func (o *GetCoachingNotificationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching notification not found response has a 4xx status code
func (o *GetCoachingNotificationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get coaching notification not found response has a 5xx status code
func (o *GetCoachingNotificationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching notification not found response a status code equal to that given
func (o *GetCoachingNotificationNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetCoachingNotificationNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/notifications/{notificationId}][%d] getCoachingNotificationNotFound  %+v", 404, o.Payload)
}

func (o *GetCoachingNotificationNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/notifications/{notificationId}][%d] getCoachingNotificationNotFound  %+v", 404, o.Payload)
}

func (o *GetCoachingNotificationNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingNotificationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingNotificationRequestTimeout creates a GetCoachingNotificationRequestTimeout with default headers values
func NewGetCoachingNotificationRequestTimeout() *GetCoachingNotificationRequestTimeout {
	return &GetCoachingNotificationRequestTimeout{}
}

/*
GetCoachingNotificationRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetCoachingNotificationRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching notification request timeout response has a 2xx status code
func (o *GetCoachingNotificationRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching notification request timeout response has a 3xx status code
func (o *GetCoachingNotificationRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching notification request timeout response has a 4xx status code
func (o *GetCoachingNotificationRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get coaching notification request timeout response has a 5xx status code
func (o *GetCoachingNotificationRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching notification request timeout response a status code equal to that given
func (o *GetCoachingNotificationRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetCoachingNotificationRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/notifications/{notificationId}][%d] getCoachingNotificationRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetCoachingNotificationRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/notifications/{notificationId}][%d] getCoachingNotificationRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetCoachingNotificationRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingNotificationRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingNotificationRequestEntityTooLarge creates a GetCoachingNotificationRequestEntityTooLarge with default headers values
func NewGetCoachingNotificationRequestEntityTooLarge() *GetCoachingNotificationRequestEntityTooLarge {
	return &GetCoachingNotificationRequestEntityTooLarge{}
}

/*
GetCoachingNotificationRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Maximum bytes: %s
*/
type GetCoachingNotificationRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching notification request entity too large response has a 2xx status code
func (o *GetCoachingNotificationRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching notification request entity too large response has a 3xx status code
func (o *GetCoachingNotificationRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching notification request entity too large response has a 4xx status code
func (o *GetCoachingNotificationRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get coaching notification request entity too large response has a 5xx status code
func (o *GetCoachingNotificationRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching notification request entity too large response a status code equal to that given
func (o *GetCoachingNotificationRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetCoachingNotificationRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/notifications/{notificationId}][%d] getCoachingNotificationRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetCoachingNotificationRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/notifications/{notificationId}][%d] getCoachingNotificationRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetCoachingNotificationRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingNotificationRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingNotificationUnsupportedMediaType creates a GetCoachingNotificationUnsupportedMediaType with default headers values
func NewGetCoachingNotificationUnsupportedMediaType() *GetCoachingNotificationUnsupportedMediaType {
	return &GetCoachingNotificationUnsupportedMediaType{}
}

/*
GetCoachingNotificationUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetCoachingNotificationUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching notification unsupported media type response has a 2xx status code
func (o *GetCoachingNotificationUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching notification unsupported media type response has a 3xx status code
func (o *GetCoachingNotificationUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching notification unsupported media type response has a 4xx status code
func (o *GetCoachingNotificationUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get coaching notification unsupported media type response has a 5xx status code
func (o *GetCoachingNotificationUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching notification unsupported media type response a status code equal to that given
func (o *GetCoachingNotificationUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetCoachingNotificationUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/notifications/{notificationId}][%d] getCoachingNotificationUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetCoachingNotificationUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/notifications/{notificationId}][%d] getCoachingNotificationUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetCoachingNotificationUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingNotificationUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingNotificationTooManyRequests creates a GetCoachingNotificationTooManyRequests with default headers values
func NewGetCoachingNotificationTooManyRequests() *GetCoachingNotificationTooManyRequests {
	return &GetCoachingNotificationTooManyRequests{}
}

/*
GetCoachingNotificationTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetCoachingNotificationTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching notification too many requests response has a 2xx status code
func (o *GetCoachingNotificationTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching notification too many requests response has a 3xx status code
func (o *GetCoachingNotificationTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching notification too many requests response has a 4xx status code
func (o *GetCoachingNotificationTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get coaching notification too many requests response has a 5xx status code
func (o *GetCoachingNotificationTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching notification too many requests response a status code equal to that given
func (o *GetCoachingNotificationTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetCoachingNotificationTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/notifications/{notificationId}][%d] getCoachingNotificationTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetCoachingNotificationTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/notifications/{notificationId}][%d] getCoachingNotificationTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetCoachingNotificationTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingNotificationTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingNotificationInternalServerError creates a GetCoachingNotificationInternalServerError with default headers values
func NewGetCoachingNotificationInternalServerError() *GetCoachingNotificationInternalServerError {
	return &GetCoachingNotificationInternalServerError{}
}

/*
GetCoachingNotificationInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetCoachingNotificationInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching notification internal server error response has a 2xx status code
func (o *GetCoachingNotificationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching notification internal server error response has a 3xx status code
func (o *GetCoachingNotificationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching notification internal server error response has a 4xx status code
func (o *GetCoachingNotificationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get coaching notification internal server error response has a 5xx status code
func (o *GetCoachingNotificationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get coaching notification internal server error response a status code equal to that given
func (o *GetCoachingNotificationInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetCoachingNotificationInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/notifications/{notificationId}][%d] getCoachingNotificationInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCoachingNotificationInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/notifications/{notificationId}][%d] getCoachingNotificationInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCoachingNotificationInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingNotificationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingNotificationServiceUnavailable creates a GetCoachingNotificationServiceUnavailable with default headers values
func NewGetCoachingNotificationServiceUnavailable() *GetCoachingNotificationServiceUnavailable {
	return &GetCoachingNotificationServiceUnavailable{}
}

/*
GetCoachingNotificationServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetCoachingNotificationServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching notification service unavailable response has a 2xx status code
func (o *GetCoachingNotificationServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching notification service unavailable response has a 3xx status code
func (o *GetCoachingNotificationServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching notification service unavailable response has a 4xx status code
func (o *GetCoachingNotificationServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get coaching notification service unavailable response has a 5xx status code
func (o *GetCoachingNotificationServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get coaching notification service unavailable response a status code equal to that given
func (o *GetCoachingNotificationServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetCoachingNotificationServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/notifications/{notificationId}][%d] getCoachingNotificationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCoachingNotificationServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/notifications/{notificationId}][%d] getCoachingNotificationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCoachingNotificationServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingNotificationServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingNotificationGatewayTimeout creates a GetCoachingNotificationGatewayTimeout with default headers values
func NewGetCoachingNotificationGatewayTimeout() *GetCoachingNotificationGatewayTimeout {
	return &GetCoachingNotificationGatewayTimeout{}
}

/*
GetCoachingNotificationGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetCoachingNotificationGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching notification gateway timeout response has a 2xx status code
func (o *GetCoachingNotificationGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching notification gateway timeout response has a 3xx status code
func (o *GetCoachingNotificationGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching notification gateway timeout response has a 4xx status code
func (o *GetCoachingNotificationGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get coaching notification gateway timeout response has a 5xx status code
func (o *GetCoachingNotificationGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get coaching notification gateway timeout response a status code equal to that given
func (o *GetCoachingNotificationGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetCoachingNotificationGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/notifications/{notificationId}][%d] getCoachingNotificationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCoachingNotificationGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/notifications/{notificationId}][%d] getCoachingNotificationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCoachingNotificationGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingNotificationGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
