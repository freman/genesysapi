// Code generated by go-swagger; DO NOT EDIT.

package coaching

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// PatchCoachingAppointmentStatusReader is a Reader for the PatchCoachingAppointmentStatus structure.
type PatchCoachingAppointmentStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchCoachingAppointmentStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchCoachingAppointmentStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchCoachingAppointmentStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchCoachingAppointmentStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchCoachingAppointmentStatusForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchCoachingAppointmentStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPatchCoachingAppointmentStatusConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPatchCoachingAppointmentStatusRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchCoachingAppointmentStatusUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPatchCoachingAppointmentStatusTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchCoachingAppointmentStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPatchCoachingAppointmentStatusServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPatchCoachingAppointmentStatusGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchCoachingAppointmentStatusOK creates a PatchCoachingAppointmentStatusOK with default headers values
func NewPatchCoachingAppointmentStatusOK() *PatchCoachingAppointmentStatusOK {
	return &PatchCoachingAppointmentStatusOK{}
}

/*PatchCoachingAppointmentStatusOK handles this case with default header values.

The status is posted successfully
*/
type PatchCoachingAppointmentStatusOK struct {
	Payload *models.CoachingAppointmentStatusResponse
}

func (o *PatchCoachingAppointmentStatusOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/coaching/appointments/{appointmentId}/status][%d] patchCoachingAppointmentStatusOK  %+v", 200, o.Payload)
}

func (o *PatchCoachingAppointmentStatusOK) GetPayload() *models.CoachingAppointmentStatusResponse {
	return o.Payload
}

func (o *PatchCoachingAppointmentStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoachingAppointmentStatusResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCoachingAppointmentStatusBadRequest creates a PatchCoachingAppointmentStatusBadRequest with default headers values
func NewPatchCoachingAppointmentStatusBadRequest() *PatchCoachingAppointmentStatusBadRequest {
	return &PatchCoachingAppointmentStatusBadRequest{}
}

/*PatchCoachingAppointmentStatusBadRequest handles this case with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type PatchCoachingAppointmentStatusBadRequest struct {
	Payload *models.ErrorBody
}

func (o *PatchCoachingAppointmentStatusBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/coaching/appointments/{appointmentId}/status][%d] patchCoachingAppointmentStatusBadRequest  %+v", 400, o.Payload)
}

func (o *PatchCoachingAppointmentStatusBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchCoachingAppointmentStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCoachingAppointmentStatusUnauthorized creates a PatchCoachingAppointmentStatusUnauthorized with default headers values
func NewPatchCoachingAppointmentStatusUnauthorized() *PatchCoachingAppointmentStatusUnauthorized {
	return &PatchCoachingAppointmentStatusUnauthorized{}
}

/*PatchCoachingAppointmentStatusUnauthorized handles this case with default header values.

No authentication bearer token specified in authorization header.
*/
type PatchCoachingAppointmentStatusUnauthorized struct {
	Payload *models.ErrorBody
}

func (o *PatchCoachingAppointmentStatusUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/coaching/appointments/{appointmentId}/status][%d] patchCoachingAppointmentStatusUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchCoachingAppointmentStatusUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchCoachingAppointmentStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCoachingAppointmentStatusForbidden creates a PatchCoachingAppointmentStatusForbidden with default headers values
func NewPatchCoachingAppointmentStatusForbidden() *PatchCoachingAppointmentStatusForbidden {
	return &PatchCoachingAppointmentStatusForbidden{}
}

/*PatchCoachingAppointmentStatusForbidden handles this case with default header values.

You are not authorized to perform the requested action.
*/
type PatchCoachingAppointmentStatusForbidden struct {
	Payload *models.ErrorBody
}

func (o *PatchCoachingAppointmentStatusForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/coaching/appointments/{appointmentId}/status][%d] patchCoachingAppointmentStatusForbidden  %+v", 403, o.Payload)
}

func (o *PatchCoachingAppointmentStatusForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchCoachingAppointmentStatusForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCoachingAppointmentStatusNotFound creates a PatchCoachingAppointmentStatusNotFound with default headers values
func NewPatchCoachingAppointmentStatusNotFound() *PatchCoachingAppointmentStatusNotFound {
	return &PatchCoachingAppointmentStatusNotFound{}
}

/*PatchCoachingAppointmentStatusNotFound handles this case with default header values.

The requested resource was not found.
*/
type PatchCoachingAppointmentStatusNotFound struct {
	Payload *models.ErrorBody
}

func (o *PatchCoachingAppointmentStatusNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/coaching/appointments/{appointmentId}/status][%d] patchCoachingAppointmentStatusNotFound  %+v", 404, o.Payload)
}

func (o *PatchCoachingAppointmentStatusNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchCoachingAppointmentStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCoachingAppointmentStatusConflict creates a PatchCoachingAppointmentStatusConflict with default headers values
func NewPatchCoachingAppointmentStatusConflict() *PatchCoachingAppointmentStatusConflict {
	return &PatchCoachingAppointmentStatusConflict{}
}

/*PatchCoachingAppointmentStatusConflict handles this case with default header values.

Conflict
*/
type PatchCoachingAppointmentStatusConflict struct {
	Payload *models.ErrorBody
}

func (o *PatchCoachingAppointmentStatusConflict) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/coaching/appointments/{appointmentId}/status][%d] patchCoachingAppointmentStatusConflict  %+v", 409, o.Payload)
}

func (o *PatchCoachingAppointmentStatusConflict) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchCoachingAppointmentStatusConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCoachingAppointmentStatusRequestEntityTooLarge creates a PatchCoachingAppointmentStatusRequestEntityTooLarge with default headers values
func NewPatchCoachingAppointmentStatusRequestEntityTooLarge() *PatchCoachingAppointmentStatusRequestEntityTooLarge {
	return &PatchCoachingAppointmentStatusRequestEntityTooLarge{}
}

/*PatchCoachingAppointmentStatusRequestEntityTooLarge handles this case with default header values.

The request is over the size limit. Content-Length: %s
*/
type PatchCoachingAppointmentStatusRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

func (o *PatchCoachingAppointmentStatusRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/coaching/appointments/{appointmentId}/status][%d] patchCoachingAppointmentStatusRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchCoachingAppointmentStatusRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchCoachingAppointmentStatusRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCoachingAppointmentStatusUnsupportedMediaType creates a PatchCoachingAppointmentStatusUnsupportedMediaType with default headers values
func NewPatchCoachingAppointmentStatusUnsupportedMediaType() *PatchCoachingAppointmentStatusUnsupportedMediaType {
	return &PatchCoachingAppointmentStatusUnsupportedMediaType{}
}

/*PatchCoachingAppointmentStatusUnsupportedMediaType handles this case with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type PatchCoachingAppointmentStatusUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

func (o *PatchCoachingAppointmentStatusUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/coaching/appointments/{appointmentId}/status][%d] patchCoachingAppointmentStatusUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchCoachingAppointmentStatusUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchCoachingAppointmentStatusUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCoachingAppointmentStatusTooManyRequests creates a PatchCoachingAppointmentStatusTooManyRequests with default headers values
func NewPatchCoachingAppointmentStatusTooManyRequests() *PatchCoachingAppointmentStatusTooManyRequests {
	return &PatchCoachingAppointmentStatusTooManyRequests{}
}

/*PatchCoachingAppointmentStatusTooManyRequests handles this case with default header values.

Rate limit exceeded the maximum [%s] requests within [%s] seconds
*/
type PatchCoachingAppointmentStatusTooManyRequests struct {
	Payload *models.ErrorBody
}

func (o *PatchCoachingAppointmentStatusTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/coaching/appointments/{appointmentId}/status][%d] patchCoachingAppointmentStatusTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchCoachingAppointmentStatusTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchCoachingAppointmentStatusTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCoachingAppointmentStatusInternalServerError creates a PatchCoachingAppointmentStatusInternalServerError with default headers values
func NewPatchCoachingAppointmentStatusInternalServerError() *PatchCoachingAppointmentStatusInternalServerError {
	return &PatchCoachingAppointmentStatusInternalServerError{}
}

/*PatchCoachingAppointmentStatusInternalServerError handles this case with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type PatchCoachingAppointmentStatusInternalServerError struct {
	Payload *models.ErrorBody
}

func (o *PatchCoachingAppointmentStatusInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/coaching/appointments/{appointmentId}/status][%d] patchCoachingAppointmentStatusInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchCoachingAppointmentStatusInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchCoachingAppointmentStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCoachingAppointmentStatusServiceUnavailable creates a PatchCoachingAppointmentStatusServiceUnavailable with default headers values
func NewPatchCoachingAppointmentStatusServiceUnavailable() *PatchCoachingAppointmentStatusServiceUnavailable {
	return &PatchCoachingAppointmentStatusServiceUnavailable{}
}

/*PatchCoachingAppointmentStatusServiceUnavailable handles this case with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type PatchCoachingAppointmentStatusServiceUnavailable struct {
	Payload *models.ErrorBody
}

func (o *PatchCoachingAppointmentStatusServiceUnavailable) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/coaching/appointments/{appointmentId}/status][%d] patchCoachingAppointmentStatusServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PatchCoachingAppointmentStatusServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchCoachingAppointmentStatusServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCoachingAppointmentStatusGatewayTimeout creates a PatchCoachingAppointmentStatusGatewayTimeout with default headers values
func NewPatchCoachingAppointmentStatusGatewayTimeout() *PatchCoachingAppointmentStatusGatewayTimeout {
	return &PatchCoachingAppointmentStatusGatewayTimeout{}
}

/*PatchCoachingAppointmentStatusGatewayTimeout handles this case with default header values.

The request timed out.
*/
type PatchCoachingAppointmentStatusGatewayTimeout struct {
	Payload *models.ErrorBody
}

func (o *PatchCoachingAppointmentStatusGatewayTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/coaching/appointments/{appointmentId}/status][%d] patchCoachingAppointmentStatusGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PatchCoachingAppointmentStatusGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *PatchCoachingAppointmentStatusGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
