// Code generated by go-swagger; DO NOT EDIT.

package coaching

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetCoachingAppointmentReader is a Reader for the GetCoachingAppointment structure.
type GetCoachingAppointmentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCoachingAppointmentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCoachingAppointmentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCoachingAppointmentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCoachingAppointmentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCoachingAppointmentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCoachingAppointmentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetCoachingAppointmentRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetCoachingAppointmentRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetCoachingAppointmentUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetCoachingAppointmentTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCoachingAppointmentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetCoachingAppointmentServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetCoachingAppointmentGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCoachingAppointmentOK creates a GetCoachingAppointmentOK with default headers values
func NewGetCoachingAppointmentOK() *GetCoachingAppointmentOK {
	return &GetCoachingAppointmentOK{}
}

/*
GetCoachingAppointmentOK describes a response with status code 200, with default header values.

Retrieved appointment
*/
type GetCoachingAppointmentOK struct {
	Payload *models.CoachingAppointmentResponse
}

// IsSuccess returns true when this get coaching appointment o k response has a 2xx status code
func (o *GetCoachingAppointmentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get coaching appointment o k response has a 3xx status code
func (o *GetCoachingAppointmentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointment o k response has a 4xx status code
func (o *GetCoachingAppointmentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get coaching appointment o k response has a 5xx status code
func (o *GetCoachingAppointmentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching appointment o k response a status code equal to that given
func (o *GetCoachingAppointmentOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetCoachingAppointmentOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}][%d] getCoachingAppointmentOK  %+v", 200, o.Payload)
}

func (o *GetCoachingAppointmentOK) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}][%d] getCoachingAppointmentOK  %+v", 200, o.Payload)
}

func (o *GetCoachingAppointmentOK) GetPayload() *models.CoachingAppointmentResponse {
	return o.Payload
}

func (o *GetCoachingAppointmentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoachingAppointmentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentBadRequest creates a GetCoachingAppointmentBadRequest with default headers values
func NewGetCoachingAppointmentBadRequest() *GetCoachingAppointmentBadRequest {
	return &GetCoachingAppointmentBadRequest{}
}

/*
GetCoachingAppointmentBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetCoachingAppointmentBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointment bad request response has a 2xx status code
func (o *GetCoachingAppointmentBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointment bad request response has a 3xx status code
func (o *GetCoachingAppointmentBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointment bad request response has a 4xx status code
func (o *GetCoachingAppointmentBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get coaching appointment bad request response has a 5xx status code
func (o *GetCoachingAppointmentBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching appointment bad request response a status code equal to that given
func (o *GetCoachingAppointmentBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetCoachingAppointmentBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}][%d] getCoachingAppointmentBadRequest  %+v", 400, o.Payload)
}

func (o *GetCoachingAppointmentBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}][%d] getCoachingAppointmentBadRequest  %+v", 400, o.Payload)
}

func (o *GetCoachingAppointmentBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentUnauthorized creates a GetCoachingAppointmentUnauthorized with default headers values
func NewGetCoachingAppointmentUnauthorized() *GetCoachingAppointmentUnauthorized {
	return &GetCoachingAppointmentUnauthorized{}
}

/*
GetCoachingAppointmentUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetCoachingAppointmentUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointment unauthorized response has a 2xx status code
func (o *GetCoachingAppointmentUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointment unauthorized response has a 3xx status code
func (o *GetCoachingAppointmentUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointment unauthorized response has a 4xx status code
func (o *GetCoachingAppointmentUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get coaching appointment unauthorized response has a 5xx status code
func (o *GetCoachingAppointmentUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching appointment unauthorized response a status code equal to that given
func (o *GetCoachingAppointmentUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetCoachingAppointmentUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}][%d] getCoachingAppointmentUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCoachingAppointmentUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}][%d] getCoachingAppointmentUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCoachingAppointmentUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentForbidden creates a GetCoachingAppointmentForbidden with default headers values
func NewGetCoachingAppointmentForbidden() *GetCoachingAppointmentForbidden {
	return &GetCoachingAppointmentForbidden{}
}

/*
GetCoachingAppointmentForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetCoachingAppointmentForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointment forbidden response has a 2xx status code
func (o *GetCoachingAppointmentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointment forbidden response has a 3xx status code
func (o *GetCoachingAppointmentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointment forbidden response has a 4xx status code
func (o *GetCoachingAppointmentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get coaching appointment forbidden response has a 5xx status code
func (o *GetCoachingAppointmentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching appointment forbidden response a status code equal to that given
func (o *GetCoachingAppointmentForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetCoachingAppointmentForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}][%d] getCoachingAppointmentForbidden  %+v", 403, o.Payload)
}

func (o *GetCoachingAppointmentForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}][%d] getCoachingAppointmentForbidden  %+v", 403, o.Payload)
}

func (o *GetCoachingAppointmentForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentNotFound creates a GetCoachingAppointmentNotFound with default headers values
func NewGetCoachingAppointmentNotFound() *GetCoachingAppointmentNotFound {
	return &GetCoachingAppointmentNotFound{}
}

/*
GetCoachingAppointmentNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetCoachingAppointmentNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointment not found response has a 2xx status code
func (o *GetCoachingAppointmentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointment not found response has a 3xx status code
func (o *GetCoachingAppointmentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointment not found response has a 4xx status code
func (o *GetCoachingAppointmentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get coaching appointment not found response has a 5xx status code
func (o *GetCoachingAppointmentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching appointment not found response a status code equal to that given
func (o *GetCoachingAppointmentNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetCoachingAppointmentNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}][%d] getCoachingAppointmentNotFound  %+v", 404, o.Payload)
}

func (o *GetCoachingAppointmentNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}][%d] getCoachingAppointmentNotFound  %+v", 404, o.Payload)
}

func (o *GetCoachingAppointmentNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentRequestTimeout creates a GetCoachingAppointmentRequestTimeout with default headers values
func NewGetCoachingAppointmentRequestTimeout() *GetCoachingAppointmentRequestTimeout {
	return &GetCoachingAppointmentRequestTimeout{}
}

/*
GetCoachingAppointmentRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetCoachingAppointmentRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointment request timeout response has a 2xx status code
func (o *GetCoachingAppointmentRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointment request timeout response has a 3xx status code
func (o *GetCoachingAppointmentRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointment request timeout response has a 4xx status code
func (o *GetCoachingAppointmentRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get coaching appointment request timeout response has a 5xx status code
func (o *GetCoachingAppointmentRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching appointment request timeout response a status code equal to that given
func (o *GetCoachingAppointmentRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetCoachingAppointmentRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}][%d] getCoachingAppointmentRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetCoachingAppointmentRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}][%d] getCoachingAppointmentRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetCoachingAppointmentRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentRequestEntityTooLarge creates a GetCoachingAppointmentRequestEntityTooLarge with default headers values
func NewGetCoachingAppointmentRequestEntityTooLarge() *GetCoachingAppointmentRequestEntityTooLarge {
	return &GetCoachingAppointmentRequestEntityTooLarge{}
}

/*
GetCoachingAppointmentRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetCoachingAppointmentRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointment request entity too large response has a 2xx status code
func (o *GetCoachingAppointmentRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointment request entity too large response has a 3xx status code
func (o *GetCoachingAppointmentRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointment request entity too large response has a 4xx status code
func (o *GetCoachingAppointmentRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get coaching appointment request entity too large response has a 5xx status code
func (o *GetCoachingAppointmentRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching appointment request entity too large response a status code equal to that given
func (o *GetCoachingAppointmentRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetCoachingAppointmentRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}][%d] getCoachingAppointmentRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetCoachingAppointmentRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}][%d] getCoachingAppointmentRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetCoachingAppointmentRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentUnsupportedMediaType creates a GetCoachingAppointmentUnsupportedMediaType with default headers values
func NewGetCoachingAppointmentUnsupportedMediaType() *GetCoachingAppointmentUnsupportedMediaType {
	return &GetCoachingAppointmentUnsupportedMediaType{}
}

/*
GetCoachingAppointmentUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetCoachingAppointmentUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointment unsupported media type response has a 2xx status code
func (o *GetCoachingAppointmentUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointment unsupported media type response has a 3xx status code
func (o *GetCoachingAppointmentUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointment unsupported media type response has a 4xx status code
func (o *GetCoachingAppointmentUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get coaching appointment unsupported media type response has a 5xx status code
func (o *GetCoachingAppointmentUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching appointment unsupported media type response a status code equal to that given
func (o *GetCoachingAppointmentUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetCoachingAppointmentUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}][%d] getCoachingAppointmentUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetCoachingAppointmentUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}][%d] getCoachingAppointmentUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetCoachingAppointmentUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentTooManyRequests creates a GetCoachingAppointmentTooManyRequests with default headers values
func NewGetCoachingAppointmentTooManyRequests() *GetCoachingAppointmentTooManyRequests {
	return &GetCoachingAppointmentTooManyRequests{}
}

/*
GetCoachingAppointmentTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetCoachingAppointmentTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointment too many requests response has a 2xx status code
func (o *GetCoachingAppointmentTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointment too many requests response has a 3xx status code
func (o *GetCoachingAppointmentTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointment too many requests response has a 4xx status code
func (o *GetCoachingAppointmentTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get coaching appointment too many requests response has a 5xx status code
func (o *GetCoachingAppointmentTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching appointment too many requests response a status code equal to that given
func (o *GetCoachingAppointmentTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetCoachingAppointmentTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}][%d] getCoachingAppointmentTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetCoachingAppointmentTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}][%d] getCoachingAppointmentTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetCoachingAppointmentTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentInternalServerError creates a GetCoachingAppointmentInternalServerError with default headers values
func NewGetCoachingAppointmentInternalServerError() *GetCoachingAppointmentInternalServerError {
	return &GetCoachingAppointmentInternalServerError{}
}

/*
GetCoachingAppointmentInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetCoachingAppointmentInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointment internal server error response has a 2xx status code
func (o *GetCoachingAppointmentInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointment internal server error response has a 3xx status code
func (o *GetCoachingAppointmentInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointment internal server error response has a 4xx status code
func (o *GetCoachingAppointmentInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get coaching appointment internal server error response has a 5xx status code
func (o *GetCoachingAppointmentInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get coaching appointment internal server error response a status code equal to that given
func (o *GetCoachingAppointmentInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetCoachingAppointmentInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}][%d] getCoachingAppointmentInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCoachingAppointmentInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}][%d] getCoachingAppointmentInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCoachingAppointmentInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentServiceUnavailable creates a GetCoachingAppointmentServiceUnavailable with default headers values
func NewGetCoachingAppointmentServiceUnavailable() *GetCoachingAppointmentServiceUnavailable {
	return &GetCoachingAppointmentServiceUnavailable{}
}

/*
GetCoachingAppointmentServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetCoachingAppointmentServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointment service unavailable response has a 2xx status code
func (o *GetCoachingAppointmentServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointment service unavailable response has a 3xx status code
func (o *GetCoachingAppointmentServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointment service unavailable response has a 4xx status code
func (o *GetCoachingAppointmentServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get coaching appointment service unavailable response has a 5xx status code
func (o *GetCoachingAppointmentServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get coaching appointment service unavailable response a status code equal to that given
func (o *GetCoachingAppointmentServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetCoachingAppointmentServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}][%d] getCoachingAppointmentServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCoachingAppointmentServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}][%d] getCoachingAppointmentServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCoachingAppointmentServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentGatewayTimeout creates a GetCoachingAppointmentGatewayTimeout with default headers values
func NewGetCoachingAppointmentGatewayTimeout() *GetCoachingAppointmentGatewayTimeout {
	return &GetCoachingAppointmentGatewayTimeout{}
}

/*
GetCoachingAppointmentGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetCoachingAppointmentGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointment gateway timeout response has a 2xx status code
func (o *GetCoachingAppointmentGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointment gateway timeout response has a 3xx status code
func (o *GetCoachingAppointmentGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointment gateway timeout response has a 4xx status code
func (o *GetCoachingAppointmentGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get coaching appointment gateway timeout response has a 5xx status code
func (o *GetCoachingAppointmentGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get coaching appointment gateway timeout response a status code equal to that given
func (o *GetCoachingAppointmentGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetCoachingAppointmentGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}][%d] getCoachingAppointmentGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCoachingAppointmentGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}][%d] getCoachingAppointmentGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCoachingAppointmentGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
