// Code generated by go-swagger; DO NOT EDIT.

package coaching

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/freman/genesysapi/models"
)

// GetCoachingAppointmentStatusesReader is a Reader for the GetCoachingAppointmentStatuses structure.
type GetCoachingAppointmentStatusesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCoachingAppointmentStatusesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCoachingAppointmentStatusesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCoachingAppointmentStatusesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCoachingAppointmentStatusesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCoachingAppointmentStatusesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCoachingAppointmentStatusesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetCoachingAppointmentStatusesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetCoachingAppointmentStatusesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetCoachingAppointmentStatusesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetCoachingAppointmentStatusesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCoachingAppointmentStatusesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetCoachingAppointmentStatusesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetCoachingAppointmentStatusesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCoachingAppointmentStatusesOK creates a GetCoachingAppointmentStatusesOK with default headers values
func NewGetCoachingAppointmentStatusesOK() *GetCoachingAppointmentStatusesOK {
	return &GetCoachingAppointmentStatusesOK{}
}

/*
GetCoachingAppointmentStatusesOK describes a response with status code 200, with default header values.

Retrieved appointment statuses
*/
type GetCoachingAppointmentStatusesOK struct {
	Payload *models.CoachingAppointmentStatusResponseList
}

// IsSuccess returns true when this get coaching appointment statuses o k response has a 2xx status code
func (o *GetCoachingAppointmentStatusesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get coaching appointment statuses o k response has a 3xx status code
func (o *GetCoachingAppointmentStatusesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointment statuses o k response has a 4xx status code
func (o *GetCoachingAppointmentStatusesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get coaching appointment statuses o k response has a 5xx status code
func (o *GetCoachingAppointmentStatusesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching appointment statuses o k response a status code equal to that given
func (o *GetCoachingAppointmentStatusesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetCoachingAppointmentStatusesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}/statuses][%d] getCoachingAppointmentStatusesOK  %+v", 200, o.Payload)
}

func (o *GetCoachingAppointmentStatusesOK) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}/statuses][%d] getCoachingAppointmentStatusesOK  %+v", 200, o.Payload)
}

func (o *GetCoachingAppointmentStatusesOK) GetPayload() *models.CoachingAppointmentStatusResponseList {
	return o.Payload
}

func (o *GetCoachingAppointmentStatusesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoachingAppointmentStatusResponseList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentStatusesBadRequest creates a GetCoachingAppointmentStatusesBadRequest with default headers values
func NewGetCoachingAppointmentStatusesBadRequest() *GetCoachingAppointmentStatusesBadRequest {
	return &GetCoachingAppointmentStatusesBadRequest{}
}

/*
GetCoachingAppointmentStatusesBadRequest describes a response with status code 400, with default header values.

The request could not be understood by the server due to malformed syntax.
*/
type GetCoachingAppointmentStatusesBadRequest struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointment statuses bad request response has a 2xx status code
func (o *GetCoachingAppointmentStatusesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointment statuses bad request response has a 3xx status code
func (o *GetCoachingAppointmentStatusesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointment statuses bad request response has a 4xx status code
func (o *GetCoachingAppointmentStatusesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get coaching appointment statuses bad request response has a 5xx status code
func (o *GetCoachingAppointmentStatusesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching appointment statuses bad request response a status code equal to that given
func (o *GetCoachingAppointmentStatusesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetCoachingAppointmentStatusesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}/statuses][%d] getCoachingAppointmentStatusesBadRequest  %+v", 400, o.Payload)
}

func (o *GetCoachingAppointmentStatusesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}/statuses][%d] getCoachingAppointmentStatusesBadRequest  %+v", 400, o.Payload)
}

func (o *GetCoachingAppointmentStatusesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentStatusesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentStatusesUnauthorized creates a GetCoachingAppointmentStatusesUnauthorized with default headers values
func NewGetCoachingAppointmentStatusesUnauthorized() *GetCoachingAppointmentStatusesUnauthorized {
	return &GetCoachingAppointmentStatusesUnauthorized{}
}

/*
GetCoachingAppointmentStatusesUnauthorized describes a response with status code 401, with default header values.

No authentication bearer token specified in authorization header.
*/
type GetCoachingAppointmentStatusesUnauthorized struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointment statuses unauthorized response has a 2xx status code
func (o *GetCoachingAppointmentStatusesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointment statuses unauthorized response has a 3xx status code
func (o *GetCoachingAppointmentStatusesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointment statuses unauthorized response has a 4xx status code
func (o *GetCoachingAppointmentStatusesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get coaching appointment statuses unauthorized response has a 5xx status code
func (o *GetCoachingAppointmentStatusesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching appointment statuses unauthorized response a status code equal to that given
func (o *GetCoachingAppointmentStatusesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetCoachingAppointmentStatusesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}/statuses][%d] getCoachingAppointmentStatusesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCoachingAppointmentStatusesUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}/statuses][%d] getCoachingAppointmentStatusesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCoachingAppointmentStatusesUnauthorized) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentStatusesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentStatusesForbidden creates a GetCoachingAppointmentStatusesForbidden with default headers values
func NewGetCoachingAppointmentStatusesForbidden() *GetCoachingAppointmentStatusesForbidden {
	return &GetCoachingAppointmentStatusesForbidden{}
}

/*
GetCoachingAppointmentStatusesForbidden describes a response with status code 403, with default header values.

You are not authorized to perform the requested action.
*/
type GetCoachingAppointmentStatusesForbidden struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointment statuses forbidden response has a 2xx status code
func (o *GetCoachingAppointmentStatusesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointment statuses forbidden response has a 3xx status code
func (o *GetCoachingAppointmentStatusesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointment statuses forbidden response has a 4xx status code
func (o *GetCoachingAppointmentStatusesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get coaching appointment statuses forbidden response has a 5xx status code
func (o *GetCoachingAppointmentStatusesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching appointment statuses forbidden response a status code equal to that given
func (o *GetCoachingAppointmentStatusesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetCoachingAppointmentStatusesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}/statuses][%d] getCoachingAppointmentStatusesForbidden  %+v", 403, o.Payload)
}

func (o *GetCoachingAppointmentStatusesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}/statuses][%d] getCoachingAppointmentStatusesForbidden  %+v", 403, o.Payload)
}

func (o *GetCoachingAppointmentStatusesForbidden) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentStatusesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentStatusesNotFound creates a GetCoachingAppointmentStatusesNotFound with default headers values
func NewGetCoachingAppointmentStatusesNotFound() *GetCoachingAppointmentStatusesNotFound {
	return &GetCoachingAppointmentStatusesNotFound{}
}

/*
GetCoachingAppointmentStatusesNotFound describes a response with status code 404, with default header values.

The requested resource was not found.
*/
type GetCoachingAppointmentStatusesNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointment statuses not found response has a 2xx status code
func (o *GetCoachingAppointmentStatusesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointment statuses not found response has a 3xx status code
func (o *GetCoachingAppointmentStatusesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointment statuses not found response has a 4xx status code
func (o *GetCoachingAppointmentStatusesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get coaching appointment statuses not found response has a 5xx status code
func (o *GetCoachingAppointmentStatusesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching appointment statuses not found response a status code equal to that given
func (o *GetCoachingAppointmentStatusesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetCoachingAppointmentStatusesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}/statuses][%d] getCoachingAppointmentStatusesNotFound  %+v", 404, o.Payload)
}

func (o *GetCoachingAppointmentStatusesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}/statuses][%d] getCoachingAppointmentStatusesNotFound  %+v", 404, o.Payload)
}

func (o *GetCoachingAppointmentStatusesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentStatusesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentStatusesRequestTimeout creates a GetCoachingAppointmentStatusesRequestTimeout with default headers values
func NewGetCoachingAppointmentStatusesRequestTimeout() *GetCoachingAppointmentStatusesRequestTimeout {
	return &GetCoachingAppointmentStatusesRequestTimeout{}
}

/*
GetCoachingAppointmentStatusesRequestTimeout describes a response with status code 408, with default header values.

The client did not produce a request within the server timeout limit. This can be caused by a slow network connection and/or large payloads.
*/
type GetCoachingAppointmentStatusesRequestTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointment statuses request timeout response has a 2xx status code
func (o *GetCoachingAppointmentStatusesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointment statuses request timeout response has a 3xx status code
func (o *GetCoachingAppointmentStatusesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointment statuses request timeout response has a 4xx status code
func (o *GetCoachingAppointmentStatusesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get coaching appointment statuses request timeout response has a 5xx status code
func (o *GetCoachingAppointmentStatusesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching appointment statuses request timeout response a status code equal to that given
func (o *GetCoachingAppointmentStatusesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

func (o *GetCoachingAppointmentStatusesRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}/statuses][%d] getCoachingAppointmentStatusesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetCoachingAppointmentStatusesRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}/statuses][%d] getCoachingAppointmentStatusesRequestTimeout  %+v", 408, o.Payload)
}

func (o *GetCoachingAppointmentStatusesRequestTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentStatusesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentStatusesRequestEntityTooLarge creates a GetCoachingAppointmentStatusesRequestEntityTooLarge with default headers values
func NewGetCoachingAppointmentStatusesRequestEntityTooLarge() *GetCoachingAppointmentStatusesRequestEntityTooLarge {
	return &GetCoachingAppointmentStatusesRequestEntityTooLarge{}
}

/*
GetCoachingAppointmentStatusesRequestEntityTooLarge describes a response with status code 413, with default header values.

The request is over the size limit. Content-Length: %s, Maximum bytes: %s
*/
type GetCoachingAppointmentStatusesRequestEntityTooLarge struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointment statuses request entity too large response has a 2xx status code
func (o *GetCoachingAppointmentStatusesRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointment statuses request entity too large response has a 3xx status code
func (o *GetCoachingAppointmentStatusesRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointment statuses request entity too large response has a 4xx status code
func (o *GetCoachingAppointmentStatusesRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get coaching appointment statuses request entity too large response has a 5xx status code
func (o *GetCoachingAppointmentStatusesRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching appointment statuses request entity too large response a status code equal to that given
func (o *GetCoachingAppointmentStatusesRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetCoachingAppointmentStatusesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}/statuses][%d] getCoachingAppointmentStatusesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetCoachingAppointmentStatusesRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}/statuses][%d] getCoachingAppointmentStatusesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetCoachingAppointmentStatusesRequestEntityTooLarge) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentStatusesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentStatusesUnsupportedMediaType creates a GetCoachingAppointmentStatusesUnsupportedMediaType with default headers values
func NewGetCoachingAppointmentStatusesUnsupportedMediaType() *GetCoachingAppointmentStatusesUnsupportedMediaType {
	return &GetCoachingAppointmentStatusesUnsupportedMediaType{}
}

/*
GetCoachingAppointmentStatusesUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type - Unsupported or incorrect media type, such as an incorrect Content-Type value in the header.
*/
type GetCoachingAppointmentStatusesUnsupportedMediaType struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointment statuses unsupported media type response has a 2xx status code
func (o *GetCoachingAppointmentStatusesUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointment statuses unsupported media type response has a 3xx status code
func (o *GetCoachingAppointmentStatusesUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointment statuses unsupported media type response has a 4xx status code
func (o *GetCoachingAppointmentStatusesUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get coaching appointment statuses unsupported media type response has a 5xx status code
func (o *GetCoachingAppointmentStatusesUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching appointment statuses unsupported media type response a status code equal to that given
func (o *GetCoachingAppointmentStatusesUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetCoachingAppointmentStatusesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}/statuses][%d] getCoachingAppointmentStatusesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetCoachingAppointmentStatusesUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}/statuses][%d] getCoachingAppointmentStatusesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetCoachingAppointmentStatusesUnsupportedMediaType) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentStatusesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentStatusesTooManyRequests creates a GetCoachingAppointmentStatusesTooManyRequests with default headers values
func NewGetCoachingAppointmentStatusesTooManyRequests() *GetCoachingAppointmentStatusesTooManyRequests {
	return &GetCoachingAppointmentStatusesTooManyRequests{}
}

/*
GetCoachingAppointmentStatusesTooManyRequests describes a response with status code 429, with default header values.

Rate limit exceeded the maximum. Retry the request in [%s] seconds
*/
type GetCoachingAppointmentStatusesTooManyRequests struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointment statuses too many requests response has a 2xx status code
func (o *GetCoachingAppointmentStatusesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointment statuses too many requests response has a 3xx status code
func (o *GetCoachingAppointmentStatusesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointment statuses too many requests response has a 4xx status code
func (o *GetCoachingAppointmentStatusesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get coaching appointment statuses too many requests response has a 5xx status code
func (o *GetCoachingAppointmentStatusesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get coaching appointment statuses too many requests response a status code equal to that given
func (o *GetCoachingAppointmentStatusesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetCoachingAppointmentStatusesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}/statuses][%d] getCoachingAppointmentStatusesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetCoachingAppointmentStatusesTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}/statuses][%d] getCoachingAppointmentStatusesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetCoachingAppointmentStatusesTooManyRequests) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentStatusesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentStatusesInternalServerError creates a GetCoachingAppointmentStatusesInternalServerError with default headers values
func NewGetCoachingAppointmentStatusesInternalServerError() *GetCoachingAppointmentStatusesInternalServerError {
	return &GetCoachingAppointmentStatusesInternalServerError{}
}

/*
GetCoachingAppointmentStatusesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition which prevented it from fulfilling the request.
*/
type GetCoachingAppointmentStatusesInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointment statuses internal server error response has a 2xx status code
func (o *GetCoachingAppointmentStatusesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointment statuses internal server error response has a 3xx status code
func (o *GetCoachingAppointmentStatusesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointment statuses internal server error response has a 4xx status code
func (o *GetCoachingAppointmentStatusesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get coaching appointment statuses internal server error response has a 5xx status code
func (o *GetCoachingAppointmentStatusesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get coaching appointment statuses internal server error response a status code equal to that given
func (o *GetCoachingAppointmentStatusesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetCoachingAppointmentStatusesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}/statuses][%d] getCoachingAppointmentStatusesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCoachingAppointmentStatusesInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}/statuses][%d] getCoachingAppointmentStatusesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCoachingAppointmentStatusesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentStatusesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentStatusesServiceUnavailable creates a GetCoachingAppointmentStatusesServiceUnavailable with default headers values
func NewGetCoachingAppointmentStatusesServiceUnavailable() *GetCoachingAppointmentStatusesServiceUnavailable {
	return &GetCoachingAppointmentStatusesServiceUnavailable{}
}

/*
GetCoachingAppointmentStatusesServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable - The server is currently unavailable (because it is overloaded or down for maintenance).
*/
type GetCoachingAppointmentStatusesServiceUnavailable struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointment statuses service unavailable response has a 2xx status code
func (o *GetCoachingAppointmentStatusesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointment statuses service unavailable response has a 3xx status code
func (o *GetCoachingAppointmentStatusesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointment statuses service unavailable response has a 4xx status code
func (o *GetCoachingAppointmentStatusesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get coaching appointment statuses service unavailable response has a 5xx status code
func (o *GetCoachingAppointmentStatusesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get coaching appointment statuses service unavailable response a status code equal to that given
func (o *GetCoachingAppointmentStatusesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetCoachingAppointmentStatusesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}/statuses][%d] getCoachingAppointmentStatusesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCoachingAppointmentStatusesServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}/statuses][%d] getCoachingAppointmentStatusesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCoachingAppointmentStatusesServiceUnavailable) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentStatusesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoachingAppointmentStatusesGatewayTimeout creates a GetCoachingAppointmentStatusesGatewayTimeout with default headers values
func NewGetCoachingAppointmentStatusesGatewayTimeout() *GetCoachingAppointmentStatusesGatewayTimeout {
	return &GetCoachingAppointmentStatusesGatewayTimeout{}
}

/*
GetCoachingAppointmentStatusesGatewayTimeout describes a response with status code 504, with default header values.

The request timed out.
*/
type GetCoachingAppointmentStatusesGatewayTimeout struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get coaching appointment statuses gateway timeout response has a 2xx status code
func (o *GetCoachingAppointmentStatusesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get coaching appointment statuses gateway timeout response has a 3xx status code
func (o *GetCoachingAppointmentStatusesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get coaching appointment statuses gateway timeout response has a 4xx status code
func (o *GetCoachingAppointmentStatusesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get coaching appointment statuses gateway timeout response has a 5xx status code
func (o *GetCoachingAppointmentStatusesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get coaching appointment statuses gateway timeout response a status code equal to that given
func (o *GetCoachingAppointmentStatusesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetCoachingAppointmentStatusesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}/statuses][%d] getCoachingAppointmentStatusesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCoachingAppointmentStatusesGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /api/v2/coaching/appointments/{appointmentId}/statuses][%d] getCoachingAppointmentStatusesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCoachingAppointmentStatusesGatewayTimeout) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCoachingAppointmentStatusesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
