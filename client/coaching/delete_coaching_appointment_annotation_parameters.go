// Code generated by go-swagger; DO NOT EDIT.

package coaching

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteCoachingAppointmentAnnotationParams creates a new DeleteCoachingAppointmentAnnotationParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteCoachingAppointmentAnnotationParams() *DeleteCoachingAppointmentAnnotationParams {
	return &DeleteCoachingAppointmentAnnotationParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteCoachingAppointmentAnnotationParamsWithTimeout creates a new DeleteCoachingAppointmentAnnotationParams object
// with the ability to set a timeout on a request.
func NewDeleteCoachingAppointmentAnnotationParamsWithTimeout(timeout time.Duration) *DeleteCoachingAppointmentAnnotationParams {
	return &DeleteCoachingAppointmentAnnotationParams{
		timeout: timeout,
	}
}

// NewDeleteCoachingAppointmentAnnotationParamsWithContext creates a new DeleteCoachingAppointmentAnnotationParams object
// with the ability to set a context for a request.
func NewDeleteCoachingAppointmentAnnotationParamsWithContext(ctx context.Context) *DeleteCoachingAppointmentAnnotationParams {
	return &DeleteCoachingAppointmentAnnotationParams{
		Context: ctx,
	}
}

// NewDeleteCoachingAppointmentAnnotationParamsWithHTTPClient creates a new DeleteCoachingAppointmentAnnotationParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteCoachingAppointmentAnnotationParamsWithHTTPClient(client *http.Client) *DeleteCoachingAppointmentAnnotationParams {
	return &DeleteCoachingAppointmentAnnotationParams{
		HTTPClient: client,
	}
}

/*
DeleteCoachingAppointmentAnnotationParams contains all the parameters to send to the API endpoint

	for the delete coaching appointment annotation operation.

	Typically these are written to a http.Request.
*/
type DeleteCoachingAppointmentAnnotationParams struct {

	/* AnnotationID.

	   The ID of the annotation.
	*/
	AnnotationID string

	/* AppointmentID.

	   The ID of the coaching appointment.
	*/
	AppointmentID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete coaching appointment annotation params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteCoachingAppointmentAnnotationParams) WithDefaults() *DeleteCoachingAppointmentAnnotationParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete coaching appointment annotation params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteCoachingAppointmentAnnotationParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete coaching appointment annotation params
func (o *DeleteCoachingAppointmentAnnotationParams) WithTimeout(timeout time.Duration) *DeleteCoachingAppointmentAnnotationParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete coaching appointment annotation params
func (o *DeleteCoachingAppointmentAnnotationParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete coaching appointment annotation params
func (o *DeleteCoachingAppointmentAnnotationParams) WithContext(ctx context.Context) *DeleteCoachingAppointmentAnnotationParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete coaching appointment annotation params
func (o *DeleteCoachingAppointmentAnnotationParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete coaching appointment annotation params
func (o *DeleteCoachingAppointmentAnnotationParams) WithHTTPClient(client *http.Client) *DeleteCoachingAppointmentAnnotationParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete coaching appointment annotation params
func (o *DeleteCoachingAppointmentAnnotationParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAnnotationID adds the annotationID to the delete coaching appointment annotation params
func (o *DeleteCoachingAppointmentAnnotationParams) WithAnnotationID(annotationID string) *DeleteCoachingAppointmentAnnotationParams {
	o.SetAnnotationID(annotationID)
	return o
}

// SetAnnotationID adds the annotationId to the delete coaching appointment annotation params
func (o *DeleteCoachingAppointmentAnnotationParams) SetAnnotationID(annotationID string) {
	o.AnnotationID = annotationID
}

// WithAppointmentID adds the appointmentID to the delete coaching appointment annotation params
func (o *DeleteCoachingAppointmentAnnotationParams) WithAppointmentID(appointmentID string) *DeleteCoachingAppointmentAnnotationParams {
	o.SetAppointmentID(appointmentID)
	return o
}

// SetAppointmentID adds the appointmentId to the delete coaching appointment annotation params
func (o *DeleteCoachingAppointmentAnnotationParams) SetAppointmentID(appointmentID string) {
	o.AppointmentID = appointmentID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteCoachingAppointmentAnnotationParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param annotationId
	if err := r.SetPathParam("annotationId", o.AnnotationID); err != nil {
		return err
	}

	// path param appointmentId
	if err := r.SetPathParam("appointmentId", o.AppointmentID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
